// $ANTLR 3.x /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g 2013-06-23 16:24:20

  package com.seekon.mars.sqlscript.parser;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.tree.*;


@SuppressWarnings("all")
public class SQLParser extends Parser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "ABS", "ACCESSIBLE_SYM", "ACOS", 
		"ACTION", "ADDDATE", "ADDTIME", "ADD_SYM", "AES_DECRYPT", "AES_ENCRYPT", 
		"AFTER_SYM", "AGAINST", "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALL_FIELDS", 
		"ALTER", "ANALYZE_SYM", "AND_SYM", "ANY", "ARMSCII8", "ARROW", "ASC", 
		"ASCII_SYM", "ASENSITIVE_SYM", "ASIN", "ASTERISK", "AS_SYM", "ATAN", "ATAN2", 
		"AT_SYM", "AUTHORS_SYM", "AUTOEXTEND_SIZE_SYM", "AUTO_INCREMENT", "AVG", 
		"AVG_ROW_LENGTH", "A_", "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BENCHMARK", 
		"BETWEEN", "BIG5", "BIGINT", "BIN", "BINARY", "BINLOG_SYM", "BITAND", 
		"BIT_AND", "BIT_LENGTH", "BIT_NUM", "BIT_OR", "BIT_SYM", "BIT_XOR", "BLOB_SYM", 
		"BLOCK_SYM", "BOOLEAN_SYM", "BOOL_SYM", "BOTH", "BTREE_SYM", "BYTE_SYM", 
		"BY_SYM", "B_", "CACHE_SYM", "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", 
		"CAST_SYM", "CEIL", "CEILING", "CHAIN_SYM", "CHANGE", "CHANGED", "CHAR", 
		"CHARACTER_SYM", "CHARSET", "CHAR_LENGTH", "CHECKSUM_SYM", "CHECK_SYM", 
		"CIPHER_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM", "COERCIBILITY", 
		"COLLATE_SYM", "COLLATION", "COLON", "COLUMNS_SYM", "COLUMN_FORMAT", "COLUMN_SYM", 
		"COMMA", "COMMENT_SYM", "COMMITTED_SYM", "COMMIT_SYM", "COMPACT_SYM", 
		"COMPLETION_SYM", "COMPRESS", "COMPRESSED_SYM", "CONCAT", "CONCAT_WS", 
		"CONCURRENT", "CONDITION_SYM", "CONNECTION_ID", "CONNECTION_SYM", "CONSISTENT_SYM", 
		"CONSTRAINT", "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONTRIBUTORS_SYM", 
		"CONV", "CONVERT_SYM", "CONVERT_TZ", "COPY_SYM", "COS", "COT", "COUNT", 
		"CP1250", "CP1251", "CP1256", "CP1257", "CP850", "CP852", "CP866", "CP932", 
		"CPU_SYM", "CRC32", "CREATE", "CROSECOND", "CROSS", "CUBE_SYM", "CURDATE", 
		"CURRENT_TIMESTAMP", "CURRENT_USER", "CURSOR_SYM", "CURTIME", "C_", "DATABASE", 
		"DATAFILE_SYM", "DATA_SYM", "DATEDIFF", "DATETIME", "DATE_ADD", "DATE_FORMAT", 
		"DATE_SUB", "DATE_SYM", "DAYNAME", "DAYOFMONTH", "DAYOFWEEK", "DAYOFYEAR", 
		"DAY_HOUR", "DAY_MICROSECOND", "DAY_MINUTE", "DAY_SECOND", "DAY_SYM", 
		"DEALLOCATE_SYM", "DEC8", "DECIMAL_SYM", "DECLARE_SYM", "DECODE", "DEFAULT", 
		"DEFINER", "DEGREES", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM", 
		"DESC", "DES_DECRYPT", "DES_ENCRYPT", "DES_KEY_FILE", "DETERMINISTIC_SYM", 
		"DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM", "DISTINCT", "DISTINCTROW", 
		"DIVIDE", "DOT", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM", "DUMPFILE", 
		"DUPLICATE_SYM", "DYNAMIC_SYM", "D_", "EACH_SYM", "ELSE_SYM", "ELSIF_SYM", 
		"ELT", "ENABLE_SYM", "ENCLOSED", "ENCODE", "ENCRYPT", "ENDS_SYM", "END_SYM", 
		"ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQ_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM", 
		"EUCJPMS", "EUCKR", "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", 
		"EXCLUSIVE_SYM", "EXECUTE_SYM", "EXISTS", "EXIT_SYM", "EXP", "EXPANSION_SYM", 
		"EXPORT_SET", "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT", "E_", "FALSE_SYM", 
		"FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FIELD", "FIELDS_SYM", "FILE_SYM", 
		"FIND_IN_SET", "FIRST_SYM", "FIXED_SYM", "FLOAT_SYM", "FLOOR", "FLUSH_SYM", 
		"FORCE_SYM", "FOREIGN", "FORMAT", "FOR_SYM", "FOUND_ROWS", "FOUND_SYM", 
		"FROM", "FROM_BASE64", "FROM_DAYS", "FROM_UNIXTIME", "FULL", "FULLTEXT_SYM", 
		"FUNCTION_SYM", "F_", "GB2312", "GBK", "GEOMETRYCOLLECTION", "GEOMETRY_SYM", 
		"GEOSTD8", "GET", "GET_FORMAT", "GET_LOCK", "GLOBAL_SYM", "GRANT", "GRANTS", 
		"GREEK", "GROUP_CONCAT", "GROUP_SYM", "GTH", "G_", "HANDLER_SYM", "HASH_SYM", 
		"HAVING", "HEBREW", "HELP_SYM", "HEX", "HEX_DIGIT", "HEX_DIGIT_FRAGMENT", 
		"HIGH_PRIORITY", "HOSTS_SYM", "HOST_SYM", "HOUR", "HOUR_MICROSECOND", 
		"HOUR_MINUTE", "HOUR_SECOND", "HP8", "H_", "ID", "IDENTIFIED_SYM", "IF", 
		"IFNULL", "IGNORE_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INET_ATON", 
		"INET_NTOA", "INFILE", "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INPLACE_SYM", 
		"INSENSITIVE_SYM", "INSERT", "INSERT_METHOD", "INSTALL_SYM", "INSTR", 
		"INTEGER_NUM", "INTEGER_SYM", "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", 
		"IN_SYM", "IO_SYM", "IPC_SYM", "ISOLATION", "ISSUER_SYM", "IS_FREE_LOCK", 
		"IS_SYM", "IS_USED_LOCK", "ITERATE_SYM", "I_", "JOIN_SYM", "J_", "KEYBCS2", 
		"KEYS", "KEY_BLOCK_SIZE", "KEY_SYM", "KILL_SYM", "KOI8R", "KOI8U", "K_", 
		"LANGUAGE", "LAST_DAY", "LAST_INSERT_ID", "LAST_SYM", "LATIN1", "LATIN1_BIN", 
		"LATIN1_GENERAL_CS", "LATIN2", "LATIN5", "LATIN7", "LBRACK", "LEADING", 
		"LEAVES", "LEAVE_SYM", "LEFT", "LENGTH", "LESS_SYM", "LET", "LEVEL_SYM", 
		"LIKE_SYM", "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING", "LIST_SYM", 
		"LN", "LOAD", "LOAD_FILE", "LOCAL_SYM", "LOCATE", "LOCK", "LOCKS_SYM", 
		"LOG", "LOG10", "LOG2", "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB", "LONGTEXT", 
		"LONG_SYM", "LOOP_SYM", "LOWER", "LOW_PRIORITY", "LPAD", "LPAREN", "LTH", 
		"LTRIM", "L_", "MACCE", "MACROMAN", "MAKEDATE", "MAKETIME", "MAKE_SET", 
		"MASTER_CONNECT_RETRY", "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", 
		"MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_POS_WAIT", "MASTER_SERVER_ID_SYM", 
		"MASTER_SSL_CAPATH_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM", 
		"MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM", "MASTER_SSL_VERIFY_SERVER_CERT", 
		"MASTER_SYM", "MASTER_USER_SYM", "MATCH", "MAXVALUE_SYM", "MAX_CONNECTIONS_PER_HOUR", 
		"MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM", "MAX_UPDATES_PER_HOUR", 
		"MAX_USER_CONNECTIONS_SYM", "MD5", "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", 
		"MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM", "MICROSECOND", "MID", "MIGRATE_SYM", 
		"MINUS", "MINUTE", "MINUTE_MICROSECOND", "MINUTE_SECOND", "MIN_ROWS", 
		"MIN_SYM", "ML_COMMENT", "MOD", "MODE_SYM", "MODIFIES_SYM", "MODIFY_SYM", 
		"MOD_SYM", "MONTH", "MONTHNAME", "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON", 
		"MUTEX_SYM", "M_", "NAMES_SYM", "NAME_CONST", "NAME_SYM", "NATIONAL_SYM", 
		"NATURAL", "NCHAR_SYM", "NEGATION", "NEW_SYM", "NEXT_SYM", "NODEGROUP_SYM", 
		"NONE_SYM", "NOT_EQ", "NOT_IN_SYM", "NOT_SYM", "NOW", "NO_SYM", "NO_WAIT_SYM", 
		"NO_WRITE_TO_BINLOG", "NULL_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "N_", 
		"OCT", "OFFSET_SYM", "OJ_SYM", "OLD_PASSWORD", "ON", "ONE_SHOT_SYM", "ONE_SYM", 
		"OPEN_SYM", "OPTIMIZE", "OPTION", "OPTIONALLY", "OPTIONS_SYM", "ORD", 
		"ORDER_SYM", "OR_SYM", "OUTER", "OUTFILE", "OUT_SYM", "OWNER_SYM", "O_", 
		"PACK_KEYS_SYM", "PAGE_CHECKSUM_SYM", "PAGE_SYM", "PARSER_SYM", "PARTIAL", 
		"PARTITIONING_SYM", "PARTITIONS_SYM", "PARTITION_SYM", "PASSWORD", "PERIOD_ADD", 
		"PERIOD_DIFF", "PHASE_SYM", "PI", "PLUGINS_SYM", "PLUGIN_SYM", "PLUS", 
		"POINT_SYM", "POLYGON", "PORT_SYM", "POW", "POWER", "POWER_OP", "PRECISION", 
		"PREPARE_SYM", "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", 
		"PROCEDURE", "PROCESS", "PROCESSLIST_SYM", "PROFILES_SYM", "PROFILE_SYM", 
		"PURGE", "P_", "QUARTER", "QUERY_SYM", "QUICK", "QUOTE", "Q_", "RADIANS", 
		"RAND", "RANGE_SYM", "RBRACK", "READS_SYM", "READ_ONLY_SYM", "READ_SYM", 
		"READ_WRITE_SYM", "REAL", "REAL_NUMBER", "REBUILD_SYM", "RECOVER_SYM", 
		"REDOFILE_SYM", "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "REFERENCES", 
		"REGEXP", "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELEASE_LOCK", "RELEASE_SYM", 
		"RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR", "REPEAT", 
		"REPEATABLE_SYM", "REPLACE", "REPLICATION", "REQUIRE_SYM", "RESET_SYM", 
		"RESOURCES", "RESTORE_SYM", "RESTRICT", "RESUME_SYM", "RETURNS_SYM", "RETURN_SYM", 
		"REVERSE", "REVOKE", "RIGHT", "ROLLBACK", "ROLLUP_SYM", "ROUND", "ROUTINE_SYM", 
		"ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM", "RPAD", "RPAREN", "RTREE_SYM", 
		"RTRIM", "R_", "SAVEPOINT", "SCHEDULE_SYM", "SCHEMA", "SECOND", "SECOND_MICROSECOND", 
		"SECURITY_SYM", "SEC_TO_TIME", "SELECT", "SEMI", "SENSITIVE_SYM", "SEPARATOR_SYM", 
		"SERIALIZABLE_SYM", "SERIAL_SYM", "SERVER_SYM", "SESSION_SYM", "SESSION_USER", 
		"SET_SYM", "SET_VAR", "SHARED_SYM", "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", 
		"SHOW", "SHUTDOWN", "SIGN", "SIGNED_SYM", "SIMPLE_SYM", "SIN", "SJIS", 
		"SLAVE", "SLEEP", "SL_COMMENT", "SMALLINT", "SNAPSHOT_SYM", "SOCKET_SYM", 
		"SONAME_SYM", "SOUNDEX", "SOUNDS_SYM", "SOURCE_SYM", "SPACE", "SPATIAL_SYM", 
		"SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM", 
		"SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", 
		"SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM", "SQL_THREAD", "SQRT", 
		"SSL_SYM", "STARTING", "STARTS_SYM", "START_SYM", "STATS_AUTO_RECALC", 
		"STATS_PERSISTENT", "STATUS_SYM", "STD", "STDDEV", "STDDEV_POP", "STDDEV_SAMP", 
		"STOP_SYM", "STORAGE_SYM", "STRAIGHT_JOIN", "STRCMP", "STRING_SYM", "STR_TO_DATE", 
		"SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM", "SUBSTRING", "SUBSTRING_INDEX", 
		"SUBTIME", "SUM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWE7", "SWITCHES_SYM", 
		"SYSDATE", "SYSTEM_USER", "S_", "TABLE", "TABLES", "TABLESPACE", "TABLE_CHECKSUM_SYM", 
		"TAN", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED", "TEXT_STRING", "TEXT_SYM", 
		"THAN_SYM", "THEN_SYM", "TIMEDIFF", "TIMESTAMP", "TIMESTAMPADD", "TIMESTAMPDIFF", 
		"TIME_FORMAT", "TIME_SYM", "TIME_TO_SEC", "TINYBLOB", "TINYINT", "TINYTEXT", 
		"TIS620", "TO_BASE64", "TO_DAYS", "TO_SECONDS", "TO_SYM", "TRAILING", 
		"TRANSACTION", "TRANSACTIONAL_SYM", "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", 
		"TRUE_SYM", "TRUNCATE", "TYPES_SYM", "TYPE_SYM", "T_", "UCS2", "UJIS", 
		"UNCOMMITTED_SYM", "UNCOMPRESS", "UNCOMPRESSED_LENGTH", "UNDEFINED_SYM", 
		"UNDOFILE_SYM", "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNHEX", "UNICODE_SYM", 
		"UNINSTALL_SYM", "UNION_SYM", "UNIQUE_SYM", "UNIX_TIMESTAMP", "UNKNOWN_SYM", 
		"UNLOCK_SYM", "UNSIGNED_SYM", "UNTIL_SYM", "UPDATE", "UPGRADE_SYM", "UPPER", 
		"USAGE", "USER", "USER_VAR", "USER_VAR_SUBFIX1", "USER_VAR_SUBFIX2", "USER_VAR_SUBFIX3", 
		"USER_VAR_SUBFIX4", "USE_FRM", "USE_SYM", "USING_SYM", "UTC_DATE", "UTC_TIME", 
		"UTC_TIMESTAMP", "UTF16", "UTF16LE", "UTF32", "UTF8", "UUID", "U_", "VALUES", 
		"VALUE_SYM", "VARBINARY", "VARCHAR", "VARIABLES", "VARIANCE", "VARYING", 
		"VAR_POP", "VAR_SAMP", "VERSION_SYM", "VERTBAR", "VIEW_SYM", "V_", "WAIT_SYM", 
		"WARNINGS", "WEEK", "WEEKDAY", "WEEKOFYEAR", "WEIGHT_STRING", "WHEN_SYM", 
		"WHERE", "WHILE_SYM", "WHITE_SPACE", "WITH", "WORK_SYM", "WRAPPER_SYM", 
		"WRITE_SYM", "W_", "X509_SYM", "XA_SYM", "XML_SYM", "XOR", "X_", "YEAR", 
		"YEARWEEK", "YEAR_MONTH", "Y_", "ZEROFILL", "Z_"
	};
	public static final int EOF=-1;
	public static final int ABS=4;
	public static final int ACCESSIBLE_SYM=5;
	public static final int ACOS=6;
	public static final int ACTION=7;
	public static final int ADDDATE=8;
	public static final int ADDTIME=9;
	public static final int ADD_SYM=10;
	public static final int AES_DECRYPT=11;
	public static final int AES_ENCRYPT=12;
	public static final int AFTER_SYM=13;
	public static final int AGAINST=14;
	public static final int AGGREGATE_SYM=15;
	public static final int ALGORITHM_SYM=16;
	public static final int ALL=17;
	public static final int ALL_FIELDS=18;
	public static final int ALTER=19;
	public static final int ANALYZE_SYM=20;
	public static final int AND_SYM=21;
	public static final int ANY=22;
	public static final int ARMSCII8=23;
	public static final int ARROW=24;
	public static final int ASC=25;
	public static final int ASCII_SYM=26;
	public static final int ASENSITIVE_SYM=27;
	public static final int ASIN=28;
	public static final int ASTERISK=29;
	public static final int AS_SYM=30;
	public static final int ATAN=31;
	public static final int ATAN2=32;
	public static final int AT_SYM=33;
	public static final int AUTHORS_SYM=34;
	public static final int AUTOEXTEND_SIZE_SYM=35;
	public static final int AUTO_INCREMENT=36;
	public static final int AVG=37;
	public static final int AVG_ROW_LENGTH=38;
	public static final int A_=39;
	public static final int BACKUP_SYM=40;
	public static final int BEFORE_SYM=41;
	public static final int BEGIN_SYM=42;
	public static final int BENCHMARK=43;
	public static final int BETWEEN=44;
	public static final int BIG5=45;
	public static final int BIGINT=46;
	public static final int BIN=47;
	public static final int BINARY=48;
	public static final int BINLOG_SYM=49;
	public static final int BITAND=50;
	public static final int BIT_AND=51;
	public static final int BIT_LENGTH=52;
	public static final int BIT_NUM=53;
	public static final int BIT_OR=54;
	public static final int BIT_SYM=55;
	public static final int BIT_XOR=56;
	public static final int BLOB_SYM=57;
	public static final int BLOCK_SYM=58;
	public static final int BOOLEAN_SYM=59;
	public static final int BOOL_SYM=60;
	public static final int BOTH=61;
	public static final int BTREE_SYM=62;
	public static final int BYTE_SYM=63;
	public static final int BY_SYM=64;
	public static final int B_=65;
	public static final int CACHE_SYM=66;
	public static final int CALL_SYM=67;
	public static final int CASCADE=68;
	public static final int CASCADED=69;
	public static final int CASE_SYM=70;
	public static final int CAST_SYM=71;
	public static final int CEIL=72;
	public static final int CEILING=73;
	public static final int CHAIN_SYM=74;
	public static final int CHANGE=75;
	public static final int CHANGED=76;
	public static final int CHAR=77;
	public static final int CHARACTER_SYM=78;
	public static final int CHARSET=79;
	public static final int CHAR_LENGTH=80;
	public static final int CHECKSUM_SYM=81;
	public static final int CHECK_SYM=82;
	public static final int CIPHER_SYM=83;
	public static final int CLIENT_SYM=84;
	public static final int CLOSE_SYM=85;
	public static final int COALESCE=86;
	public static final int CODE_SYM=87;
	public static final int COERCIBILITY=88;
	public static final int COLLATE_SYM=89;
	public static final int COLLATION=90;
	public static final int COLON=91;
	public static final int COLUMNS_SYM=92;
	public static final int COLUMN_FORMAT=93;
	public static final int COLUMN_SYM=94;
	public static final int COMMA=95;
	public static final int COMMENT_SYM=96;
	public static final int COMMITTED_SYM=97;
	public static final int COMMIT_SYM=98;
	public static final int COMPACT_SYM=99;
	public static final int COMPLETION_SYM=100;
	public static final int COMPRESS=101;
	public static final int COMPRESSED_SYM=102;
	public static final int CONCAT=103;
	public static final int CONCAT_WS=104;
	public static final int CONCURRENT=105;
	public static final int CONDITION_SYM=106;
	public static final int CONNECTION_ID=107;
	public static final int CONNECTION_SYM=108;
	public static final int CONSISTENT_SYM=109;
	public static final int CONSTRAINT=110;
	public static final int CONTAINS_SYM=111;
	public static final int CONTEXT_SYM=112;
	public static final int CONTINUE_SYM=113;
	public static final int CONTRIBUTORS_SYM=114;
	public static final int CONV=115;
	public static final int CONVERT_SYM=116;
	public static final int CONVERT_TZ=117;
	public static final int COPY_SYM=118;
	public static final int COS=119;
	public static final int COT=120;
	public static final int COUNT=121;
	public static final int CP1250=122;
	public static final int CP1251=123;
	public static final int CP1256=124;
	public static final int CP1257=125;
	public static final int CP850=126;
	public static final int CP852=127;
	public static final int CP866=128;
	public static final int CP932=129;
	public static final int CPU_SYM=130;
	public static final int CRC32=131;
	public static final int CREATE=132;
	public static final int CROSECOND=133;
	public static final int CROSS=134;
	public static final int CUBE_SYM=135;
	public static final int CURDATE=136;
	public static final int CURRENT_TIMESTAMP=137;
	public static final int CURRENT_USER=138;
	public static final int CURSOR_SYM=139;
	public static final int CURTIME=140;
	public static final int C_=141;
	public static final int DATABASE=142;
	public static final int DATAFILE_SYM=143;
	public static final int DATA_SYM=144;
	public static final int DATEDIFF=145;
	public static final int DATETIME=146;
	public static final int DATE_ADD=147;
	public static final int DATE_FORMAT=148;
	public static final int DATE_SUB=149;
	public static final int DATE_SYM=150;
	public static final int DAYNAME=151;
	public static final int DAYOFMONTH=152;
	public static final int DAYOFWEEK=153;
	public static final int DAYOFYEAR=154;
	public static final int DAY_HOUR=155;
	public static final int DAY_MICROSECOND=156;
	public static final int DAY_MINUTE=157;
	public static final int DAY_SECOND=158;
	public static final int DAY_SYM=159;
	public static final int DEALLOCATE_SYM=160;
	public static final int DEC8=161;
	public static final int DECIMAL_SYM=162;
	public static final int DECLARE_SYM=163;
	public static final int DECODE=164;
	public static final int DEFAULT=165;
	public static final int DEFINER=166;
	public static final int DEGREES=167;
	public static final int DELAYED_SYM=168;
	public static final int DELAY_KEY_WRITE_SYM=169;
	public static final int DELETE_SYM=170;
	public static final int DESC=171;
	public static final int DES_DECRYPT=172;
	public static final int DES_ENCRYPT=173;
	public static final int DES_KEY_FILE=174;
	public static final int DETERMINISTIC_SYM=175;
	public static final int DIRECTORY_SYM=176;
	public static final int DISABLE_SYM=177;
	public static final int DISCARD=178;
	public static final int DISK_SYM=179;
	public static final int DISTINCT=180;
	public static final int DISTINCTROW=181;
	public static final int DIVIDE=182;
	public static final int DOT=183;
	public static final int DOUBLE_SYM=184;
	public static final int DO_SYM=185;
	public static final int DROP=186;
	public static final int DUAL_SYM=187;
	public static final int DUMPFILE=188;
	public static final int DUPLICATE_SYM=189;
	public static final int DYNAMIC_SYM=190;
	public static final int D_=191;
	public static final int EACH_SYM=192;
	public static final int ELSE_SYM=193;
	public static final int ELSIF_SYM=194;
	public static final int ELT=195;
	public static final int ENABLE_SYM=196;
	public static final int ENCLOSED=197;
	public static final int ENCODE=198;
	public static final int ENCRYPT=199;
	public static final int ENDS_SYM=200;
	public static final int END_SYM=201;
	public static final int ENGINES_SYM=202;
	public static final int ENGINE_SYM=203;
	public static final int ENUM=204;
	public static final int EQ_SYM=205;
	public static final int ERRORS=206;
	public static final int ESCAPED=207;
	public static final int ESCAPE_SYM=208;
	public static final int EUCJPMS=209;
	public static final int EUCKR=210;
	public static final int EVENTS_SYM=211;
	public static final int EVENT_SYM=212;
	public static final int EVERY_SYM=213;
	public static final int EXCHANGE_SYM=214;
	public static final int EXCLUSIVE_SYM=215;
	public static final int EXECUTE_SYM=216;
	public static final int EXISTS=217;
	public static final int EXIT_SYM=218;
	public static final int EXP=219;
	public static final int EXPANSION_SYM=220;
	public static final int EXPORT_SET=221;
	public static final int EXTENDED_SYM=222;
	public static final int EXTENT_SIZE_SYM=223;
	public static final int EXTRACT=224;
	public static final int E_=225;
	public static final int FALSE_SYM=226;
	public static final int FAST_SYM=227;
	public static final int FAULTS_SYM=228;
	public static final int FETCH_SYM=229;
	public static final int FIELD=230;
	public static final int FIELDS_SYM=231;
	public static final int FILE_SYM=232;
	public static final int FIND_IN_SET=233;
	public static final int FIRST_SYM=234;
	public static final int FIXED_SYM=235;
	public static final int FLOAT_SYM=236;
	public static final int FLOOR=237;
	public static final int FLUSH_SYM=238;
	public static final int FORCE_SYM=239;
	public static final int FOREIGN=240;
	public static final int FORMAT=241;
	public static final int FOR_SYM=242;
	public static final int FOUND_ROWS=243;
	public static final int FOUND_SYM=244;
	public static final int FROM=245;
	public static final int FROM_BASE64=246;
	public static final int FROM_DAYS=247;
	public static final int FROM_UNIXTIME=248;
	public static final int FULL=249;
	public static final int FULLTEXT_SYM=250;
	public static final int FUNCTION_SYM=251;
	public static final int F_=252;
	public static final int GB2312=253;
	public static final int GBK=254;
	public static final int GEOMETRYCOLLECTION=255;
	public static final int GEOMETRY_SYM=256;
	public static final int GEOSTD8=257;
	public static final int GET=258;
	public static final int GET_FORMAT=259;
	public static final int GET_LOCK=260;
	public static final int GLOBAL_SYM=261;
	public static final int GRANT=262;
	public static final int GRANTS=263;
	public static final int GREEK=264;
	public static final int GROUP_CONCAT=265;
	public static final int GROUP_SYM=266;
	public static final int GTH=267;
	public static final int G_=268;
	public static final int HANDLER_SYM=269;
	public static final int HASH_SYM=270;
	public static final int HAVING=271;
	public static final int HEBREW=272;
	public static final int HELP_SYM=273;
	public static final int HEX=274;
	public static final int HEX_DIGIT=275;
	public static final int HEX_DIGIT_FRAGMENT=276;
	public static final int HIGH_PRIORITY=277;
	public static final int HOSTS_SYM=278;
	public static final int HOST_SYM=279;
	public static final int HOUR=280;
	public static final int HOUR_MICROSECOND=281;
	public static final int HOUR_MINUTE=282;
	public static final int HOUR_SECOND=283;
	public static final int HP8=284;
	public static final int H_=285;
	public static final int ID=286;
	public static final int IDENTIFIED_SYM=287;
	public static final int IF=288;
	public static final int IFNULL=289;
	public static final int IGNORE_SYM=290;
	public static final int IMPORT=291;
	public static final int INDEXES=292;
	public static final int INDEX_SYM=293;
	public static final int INET_ATON=294;
	public static final int INET_NTOA=295;
	public static final int INFILE=296;
	public static final int INITIAL_SIZE_SYM=297;
	public static final int INNER_SYM=298;
	public static final int INOUT_SYM=299;
	public static final int INPLACE_SYM=300;
	public static final int INSENSITIVE_SYM=301;
	public static final int INSERT=302;
	public static final int INSERT_METHOD=303;
	public static final int INSTALL_SYM=304;
	public static final int INSTR=305;
	public static final int INTEGER_NUM=306;
	public static final int INTEGER_SYM=307;
	public static final int INTERVAL_SYM=308;
	public static final int INTO=309;
	public static final int INT_SYM=310;
	public static final int INVOKER_SYM=311;
	public static final int IN_SYM=312;
	public static final int IO_SYM=313;
	public static final int IPC_SYM=314;
	public static final int ISOLATION=315;
	public static final int ISSUER_SYM=316;
	public static final int IS_FREE_LOCK=317;
	public static final int IS_SYM=318;
	public static final int IS_USED_LOCK=319;
	public static final int ITERATE_SYM=320;
	public static final int I_=321;
	public static final int JOIN_SYM=322;
	public static final int J_=323;
	public static final int KEYBCS2=324;
	public static final int KEYS=325;
	public static final int KEY_BLOCK_SIZE=326;
	public static final int KEY_SYM=327;
	public static final int KILL_SYM=328;
	public static final int KOI8R=329;
	public static final int KOI8U=330;
	public static final int K_=331;
	public static final int LANGUAGE=332;
	public static final int LAST_DAY=333;
	public static final int LAST_INSERT_ID=334;
	public static final int LAST_SYM=335;
	public static final int LATIN1=336;
	public static final int LATIN1_BIN=337;
	public static final int LATIN1_GENERAL_CS=338;
	public static final int LATIN2=339;
	public static final int LATIN5=340;
	public static final int LATIN7=341;
	public static final int LBRACK=342;
	public static final int LEADING=343;
	public static final int LEAVES=344;
	public static final int LEAVE_SYM=345;
	public static final int LEFT=346;
	public static final int LENGTH=347;
	public static final int LESS_SYM=348;
	public static final int LET=349;
	public static final int LEVEL_SYM=350;
	public static final int LIKE_SYM=351;
	public static final int LIMIT=352;
	public static final int LINEAR_SYM=353;
	public static final int LINES=354;
	public static final int LINESTRING=355;
	public static final int LIST_SYM=356;
	public static final int LN=357;
	public static final int LOAD=358;
	public static final int LOAD_FILE=359;
	public static final int LOCAL_SYM=360;
	public static final int LOCATE=361;
	public static final int LOCK=362;
	public static final int LOCKS_SYM=363;
	public static final int LOG=364;
	public static final int LOG10=365;
	public static final int LOG2=366;
	public static final int LOGFILE_SYM=367;
	public static final int LOGS_SYM=368;
	public static final int LONGBLOB=369;
	public static final int LONGTEXT=370;
	public static final int LONG_SYM=371;
	public static final int LOOP_SYM=372;
	public static final int LOWER=373;
	public static final int LOW_PRIORITY=374;
	public static final int LPAD=375;
	public static final int LPAREN=376;
	public static final int LTH=377;
	public static final int LTRIM=378;
	public static final int L_=379;
	public static final int MACCE=380;
	public static final int MACROMAN=381;
	public static final int MAKEDATE=382;
	public static final int MAKETIME=383;
	public static final int MAKE_SET=384;
	public static final int MASTER_CONNECT_RETRY=385;
	public static final int MASTER_HOST_SYM=386;
	public static final int MASTER_LOG_FILE_SYM=387;
	public static final int MASTER_LOG_POS_SYM=388;
	public static final int MASTER_PASSWORD_SYM=389;
	public static final int MASTER_PORT_SYM=390;
	public static final int MASTER_POS_WAIT=391;
	public static final int MASTER_SERVER_ID_SYM=392;
	public static final int MASTER_SSL_CAPATH_SYM=393;
	public static final int MASTER_SSL_CA_SYM=394;
	public static final int MASTER_SSL_CERT_SYM=395;
	public static final int MASTER_SSL_CIPHER_SYM=396;
	public static final int MASTER_SSL_KEY_SYM=397;
	public static final int MASTER_SSL_SYM=398;
	public static final int MASTER_SSL_VERIFY_SERVER_CERT=399;
	public static final int MASTER_SYM=400;
	public static final int MASTER_USER_SYM=401;
	public static final int MATCH=402;
	public static final int MAXVALUE_SYM=403;
	public static final int MAX_CONNECTIONS_PER_HOUR=404;
	public static final int MAX_QUERIES_PER_HOUR=405;
	public static final int MAX_ROWS=406;
	public static final int MAX_SIZE_SYM=407;
	public static final int MAX_SYM=408;
	public static final int MAX_UPDATES_PER_HOUR=409;
	public static final int MAX_USER_CONNECTIONS_SYM=410;
	public static final int MD5=411;
	public static final int MEDIUMBLOB=412;
	public static final int MEDIUMINT=413;
	public static final int MEDIUMTEXT=414;
	public static final int MEDIUM_SYM=415;
	public static final int MEMORY_SYM=416;
	public static final int MERGE_SYM=417;
	public static final int MICROSECOND=418;
	public static final int MID=419;
	public static final int MIGRATE_SYM=420;
	public static final int MINUS=421;
	public static final int MINUTE=422;
	public static final int MINUTE_MICROSECOND=423;
	public static final int MINUTE_SECOND=424;
	public static final int MIN_ROWS=425;
	public static final int MIN_SYM=426;
	public static final int ML_COMMENT=427;
	public static final int MOD=428;
	public static final int MODE_SYM=429;
	public static final int MODIFIES_SYM=430;
	public static final int MODIFY_SYM=431;
	public static final int MOD_SYM=432;
	public static final int MONTH=433;
	public static final int MONTHNAME=434;
	public static final int MULTILINESTRING=435;
	public static final int MULTIPOINT=436;
	public static final int MULTIPOLYGON=437;
	public static final int MUTEX_SYM=438;
	public static final int M_=439;
	public static final int NAMES_SYM=440;
	public static final int NAME_CONST=441;
	public static final int NAME_SYM=442;
	public static final int NATIONAL_SYM=443;
	public static final int NATURAL=444;
	public static final int NCHAR_SYM=445;
	public static final int NEGATION=446;
	public static final int NEW_SYM=447;
	public static final int NEXT_SYM=448;
	public static final int NODEGROUP_SYM=449;
	public static final int NONE_SYM=450;
	public static final int NOT_EQ=451;
	public static final int NOT_IN_SYM=452;
	public static final int NOT_SYM=453;
	public static final int NOW=454;
	public static final int NO_SYM=455;
	public static final int NO_WAIT_SYM=456;
	public static final int NO_WRITE_TO_BINLOG=457;
	public static final int NULL_SYM=458;
	public static final int NUMERIC_SYM=459;
	public static final int NVARCHAR_SYM=460;
	public static final int N_=461;
	public static final int OCT=462;
	public static final int OFFSET_SYM=463;
	public static final int OJ_SYM=464;
	public static final int OLD_PASSWORD=465;
	public static final int ON=466;
	public static final int ONE_SHOT_SYM=467;
	public static final int ONE_SYM=468;
	public static final int OPEN_SYM=469;
	public static final int OPTIMIZE=470;
	public static final int OPTION=471;
	public static final int OPTIONALLY=472;
	public static final int OPTIONS_SYM=473;
	public static final int ORD=474;
	public static final int ORDER_SYM=475;
	public static final int OR_SYM=476;
	public static final int OUTER=477;
	public static final int OUTFILE=478;
	public static final int OUT_SYM=479;
	public static final int OWNER_SYM=480;
	public static final int O_=481;
	public static final int PACK_KEYS_SYM=482;
	public static final int PAGE_CHECKSUM_SYM=483;
	public static final int PAGE_SYM=484;
	public static final int PARSER_SYM=485;
	public static final int PARTIAL=486;
	public static final int PARTITIONING_SYM=487;
	public static final int PARTITIONS_SYM=488;
	public static final int PARTITION_SYM=489;
	public static final int PASSWORD=490;
	public static final int PERIOD_ADD=491;
	public static final int PERIOD_DIFF=492;
	public static final int PHASE_SYM=493;
	public static final int PI=494;
	public static final int PLUGINS_SYM=495;
	public static final int PLUGIN_SYM=496;
	public static final int PLUS=497;
	public static final int POINT_SYM=498;
	public static final int POLYGON=499;
	public static final int PORT_SYM=500;
	public static final int POW=501;
	public static final int POWER=502;
	public static final int POWER_OP=503;
	public static final int PRECISION=504;
	public static final int PREPARE_SYM=505;
	public static final int PRESERVE_SYM=506;
	public static final int PREV_SYM=507;
	public static final int PRIMARY_SYM=508;
	public static final int PRIVILEGES=509;
	public static final int PROCEDURE=510;
	public static final int PROCESS=511;
	public static final int PROCESSLIST_SYM=512;
	public static final int PROFILES_SYM=513;
	public static final int PROFILE_SYM=514;
	public static final int PURGE=515;
	public static final int P_=516;
	public static final int QUARTER=517;
	public static final int QUERY_SYM=518;
	public static final int QUICK=519;
	public static final int QUOTE=520;
	public static final int Q_=521;
	public static final int RADIANS=522;
	public static final int RAND=523;
	public static final int RANGE_SYM=524;
	public static final int RBRACK=525;
	public static final int READS_SYM=526;
	public static final int READ_ONLY_SYM=527;
	public static final int READ_SYM=528;
	public static final int READ_WRITE_SYM=529;
	public static final int REAL=530;
	public static final int REAL_NUMBER=531;
	public static final int REBUILD_SYM=532;
	public static final int RECOVER_SYM=533;
	public static final int REDOFILE_SYM=534;
	public static final int REDO_BUFFER_SIZE_SYM=535;
	public static final int REDUNDANT_SYM=536;
	public static final int REFERENCES=537;
	public static final int REGEXP=538;
	public static final int RELAY_LOG_FILE_SYM=539;
	public static final int RELAY_LOG_POS_SYM=540;
	public static final int RELEASE_LOCK=541;
	public static final int RELEASE_SYM=542;
	public static final int RELOAD=543;
	public static final int REMOVE_SYM=544;
	public static final int RENAME=545;
	public static final int REORGANIZE_SYM=546;
	public static final int REPAIR=547;
	public static final int REPEAT=548;
	public static final int REPEATABLE_SYM=549;
	public static final int REPLACE=550;
	public static final int REPLICATION=551;
	public static final int REQUIRE_SYM=552;
	public static final int RESET_SYM=553;
	public static final int RESOURCES=554;
	public static final int RESTORE_SYM=555;
	public static final int RESTRICT=556;
	public static final int RESUME_SYM=557;
	public static final int RETURNS_SYM=558;
	public static final int RETURN_SYM=559;
	public static final int REVERSE=560;
	public static final int REVOKE=561;
	public static final int RIGHT=562;
	public static final int ROLLBACK=563;
	public static final int ROLLUP_SYM=564;
	public static final int ROUND=565;
	public static final int ROUTINE_SYM=566;
	public static final int ROWS_SYM=567;
	public static final int ROW_FORMAT_SYM=568;
	public static final int ROW_SYM=569;
	public static final int RPAD=570;
	public static final int RPAREN=571;
	public static final int RTREE_SYM=572;
	public static final int RTRIM=573;
	public static final int R_=574;
	public static final int SAVEPOINT=575;
	public static final int SCHEDULE_SYM=576;
	public static final int SCHEMA=577;
	public static final int SECOND=578;
	public static final int SECOND_MICROSECOND=579;
	public static final int SECURITY_SYM=580;
	public static final int SEC_TO_TIME=581;
	public static final int SELECT=582;
	public static final int SEMI=583;
	public static final int SENSITIVE_SYM=584;
	public static final int SEPARATOR_SYM=585;
	public static final int SERIALIZABLE_SYM=586;
	public static final int SERIAL_SYM=587;
	public static final int SERVER_SYM=588;
	public static final int SESSION_SYM=589;
	public static final int SESSION_USER=590;
	public static final int SET_SYM=591;
	public static final int SET_VAR=592;
	public static final int SHARED_SYM=593;
	public static final int SHARE_SYM=594;
	public static final int SHIFT_LEFT=595;
	public static final int SHIFT_RIGHT=596;
	public static final int SHOW=597;
	public static final int SHUTDOWN=598;
	public static final int SIGN=599;
	public static final int SIGNED_SYM=600;
	public static final int SIMPLE_SYM=601;
	public static final int SIN=602;
	public static final int SJIS=603;
	public static final int SLAVE=604;
	public static final int SLEEP=605;
	public static final int SL_COMMENT=606;
	public static final int SMALLINT=607;
	public static final int SNAPSHOT_SYM=608;
	public static final int SOCKET_SYM=609;
	public static final int SONAME_SYM=610;
	public static final int SOUNDEX=611;
	public static final int SOUNDS_SYM=612;
	public static final int SOURCE_SYM=613;
	public static final int SPACE=614;
	public static final int SPATIAL_SYM=615;
	public static final int SPECIFIC_SYM=616;
	public static final int SQLEXCEPTION_SYM=617;
	public static final int SQLSTATE_SYM=618;
	public static final int SQLWARNING_SYM=619;
	public static final int SQL_BIG_RESULT=620;
	public static final int SQL_BUFFER_RESULT=621;
	public static final int SQL_CACHE_SYM=622;
	public static final int SQL_CALC_FOUND_ROWS=623;
	public static final int SQL_NO_CACHE_SYM=624;
	public static final int SQL_SMALL_RESULT=625;
	public static final int SQL_SYM=626;
	public static final int SQL_THREAD=627;
	public static final int SQRT=628;
	public static final int SSL_SYM=629;
	public static final int STARTING=630;
	public static final int STARTS_SYM=631;
	public static final int START_SYM=632;
	public static final int STATS_AUTO_RECALC=633;
	public static final int STATS_PERSISTENT=634;
	public static final int STATUS_SYM=635;
	public static final int STD=636;
	public static final int STDDEV=637;
	public static final int STDDEV_POP=638;
	public static final int STDDEV_SAMP=639;
	public static final int STOP_SYM=640;
	public static final int STORAGE_SYM=641;
	public static final int STRAIGHT_JOIN=642;
	public static final int STRCMP=643;
	public static final int STRING_SYM=644;
	public static final int STR_TO_DATE=645;
	public static final int SUBJECT_SYM=646;
	public static final int SUBPARTITIONS_SYM=647;
	public static final int SUBPARTITION_SYM=648;
	public static final int SUBSTRING=649;
	public static final int SUBSTRING_INDEX=650;
	public static final int SUBTIME=651;
	public static final int SUM=652;
	public static final int SUPER_SYM=653;
	public static final int SUSPEND_SYM=654;
	public static final int SWAPS_SYM=655;
	public static final int SWE7=656;
	public static final int SWITCHES_SYM=657;
	public static final int SYSDATE=658;
	public static final int SYSTEM_USER=659;
	public static final int S_=660;
	public static final int TABLE=661;
	public static final int TABLES=662;
	public static final int TABLESPACE=663;
	public static final int TABLE_CHECKSUM_SYM=664;
	public static final int TAN=665;
	public static final int TEMPORARY=666;
	public static final int TEMPTABLE_SYM=667;
	public static final int TERMINATED=668;
	public static final int TEXT_STRING=669;
	public static final int TEXT_SYM=670;
	public static final int THAN_SYM=671;
	public static final int THEN_SYM=672;
	public static final int TIMEDIFF=673;
	public static final int TIMESTAMP=674;
	public static final int TIMESTAMPADD=675;
	public static final int TIMESTAMPDIFF=676;
	public static final int TIME_FORMAT=677;
	public static final int TIME_SYM=678;
	public static final int TIME_TO_SEC=679;
	public static final int TINYBLOB=680;
	public static final int TINYINT=681;
	public static final int TINYTEXT=682;
	public static final int TIS620=683;
	public static final int TO_BASE64=684;
	public static final int TO_DAYS=685;
	public static final int TO_SECONDS=686;
	public static final int TO_SYM=687;
	public static final int TRAILING=688;
	public static final int TRANSACTION=689;
	public static final int TRANSACTIONAL_SYM=690;
	public static final int TRIGGERS_SYM=691;
	public static final int TRIGGER_SYM=692;
	public static final int TRIM=693;
	public static final int TRUE_SYM=694;
	public static final int TRUNCATE=695;
	public static final int TYPES_SYM=696;
	public static final int TYPE_SYM=697;
	public static final int T_=698;
	public static final int UCS2=699;
	public static final int UJIS=700;
	public static final int UNCOMMITTED_SYM=701;
	public static final int UNCOMPRESS=702;
	public static final int UNCOMPRESSED_LENGTH=703;
	public static final int UNDEFINED_SYM=704;
	public static final int UNDOFILE_SYM=705;
	public static final int UNDO_BUFFER_SIZE_SYM=706;
	public static final int UNDO_SYM=707;
	public static final int UNHEX=708;
	public static final int UNICODE_SYM=709;
	public static final int UNINSTALL_SYM=710;
	public static final int UNION_SYM=711;
	public static final int UNIQUE_SYM=712;
	public static final int UNIX_TIMESTAMP=713;
	public static final int UNKNOWN_SYM=714;
	public static final int UNLOCK_SYM=715;
	public static final int UNSIGNED_SYM=716;
	public static final int UNTIL_SYM=717;
	public static final int UPDATE=718;
	public static final int UPGRADE_SYM=719;
	public static final int UPPER=720;
	public static final int USAGE=721;
	public static final int USER=722;
	public static final int USER_VAR=723;
	public static final int USER_VAR_SUBFIX1=724;
	public static final int USER_VAR_SUBFIX2=725;
	public static final int USER_VAR_SUBFIX3=726;
	public static final int USER_VAR_SUBFIX4=727;
	public static final int USE_FRM=728;
	public static final int USE_SYM=729;
	public static final int USING_SYM=730;
	public static final int UTC_DATE=731;
	public static final int UTC_TIME=732;
	public static final int UTC_TIMESTAMP=733;
	public static final int UTF16=734;
	public static final int UTF16LE=735;
	public static final int UTF32=736;
	public static final int UTF8=737;
	public static final int UUID=738;
	public static final int U_=739;
	public static final int VALUES=740;
	public static final int VALUE_SYM=741;
	public static final int VARBINARY=742;
	public static final int VARCHAR=743;
	public static final int VARIABLES=744;
	public static final int VARIANCE=745;
	public static final int VARYING=746;
	public static final int VAR_POP=747;
	public static final int VAR_SAMP=748;
	public static final int VERSION_SYM=749;
	public static final int VERTBAR=750;
	public static final int VIEW_SYM=751;
	public static final int V_=752;
	public static final int WAIT_SYM=753;
	public static final int WARNINGS=754;
	public static final int WEEK=755;
	public static final int WEEKDAY=756;
	public static final int WEEKOFYEAR=757;
	public static final int WEIGHT_STRING=758;
	public static final int WHEN_SYM=759;
	public static final int WHERE=760;
	public static final int WHILE_SYM=761;
	public static final int WHITE_SPACE=762;
	public static final int WITH=763;
	public static final int WORK_SYM=764;
	public static final int WRAPPER_SYM=765;
	public static final int WRITE_SYM=766;
	public static final int W_=767;
	public static final int X509_SYM=768;
	public static final int XA_SYM=769;
	public static final int XML_SYM=770;
	public static final int XOR=771;
	public static final int X_=772;
	public static final int YEAR=773;
	public static final int YEARWEEK=774;
	public static final int YEAR_MONTH=775;
	public static final int Y_=776;
	public static final int ZEROFILL=777;
	public static final int Z_=778;

	// delegates
	public Parser[] getDelegates() {
		return new Parser[] {};
	}

	// delegators


	public SQLParser(TokenStream input) {
		this(input, new RecognizerSharedState());
	}
	public SQLParser(TokenStream input, RecognizerSharedState state) {
		super(input, state);
	}

	protected TreeAdaptor adaptor = new CommonTreeAdaptor();

	public void setTreeAdaptor(TreeAdaptor adaptor) {
		this.adaptor = adaptor;
	}
	public TreeAdaptor getTreeAdaptor() {
		return adaptor;
	}
	@Override public String[] getTokenNames() { return SQLParser.tokenNames; }
	@Override public String getGrammarFileName() { return "/Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g"; }


	//protected TreeAdaptor adaptor = new SQLTreeAdaptor();


	public static class relational_op_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "relational_op"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:926:1: relational_op : ( EQ_SYM | LTH | GTH | NOT_EQ | LET | GET ) ^;
	public final SQLParser.relational_op_return relational_op() throws RecognitionException {
		SQLParser.relational_op_return retval = new SQLParser.relational_op_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set1=null;

		Object set1_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:926:14: ( ( EQ_SYM | LTH | GTH | NOT_EQ | LET | GET ) ^)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:927:3: ( EQ_SYM | LTH | GTH | NOT_EQ | LET | GET ) ^
			{
			root_0 = (Object)adaptor.nil();


			set1=input.LT(1);
			set1=input.LT(1);
			if ( input.LA(1)==EQ_SYM||input.LA(1)==GET||input.LA(1)==GTH||input.LA(1)==LET||input.LA(1)==LTH||input.LA(1)==NOT_EQ ) {
				input.consume();
				if ( state.backtracking==0 ) root_0 = (Object)adaptor.becomeRoot((Object)adaptor.create(set1), root_0);
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "relational_op"


	public static class charset_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "charset_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:929:1: charset_name : ( ARMSCII8 | ASCII_SYM | BIG5 | BINARY | CP1250 | CP1251 | CP1256 | CP1257 | CP850 | CP852 | CP866 | CP932 | DEC8 | EUCJPMS | EUCKR | GB2312 | GBK | GEOSTD8 | GREEK | HEBREW | HP8 | KEYBCS2 | KOI8R | KOI8U | LATIN1 | LATIN2 | LATIN5 | LATIN7 | MACCE | MACROMAN | SJIS | SWE7 | TIS620 | UCS2 | UJIS | UTF8 );
	public final SQLParser.charset_name_return charset_name() throws RecognitionException {
		SQLParser.charset_name_return retval = new SQLParser.charset_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set2=null;

		Object set2_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:929:13: ( ARMSCII8 | ASCII_SYM | BIG5 | BINARY | CP1250 | CP1251 | CP1256 | CP1257 | CP850 | CP852 | CP866 | CP932 | DEC8 | EUCJPMS | EUCKR | GB2312 | GBK | GEOSTD8 | GREEK | HEBREW | HP8 | KEYBCS2 | KOI8R | KOI8U | LATIN1 | LATIN2 | LATIN5 | LATIN7 | MACCE | MACROMAN | SJIS | SWE7 | TIS620 | UCS2 | UJIS | UTF8 )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
			{
			root_0 = (Object)adaptor.nil();


			set2=input.LT(1);
			if ( input.LA(1)==ARMSCII8||input.LA(1)==ASCII_SYM||input.LA(1)==BIG5||input.LA(1)==BINARY||(input.LA(1) >= CP1250 && input.LA(1) <= CP932)||input.LA(1)==DEC8||(input.LA(1) >= EUCJPMS && input.LA(1) <= EUCKR)||(input.LA(1) >= GB2312 && input.LA(1) <= GBK)||input.LA(1)==GEOSTD8||input.LA(1)==GREEK||input.LA(1)==HEBREW||input.LA(1)==HP8||input.LA(1)==KEYBCS2||(input.LA(1) >= KOI8R && input.LA(1) <= KOI8U)||input.LA(1)==LATIN1||(input.LA(1) >= LATIN2 && input.LA(1) <= LATIN7)||(input.LA(1) >= MACCE && input.LA(1) <= MACROMAN)||input.LA(1)==SJIS||input.LA(1)==SWE7||input.LA(1)==TIS620||(input.LA(1) >= UCS2 && input.LA(1) <= UJIS)||input.LA(1)==UTF8 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set2));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "charset_name"


	public static class cast_data_type_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "cast_data_type"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:967:1: cast_data_type : ( BINARY ( INTEGER_NUM )? | CHAR ( INTEGER_NUM )? | DATE_SYM | DATETIME | DECIMAL_SYM ( INTEGER_NUM ( COMMA INTEGER_NUM )? )? | SIGNED_SYM ( INTEGER_SYM )? | TIME_SYM | UNSIGNED_SYM ( INTEGER_SYM )? );
	public final SQLParser.cast_data_type_return cast_data_type() throws RecognitionException {
		SQLParser.cast_data_type_return retval = new SQLParser.cast_data_type_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token BINARY3=null;
		Token INTEGER_NUM4=null;
		Token CHAR5=null;
		Token INTEGER_NUM6=null;
		Token DATE_SYM7=null;
		Token DATETIME8=null;
		Token DECIMAL_SYM9=null;
		Token INTEGER_NUM10=null;
		Token COMMA11=null;
		Token INTEGER_NUM12=null;
		Token SIGNED_SYM13=null;
		Token INTEGER_SYM14=null;
		Token TIME_SYM15=null;
		Token UNSIGNED_SYM16=null;
		Token INTEGER_SYM17=null;

		Object BINARY3_tree=null;
		Object INTEGER_NUM4_tree=null;
		Object CHAR5_tree=null;
		Object INTEGER_NUM6_tree=null;
		Object DATE_SYM7_tree=null;
		Object DATETIME8_tree=null;
		Object DECIMAL_SYM9_tree=null;
		Object INTEGER_NUM10_tree=null;
		Object COMMA11_tree=null;
		Object INTEGER_NUM12_tree=null;
		Object SIGNED_SYM13_tree=null;
		Object INTEGER_SYM14_tree=null;
		Object TIME_SYM15_tree=null;
		Object UNSIGNED_SYM16_tree=null;
		Object INTEGER_SYM17_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:967:15: ( BINARY ( INTEGER_NUM )? | CHAR ( INTEGER_NUM )? | DATE_SYM | DATETIME | DECIMAL_SYM ( INTEGER_NUM ( COMMA INTEGER_NUM )? )? | SIGNED_SYM ( INTEGER_SYM )? | TIME_SYM | UNSIGNED_SYM ( INTEGER_SYM )? )
			int alt7=8;
			switch ( input.LA(1) ) {
			case BINARY:
				{
				alt7=1;
				}
				break;
			case CHAR:
				{
				alt7=2;
				}
				break;
			case DATE_SYM:
				{
				alt7=3;
				}
				break;
			case DATETIME:
				{
				alt7=4;
				}
				break;
			case DECIMAL_SYM:
				{
				alt7=5;
				}
				break;
			case SIGNED_SYM:
				{
				alt7=6;
				}
				break;
			case TIME_SYM:
				{
				alt7=7;
				}
				break;
			case UNSIGNED_SYM:
				{
				alt7=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 7, 0, input);
				throw nvae;
			}
			switch (alt7) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:968:3: BINARY ( INTEGER_NUM )?
					{
					root_0 = (Object)adaptor.nil();


					BINARY3=(Token)match(input,BINARY,FOLLOW_BINARY_in_cast_data_type20656); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					BINARY3_tree = (Object)adaptor.create(BINARY3);
					adaptor.addChild(root_0, BINARY3_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:968:10: ( INTEGER_NUM )?
					int alt1=2;
					int LA1_0 = input.LA(1);
					if ( (LA1_0==INTEGER_NUM) ) {
						alt1=1;
					}
					switch (alt1) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:968:11: INTEGER_NUM
							{
							INTEGER_NUM4=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_cast_data_type20659); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							INTEGER_NUM4_tree = (Object)adaptor.create(INTEGER_NUM4);
							adaptor.addChild(root_0, INTEGER_NUM4_tree);
							}

							}
							break;

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:969:5: CHAR ( INTEGER_NUM )?
					{
					root_0 = (Object)adaptor.nil();


					CHAR5=(Token)match(input,CHAR,FOLLOW_CHAR_in_cast_data_type20668); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CHAR5_tree = (Object)adaptor.create(CHAR5);
					adaptor.addChild(root_0, CHAR5_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:969:10: ( INTEGER_NUM )?
					int alt2=2;
					int LA2_0 = input.LA(1);
					if ( (LA2_0==INTEGER_NUM) ) {
						alt2=1;
					}
					switch (alt2) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:969:11: INTEGER_NUM
							{
							INTEGER_NUM6=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_cast_data_type20671); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							INTEGER_NUM6_tree = (Object)adaptor.create(INTEGER_NUM6);
							adaptor.addChild(root_0, INTEGER_NUM6_tree);
							}

							}
							break;

					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:970:5: DATE_SYM
					{
					root_0 = (Object)adaptor.nil();


					DATE_SYM7=(Token)match(input,DATE_SYM,FOLLOW_DATE_SYM_in_cast_data_type20680); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DATE_SYM7_tree = (Object)adaptor.create(DATE_SYM7);
					adaptor.addChild(root_0, DATE_SYM7_tree);
					}

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:971:5: DATETIME
					{
					root_0 = (Object)adaptor.nil();


					DATETIME8=(Token)match(input,DATETIME,FOLLOW_DATETIME_in_cast_data_type20686); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DATETIME8_tree = (Object)adaptor.create(DATETIME8);
					adaptor.addChild(root_0, DATETIME8_tree);
					}

					}
					break;
				case 5 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:972:5: DECIMAL_SYM ( INTEGER_NUM ( COMMA INTEGER_NUM )? )?
					{
					root_0 = (Object)adaptor.nil();


					DECIMAL_SYM9=(Token)match(input,DECIMAL_SYM,FOLLOW_DECIMAL_SYM_in_cast_data_type20693); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DECIMAL_SYM9_tree = (Object)adaptor.create(DECIMAL_SYM9);
					adaptor.addChild(root_0, DECIMAL_SYM9_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:972:17: ( INTEGER_NUM ( COMMA INTEGER_NUM )? )?
					int alt4=2;
					int LA4_0 = input.LA(1);
					if ( (LA4_0==INTEGER_NUM) ) {
						alt4=1;
					}
					switch (alt4) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:972:19: INTEGER_NUM ( COMMA INTEGER_NUM )?
							{
							INTEGER_NUM10=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_cast_data_type20697); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							INTEGER_NUM10_tree = (Object)adaptor.create(INTEGER_NUM10);
							adaptor.addChild(root_0, INTEGER_NUM10_tree);
							}

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:972:31: ( COMMA INTEGER_NUM )?
							int alt3=2;
							int LA3_0 = input.LA(1);
							if ( (LA3_0==COMMA) ) {
								alt3=1;
							}
							switch (alt3) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:972:32: COMMA INTEGER_NUM
									{
									COMMA11=(Token)match(input,COMMA,FOLLOW_COMMA_in_cast_data_type20700); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									COMMA11_tree = (Object)adaptor.create(COMMA11);
									adaptor.addChild(root_0, COMMA11_tree);
									}

									INTEGER_NUM12=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_cast_data_type20702); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									INTEGER_NUM12_tree = (Object)adaptor.create(INTEGER_NUM12);
									adaptor.addChild(root_0, INTEGER_NUM12_tree);
									}

									}
									break;

							}

							}
							break;

					}

					}
					break;
				case 6 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:973:5: SIGNED_SYM ( INTEGER_SYM )?
					{
					root_0 = (Object)adaptor.nil();


					SIGNED_SYM13=(Token)match(input,SIGNED_SYM,FOLLOW_SIGNED_SYM_in_cast_data_type20713); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SIGNED_SYM13_tree = (Object)adaptor.create(SIGNED_SYM13);
					adaptor.addChild(root_0, SIGNED_SYM13_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:973:16: ( INTEGER_SYM )?
					int alt5=2;
					int LA5_0 = input.LA(1);
					if ( (LA5_0==INTEGER_SYM) ) {
						alt5=1;
					}
					switch (alt5) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:973:17: INTEGER_SYM
							{
							INTEGER_SYM14=(Token)match(input,INTEGER_SYM,FOLLOW_INTEGER_SYM_in_cast_data_type20716); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							INTEGER_SYM14_tree = (Object)adaptor.create(INTEGER_SYM14);
							adaptor.addChild(root_0, INTEGER_SYM14_tree);
							}

							}
							break;

					}

					}
					break;
				case 7 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:974:5: TIME_SYM
					{
					root_0 = (Object)adaptor.nil();


					TIME_SYM15=(Token)match(input,TIME_SYM,FOLLOW_TIME_SYM_in_cast_data_type20724); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TIME_SYM15_tree = (Object)adaptor.create(TIME_SYM15);
					adaptor.addChild(root_0, TIME_SYM15_tree);
					}

					}
					break;
				case 8 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:975:5: UNSIGNED_SYM ( INTEGER_SYM )?
					{
					root_0 = (Object)adaptor.nil();


					UNSIGNED_SYM16=(Token)match(input,UNSIGNED_SYM,FOLLOW_UNSIGNED_SYM_in_cast_data_type20730); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					UNSIGNED_SYM16_tree = (Object)adaptor.create(UNSIGNED_SYM16);
					adaptor.addChild(root_0, UNSIGNED_SYM16_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:975:18: ( INTEGER_SYM )?
					int alt6=2;
					int LA6_0 = input.LA(1);
					if ( (LA6_0==INTEGER_SYM) ) {
						alt6=1;
					}
					switch (alt6) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:975:19: INTEGER_SYM
							{
							INTEGER_SYM17=(Token)match(input,INTEGER_SYM,FOLLOW_INTEGER_SYM_in_cast_data_type20733); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							INTEGER_SYM17_tree = (Object)adaptor.create(INTEGER_SYM17);
							adaptor.addChild(root_0, INTEGER_SYM17_tree);
							}

							}
							break;

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "cast_data_type"


	public static class search_modifier_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "search_modifier"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:978:1: search_modifier : ( ( IN_SYM NATURAL LANGUAGE MODE_SYM ) | ( IN_SYM NATURAL LANGUAGE MODE_SYM WITH QUERY_SYM EXPANSION_SYM ) | ( IN_SYM BOOLEAN_SYM MODE_SYM ) | ( WITH QUERY_SYM EXPANSION_SYM ) );
	public final SQLParser.search_modifier_return search_modifier() throws RecognitionException {
		SQLParser.search_modifier_return retval = new SQLParser.search_modifier_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token IN_SYM18=null;
		Token NATURAL19=null;
		Token LANGUAGE20=null;
		Token MODE_SYM21=null;
		Token IN_SYM22=null;
		Token NATURAL23=null;
		Token LANGUAGE24=null;
		Token MODE_SYM25=null;
		Token WITH26=null;
		Token QUERY_SYM27=null;
		Token EXPANSION_SYM28=null;
		Token IN_SYM29=null;
		Token BOOLEAN_SYM30=null;
		Token MODE_SYM31=null;
		Token WITH32=null;
		Token QUERY_SYM33=null;
		Token EXPANSION_SYM34=null;

		Object IN_SYM18_tree=null;
		Object NATURAL19_tree=null;
		Object LANGUAGE20_tree=null;
		Object MODE_SYM21_tree=null;
		Object IN_SYM22_tree=null;
		Object NATURAL23_tree=null;
		Object LANGUAGE24_tree=null;
		Object MODE_SYM25_tree=null;
		Object WITH26_tree=null;
		Object QUERY_SYM27_tree=null;
		Object EXPANSION_SYM28_tree=null;
		Object IN_SYM29_tree=null;
		Object BOOLEAN_SYM30_tree=null;
		Object MODE_SYM31_tree=null;
		Object WITH32_tree=null;
		Object QUERY_SYM33_tree=null;
		Object EXPANSION_SYM34_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:978:16: ( ( IN_SYM NATURAL LANGUAGE MODE_SYM ) | ( IN_SYM NATURAL LANGUAGE MODE_SYM WITH QUERY_SYM EXPANSION_SYM ) | ( IN_SYM BOOLEAN_SYM MODE_SYM ) | ( WITH QUERY_SYM EXPANSION_SYM ) )
			int alt8=4;
			int LA8_0 = input.LA(1);
			if ( (LA8_0==IN_SYM) ) {
				int LA8_1 = input.LA(2);
				if ( (LA8_1==NATURAL) ) {
					int LA8_3 = input.LA(3);
					if ( (LA8_3==LANGUAGE) ) {
						int LA8_5 = input.LA(4);
						if ( (LA8_5==MODE_SYM) ) {
							int LA8_6 = input.LA(5);
							if ( (LA8_6==WITH) ) {
								int LA8_7 = input.LA(6);
								if ( (LA8_7==QUERY_SYM) ) {
									int LA8_9 = input.LA(7);
									if ( (LA8_9==EXPANSION_SYM) ) {
										int LA8_10 = input.LA(8);
										if ( (synpred54_SQL()) ) {
											alt8=1;
										}
										else if ( (synpred55_SQL()) ) {
											alt8=2;
										}

										else {
											if (state.backtracking>0) {state.failed=true; return retval;}
											int nvaeMark = input.mark();
											try {
												for (int nvaeConsume = 0; nvaeConsume < 8 - 1; nvaeConsume++) {
													input.consume();
												}
												NoViableAltException nvae =
													new NoViableAltException("", 8, 10, input);
												throw nvae;
											} finally {
												input.rewind(nvaeMark);
											}
										}

									}

									else {
										if (state.backtracking>0) {state.failed=true; return retval;}
										int nvaeMark = input.mark();
										try {
											for (int nvaeConsume = 0; nvaeConsume < 7 - 1; nvaeConsume++) {
												input.consume();
											}
											NoViableAltException nvae =
												new NoViableAltException("", 8, 9, input);
											throw nvae;
										} finally {
											input.rewind(nvaeMark);
										}
									}

								}
								else if ( (LA8_7==CASCADED||LA8_7==CHECK_SYM||LA8_7==LOCAL_SYM||LA8_7==ROLLUP_SYM) ) {
									alt8=1;
								}

								else {
									if (state.backtracking>0) {state.failed=true; return retval;}
									int nvaeMark = input.mark();
									try {
										for (int nvaeConsume = 0; nvaeConsume < 6 - 1; nvaeConsume++) {
											input.consume();
										}
										NoViableAltException nvae =
											new NoViableAltException("", 8, 7, input);
										throw nvae;
									} finally {
										input.rewind(nvaeMark);
									}
								}

							}
							else if ( (LA8_6==EOF||LA8_6==AND_SYM||LA8_6==ASC||(LA8_6 >= ASTERISK && LA8_6 <= AS_SYM)||LA8_6==BETWEEN||LA8_6==BITAND||LA8_6==COLLATE_SYM||LA8_6==COMMA||LA8_6==CROSS||(LA8_6 >= DAY_HOUR && LA8_6 <= DAY_SYM)||LA8_6==DESC||LA8_6==DIVIDE||LA8_6==ELSE_SYM||LA8_6==END_SYM||LA8_6==EQ_SYM||LA8_6==FOR_SYM||LA8_6==FROM||LA8_6==GET||(LA8_6 >= GROUP_SYM && LA8_6 <= GTH)||LA8_6==HAVING||(LA8_6 >= HOUR && LA8_6 <= HOUR_SECOND)||LA8_6==ID||LA8_6==INNER_SYM||LA8_6==INTEGER_NUM||LA8_6==IN_SYM||LA8_6==IS_SYM||LA8_6==JOIN_SYM||LA8_6==LEFT||LA8_6==LET||(LA8_6 >= LIKE_SYM && LA8_6 <= LIMIT)||LA8_6==LOCK||LA8_6==LTH||(LA8_6 >= MINUS && LA8_6 <= MINUTE_SECOND)||(LA8_6 >= MOD_SYM && LA8_6 <= MONTH)||LA8_6==NATURAL||(LA8_6 >= NOT_EQ && LA8_6 <= NOT_SYM)||LA8_6==ON||(LA8_6 >= ORDER_SYM && LA8_6 <= OR_SYM)||LA8_6==PARTITION_SYM||LA8_6==PLUS||LA8_6==POWER_OP||LA8_6==QUARTER||LA8_6==REGEXP||LA8_6==RIGHT||LA8_6==RPAREN||(LA8_6 >= SECOND && LA8_6 <= SECOND_MICROSECOND)||LA8_6==SEMI||LA8_6==SET_SYM||(LA8_6 >= SHIFT_LEFT && LA8_6 <= SHIFT_RIGHT)||LA8_6==SOUNDS_SYM||LA8_6==STRAIGHT_JOIN||LA8_6==THEN_SYM||LA8_6==UNION_SYM||LA8_6==USING_SYM||LA8_6==VERTBAR||LA8_6==WEEK||(LA8_6 >= WHEN_SYM && LA8_6 <= WHERE)||LA8_6==XOR||LA8_6==YEAR||LA8_6==YEAR_MONTH) ) {
								alt8=1;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 8, 6, input);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 8, 5, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 8, 3, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}
				else if ( (LA8_1==BOOLEAN_SYM) ) {
					alt8=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 8, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA8_0==WITH) ) {
				alt8=4;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 8, 0, input);
				throw nvae;
			}

			switch (alt8) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:979:3: ( IN_SYM NATURAL LANGUAGE MODE_SYM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:979:3: ( IN_SYM NATURAL LANGUAGE MODE_SYM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:979:4: IN_SYM NATURAL LANGUAGE MODE_SYM
					{
					IN_SYM18=(Token)match(input,IN_SYM,FOLLOW_IN_SYM_in_search_modifier20748); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IN_SYM18_tree = (Object)adaptor.create(IN_SYM18);
					adaptor.addChild(root_0, IN_SYM18_tree);
					}

					NATURAL19=(Token)match(input,NATURAL,FOLLOW_NATURAL_in_search_modifier20750); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					NATURAL19_tree = (Object)adaptor.create(NATURAL19);
					adaptor.addChild(root_0, NATURAL19_tree);
					}

					LANGUAGE20=(Token)match(input,LANGUAGE,FOLLOW_LANGUAGE_in_search_modifier20752); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LANGUAGE20_tree = (Object)adaptor.create(LANGUAGE20);
					adaptor.addChild(root_0, LANGUAGE20_tree);
					}

					MODE_SYM21=(Token)match(input,MODE_SYM,FOLLOW_MODE_SYM_in_search_modifier20754); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MODE_SYM21_tree = (Object)adaptor.create(MODE_SYM21);
					adaptor.addChild(root_0, MODE_SYM21_tree);
					}

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:980:5: ( IN_SYM NATURAL LANGUAGE MODE_SYM WITH QUERY_SYM EXPANSION_SYM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:980:5: ( IN_SYM NATURAL LANGUAGE MODE_SYM WITH QUERY_SYM EXPANSION_SYM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:980:6: IN_SYM NATURAL LANGUAGE MODE_SYM WITH QUERY_SYM EXPANSION_SYM
					{
					IN_SYM22=(Token)match(input,IN_SYM,FOLLOW_IN_SYM_in_search_modifier20762); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IN_SYM22_tree = (Object)adaptor.create(IN_SYM22);
					adaptor.addChild(root_0, IN_SYM22_tree);
					}

					NATURAL23=(Token)match(input,NATURAL,FOLLOW_NATURAL_in_search_modifier20764); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					NATURAL23_tree = (Object)adaptor.create(NATURAL23);
					adaptor.addChild(root_0, NATURAL23_tree);
					}

					LANGUAGE24=(Token)match(input,LANGUAGE,FOLLOW_LANGUAGE_in_search_modifier20766); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LANGUAGE24_tree = (Object)adaptor.create(LANGUAGE24);
					adaptor.addChild(root_0, LANGUAGE24_tree);
					}

					MODE_SYM25=(Token)match(input,MODE_SYM,FOLLOW_MODE_SYM_in_search_modifier20768); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MODE_SYM25_tree = (Object)adaptor.create(MODE_SYM25);
					adaptor.addChild(root_0, MODE_SYM25_tree);
					}

					WITH26=(Token)match(input,WITH,FOLLOW_WITH_in_search_modifier20770); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					WITH26_tree = (Object)adaptor.create(WITH26);
					adaptor.addChild(root_0, WITH26_tree);
					}

					QUERY_SYM27=(Token)match(input,QUERY_SYM,FOLLOW_QUERY_SYM_in_search_modifier20772); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					QUERY_SYM27_tree = (Object)adaptor.create(QUERY_SYM27);
					adaptor.addChild(root_0, QUERY_SYM27_tree);
					}

					EXPANSION_SYM28=(Token)match(input,EXPANSION_SYM,FOLLOW_EXPANSION_SYM_in_search_modifier20774); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EXPANSION_SYM28_tree = (Object)adaptor.create(EXPANSION_SYM28);
					adaptor.addChild(root_0, EXPANSION_SYM28_tree);
					}

					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:981:5: ( IN_SYM BOOLEAN_SYM MODE_SYM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:981:5: ( IN_SYM BOOLEAN_SYM MODE_SYM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:981:6: IN_SYM BOOLEAN_SYM MODE_SYM
					{
					IN_SYM29=(Token)match(input,IN_SYM,FOLLOW_IN_SYM_in_search_modifier20782); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IN_SYM29_tree = (Object)adaptor.create(IN_SYM29);
					adaptor.addChild(root_0, IN_SYM29_tree);
					}

					BOOLEAN_SYM30=(Token)match(input,BOOLEAN_SYM,FOLLOW_BOOLEAN_SYM_in_search_modifier20784); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					BOOLEAN_SYM30_tree = (Object)adaptor.create(BOOLEAN_SYM30);
					adaptor.addChild(root_0, BOOLEAN_SYM30_tree);
					}

					MODE_SYM31=(Token)match(input,MODE_SYM,FOLLOW_MODE_SYM_in_search_modifier20786); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MODE_SYM31_tree = (Object)adaptor.create(MODE_SYM31);
					adaptor.addChild(root_0, MODE_SYM31_tree);
					}

					}

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:982:5: ( WITH QUERY_SYM EXPANSION_SYM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:982:5: ( WITH QUERY_SYM EXPANSION_SYM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:982:6: WITH QUERY_SYM EXPANSION_SYM
					{
					WITH32=(Token)match(input,WITH,FOLLOW_WITH_in_search_modifier20794); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					WITH32_tree = (Object)adaptor.create(WITH32);
					adaptor.addChild(root_0, WITH32_tree);
					}

					QUERY_SYM33=(Token)match(input,QUERY_SYM,FOLLOW_QUERY_SYM_in_search_modifier20796); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					QUERY_SYM33_tree = (Object)adaptor.create(QUERY_SYM33);
					adaptor.addChild(root_0, QUERY_SYM33_tree);
					}

					EXPANSION_SYM34=(Token)match(input,EXPANSION_SYM,FOLLOW_EXPANSION_SYM_in_search_modifier20798); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EXPANSION_SYM34_tree = (Object)adaptor.create(EXPANSION_SYM34);
					adaptor.addChild(root_0, EXPANSION_SYM34_tree);
					}

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "search_modifier"


	public static class transcoding_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "transcoding_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:985:1: transcoding_name : ( LATIN1 | UTF8 );
	public final SQLParser.transcoding_name_return transcoding_name() throws RecognitionException {
		SQLParser.transcoding_name_return retval = new SQLParser.transcoding_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set35=null;

		Object set35_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:985:17: ( LATIN1 | UTF8 )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
			{
			root_0 = (Object)adaptor.nil();


			set35=input.LT(1);
			if ( input.LA(1)==LATIN1||input.LA(1)==UTF8 ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set35));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "transcoding_name"


	public static class interval_unit_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "interval_unit"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:990:1: interval_unit : ( SECOND | MINUTE | HOUR | DAY_SYM | WEEK | MONTH | QUARTER | YEAR | SECOND_MICROSECOND | MINUTE_MICROSECOND | MINUTE_SECOND | HOUR_MICROSECOND | HOUR_SECOND | HOUR_MINUTE | DAY_MICROSECOND | DAY_SECOND | DAY_MINUTE | DAY_HOUR | YEAR_MONTH );
	public final SQLParser.interval_unit_return interval_unit() throws RecognitionException {
		SQLParser.interval_unit_return retval = new SQLParser.interval_unit_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set36=null;

		Object set36_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:990:14: ( SECOND | MINUTE | HOUR | DAY_SYM | WEEK | MONTH | QUARTER | YEAR | SECOND_MICROSECOND | MINUTE_MICROSECOND | MINUTE_SECOND | HOUR_MICROSECOND | HOUR_SECOND | HOUR_MINUTE | DAY_MICROSECOND | DAY_SECOND | DAY_MINUTE | DAY_HOUR | YEAR_MONTH )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
			{
			root_0 = (Object)adaptor.nil();


			set36=input.LT(1);
			if ( (input.LA(1) >= DAY_HOUR && input.LA(1) <= DAY_SYM)||(input.LA(1) >= HOUR && input.LA(1) <= HOUR_SECOND)||(input.LA(1) >= MINUTE && input.LA(1) <= MINUTE_SECOND)||input.LA(1)==MONTH||input.LA(1)==QUARTER||(input.LA(1) >= SECOND && input.LA(1) <= SECOND_MICROSECOND)||input.LA(1)==WEEK||input.LA(1)==YEAR||input.LA(1)==YEAR_MONTH ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set36));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "interval_unit"


	public static class collation_names_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "collation_names"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1012:1: collation_names : ( LATIN1_GENERAL_CS | LATIN1_BIN );
	public final SQLParser.collation_names_return collation_names() throws RecognitionException {
		SQLParser.collation_names_return retval = new SQLParser.collation_names_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set37=null;

		Object set37_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1012:16: ( LATIN1_GENERAL_CS | LATIN1_BIN )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
			{
			root_0 = (Object)adaptor.nil();


			set37=input.LT(1);
			if ( (input.LA(1) >= LATIN1_BIN && input.LA(1) <= LATIN1_GENERAL_CS) ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set37));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "collation_names"


	public static class string_literal_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "string_literal"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1022:1: string_literal : TEXT_STRING ;
	public final SQLParser.string_literal_return string_literal() throws RecognitionException {
		SQLParser.string_literal_return retval = new SQLParser.string_literal_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token TEXT_STRING38=null;

		Object TEXT_STRING38_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1022:15: ( TEXT_STRING )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1022:19: TEXT_STRING
			{
			root_0 = (Object)adaptor.nil();


			TEXT_STRING38=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_string_literal20967); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			TEXT_STRING38_tree = (Object)adaptor.create(TEXT_STRING38);
			adaptor.addChild(root_0, TEXT_STRING38_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "string_literal"


	public static class number_literal_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "number_literal"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1023:1: number_literal : ( PLUS | MINUS )? ( INTEGER_NUM | REAL_NUMBER ) ;
	public final SQLParser.number_literal_return number_literal() throws RecognitionException {
		SQLParser.number_literal_return retval = new SQLParser.number_literal_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set39=null;
		Token set40=null;

		Object set39_tree=null;
		Object set40_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1023:15: ( ( PLUS | MINUS )? ( INTEGER_NUM | REAL_NUMBER ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1023:19: ( PLUS | MINUS )? ( INTEGER_NUM | REAL_NUMBER )
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1023:19: ( PLUS | MINUS )?
			int alt9=2;
			int LA9_0 = input.LA(1);
			if ( (LA9_0==MINUS||LA9_0==PLUS) ) {
				alt9=1;
			}
			switch (alt9) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
					{
					set39=input.LT(1);
					if ( input.LA(1)==MINUS||input.LA(1)==PLUS ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set39));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			set40=input.LT(1);
			if ( input.LA(1)==INTEGER_NUM||input.LA(1)==REAL_NUMBER ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set40));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "number_literal"


	public static class hex_literal_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "hex_literal"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1025:1: hex_literal : HEX_DIGIT ;
	public final SQLParser.hex_literal_return hex_literal() throws RecognitionException {
		SQLParser.hex_literal_return retval = new SQLParser.hex_literal_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token HEX_DIGIT41=null;

		Object HEX_DIGIT41_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1025:12: ( HEX_DIGIT )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1025:17: HEX_DIGIT
			{
			root_0 = (Object)adaptor.nil();


			HEX_DIGIT41=(Token)match(input,HEX_DIGIT,FOLLOW_HEX_DIGIT_in_hex_literal21002); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			HEX_DIGIT41_tree = (Object)adaptor.create(HEX_DIGIT41);
			adaptor.addChild(root_0, HEX_DIGIT41_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "hex_literal"


	public static class boolean_literal_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "boolean_literal"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1026:1: boolean_literal : ( TRUE_SYM | FALSE_SYM );
	public final SQLParser.boolean_literal_return boolean_literal() throws RecognitionException {
		SQLParser.boolean_literal_return retval = new SQLParser.boolean_literal_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set42=null;

		Object set42_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1026:16: ( TRUE_SYM | FALSE_SYM )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
			{
			root_0 = (Object)adaptor.nil();


			set42=input.LT(1);
			if ( input.LA(1)==FALSE_SYM||input.LA(1)==TRUE_SYM ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set42));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "boolean_literal"


	public static class bit_literal_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "bit_literal"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1027:1: bit_literal : BIT_NUM ;
	public final SQLParser.bit_literal_return bit_literal() throws RecognitionException {
		SQLParser.bit_literal_return retval = new SQLParser.bit_literal_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token BIT_NUM43=null;

		Object BIT_NUM43_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1027:12: ( BIT_NUM )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1027:17: BIT_NUM
			{
			root_0 = (Object)adaptor.nil();


			BIT_NUM43=(Token)match(input,BIT_NUM,FOLLOW_BIT_NUM_in_bit_literal21023); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			BIT_NUM43_tree = (Object)adaptor.create(BIT_NUM43);
			adaptor.addChild(root_0, BIT_NUM43_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "bit_literal"


	public static class literal_value_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "literal_value"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1030:1: literal_value : ( string_literal | number_literal | hex_literal | boolean_literal | bit_literal | NULL_SYM ) ;
	public final SQLParser.literal_value_return literal_value() throws RecognitionException {
		SQLParser.literal_value_return retval = new SQLParser.literal_value_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token NULL_SYM49=null;
		ParserRuleReturnScope string_literal44 =null;
		ParserRuleReturnScope number_literal45 =null;
		ParserRuleReturnScope hex_literal46 =null;
		ParserRuleReturnScope boolean_literal47 =null;
		ParserRuleReturnScope bit_literal48 =null;

		Object NULL_SYM49_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1030:14: ( ( string_literal | number_literal | hex_literal | boolean_literal | bit_literal | NULL_SYM ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1031:9: ( string_literal | number_literal | hex_literal | boolean_literal | bit_literal | NULL_SYM )
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1031:9: ( string_literal | number_literal | hex_literal | boolean_literal | bit_literal | NULL_SYM )
			int alt10=6;
			switch ( input.LA(1) ) {
			case TEXT_STRING:
				{
				alt10=1;
				}
				break;
			case INTEGER_NUM:
			case MINUS:
			case PLUS:
			case REAL_NUMBER:
				{
				alt10=2;
				}
				break;
			case HEX_DIGIT:
				{
				alt10=3;
				}
				break;
			case FALSE_SYM:
			case TRUE_SYM:
				{
				alt10=4;
				}
				break;
			case BIT_NUM:
				{
				alt10=5;
				}
				break;
			case NULL_SYM:
				{
				alt10=6;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 10, 0, input);
				throw nvae;
			}
			switch (alt10) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1031:11: string_literal
					{
					pushFollow(FOLLOW_string_literal_in_literal_value21041);
					string_literal44=string_literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, string_literal44.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1031:28: number_literal
					{
					pushFollow(FOLLOW_number_literal_in_literal_value21045);
					number_literal45=number_literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal45.getTree());

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1031:45: hex_literal
					{
					pushFollow(FOLLOW_hex_literal_in_literal_value21049);
					hex_literal46=hex_literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, hex_literal46.getTree());

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1031:59: boolean_literal
					{
					pushFollow(FOLLOW_boolean_literal_in_literal_value21053);
					boolean_literal47=boolean_literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_literal47.getTree());

					}
					break;
				case 5 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1031:77: bit_literal
					{
					pushFollow(FOLLOW_bit_literal_in_literal_value21057);
					bit_literal48=bit_literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_literal48.getTree());

					}
					break;
				case 6 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1031:91: NULL_SYM
					{
					NULL_SYM49=(Token)match(input,NULL_SYM,FOLLOW_NULL_SYM_in_literal_value21061); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					NULL_SYM49_tree = (Object)adaptor.create(NULL_SYM49);
					adaptor.addChild(root_0, NULL_SYM49_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "literal_value"


	public static class functionList_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "functionList"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1038:1: functionList : ( number_functions | char_functions | time_functions | other_functions );
	public final SQLParser.functionList_return functionList() throws RecognitionException {
		SQLParser.functionList_return retval = new SQLParser.functionList_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope number_functions50 =null;
		ParserRuleReturnScope char_functions51 =null;
		ParserRuleReturnScope time_functions52 =null;
		ParserRuleReturnScope other_functions53 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1038:13: ( number_functions | char_functions | time_functions | other_functions )
			int alt11=4;
			switch ( input.LA(1) ) {
			case ABS:
			case ACOS:
			case ASIN:
			case ATAN:
			case ATAN2:
			case CEIL:
			case CEILING:
			case CONV:
			case COS:
			case COT:
			case CRC32:
			case DEGREES:
			case EXP:
			case FLOOR:
			case LN:
			case LOG:
			case LOG10:
			case LOG2:
			case MOD:
			case PI:
			case POW:
			case POWER:
			case RADIANS:
			case RAND:
			case ROUND:
			case SIGN:
			case SIN:
			case SQRT:
			case TAN:
			case TRUNCATE:
				{
				alt11=1;
				}
				break;
			case LOAD_FILE:
			case MAKE_SET:
				{
				int LA11_2 = input.LA(2);
				if ( (synpred87_SQL()) ) {
					alt11=2;
				}
				else if ( (true) ) {
					alt11=4;
				}

				}
				break;
			case ADDDATE:
			case ADDTIME:
			case CONVERT_TZ:
			case CURDATE:
			case CURTIME:
			case DATEDIFF:
			case DATE_ADD:
			case DATE_FORMAT:
			case DATE_SUB:
			case DATE_SYM:
			case DAYNAME:
			case DAYOFMONTH:
			case DAYOFWEEK:
			case DAYOFYEAR:
			case EXTRACT:
			case FROM_DAYS:
			case FROM_UNIXTIME:
			case GET_FORMAT:
			case HOUR:
			case LAST_DAY:
			case MAKEDATE:
			case MAKETIME:
			case MICROSECOND:
			case MINUTE:
			case MONTH:
			case MONTHNAME:
			case NOW:
			case PERIOD_ADD:
			case PERIOD_DIFF:
			case QUARTER:
			case SECOND:
			case SEC_TO_TIME:
			case STR_TO_DATE:
			case SUBTIME:
			case SYSDATE:
			case TIMEDIFF:
			case TIMESTAMP:
			case TIMESTAMPADD:
			case TIMESTAMPDIFF:
			case TIME_FORMAT:
			case TIME_SYM:
			case TIME_TO_SEC:
			case TO_DAYS:
			case TO_SECONDS:
			case UNIX_TIMESTAMP:
			case UTC_DATE:
			case UTC_TIME:
			case UTC_TIMESTAMP:
			case WEEK:
			case WEEKDAY:
			case WEEKOFYEAR:
			case YEAR:
			case YEARWEEK:
				{
				alt11=3;
				}
				break;
			case ASCII_SYM:
			case BIN:
			case BIT_LENGTH:
			case CHAR:
			case CHAR_LENGTH:
			case CONCAT:
			case CONCAT_WS:
			case ELT:
			case EXPORT_SET:
			case FIELD:
			case FIND_IN_SET:
			case FORMAT:
			case FROM_BASE64:
			case HEX:
			case INSERT:
			case INSTR:
			case LEFT:
			case LENGTH:
			case LOCATE:
			case LOWER:
			case LPAD:
			case LTRIM:
			case MID:
			case OCT:
			case ORD:
			case QUOTE:
			case REPEAT:
			case REPLACE:
			case REVERSE:
			case RIGHT:
			case RPAD:
			case RTRIM:
			case SOUNDEX:
			case SPACE:
			case STRCMP:
			case SUBSTRING:
			case SUBSTRING_INDEX:
			case TO_BASE64:
			case TRIM:
			case UNHEX:
			case UPPER:
			case WEIGHT_STRING:
				{
				alt11=2;
				}
				break;
			case AES_DECRYPT:
			case AES_ENCRYPT:
			case BENCHMARK:
			case CHARSET:
			case COERCIBILITY:
			case COLLATION:
			case CONNECTION_ID:
			case CURRENT_USER:
			case DATABASE:
			case DECODE:
			case DEFAULT:
			case DES_DECRYPT:
			case DES_ENCRYPT:
			case ENCODE:
			case ENCRYPT:
			case FOUND_ROWS:
			case GET_LOCK:
			case IF:
			case IFNULL:
			case INET_ATON:
			case INET_NTOA:
			case IS_FREE_LOCK:
			case IS_USED_LOCK:
			case LAST_INSERT_ID:
			case MASTER_POS_WAIT:
			case MD5:
			case NAME_CONST:
			case OLD_PASSWORD:
			case PASSWORD:
			case RELEASE_LOCK:
			case SCHEMA:
			case SESSION_USER:
			case SLEEP:
			case SYSTEM_USER:
			case USER:
			case UUID:
			case VALUES:
			case VERSION_SYM:
				{
				alt11=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 11, 0, input);
				throw nvae;
			}
			switch (alt11) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1039:5: number_functions
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_number_functions_in_functionList21080);
					number_functions50=number_functions();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, number_functions50.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1040:5: char_functions
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_char_functions_in_functionList21087);
					char_functions51=char_functions();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, char_functions51.getTree());

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1041:5: time_functions
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_time_functions_in_functionList21094);
					time_functions52=time_functions();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, time_functions52.getTree());

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1042:5: other_functions
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_other_functions_in_functionList21100);
					other_functions53=other_functions();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, other_functions53.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "functionList"


	public static class number_functions_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "number_functions"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1045:1: number_functions : ( ABS | ACOS | ASIN | ATAN2 | ATAN | CEIL | CEILING | CONV | COS | COT | CRC32 | DEGREES | EXP | FLOOR | LN | LOG10 | LOG2 | LOG | MOD | PI | POW | POWER | RADIANS | RAND | ROUND | SIGN | SIN | SQRT | TAN | TRUNCATE );
	public final SQLParser.number_functions_return number_functions() throws RecognitionException {
		SQLParser.number_functions_return retval = new SQLParser.number_functions_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set54=null;

		Object set54_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1045:17: ( ABS | ACOS | ASIN | ATAN2 | ATAN | CEIL | CEILING | CONV | COS | COT | CRC32 | DEGREES | EXP | FLOOR | LN | LOG10 | LOG2 | LOG | MOD | PI | POW | POWER | RADIANS | RAND | ROUND | SIGN | SIN | SQRT | TAN | TRUNCATE )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
			{
			root_0 = (Object)adaptor.nil();


			set54=input.LT(1);
			if ( input.LA(1)==ABS||input.LA(1)==ACOS||input.LA(1)==ASIN||(input.LA(1) >= ATAN && input.LA(1) <= ATAN2)||(input.LA(1) >= CEIL && input.LA(1) <= CEILING)||input.LA(1)==CONV||(input.LA(1) >= COS && input.LA(1) <= COT)||input.LA(1)==CRC32||input.LA(1)==DEGREES||input.LA(1)==EXP||input.LA(1)==FLOOR||input.LA(1)==LN||(input.LA(1) >= LOG && input.LA(1) <= LOG2)||input.LA(1)==MOD||input.LA(1)==PI||(input.LA(1) >= POW && input.LA(1) <= POWER)||(input.LA(1) >= RADIANS && input.LA(1) <= RAND)||input.LA(1)==ROUND||input.LA(1)==SIGN||input.LA(1)==SIN||input.LA(1)==SQRT||input.LA(1)==TAN||input.LA(1)==TRUNCATE ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set54));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "number_functions"


	public static class char_functions_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "char_functions"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1078:1: char_functions : ( ASCII_SYM | BIN | BIT_LENGTH | CHAR_LENGTH | CHAR | CONCAT_WS | CONCAT | ELT | EXPORT_SET | FIELD | FIND_IN_SET | FORMAT | FROM_BASE64 | HEX | INSERT | INSTR | LEFT | LENGTH | LOAD_FILE | LOCATE | LOWER | LPAD | LTRIM | MAKE_SET | MID | OCT | ORD | QUOTE | REPEAT | REPLACE | REVERSE | RIGHT | RPAD | RTRIM | SOUNDEX | SPACE | STRCMP | SUBSTRING_INDEX | SUBSTRING | TO_BASE64 | TRIM | UNHEX | UPPER | WEIGHT_STRING );
	public final SQLParser.char_functions_return char_functions() throws RecognitionException {
		SQLParser.char_functions_return retval = new SQLParser.char_functions_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set55=null;

		Object set55_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1078:15: ( ASCII_SYM | BIN | BIT_LENGTH | CHAR_LENGTH | CHAR | CONCAT_WS | CONCAT | ELT | EXPORT_SET | FIELD | FIND_IN_SET | FORMAT | FROM_BASE64 | HEX | INSERT | INSTR | LEFT | LENGTH | LOAD_FILE | LOCATE | LOWER | LPAD | LTRIM | MAKE_SET | MID | OCT | ORD | QUOTE | REPEAT | REPLACE | REVERSE | RIGHT | RPAD | RTRIM | SOUNDEX | SPACE | STRCMP | SUBSTRING_INDEX | SUBSTRING | TO_BASE64 | TRIM | UNHEX | UPPER | WEIGHT_STRING )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
			{
			root_0 = (Object)adaptor.nil();


			set55=input.LT(1);
			if ( input.LA(1)==ASCII_SYM||input.LA(1)==BIN||input.LA(1)==BIT_LENGTH||input.LA(1)==CHAR||input.LA(1)==CHAR_LENGTH||(input.LA(1) >= CONCAT && input.LA(1) <= CONCAT_WS)||input.LA(1)==ELT||input.LA(1)==EXPORT_SET||input.LA(1)==FIELD||input.LA(1)==FIND_IN_SET||input.LA(1)==FORMAT||input.LA(1)==FROM_BASE64||input.LA(1)==HEX||input.LA(1)==INSERT||input.LA(1)==INSTR||(input.LA(1) >= LEFT && input.LA(1) <= LENGTH)||input.LA(1)==LOAD_FILE||input.LA(1)==LOCATE||input.LA(1)==LOWER||input.LA(1)==LPAD||input.LA(1)==LTRIM||input.LA(1)==MAKE_SET||input.LA(1)==MID||input.LA(1)==OCT||input.LA(1)==ORD||input.LA(1)==QUOTE||input.LA(1)==REPEAT||input.LA(1)==REPLACE||input.LA(1)==REVERSE||input.LA(1)==RIGHT||input.LA(1)==RPAD||input.LA(1)==RTRIM||input.LA(1)==SOUNDEX||input.LA(1)==SPACE||input.LA(1)==STRCMP||(input.LA(1) >= SUBSTRING && input.LA(1) <= SUBSTRING_INDEX)||input.LA(1)==TO_BASE64||input.LA(1)==TRIM||input.LA(1)==UNHEX||input.LA(1)==UPPER||input.LA(1)==WEIGHT_STRING ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set55));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "char_functions"


	public static class time_functions_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "time_functions"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1125:1: time_functions : ( ADDDATE | ADDTIME | CONVERT_TZ | CURDATE | CURTIME | DATE_ADD | DATE_FORMAT | DATE_SUB | DATE_SYM | DATEDIFF | DAYNAME | DAYOFMONTH | DAYOFWEEK | DAYOFYEAR | EXTRACT | FROM_DAYS | FROM_UNIXTIME | GET_FORMAT | HOUR | LAST_DAY | MAKEDATE | MAKETIME | MICROSECOND | MINUTE | MONTH | MONTHNAME | NOW | PERIOD_ADD | PERIOD_DIFF | QUARTER | SEC_TO_TIME | SECOND | STR_TO_DATE | SUBTIME | SYSDATE | TIME_FORMAT | TIME_TO_SEC | TIME_SYM | TIMEDIFF | TIMESTAMP | TIMESTAMPADD | TIMESTAMPDIFF | TO_DAYS | TO_SECONDS | UNIX_TIMESTAMP | UTC_DATE | UTC_TIME | UTC_TIMESTAMP | WEEK | WEEKDAY | WEEKOFYEAR | YEAR | YEARWEEK );
	public final SQLParser.time_functions_return time_functions() throws RecognitionException {
		SQLParser.time_functions_return retval = new SQLParser.time_functions_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set56=null;

		Object set56_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1125:15: ( ADDDATE | ADDTIME | CONVERT_TZ | CURDATE | CURTIME | DATE_ADD | DATE_FORMAT | DATE_SUB | DATE_SYM | DATEDIFF | DAYNAME | DAYOFMONTH | DAYOFWEEK | DAYOFYEAR | EXTRACT | FROM_DAYS | FROM_UNIXTIME | GET_FORMAT | HOUR | LAST_DAY | MAKEDATE | MAKETIME | MICROSECOND | MINUTE | MONTH | MONTHNAME | NOW | PERIOD_ADD | PERIOD_DIFF | QUARTER | SEC_TO_TIME | SECOND | STR_TO_DATE | SUBTIME | SYSDATE | TIME_FORMAT | TIME_TO_SEC | TIME_SYM | TIMEDIFF | TIMESTAMP | TIMESTAMPADD | TIMESTAMPDIFF | TO_DAYS | TO_SECONDS | UNIX_TIMESTAMP | UTC_DATE | UTC_TIME | UTC_TIMESTAMP | WEEK | WEEKDAY | WEEKOFYEAR | YEAR | YEARWEEK )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
			{
			root_0 = (Object)adaptor.nil();


			set56=input.LT(1);
			if ( (input.LA(1) >= ADDDATE && input.LA(1) <= ADDTIME)||input.LA(1)==CONVERT_TZ||input.LA(1)==CURDATE||input.LA(1)==CURTIME||input.LA(1)==DATEDIFF||(input.LA(1) >= DATE_ADD && input.LA(1) <= DAYOFYEAR)||input.LA(1)==EXTRACT||(input.LA(1) >= FROM_DAYS && input.LA(1) <= FROM_UNIXTIME)||input.LA(1)==GET_FORMAT||input.LA(1)==HOUR||input.LA(1)==LAST_DAY||(input.LA(1) >= MAKEDATE && input.LA(1) <= MAKETIME)||input.LA(1)==MICROSECOND||input.LA(1)==MINUTE||(input.LA(1) >= MONTH && input.LA(1) <= MONTHNAME)||input.LA(1)==NOW||(input.LA(1) >= PERIOD_ADD && input.LA(1) <= PERIOD_DIFF)||input.LA(1)==QUARTER||input.LA(1)==SECOND||input.LA(1)==SEC_TO_TIME||input.LA(1)==STR_TO_DATE||input.LA(1)==SUBTIME||input.LA(1)==SYSDATE||(input.LA(1) >= TIMEDIFF && input.LA(1) <= TIME_TO_SEC)||(input.LA(1) >= TO_DAYS && input.LA(1) <= TO_SECONDS)||input.LA(1)==UNIX_TIMESTAMP||(input.LA(1) >= UTC_DATE && input.LA(1) <= UTC_TIMESTAMP)||(input.LA(1) >= WEEK && input.LA(1) <= WEEKOFYEAR)||(input.LA(1) >= YEAR && input.LA(1) <= YEARWEEK) ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set56));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "time_functions"


	public static class other_functions_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "other_functions"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1181:1: other_functions : ( MAKE_SET | LOAD_FILE | IF | IFNULL | AES_ENCRYPT | AES_DECRYPT | DECODE | ENCODE | DES_DECRYPT | DES_ENCRYPT | ENCRYPT | MD5 | OLD_PASSWORD | PASSWORD | BENCHMARK | CHARSET | COERCIBILITY | COLLATION | CONNECTION_ID | CURRENT_USER | DATABASE | SCHEMA | USER | SESSION_USER | SYSTEM_USER | VERSION_SYM | FOUND_ROWS | LAST_INSERT_ID | DEFAULT | GET_LOCK | RELEASE_LOCK | IS_FREE_LOCK | IS_USED_LOCK | MASTER_POS_WAIT | INET_ATON | INET_NTOA | NAME_CONST | SLEEP | UUID | VALUES );
	public final SQLParser.other_functions_return other_functions() throws RecognitionException {
		SQLParser.other_functions_return retval = new SQLParser.other_functions_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set57=null;

		Object set57_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1181:16: ( MAKE_SET | LOAD_FILE | IF | IFNULL | AES_ENCRYPT | AES_DECRYPT | DECODE | ENCODE | DES_DECRYPT | DES_ENCRYPT | ENCRYPT | MD5 | OLD_PASSWORD | PASSWORD | BENCHMARK | CHARSET | COERCIBILITY | COLLATION | CONNECTION_ID | CURRENT_USER | DATABASE | SCHEMA | USER | SESSION_USER | SYSTEM_USER | VERSION_SYM | FOUND_ROWS | LAST_INSERT_ID | DEFAULT | GET_LOCK | RELEASE_LOCK | IS_FREE_LOCK | IS_USED_LOCK | MASTER_POS_WAIT | INET_ATON | INET_NTOA | NAME_CONST | SLEEP | UUID | VALUES )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
			{
			root_0 = (Object)adaptor.nil();


			set57=input.LT(1);
			if ( (input.LA(1) >= AES_DECRYPT && input.LA(1) <= AES_ENCRYPT)||input.LA(1)==BENCHMARK||input.LA(1)==CHARSET||input.LA(1)==COERCIBILITY||input.LA(1)==COLLATION||input.LA(1)==CONNECTION_ID||input.LA(1)==CURRENT_USER||input.LA(1)==DATABASE||(input.LA(1) >= DECODE && input.LA(1) <= DEFAULT)||(input.LA(1) >= DES_DECRYPT && input.LA(1) <= DES_ENCRYPT)||(input.LA(1) >= ENCODE && input.LA(1) <= ENCRYPT)||input.LA(1)==FOUND_ROWS||input.LA(1)==GET_LOCK||(input.LA(1) >= IF && input.LA(1) <= IFNULL)||(input.LA(1) >= INET_ATON && input.LA(1) <= INET_NTOA)||input.LA(1)==IS_FREE_LOCK||input.LA(1)==IS_USED_LOCK||input.LA(1)==LAST_INSERT_ID||input.LA(1)==LOAD_FILE||input.LA(1)==MAKE_SET||input.LA(1)==MASTER_POS_WAIT||input.LA(1)==MD5||input.LA(1)==NAME_CONST||input.LA(1)==OLD_PASSWORD||input.LA(1)==PASSWORD||input.LA(1)==RELEASE_LOCK||input.LA(1)==SCHEMA||input.LA(1)==SESSION_USER||input.LA(1)==SLEEP||input.LA(1)==SYSTEM_USER||input.LA(1)==USER||input.LA(1)==UUID||input.LA(1)==VALUES||input.LA(1)==VERSION_SYM ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set57));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "other_functions"


	public static class group_functions_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "group_functions"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1201:1: group_functions : ( AVG | COUNT | MAX_SYM | MIN_SYM | SUM | BIT_AND | BIT_OR | BIT_XOR | GROUP_CONCAT | STD | STDDEV | STDDEV_POP | STDDEV_SAMP | VAR_POP | VAR_SAMP | VARIANCE );
	public final SQLParser.group_functions_return group_functions() throws RecognitionException {
		SQLParser.group_functions_return retval = new SQLParser.group_functions_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set58=null;

		Object set58_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1201:16: ( AVG | COUNT | MAX_SYM | MIN_SYM | SUM | BIT_AND | BIT_OR | BIT_XOR | GROUP_CONCAT | STD | STDDEV | STDDEV_POP | STDDEV_SAMP | VAR_POP | VAR_SAMP | VARIANCE )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
			{
			root_0 = (Object)adaptor.nil();


			set58=input.LT(1);
			if ( input.LA(1)==AVG||input.LA(1)==BIT_AND||input.LA(1)==BIT_OR||input.LA(1)==BIT_XOR||input.LA(1)==COUNT||input.LA(1)==GROUP_CONCAT||input.LA(1)==MAX_SYM||input.LA(1)==MIN_SYM||(input.LA(1) >= STD && input.LA(1) <= STDDEV_SAMP)||input.LA(1)==SUM||input.LA(1)==VARIANCE||(input.LA(1) >= VAR_POP && input.LA(1) <= VAR_SAMP) ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set58));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "group_functions"


	public static class schema_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "schema_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1215:1: schema_name : tmpName= ID {...}?;
	public final SQLParser.schema_name_return schema_name() throws RecognitionException {
		SQLParser.schema_name_return retval = new SQLParser.schema_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1215:17: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1215:19: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_schema_name22180); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "schema_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("schema name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "schema_name"


	public static class table_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "table_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1216:1: table_name : tmpName= ID {...}?;
	public final SQLParser.table_name_return table_name() throws RecognitionException {
		SQLParser.table_name_return retval = new SQLParser.table_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1216:17: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1216:19: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_table_name22198); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "table_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("table name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_name"


	public static class engine_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "engine_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1217:1: engine_name : tmpName= ID {...}?;
	public final SQLParser.engine_name_return engine_name() throws RecognitionException {
		SQLParser.engine_name_return retval = new SQLParser.engine_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1217:17: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1217:19: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_engine_name22215); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "engine_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("engine name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "engine_name"


	public static class column_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "column_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1218:1: column_name : tmpName= ID {...}?;
	public final SQLParser.column_name_return column_name() throws RecognitionException {
		SQLParser.column_name_return retval = new SQLParser.column_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1218:17: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1218:19: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_column_name22232); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "column_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("column name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "column_name"


	public static class view_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "view_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1219:1: view_name : tmpName= ID {...}?;
	public final SQLParser.view_name_return view_name() throws RecognitionException {
		SQLParser.view_name_return retval = new SQLParser.view_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1219:15: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1219:17: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_view_name22249); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "view_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("view name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "view_name"


	public static class parser_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "parser_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1220:1: parser_name : tmpName= ID {...}?;
	public final SQLParser.parser_name_return parser_name() throws RecognitionException {
		SQLParser.parser_name_return retval = new SQLParser.parser_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1220:17: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1220:19: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_parser_name22266); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "parser_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("parser name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "parser_name"


	public static class index_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "index_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1221:1: index_name : tmpName= ID {...}?;
	public final SQLParser.index_name_return index_name() throws RecognitionException {
		SQLParser.index_name_return retval = new SQLParser.index_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1221:17: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1221:19: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_index_name22284); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "index_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("index name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "index_name"


	public static class partition_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "partition_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1222:1: partition_name : tmpName= ID {...}?;
	public final SQLParser.partition_name_return partition_name() throws RecognitionException {
		SQLParser.partition_name_return retval = new SQLParser.partition_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1222:21: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1222:23: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_partition_name22302); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "partition_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("partition name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "partition_name"


	public static class partition_logical_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "partition_logical_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1223:1: partition_logical_name : tmpName= ID {...}?;
	public final SQLParser.partition_logical_name_return partition_logical_name() throws RecognitionException {
		SQLParser.partition_logical_name_return retval = new SQLParser.partition_logical_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1223:27: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1223:29: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_partition_logical_name22318); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "partition_logical_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("partition_logical name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "partition_logical_name"


	public static class constraint_symbol_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "constraint_symbol_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1224:1: constraint_symbol_name : tmpName= ID {...}?;
	public final SQLParser.constraint_symbol_name_return constraint_symbol_name() throws RecognitionException {
		SQLParser.constraint_symbol_name_return retval = new SQLParser.constraint_symbol_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1224:27: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1224:29: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_constraint_symbol_name22334); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "constraint_symbol_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("constraint_symbol name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "constraint_symbol_name"


	public static class foreign_key_symbol_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "foreign_key_symbol_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1225:1: foreign_key_symbol_name : tmpName= ID {...}?;
	public final SQLParser.foreign_key_symbol_name_return foreign_key_symbol_name() throws RecognitionException {
		SQLParser.foreign_key_symbol_name_return retval = new SQLParser.foreign_key_symbol_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1225:27: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1225:29: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_foreign_key_symbol_name22349); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "foreign_key_symbol_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("foreign_key_symbol name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "foreign_key_symbol_name"


	public static class collation_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "collation_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1226:1: collation_name : tmpName= ID {...}?;
	public final SQLParser.collation_name_return collation_name() throws RecognitionException {
		SQLParser.collation_name_return retval = new SQLParser.collation_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1226:21: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1226:23: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_collation_name22367); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "collation_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("collation name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "collation_name"


	public static class event_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "event_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1227:1: event_name : tmpName= ID {...}?;
	public final SQLParser.event_name_return event_name() throws RecognitionException {
		SQLParser.event_name_return retval = new SQLParser.event_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1227:17: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1227:19: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_event_name22385); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "event_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("event name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "event_name"


	public static class user_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "user_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1228:1: user_name : tmpName= ID {...}?;
	public final SQLParser.user_name_return user_name() throws RecognitionException {
		SQLParser.user_name_return retval = new SQLParser.user_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1228:15: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1228:17: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_user_name22402); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "user_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("user name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "user_name"


	public static class function_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "function_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1229:1: function_name : tmpName= ID {...}?;
	public final SQLParser.function_name_return function_name() throws RecognitionException {
		SQLParser.function_name_return retval = new SQLParser.function_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1229:19: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1229:21: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_function_name22419); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "function_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("function name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "function_name"


	public static class procedure_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "procedure_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1230:1: procedure_name : tmpName= ID {...}?;
	public final SQLParser.procedure_name_return procedure_name() throws RecognitionException {
		SQLParser.procedure_name_return retval = new SQLParser.procedure_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1230:21: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1230:23: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_procedure_name22437); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "procedure_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("procedure name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "procedure_name"


	public static class server_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "server_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1231:1: server_name : tmpName= ID {...}?;
	public final SQLParser.server_name_return server_name() throws RecognitionException {
		SQLParser.server_name_return retval = new SQLParser.server_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1231:17: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1231:19: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_server_name22454); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "server_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("server name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "server_name"


	public static class wrapper_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "wrapper_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1232:1: wrapper_name : tmpName= ID {...}?;
	public final SQLParser.wrapper_name_return wrapper_name() throws RecognitionException {
		SQLParser.wrapper_name_return retval = new SQLParser.wrapper_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;

		Object tmpName_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1232:19: (tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1232:21: tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			tmpName=(Token)match(input,ID,FOLLOW_ID_in_wrapper_name22472); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 64)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "wrapper_name", "($tmpName.text.length()) <= 64");
			}
			if ( state.backtracking==0 ) {System.out.println("wrapper name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "wrapper_name"


	public static class alias_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "alias"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1233:1: alias : ( AS_SYM )? tmpName= ID {...}?;
	public final SQLParser.alias_return alias() throws RecognitionException {
		SQLParser.alias_return retval = new SQLParser.alias_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token tmpName=null;
		Token AS_SYM59=null;

		Object tmpName_tree=null;
		Object AS_SYM59_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1233:13: ( ( AS_SYM )? tmpName= ID {...}?)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1233:15: ( AS_SYM )? tmpName= ID {...}?
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1233:15: ( AS_SYM )?
			int alt12=2;
			int LA12_0 = input.LA(1);
			if ( (LA12_0==AS_SYM) ) {
				alt12=1;
			}
			switch (alt12) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1233:17: AS_SYM
					{
					AS_SYM59=(Token)match(input,AS_SYM,FOLLOW_AS_SYM_in_alias22491); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					AS_SYM59_tree = (Object)adaptor.create(AS_SYM59);
					adaptor.addChild(root_0, AS_SYM59_tree);
					}

					}
					break;

			}

			tmpName=(Token)match(input,ID,FOLLOW_ID_in_alias22498); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			tmpName_tree = (Object)adaptor.create(tmpName);
			adaptor.addChild(root_0, tmpName_tree);
			}

			if ( !((((tmpName!=null?tmpName.getText():null).length()) <= 256)) ) {
				if (state.backtracking>0) {state.failed=true; return retval;}
				throw new FailedPredicateException(input, "alias", "($tmpName.text.length()) <= 256");
			}
			if ( state.backtracking==0 ) {System.out.println("alias name = " + ((tmpName!=null?tmpName.getText():null)));}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alias"


	public static class expression_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "expression"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1241:1: expression : exp_factor1 ( OR_SYM ^ exp_factor1 )* ;
	public final SQLParser.expression_return expression() throws RecognitionException {
		SQLParser.expression_return retval = new SQLParser.expression_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token OR_SYM61=null;
		ParserRuleReturnScope exp_factor160 =null;
		ParserRuleReturnScope exp_factor162 =null;

		Object OR_SYM61_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1241:11: ( exp_factor1 ( OR_SYM ^ exp_factor1 )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1241:13: exp_factor1 ( OR_SYM ^ exp_factor1 )*
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_exp_factor1_in_expression22515);
			exp_factor160=exp_factor1();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, exp_factor160.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1241:25: ( OR_SYM ^ exp_factor1 )*
			loop13:
			while (true) {
				int alt13=2;
				int LA13_0 = input.LA(1);
				if ( (LA13_0==OR_SYM) ) {
					int LA13_2 = input.LA(2);
					if ( (synpred268_SQL()) ) {
						alt13=1;
					}

				}

				switch (alt13) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1241:27: OR_SYM ^ exp_factor1
					{
					OR_SYM61=(Token)match(input,OR_SYM,FOLLOW_OR_SYM_in_expression22519); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					OR_SYM61_tree = (Object)adaptor.create(OR_SYM61);
					root_0 = (Object)adaptor.becomeRoot(OR_SYM61_tree, root_0);
					}

					pushFollow(FOLLOW_exp_factor1_in_expression22523);
					exp_factor162=exp_factor1();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, exp_factor162.getTree());

					}
					break;

				default :
					break loop13;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "expression"


	public static class exp_factor1_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "exp_factor1"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1242:1: exp_factor1 : exp_factor2 ( XOR ^ exp_factor2 )* ;
	public final SQLParser.exp_factor1_return exp_factor1() throws RecognitionException {
		SQLParser.exp_factor1_return retval = new SQLParser.exp_factor1_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token XOR64=null;
		ParserRuleReturnScope exp_factor263 =null;
		ParserRuleReturnScope exp_factor265 =null;

		Object XOR64_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1242:12: ( exp_factor2 ( XOR ^ exp_factor2 )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1242:15: exp_factor2 ( XOR ^ exp_factor2 )*
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_exp_factor2_in_exp_factor122534);
			exp_factor263=exp_factor2();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, exp_factor263.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1242:27: ( XOR ^ exp_factor2 )*
			loop14:
			while (true) {
				int alt14=2;
				int LA14_0 = input.LA(1);
				if ( (LA14_0==XOR) ) {
					int LA14_2 = input.LA(2);
					if ( (synpred269_SQL()) ) {
						alt14=1;
					}

				}

				switch (alt14) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1242:29: XOR ^ exp_factor2
					{
					XOR64=(Token)match(input,XOR,FOLLOW_XOR_in_exp_factor122538); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					XOR64_tree = (Object)adaptor.create(XOR64);
					root_0 = (Object)adaptor.becomeRoot(XOR64_tree, root_0);
					}

					pushFollow(FOLLOW_exp_factor2_in_exp_factor122542);
					exp_factor265=exp_factor2();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, exp_factor265.getTree());

					}
					break;

				default :
					break loop14;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exp_factor1"


	public static class exp_factor2_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "exp_factor2"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1243:1: exp_factor2 : exp_factor3 ( AND_SYM ^ exp_factor3 )* ;
	public final SQLParser.exp_factor2_return exp_factor2() throws RecognitionException {
		SQLParser.exp_factor2_return retval = new SQLParser.exp_factor2_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token AND_SYM67=null;
		ParserRuleReturnScope exp_factor366 =null;
		ParserRuleReturnScope exp_factor368 =null;

		Object AND_SYM67_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1243:12: ( exp_factor3 ( AND_SYM ^ exp_factor3 )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1243:15: exp_factor3 ( AND_SYM ^ exp_factor3 )*
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_exp_factor3_in_exp_factor222553);
			exp_factor366=exp_factor3();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, exp_factor366.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1243:27: ( AND_SYM ^ exp_factor3 )*
			loop15:
			while (true) {
				int alt15=2;
				int LA15_0 = input.LA(1);
				if ( (LA15_0==AND_SYM) ) {
					int LA15_2 = input.LA(2);
					if ( (synpred270_SQL()) ) {
						alt15=1;
					}

				}

				switch (alt15) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1243:29: AND_SYM ^ exp_factor3
					{
					AND_SYM67=(Token)match(input,AND_SYM,FOLLOW_AND_SYM_in_exp_factor222557); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					AND_SYM67_tree = (Object)adaptor.create(AND_SYM67);
					root_0 = (Object)adaptor.becomeRoot(AND_SYM67_tree, root_0);
					}

					pushFollow(FOLLOW_exp_factor3_in_exp_factor222561);
					exp_factor368=exp_factor3();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, exp_factor368.getTree());

					}
					break;

				default :
					break loop15;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exp_factor2"


	public static class exp_factor3_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "exp_factor3"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1244:1: exp_factor3 : ( NOT_SYM ^)? exp_factor4 ;
	public final SQLParser.exp_factor3_return exp_factor3() throws RecognitionException {
		SQLParser.exp_factor3_return retval = new SQLParser.exp_factor3_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token NOT_SYM69=null;
		ParserRuleReturnScope exp_factor470 =null;

		Object NOT_SYM69_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1244:12: ( ( NOT_SYM ^)? exp_factor4 )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1244:15: ( NOT_SYM ^)? exp_factor4
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1244:15: ( NOT_SYM ^)?
			int alt16=2;
			int LA16_0 = input.LA(1);
			if ( (LA16_0==NOT_SYM) ) {
				int LA16_1 = input.LA(2);
				if ( (synpred271_SQL()) ) {
					alt16=1;
				}
			}
			switch (alt16) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1244:16: NOT_SYM ^
					{
					NOT_SYM69=(Token)match(input,NOT_SYM,FOLLOW_NOT_SYM_in_exp_factor322573); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					NOT_SYM69_tree = (Object)adaptor.create(NOT_SYM69);
					root_0 = (Object)adaptor.becomeRoot(NOT_SYM69_tree, root_0);
					}

					}
					break;

			}

			pushFollow(FOLLOW_exp_factor4_in_exp_factor322579);
			exp_factor470=exp_factor4();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, exp_factor470.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exp_factor3"


	public static class exp_factor4_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "exp_factor4"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:1: exp_factor4 : bool_primary ( ( IS_SYM ( NOT_SYM )? ) ^ ( boolean_literal | NULL_SYM ) )? ;
	public final SQLParser.exp_factor4_return exp_factor4() throws RecognitionException {
		SQLParser.exp_factor4_return retval = new SQLParser.exp_factor4_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token IS_SYM72=null;
		Token NOT_SYM73=null;
		Token NULL_SYM75=null;
		ParserRuleReturnScope bool_primary71 =null;
		ParserRuleReturnScope boolean_literal74 =null;

		Object IS_SYM72_tree=null;
		Object NOT_SYM73_tree=null;
		Object NULL_SYM75_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:12: ( bool_primary ( ( IS_SYM ( NOT_SYM )? ) ^ ( boolean_literal | NULL_SYM ) )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:15: bool_primary ( ( IS_SYM ( NOT_SYM )? ) ^ ( boolean_literal | NULL_SYM ) )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_bool_primary_in_exp_factor422587);
			bool_primary71=bool_primary();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, bool_primary71.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:28: ( ( IS_SYM ( NOT_SYM )? ) ^ ( boolean_literal | NULL_SYM ) )?
			int alt19=2;
			int LA19_0 = input.LA(1);
			if ( (LA19_0==IS_SYM) ) {
				int LA19_1 = input.LA(2);
				if ( (synpred274_SQL()) ) {
					alt19=1;
				}
			}
			switch (alt19) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:30: ( IS_SYM ( NOT_SYM )? ) ^ ( boolean_literal | NULL_SYM )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:30: ( IS_SYM ( NOT_SYM )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:31: IS_SYM ( NOT_SYM )?
					{
					IS_SYM72=(Token)match(input,IS_SYM,FOLLOW_IS_SYM_in_exp_factor422592); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IS_SYM72_tree = (Object)adaptor.create(IS_SYM72);
					adaptor.addChild(root_0, IS_SYM72_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:38: ( NOT_SYM )?
					int alt17=2;
					int LA17_0 = input.LA(1);
					if ( (LA17_0==NOT_SYM) ) {
						alt17=1;
					}
					switch (alt17) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:39: NOT_SYM
							{
							NOT_SYM73=(Token)match(input,NOT_SYM,FOLLOW_NOT_SYM_in_exp_factor422595); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							NOT_SYM73_tree = (Object)adaptor.create(NOT_SYM73);
							adaptor.addChild(root_0, NOT_SYM73_tree);
							}

							}
							break;

					}

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:51: ( boolean_literal | NULL_SYM )
					int alt18=2;
					int LA18_0 = input.LA(1);
					if ( (LA18_0==FALSE_SYM||LA18_0==TRUE_SYM) ) {
						alt18=1;
					}
					else if ( (LA18_0==NULL_SYM) ) {
						alt18=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 18, 0, input);
						throw nvae;
					}

					switch (alt18) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:52: boolean_literal
							{
							pushFollow(FOLLOW_boolean_literal_in_exp_factor422602);
							boolean_literal74=boolean_literal();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, boolean_literal74.getTree());

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:68: NULL_SYM
							{
							NULL_SYM75=(Token)match(input,NULL_SYM,FOLLOW_NULL_SYM_in_exp_factor422604); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							NULL_SYM75_tree = (Object)adaptor.create(NULL_SYM75);
							adaptor.addChild(root_0, NULL_SYM75_tree);
							}

							}
							break;

					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exp_factor4"


	public static class bool_primary_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "bool_primary"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1246:1: bool_primary : ( ( predicate relational_op predicate ) -> ^( relational_op predicate predicate ) | ( EXISTS subquery ) -> ^( EXISTS subquery ) | ( NOT_SYM EXISTS subquery ) -> ^( NOT_SYM EXISTS subquery ) | predicate -> predicate );
	public final SQLParser.bool_primary_return bool_primary() throws RecognitionException {
		SQLParser.bool_primary_return retval = new SQLParser.bool_primary_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token EXISTS79=null;
		Token NOT_SYM81=null;
		Token EXISTS82=null;
		ParserRuleReturnScope predicate76 =null;
		ParserRuleReturnScope relational_op77 =null;
		ParserRuleReturnScope predicate78 =null;
		ParserRuleReturnScope subquery80 =null;
		ParserRuleReturnScope subquery83 =null;
		ParserRuleReturnScope predicate84 =null;

		Object EXISTS79_tree=null;
		Object NOT_SYM81_tree=null;
		Object EXISTS82_tree=null;
		RewriteRuleTokenStream stream_EXISTS=new RewriteRuleTokenStream(adaptor,"token EXISTS");
		RewriteRuleTokenStream stream_NOT_SYM=new RewriteRuleTokenStream(adaptor,"token NOT_SYM");
		RewriteRuleSubtreeStream stream_predicate=new RewriteRuleSubtreeStream(adaptor,"rule predicate");
		RewriteRuleSubtreeStream stream_relational_op=new RewriteRuleSubtreeStream(adaptor,"rule relational_op");
		RewriteRuleSubtreeStream stream_subquery=new RewriteRuleSubtreeStream(adaptor,"rule subquery");

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1246:13: ( ( predicate relational_op predicate ) -> ^( relational_op predicate predicate ) | ( EXISTS subquery ) -> ^( EXISTS subquery ) | ( NOT_SYM EXISTS subquery ) -> ^( NOT_SYM EXISTS subquery ) | predicate -> predicate )
			int alt20=4;
			switch ( input.LA(1) ) {
			case MINUS:
			case PLUS:
				{
				int LA20_1 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case TEXT_STRING:
				{
				int LA20_2 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case BINARY:
			case NEGATION:
				{
				int LA20_3 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case INTEGER_NUM:
			case REAL_NUMBER:
				{
				int LA20_4 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case HEX_DIGIT:
				{
				int LA20_5 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case FALSE_SYM:
			case TRUE_SYM:
				{
				int LA20_6 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case BIT_NUM:
				{
				int LA20_7 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case NULL_SYM:
				{
				int LA20_8 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case ID:
				{
				int LA20_9 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case ABS:
			case ACOS:
			case ASIN:
			case ATAN:
			case ATAN2:
			case CEIL:
			case CEILING:
			case CONV:
			case COS:
			case COT:
			case CRC32:
			case DEGREES:
			case EXP:
			case FLOOR:
			case LN:
			case LOG:
			case LOG10:
			case LOG2:
			case MOD:
			case PI:
			case POW:
			case POWER:
			case RADIANS:
			case RAND:
			case ROUND:
			case SIGN:
			case SIN:
			case SQRT:
			case TAN:
			case TRUNCATE:
				{
				int LA20_10 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case LOAD_FILE:
			case MAKE_SET:
				{
				int LA20_11 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case ADDDATE:
			case ADDTIME:
			case CONVERT_TZ:
			case CURDATE:
			case CURTIME:
			case DATEDIFF:
			case DATE_ADD:
			case DATE_FORMAT:
			case DATE_SUB:
			case DATE_SYM:
			case DAYNAME:
			case DAYOFMONTH:
			case DAYOFWEEK:
			case DAYOFYEAR:
			case EXTRACT:
			case FROM_DAYS:
			case FROM_UNIXTIME:
			case GET_FORMAT:
			case HOUR:
			case LAST_DAY:
			case MAKEDATE:
			case MAKETIME:
			case MICROSECOND:
			case MINUTE:
			case MONTH:
			case MONTHNAME:
			case NOW:
			case PERIOD_ADD:
			case PERIOD_DIFF:
			case QUARTER:
			case SECOND:
			case SEC_TO_TIME:
			case STR_TO_DATE:
			case SUBTIME:
			case SYSDATE:
			case TIMEDIFF:
			case TIMESTAMP:
			case TIMESTAMPADD:
			case TIMESTAMPDIFF:
			case TIME_FORMAT:
			case TIME_SYM:
			case TIME_TO_SEC:
			case TO_DAYS:
			case TO_SECONDS:
			case UNIX_TIMESTAMP:
			case UTC_DATE:
			case UTC_TIME:
			case UTC_TIMESTAMP:
			case WEEK:
			case WEEKDAY:
			case WEEKOFYEAR:
			case YEAR:
			case YEARWEEK:
				{
				int LA20_12 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case ASCII_SYM:
			case BIN:
			case BIT_LENGTH:
			case CHAR:
			case CHAR_LENGTH:
			case CONCAT:
			case CONCAT_WS:
			case ELT:
			case EXPORT_SET:
			case FIELD:
			case FIND_IN_SET:
			case FORMAT:
			case FROM_BASE64:
			case HEX:
			case INSERT:
			case INSTR:
			case LEFT:
			case LENGTH:
			case LOCATE:
			case LOWER:
			case LPAD:
			case LTRIM:
			case MID:
			case OCT:
			case ORD:
			case QUOTE:
			case REPEAT:
			case REPLACE:
			case REVERSE:
			case RIGHT:
			case RPAD:
			case RTRIM:
			case SOUNDEX:
			case SPACE:
			case STRCMP:
			case SUBSTRING:
			case SUBSTRING_INDEX:
			case TO_BASE64:
			case TRIM:
			case UNHEX:
			case UPPER:
			case WEIGHT_STRING:
				{
				int LA20_13 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case AES_DECRYPT:
			case AES_ENCRYPT:
			case BENCHMARK:
			case CHARSET:
			case COERCIBILITY:
			case COLLATION:
			case CONNECTION_ID:
			case CURRENT_USER:
			case DATABASE:
			case DECODE:
			case DEFAULT:
			case DES_DECRYPT:
			case DES_ENCRYPT:
			case ENCODE:
			case ENCRYPT:
			case FOUND_ROWS:
			case GET_LOCK:
			case IF:
			case IFNULL:
			case INET_ATON:
			case INET_NTOA:
			case IS_FREE_LOCK:
			case IS_USED_LOCK:
			case LAST_INSERT_ID:
			case MASTER_POS_WAIT:
			case MD5:
			case NAME_CONST:
			case OLD_PASSWORD:
			case PASSWORD:
			case RELEASE_LOCK:
			case SCHEMA:
			case SESSION_USER:
			case SLEEP:
			case SYSTEM_USER:
			case USER:
			case UUID:
			case VALUES:
			case VERSION_SYM:
				{
				int LA20_14 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case CAST_SYM:
				{
				int LA20_15 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case CONVERT_SYM:
				{
				int LA20_16 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case AVG:
			case BIT_AND:
			case BIT_OR:
			case BIT_XOR:
			case COUNT:
			case GROUP_CONCAT:
			case MAX_SYM:
			case MIN_SYM:
			case STD:
			case STDDEV:
			case STDDEV_POP:
			case STDDEV_SAMP:
			case SUM:
			case VARIANCE:
			case VAR_POP:
			case VAR_SAMP:
				{
				int LA20_17 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case USER_VAR:
				{
				int LA20_18 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case LPAREN:
				{
				int LA20_19 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case ROW_SYM:
				{
				int LA20_20 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case EXISTS:
				{
				int LA20_21 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (synpred276_SQL()) ) {
					alt20=2;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case MATCH:
				{
				int LA20_22 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case CASE_SYM:
				{
				int LA20_23 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case INTERVAL_SYM:
				{
				int LA20_24 = input.LA(2);
				if ( (synpred275_SQL()) ) {
					alt20=1;
				}
				else if ( (true) ) {
					alt20=4;
				}

				}
				break;
			case NOT_SYM:
				{
				alt20=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 20, 0, input);
				throw nvae;
			}
			switch (alt20) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1247:5: ( predicate relational_op predicate )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1247:5: ( predicate relational_op predicate )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1247:7: predicate relational_op predicate
					{
					pushFollow(FOLLOW_predicate_in_bool_primary22621);
					predicate76=predicate();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_predicate.add(predicate76.getTree());
					pushFollow(FOLLOW_relational_op_in_bool_primary22623);
					relational_op77=relational_op();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_relational_op.add(relational_op77.getTree());
					pushFollow(FOLLOW_predicate_in_bool_primary22625);
					predicate78=predicate();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_predicate.add(predicate78.getTree());
					}

					// AST REWRITE
					// elements: predicate, predicate, relational_op
					// token labels: 
					// rule labels: retval
					// token list labels: 
					// rule list labels: 
					// wildcard labels: 
					if ( state.backtracking==0 ) {
					retval.tree = root_0;
					RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.getTree():null);

					root_0 = (Object)adaptor.nil();
					// 1247:43: -> ^( relational_op predicate predicate )
					{
						// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1247:46: ^( relational_op predicate predicate )
						{
						Object root_1 = (Object)adaptor.nil();
						root_1 = (Object)adaptor.becomeRoot(stream_relational_op.nextNode(), root_1);
						adaptor.addChild(root_1, stream_predicate.nextTree());
						adaptor.addChild(root_1, stream_predicate.nextTree());
						adaptor.addChild(root_0, root_1);
						}

					}


					retval.tree = root_0;
					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1250:5: ( EXISTS subquery )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1250:5: ( EXISTS subquery )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1250:7: EXISTS subquery
					{
					EXISTS79=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_bool_primary22651); if (state.failed) return retval; 
					if ( state.backtracking==0 ) stream_EXISTS.add(EXISTS79);

					pushFollow(FOLLOW_subquery_in_bool_primary22653);
					subquery80=subquery();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_subquery.add(subquery80.getTree());
					}

					// AST REWRITE
					// elements: EXISTS, subquery
					// token labels: 
					// rule labels: retval
					// token list labels: 
					// rule list labels: 
					// wildcard labels: 
					if ( state.backtracking==0 ) {
					retval.tree = root_0;
					RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.getTree():null);

					root_0 = (Object)adaptor.nil();
					// 1250:25: -> ^( EXISTS subquery )
					{
						// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1250:28: ^( EXISTS subquery )
						{
						Object root_1 = (Object)adaptor.nil();
						root_1 = (Object)adaptor.becomeRoot(stream_EXISTS.nextNode(), root_1);
						adaptor.addChild(root_1, stream_subquery.nextTree());
						adaptor.addChild(root_0, root_1);
						}

					}


					retval.tree = root_0;
					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1251:5: ( NOT_SYM EXISTS subquery )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1251:5: ( NOT_SYM EXISTS subquery )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1251:7: NOT_SYM EXISTS subquery
					{
					NOT_SYM81=(Token)match(input,NOT_SYM,FOLLOW_NOT_SYM_in_bool_primary22672); if (state.failed) return retval; 
					if ( state.backtracking==0 ) stream_NOT_SYM.add(NOT_SYM81);

					EXISTS82=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_bool_primary22674); if (state.failed) return retval; 
					if ( state.backtracking==0 ) stream_EXISTS.add(EXISTS82);

					pushFollow(FOLLOW_subquery_in_bool_primary22676);
					subquery83=subquery();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_subquery.add(subquery83.getTree());
					}

					// AST REWRITE
					// elements: EXISTS, NOT_SYM, subquery
					// token labels: 
					// rule labels: retval
					// token list labels: 
					// rule list labels: 
					// wildcard labels: 
					if ( state.backtracking==0 ) {
					retval.tree = root_0;
					RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.getTree():null);

					root_0 = (Object)adaptor.nil();
					// 1251:33: -> ^( NOT_SYM EXISTS subquery )
					{
						// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1251:36: ^( NOT_SYM EXISTS subquery )
						{
						Object root_1 = (Object)adaptor.nil();
						root_1 = (Object)adaptor.becomeRoot(stream_NOT_SYM.nextNode(), root_1);
						adaptor.addChild(root_1, stream_EXISTS.nextNode());
						adaptor.addChild(root_1, stream_subquery.nextTree());
						adaptor.addChild(root_0, root_1);
						}

					}


					retval.tree = root_0;
					}

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1252:5: predicate
					{
					pushFollow(FOLLOW_predicate_in_bool_primary22695);
					predicate84=predicate();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_predicate.add(predicate84.getTree());
					// AST REWRITE
					// elements: predicate
					// token labels: 
					// rule labels: retval
					// token list labels: 
					// rule list labels: 
					// wildcard labels: 
					if ( state.backtracking==0 ) {
					retval.tree = root_0;
					RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.getTree():null);

					root_0 = (Object)adaptor.nil();
					// 1252:15: -> predicate
					{
						adaptor.addChild(root_0, stream_predicate.nextTree());
					}


					retval.tree = root_0;
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "bool_primary"


	public static class predicate_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "predicate"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1254:1: predicate : ( ( predicate_in ) | ( predicate_like ) | ( bit_expr ( ( NOT_SYM )? BETWEEN ) ^ bit_expr AND_SYM ^ predicate ) | ( bit_expr ( ( NOT_SYM )? REGEXP ) ^ bit_expr ) | ( bit_expr ) );
	public final SQLParser.predicate_return predicate() throws RecognitionException {
		SQLParser.predicate_return retval = new SQLParser.predicate_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token NOT_SYM88=null;
		Token BETWEEN89=null;
		Token AND_SYM91=null;
		Token NOT_SYM94=null;
		Token REGEXP95=null;
		ParserRuleReturnScope predicate_in85 =null;
		ParserRuleReturnScope predicate_like86 =null;
		ParserRuleReturnScope bit_expr87 =null;
		ParserRuleReturnScope bit_expr90 =null;
		ParserRuleReturnScope predicate92 =null;
		ParserRuleReturnScope bit_expr93 =null;
		ParserRuleReturnScope bit_expr96 =null;
		ParserRuleReturnScope bit_expr97 =null;

		Object NOT_SYM88_tree=null;
		Object BETWEEN89_tree=null;
		Object AND_SYM91_tree=null;
		Object NOT_SYM94_tree=null;
		Object REGEXP95_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1254:10: ( ( predicate_in ) | ( predicate_like ) | ( bit_expr ( ( NOT_SYM )? BETWEEN ) ^ bit_expr AND_SYM ^ predicate ) | ( bit_expr ( ( NOT_SYM )? REGEXP ) ^ bit_expr ) | ( bit_expr ) )
			int alt23=5;
			switch ( input.LA(1) ) {
			case MINUS:
			case PLUS:
				{
				int LA23_1 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case TEXT_STRING:
				{
				int LA23_2 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case BINARY:
			case NEGATION:
				{
				int LA23_3 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case INTEGER_NUM:
			case REAL_NUMBER:
				{
				int LA23_4 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case HEX_DIGIT:
				{
				int LA23_5 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case FALSE_SYM:
			case TRUE_SYM:
				{
				int LA23_6 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case BIT_NUM:
				{
				int LA23_7 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case NULL_SYM:
				{
				int LA23_8 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case ID:
				{
				int LA23_9 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case ABS:
			case ACOS:
			case ASIN:
			case ATAN:
			case ATAN2:
			case CEIL:
			case CEILING:
			case CONV:
			case COS:
			case COT:
			case CRC32:
			case DEGREES:
			case EXP:
			case FLOOR:
			case LN:
			case LOG:
			case LOG10:
			case LOG2:
			case MOD:
			case PI:
			case POW:
			case POWER:
			case RADIANS:
			case RAND:
			case ROUND:
			case SIGN:
			case SIN:
			case SQRT:
			case TAN:
			case TRUNCATE:
				{
				int LA23_10 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case LOAD_FILE:
			case MAKE_SET:
				{
				int LA23_11 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case ADDDATE:
			case ADDTIME:
			case CONVERT_TZ:
			case CURDATE:
			case CURTIME:
			case DATEDIFF:
			case DATE_ADD:
			case DATE_FORMAT:
			case DATE_SUB:
			case DATE_SYM:
			case DAYNAME:
			case DAYOFMONTH:
			case DAYOFWEEK:
			case DAYOFYEAR:
			case EXTRACT:
			case FROM_DAYS:
			case FROM_UNIXTIME:
			case GET_FORMAT:
			case HOUR:
			case LAST_DAY:
			case MAKEDATE:
			case MAKETIME:
			case MICROSECOND:
			case MINUTE:
			case MONTH:
			case MONTHNAME:
			case NOW:
			case PERIOD_ADD:
			case PERIOD_DIFF:
			case QUARTER:
			case SECOND:
			case SEC_TO_TIME:
			case STR_TO_DATE:
			case SUBTIME:
			case SYSDATE:
			case TIMEDIFF:
			case TIMESTAMP:
			case TIMESTAMPADD:
			case TIMESTAMPDIFF:
			case TIME_FORMAT:
			case TIME_SYM:
			case TIME_TO_SEC:
			case TO_DAYS:
			case TO_SECONDS:
			case UNIX_TIMESTAMP:
			case UTC_DATE:
			case UTC_TIME:
			case UTC_TIMESTAMP:
			case WEEK:
			case WEEKDAY:
			case WEEKOFYEAR:
			case YEAR:
			case YEARWEEK:
				{
				int LA23_12 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case ASCII_SYM:
			case BIN:
			case BIT_LENGTH:
			case CHAR:
			case CHAR_LENGTH:
			case CONCAT:
			case CONCAT_WS:
			case ELT:
			case EXPORT_SET:
			case FIELD:
			case FIND_IN_SET:
			case FORMAT:
			case FROM_BASE64:
			case HEX:
			case INSERT:
			case INSTR:
			case LEFT:
			case LENGTH:
			case LOCATE:
			case LOWER:
			case LPAD:
			case LTRIM:
			case MID:
			case OCT:
			case ORD:
			case QUOTE:
			case REPEAT:
			case REPLACE:
			case REVERSE:
			case RIGHT:
			case RPAD:
			case RTRIM:
			case SOUNDEX:
			case SPACE:
			case STRCMP:
			case SUBSTRING:
			case SUBSTRING_INDEX:
			case TO_BASE64:
			case TRIM:
			case UNHEX:
			case UPPER:
			case WEIGHT_STRING:
				{
				int LA23_13 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case AES_DECRYPT:
			case AES_ENCRYPT:
			case BENCHMARK:
			case CHARSET:
			case COERCIBILITY:
			case COLLATION:
			case CONNECTION_ID:
			case CURRENT_USER:
			case DATABASE:
			case DECODE:
			case DEFAULT:
			case DES_DECRYPT:
			case DES_ENCRYPT:
			case ENCODE:
			case ENCRYPT:
			case FOUND_ROWS:
			case GET_LOCK:
			case IF:
			case IFNULL:
			case INET_ATON:
			case INET_NTOA:
			case IS_FREE_LOCK:
			case IS_USED_LOCK:
			case LAST_INSERT_ID:
			case MASTER_POS_WAIT:
			case MD5:
			case NAME_CONST:
			case OLD_PASSWORD:
			case PASSWORD:
			case RELEASE_LOCK:
			case SCHEMA:
			case SESSION_USER:
			case SLEEP:
			case SYSTEM_USER:
			case USER:
			case UUID:
			case VALUES:
			case VERSION_SYM:
				{
				int LA23_14 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case CAST_SYM:
				{
				int LA23_15 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case CONVERT_SYM:
				{
				int LA23_16 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case AVG:
			case BIT_AND:
			case BIT_OR:
			case BIT_XOR:
			case COUNT:
			case GROUP_CONCAT:
			case MAX_SYM:
			case MIN_SYM:
			case STD:
			case STDDEV:
			case STDDEV_POP:
			case STDDEV_SAMP:
			case SUM:
			case VARIANCE:
			case VAR_POP:
			case VAR_SAMP:
				{
				int LA23_17 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case USER_VAR:
				{
				int LA23_18 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case LPAREN:
				{
				int LA23_19 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case ROW_SYM:
				{
				int LA23_20 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case EXISTS:
				{
				int LA23_21 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case MATCH:
				{
				int LA23_22 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case CASE_SYM:
				{
				int LA23_23 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			case INTERVAL_SYM:
				{
				int LA23_24 = input.LA(2);
				if ( (synpred278_SQL()) ) {
					alt23=1;
				}
				else if ( (synpred279_SQL()) ) {
					alt23=2;
				}
				else if ( (synpred281_SQL()) ) {
					alt23=3;
				}
				else if ( (synpred283_SQL()) ) {
					alt23=4;
				}
				else if ( (true) ) {
					alt23=5;
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 23, 0, input);
				throw nvae;
			}
			switch (alt23) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1255:5: ( predicate_in )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1255:5: ( predicate_in )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1255:6: predicate_in
					{
					pushFollow(FOLLOW_predicate_in_in_predicate22711);
					predicate_in85=predicate_in();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, predicate_in85.getTree());

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1256:5: ( predicate_like )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1256:5: ( predicate_like )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1256:6: predicate_like
					{
					pushFollow(FOLLOW_predicate_like_in_predicate22720);
					predicate_like86=predicate_like();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, predicate_like86.getTree());

					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1257:5: ( bit_expr ( ( NOT_SYM )? BETWEEN ) ^ bit_expr AND_SYM ^ predicate )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1257:5: ( bit_expr ( ( NOT_SYM )? BETWEEN ) ^ bit_expr AND_SYM ^ predicate )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1257:7: bit_expr ( ( NOT_SYM )? BETWEEN ) ^ bit_expr AND_SYM ^ predicate
					{
					pushFollow(FOLLOW_bit_expr_in_predicate22729);
					bit_expr87=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr87.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1257:16: ( ( NOT_SYM )? BETWEEN )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1257:17: ( NOT_SYM )? BETWEEN
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1257:17: ( NOT_SYM )?
					int alt21=2;
					int LA21_0 = input.LA(1);
					if ( (LA21_0==NOT_SYM) ) {
						alt21=1;
					}
					switch (alt21) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1257:18: NOT_SYM
							{
							NOT_SYM88=(Token)match(input,NOT_SYM,FOLLOW_NOT_SYM_in_predicate22733); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							NOT_SYM88_tree = (Object)adaptor.create(NOT_SYM88);
							adaptor.addChild(root_0, NOT_SYM88_tree);
							}

							}
							break;

					}

					BETWEEN89=(Token)match(input,BETWEEN,FOLLOW_BETWEEN_in_predicate22737); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					BETWEEN89_tree = (Object)adaptor.create(BETWEEN89);
					adaptor.addChild(root_0, BETWEEN89_tree);
					}

					}

					pushFollow(FOLLOW_bit_expr_in_predicate22742);
					bit_expr90=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr90.getTree());

					AND_SYM91=(Token)match(input,AND_SYM,FOLLOW_AND_SYM_in_predicate22744); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					AND_SYM91_tree = (Object)adaptor.create(AND_SYM91);
					root_0 = (Object)adaptor.becomeRoot(AND_SYM91_tree, root_0);
					}

					pushFollow(FOLLOW_predicate_in_predicate22748);
					predicate92=predicate();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, predicate92.getTree());

					}

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1258:5: ( bit_expr ( ( NOT_SYM )? REGEXP ) ^ bit_expr )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1258:5: ( bit_expr ( ( NOT_SYM )? REGEXP ) ^ bit_expr )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1258:7: bit_expr ( ( NOT_SYM )? REGEXP ) ^ bit_expr
					{
					pushFollow(FOLLOW_bit_expr_in_predicate22759);
					bit_expr93=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr93.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1258:16: ( ( NOT_SYM )? REGEXP )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1258:17: ( NOT_SYM )? REGEXP
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1258:17: ( NOT_SYM )?
					int alt22=2;
					int LA22_0 = input.LA(1);
					if ( (LA22_0==NOT_SYM) ) {
						alt22=1;
					}
					switch (alt22) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1258:18: NOT_SYM
							{
							NOT_SYM94=(Token)match(input,NOT_SYM,FOLLOW_NOT_SYM_in_predicate22763); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							NOT_SYM94_tree = (Object)adaptor.create(NOT_SYM94);
							adaptor.addChild(root_0, NOT_SYM94_tree);
							}

							}
							break;

					}

					REGEXP95=(Token)match(input,REGEXP,FOLLOW_REGEXP_in_predicate22767); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					REGEXP95_tree = (Object)adaptor.create(REGEXP95);
					adaptor.addChild(root_0, REGEXP95_tree);
					}

					}

					pushFollow(FOLLOW_bit_expr_in_predicate22772);
					bit_expr96=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr96.getTree());

					}

					}
					break;
				case 5 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1259:5: ( bit_expr )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1259:5: ( bit_expr )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1259:7: bit_expr
					{
					pushFollow(FOLLOW_bit_expr_in_predicate22783);
					bit_expr97=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr97.getTree());

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "predicate"


	public static class predicate_in_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "predicate_in"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1261:1: predicate_in : ( ( bit_expr IN_SYM ( subquery ) ) -> ^( IN_SYM bit_expr subquery ) | ( bit_expr NOT_IN_SYM ( subquery ) ) -> ^( NOT_IN_SYM bit_expr subquery ) | ( bit_expr IN_SYM ( expression_list ) ) -> ^( IN_SYM bit_expr expression_list ) | ( bit_expr NOT_IN_SYM ( expression_list ) ) -> ^( NOT_IN_SYM bit_expr expression_list ) );
	public final SQLParser.predicate_in_return predicate_in() throws RecognitionException {
		SQLParser.predicate_in_return retval = new SQLParser.predicate_in_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token IN_SYM99=null;
		Token NOT_IN_SYM102=null;
		Token IN_SYM105=null;
		Token NOT_IN_SYM108=null;
		ParserRuleReturnScope bit_expr98 =null;
		ParserRuleReturnScope subquery100 =null;
		ParserRuleReturnScope bit_expr101 =null;
		ParserRuleReturnScope subquery103 =null;
		ParserRuleReturnScope bit_expr104 =null;
		ParserRuleReturnScope expression_list106 =null;
		ParserRuleReturnScope bit_expr107 =null;
		ParserRuleReturnScope expression_list109 =null;

		Object IN_SYM99_tree=null;
		Object NOT_IN_SYM102_tree=null;
		Object IN_SYM105_tree=null;
		Object NOT_IN_SYM108_tree=null;
		RewriteRuleTokenStream stream_NOT_IN_SYM=new RewriteRuleTokenStream(adaptor,"token NOT_IN_SYM");
		RewriteRuleTokenStream stream_IN_SYM=new RewriteRuleTokenStream(adaptor,"token IN_SYM");
		RewriteRuleSubtreeStream stream_expression_list=new RewriteRuleSubtreeStream(adaptor,"rule expression_list");
		RewriteRuleSubtreeStream stream_bit_expr=new RewriteRuleSubtreeStream(adaptor,"rule bit_expr");
		RewriteRuleSubtreeStream stream_subquery=new RewriteRuleSubtreeStream(adaptor,"rule subquery");

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1261:13: ( ( bit_expr IN_SYM ( subquery ) ) -> ^( IN_SYM bit_expr subquery ) | ( bit_expr NOT_IN_SYM ( subquery ) ) -> ^( NOT_IN_SYM bit_expr subquery ) | ( bit_expr IN_SYM ( expression_list ) ) -> ^( IN_SYM bit_expr expression_list ) | ( bit_expr NOT_IN_SYM ( expression_list ) ) -> ^( NOT_IN_SYM bit_expr expression_list ) )
			int alt24=4;
			switch ( input.LA(1) ) {
			case MINUS:
			case PLUS:
				{
				int LA24_1 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case TEXT_STRING:
				{
				int LA24_2 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case BINARY:
			case NEGATION:
				{
				int LA24_3 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case INTEGER_NUM:
			case REAL_NUMBER:
				{
				int LA24_4 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case HEX_DIGIT:
				{
				int LA24_5 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case FALSE_SYM:
			case TRUE_SYM:
				{
				int LA24_6 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case BIT_NUM:
				{
				int LA24_7 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case NULL_SYM:
				{
				int LA24_8 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case ID:
				{
				int LA24_9 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case ABS:
			case ACOS:
			case ASIN:
			case ATAN:
			case ATAN2:
			case CEIL:
			case CEILING:
			case CONV:
			case COS:
			case COT:
			case CRC32:
			case DEGREES:
			case EXP:
			case FLOOR:
			case LN:
			case LOG:
			case LOG10:
			case LOG2:
			case MOD:
			case PI:
			case POW:
			case POWER:
			case RADIANS:
			case RAND:
			case ROUND:
			case SIGN:
			case SIN:
			case SQRT:
			case TAN:
			case TRUNCATE:
				{
				int LA24_10 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case LOAD_FILE:
			case MAKE_SET:
				{
				int LA24_11 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case ADDDATE:
			case ADDTIME:
			case CONVERT_TZ:
			case CURDATE:
			case CURTIME:
			case DATEDIFF:
			case DATE_ADD:
			case DATE_FORMAT:
			case DATE_SUB:
			case DATE_SYM:
			case DAYNAME:
			case DAYOFMONTH:
			case DAYOFWEEK:
			case DAYOFYEAR:
			case EXTRACT:
			case FROM_DAYS:
			case FROM_UNIXTIME:
			case GET_FORMAT:
			case HOUR:
			case LAST_DAY:
			case MAKEDATE:
			case MAKETIME:
			case MICROSECOND:
			case MINUTE:
			case MONTH:
			case MONTHNAME:
			case NOW:
			case PERIOD_ADD:
			case PERIOD_DIFF:
			case QUARTER:
			case SECOND:
			case SEC_TO_TIME:
			case STR_TO_DATE:
			case SUBTIME:
			case SYSDATE:
			case TIMEDIFF:
			case TIMESTAMP:
			case TIMESTAMPADD:
			case TIMESTAMPDIFF:
			case TIME_FORMAT:
			case TIME_SYM:
			case TIME_TO_SEC:
			case TO_DAYS:
			case TO_SECONDS:
			case UNIX_TIMESTAMP:
			case UTC_DATE:
			case UTC_TIME:
			case UTC_TIMESTAMP:
			case WEEK:
			case WEEKDAY:
			case WEEKOFYEAR:
			case YEAR:
			case YEARWEEK:
				{
				int LA24_12 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case ASCII_SYM:
			case BIN:
			case BIT_LENGTH:
			case CHAR:
			case CHAR_LENGTH:
			case CONCAT:
			case CONCAT_WS:
			case ELT:
			case EXPORT_SET:
			case FIELD:
			case FIND_IN_SET:
			case FORMAT:
			case FROM_BASE64:
			case HEX:
			case INSERT:
			case INSTR:
			case LEFT:
			case LENGTH:
			case LOCATE:
			case LOWER:
			case LPAD:
			case LTRIM:
			case MID:
			case OCT:
			case ORD:
			case QUOTE:
			case REPEAT:
			case REPLACE:
			case REVERSE:
			case RIGHT:
			case RPAD:
			case RTRIM:
			case SOUNDEX:
			case SPACE:
			case STRCMP:
			case SUBSTRING:
			case SUBSTRING_INDEX:
			case TO_BASE64:
			case TRIM:
			case UNHEX:
			case UPPER:
			case WEIGHT_STRING:
				{
				int LA24_13 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case AES_DECRYPT:
			case AES_ENCRYPT:
			case BENCHMARK:
			case CHARSET:
			case COERCIBILITY:
			case COLLATION:
			case CONNECTION_ID:
			case CURRENT_USER:
			case DATABASE:
			case DECODE:
			case DEFAULT:
			case DES_DECRYPT:
			case DES_ENCRYPT:
			case ENCODE:
			case ENCRYPT:
			case FOUND_ROWS:
			case GET_LOCK:
			case IF:
			case IFNULL:
			case INET_ATON:
			case INET_NTOA:
			case IS_FREE_LOCK:
			case IS_USED_LOCK:
			case LAST_INSERT_ID:
			case MASTER_POS_WAIT:
			case MD5:
			case NAME_CONST:
			case OLD_PASSWORD:
			case PASSWORD:
			case RELEASE_LOCK:
			case SCHEMA:
			case SESSION_USER:
			case SLEEP:
			case SYSTEM_USER:
			case USER:
			case UUID:
			case VALUES:
			case VERSION_SYM:
				{
				int LA24_14 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case CAST_SYM:
				{
				int LA24_15 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case CONVERT_SYM:
				{
				int LA24_16 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case AVG:
			case BIT_AND:
			case BIT_OR:
			case BIT_XOR:
			case COUNT:
			case GROUP_CONCAT:
			case MAX_SYM:
			case MIN_SYM:
			case STD:
			case STDDEV:
			case STDDEV_POP:
			case STDDEV_SAMP:
			case SUM:
			case VARIANCE:
			case VAR_POP:
			case VAR_SAMP:
				{
				int LA24_17 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case USER_VAR:
				{
				int LA24_18 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case LPAREN:
				{
				int LA24_19 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case ROW_SYM:
				{
				int LA24_20 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case EXISTS:
				{
				int LA24_21 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case MATCH:
				{
				int LA24_22 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case CASE_SYM:
				{
				int LA24_23 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			case INTERVAL_SYM:
				{
				int LA24_24 = input.LA(2);
				if ( (synpred284_SQL()) ) {
					alt24=1;
				}
				else if ( (synpred285_SQL()) ) {
					alt24=2;
				}
				else if ( (synpred286_SQL()) ) {
					alt24=3;
				}
				else if ( (true) ) {
					alt24=4;
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 24, 0, input);
				throw nvae;
			}
			switch (alt24) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1262:4: ( bit_expr IN_SYM ( subquery ) )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1262:4: ( bit_expr IN_SYM ( subquery ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1262:6: bit_expr IN_SYM ( subquery )
					{
					pushFollow(FOLLOW_bit_expr_in_predicate_in22799);
					bit_expr98=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_bit_expr.add(bit_expr98.getTree());
					IN_SYM99=(Token)match(input,IN_SYM,FOLLOW_IN_SYM_in_predicate_in22801); if (state.failed) return retval; 
					if ( state.backtracking==0 ) stream_IN_SYM.add(IN_SYM99);

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1262:23: ( subquery )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1262:24: subquery
					{
					pushFollow(FOLLOW_subquery_in_predicate_in22805);
					subquery100=subquery();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_subquery.add(subquery100.getTree());
					}

					}

					// AST REWRITE
					// elements: bit_expr, IN_SYM, subquery
					// token labels: 
					// rule labels: retval
					// token list labels: 
					// rule list labels: 
					// wildcard labels: 
					if ( state.backtracking==0 ) {
					retval.tree = root_0;
					RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.getTree():null);

					root_0 = (Object)adaptor.nil();
					// 1262:36: -> ^( IN_SYM bit_expr subquery )
					{
						// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1262:39: ^( IN_SYM bit_expr subquery )
						{
						Object root_1 = (Object)adaptor.nil();
						root_1 = (Object)adaptor.becomeRoot(stream_IN_SYM.nextNode(), root_1);
						adaptor.addChild(root_1, stream_bit_expr.nextTree());
						adaptor.addChild(root_1, stream_subquery.nextTree());
						adaptor.addChild(root_0, root_1);
						}

					}


					retval.tree = root_0;
					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1263:6: ( bit_expr NOT_IN_SYM ( subquery ) )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1263:6: ( bit_expr NOT_IN_SYM ( subquery ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1263:8: bit_expr NOT_IN_SYM ( subquery )
					{
					pushFollow(FOLLOW_bit_expr_in_predicate_in22827);
					bit_expr101=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_bit_expr.add(bit_expr101.getTree());
					NOT_IN_SYM102=(Token)match(input,NOT_IN_SYM,FOLLOW_NOT_IN_SYM_in_predicate_in22829); if (state.failed) return retval; 
					if ( state.backtracking==0 ) stream_NOT_IN_SYM.add(NOT_IN_SYM102);

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1263:29: ( subquery )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1263:30: subquery
					{
					pushFollow(FOLLOW_subquery_in_predicate_in22833);
					subquery103=subquery();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_subquery.add(subquery103.getTree());
					}

					}

					// AST REWRITE
					// elements: bit_expr, NOT_IN_SYM, subquery
					// token labels: 
					// rule labels: retval
					// token list labels: 
					// rule list labels: 
					// wildcard labels: 
					if ( state.backtracking==0 ) {
					retval.tree = root_0;
					RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.getTree():null);

					root_0 = (Object)adaptor.nil();
					// 1263:42: -> ^( NOT_IN_SYM bit_expr subquery )
					{
						// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1263:45: ^( NOT_IN_SYM bit_expr subquery )
						{
						Object root_1 = (Object)adaptor.nil();
						root_1 = (Object)adaptor.becomeRoot(stream_NOT_IN_SYM.nextNode(), root_1);
						adaptor.addChild(root_1, stream_bit_expr.nextTree());
						adaptor.addChild(root_1, stream_subquery.nextTree());
						adaptor.addChild(root_0, root_1);
						}

					}


					retval.tree = root_0;
					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1264:6: ( bit_expr IN_SYM ( expression_list ) )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1264:6: ( bit_expr IN_SYM ( expression_list ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1264:8: bit_expr IN_SYM ( expression_list )
					{
					pushFollow(FOLLOW_bit_expr_in_predicate_in22855);
					bit_expr104=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_bit_expr.add(bit_expr104.getTree());
					IN_SYM105=(Token)match(input,IN_SYM,FOLLOW_IN_SYM_in_predicate_in22857); if (state.failed) return retval; 
					if ( state.backtracking==0 ) stream_IN_SYM.add(IN_SYM105);

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1264:25: ( expression_list )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1264:26: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_predicate_in22861);
					expression_list106=expression_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_expression_list.add(expression_list106.getTree());
					}

					}

					// AST REWRITE
					// elements: expression_list, IN_SYM, bit_expr
					// token labels: 
					// rule labels: retval
					// token list labels: 
					// rule list labels: 
					// wildcard labels: 
					if ( state.backtracking==0 ) {
					retval.tree = root_0;
					RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.getTree():null);

					root_0 = (Object)adaptor.nil();
					// 1264:45: -> ^( IN_SYM bit_expr expression_list )
					{
						// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1264:48: ^( IN_SYM bit_expr expression_list )
						{
						Object root_1 = (Object)adaptor.nil();
						root_1 = (Object)adaptor.becomeRoot(stream_IN_SYM.nextNode(), root_1);
						adaptor.addChild(root_1, stream_bit_expr.nextTree());
						adaptor.addChild(root_1, stream_expression_list.nextTree());
						adaptor.addChild(root_0, root_1);
						}

					}


					retval.tree = root_0;
					}

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1265:6: ( bit_expr NOT_IN_SYM ( expression_list ) )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1265:6: ( bit_expr NOT_IN_SYM ( expression_list ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1265:8: bit_expr NOT_IN_SYM ( expression_list )
					{
					pushFollow(FOLLOW_bit_expr_in_predicate_in22884);
					bit_expr107=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_bit_expr.add(bit_expr107.getTree());
					NOT_IN_SYM108=(Token)match(input,NOT_IN_SYM,FOLLOW_NOT_IN_SYM_in_predicate_in22886); if (state.failed) return retval; 
					if ( state.backtracking==0 ) stream_NOT_IN_SYM.add(NOT_IN_SYM108);

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1265:29: ( expression_list )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1265:30: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_predicate_in22890);
					expression_list109=expression_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_expression_list.add(expression_list109.getTree());
					}

					}

					// AST REWRITE
					// elements: expression_list, NOT_IN_SYM, bit_expr
					// token labels: 
					// rule labels: retval
					// token list labels: 
					// rule list labels: 
					// wildcard labels: 
					if ( state.backtracking==0 ) {
					retval.tree = root_0;
					RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.getTree():null);

					root_0 = (Object)adaptor.nil();
					// 1265:49: -> ^( NOT_IN_SYM bit_expr expression_list )
					{
						// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1265:52: ^( NOT_IN_SYM bit_expr expression_list )
						{
						Object root_1 = (Object)adaptor.nil();
						root_1 = (Object)adaptor.becomeRoot(stream_NOT_IN_SYM.nextNode(), root_1);
						adaptor.addChild(root_1, stream_bit_expr.nextTree());
						adaptor.addChild(root_1, stream_expression_list.nextTree());
						adaptor.addChild(root_0, root_1);
						}

					}


					retval.tree = root_0;
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "predicate_in"


	public static class predicate_like_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "predicate_like"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1267:1: predicate_like : ( ( bit_expr ( SOUNDS_SYM LIKE_SYM ) bit_expr ) -> ^( SOUNDS_SYM LIKE_SYM bit_expr bit_expr ) | ( bit_expr LIKE_SYM simple_expr ) -> ^( LIKE_SYM bit_expr simple_expr ) | ( bit_expr NOT_SYM LIKE_SYM simple_expr ) -> ^( NOT_SYM LIKE_SYM bit_expr simple_expr ) );
	public final SQLParser.predicate_like_return predicate_like() throws RecognitionException {
		SQLParser.predicate_like_return retval = new SQLParser.predicate_like_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token SOUNDS_SYM111=null;
		Token LIKE_SYM112=null;
		Token LIKE_SYM115=null;
		Token NOT_SYM118=null;
		Token LIKE_SYM119=null;
		ParserRuleReturnScope bit_expr110 =null;
		ParserRuleReturnScope bit_expr113 =null;
		ParserRuleReturnScope bit_expr114 =null;
		ParserRuleReturnScope simple_expr116 =null;
		ParserRuleReturnScope bit_expr117 =null;
		ParserRuleReturnScope simple_expr120 =null;

		Object SOUNDS_SYM111_tree=null;
		Object LIKE_SYM112_tree=null;
		Object LIKE_SYM115_tree=null;
		Object NOT_SYM118_tree=null;
		Object LIKE_SYM119_tree=null;
		RewriteRuleTokenStream stream_NOT_SYM=new RewriteRuleTokenStream(adaptor,"token NOT_SYM");
		RewriteRuleTokenStream stream_SOUNDS_SYM=new RewriteRuleTokenStream(adaptor,"token SOUNDS_SYM");
		RewriteRuleTokenStream stream_LIKE_SYM=new RewriteRuleTokenStream(adaptor,"token LIKE_SYM");
		RewriteRuleSubtreeStream stream_bit_expr=new RewriteRuleSubtreeStream(adaptor,"rule bit_expr");
		RewriteRuleSubtreeStream stream_simple_expr=new RewriteRuleSubtreeStream(adaptor,"rule simple_expr");

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1267:15: ( ( bit_expr ( SOUNDS_SYM LIKE_SYM ) bit_expr ) -> ^( SOUNDS_SYM LIKE_SYM bit_expr bit_expr ) | ( bit_expr LIKE_SYM simple_expr ) -> ^( LIKE_SYM bit_expr simple_expr ) | ( bit_expr NOT_SYM LIKE_SYM simple_expr ) -> ^( NOT_SYM LIKE_SYM bit_expr simple_expr ) )
			int alt25=3;
			switch ( input.LA(1) ) {
			case MINUS:
			case PLUS:
				{
				int LA25_1 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case TEXT_STRING:
				{
				int LA25_2 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case BINARY:
			case NEGATION:
				{
				int LA25_3 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case INTEGER_NUM:
			case REAL_NUMBER:
				{
				int LA25_4 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case HEX_DIGIT:
				{
				int LA25_5 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case FALSE_SYM:
			case TRUE_SYM:
				{
				int LA25_6 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case BIT_NUM:
				{
				int LA25_7 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case NULL_SYM:
				{
				int LA25_8 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case ID:
				{
				int LA25_9 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case ABS:
			case ACOS:
			case ASIN:
			case ATAN:
			case ATAN2:
			case CEIL:
			case CEILING:
			case CONV:
			case COS:
			case COT:
			case CRC32:
			case DEGREES:
			case EXP:
			case FLOOR:
			case LN:
			case LOG:
			case LOG10:
			case LOG2:
			case MOD:
			case PI:
			case POW:
			case POWER:
			case RADIANS:
			case RAND:
			case ROUND:
			case SIGN:
			case SIN:
			case SQRT:
			case TAN:
			case TRUNCATE:
				{
				int LA25_10 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case LOAD_FILE:
			case MAKE_SET:
				{
				int LA25_11 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case ADDDATE:
			case ADDTIME:
			case CONVERT_TZ:
			case CURDATE:
			case CURTIME:
			case DATEDIFF:
			case DATE_ADD:
			case DATE_FORMAT:
			case DATE_SUB:
			case DATE_SYM:
			case DAYNAME:
			case DAYOFMONTH:
			case DAYOFWEEK:
			case DAYOFYEAR:
			case EXTRACT:
			case FROM_DAYS:
			case FROM_UNIXTIME:
			case GET_FORMAT:
			case HOUR:
			case LAST_DAY:
			case MAKEDATE:
			case MAKETIME:
			case MICROSECOND:
			case MINUTE:
			case MONTH:
			case MONTHNAME:
			case NOW:
			case PERIOD_ADD:
			case PERIOD_DIFF:
			case QUARTER:
			case SECOND:
			case SEC_TO_TIME:
			case STR_TO_DATE:
			case SUBTIME:
			case SYSDATE:
			case TIMEDIFF:
			case TIMESTAMP:
			case TIMESTAMPADD:
			case TIMESTAMPDIFF:
			case TIME_FORMAT:
			case TIME_SYM:
			case TIME_TO_SEC:
			case TO_DAYS:
			case TO_SECONDS:
			case UNIX_TIMESTAMP:
			case UTC_DATE:
			case UTC_TIME:
			case UTC_TIMESTAMP:
			case WEEK:
			case WEEKDAY:
			case WEEKOFYEAR:
			case YEAR:
			case YEARWEEK:
				{
				int LA25_12 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case ASCII_SYM:
			case BIN:
			case BIT_LENGTH:
			case CHAR:
			case CHAR_LENGTH:
			case CONCAT:
			case CONCAT_WS:
			case ELT:
			case EXPORT_SET:
			case FIELD:
			case FIND_IN_SET:
			case FORMAT:
			case FROM_BASE64:
			case HEX:
			case INSERT:
			case INSTR:
			case LEFT:
			case LENGTH:
			case LOCATE:
			case LOWER:
			case LPAD:
			case LTRIM:
			case MID:
			case OCT:
			case ORD:
			case QUOTE:
			case REPEAT:
			case REPLACE:
			case REVERSE:
			case RIGHT:
			case RPAD:
			case RTRIM:
			case SOUNDEX:
			case SPACE:
			case STRCMP:
			case SUBSTRING:
			case SUBSTRING_INDEX:
			case TO_BASE64:
			case TRIM:
			case UNHEX:
			case UPPER:
			case WEIGHT_STRING:
				{
				int LA25_13 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case AES_DECRYPT:
			case AES_ENCRYPT:
			case BENCHMARK:
			case CHARSET:
			case COERCIBILITY:
			case COLLATION:
			case CONNECTION_ID:
			case CURRENT_USER:
			case DATABASE:
			case DECODE:
			case DEFAULT:
			case DES_DECRYPT:
			case DES_ENCRYPT:
			case ENCODE:
			case ENCRYPT:
			case FOUND_ROWS:
			case GET_LOCK:
			case IF:
			case IFNULL:
			case INET_ATON:
			case INET_NTOA:
			case IS_FREE_LOCK:
			case IS_USED_LOCK:
			case LAST_INSERT_ID:
			case MASTER_POS_WAIT:
			case MD5:
			case NAME_CONST:
			case OLD_PASSWORD:
			case PASSWORD:
			case RELEASE_LOCK:
			case SCHEMA:
			case SESSION_USER:
			case SLEEP:
			case SYSTEM_USER:
			case USER:
			case UUID:
			case VALUES:
			case VERSION_SYM:
				{
				int LA25_14 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case CAST_SYM:
				{
				int LA25_15 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case CONVERT_SYM:
				{
				int LA25_16 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case AVG:
			case BIT_AND:
			case BIT_OR:
			case BIT_XOR:
			case COUNT:
			case GROUP_CONCAT:
			case MAX_SYM:
			case MIN_SYM:
			case STD:
			case STDDEV:
			case STDDEV_POP:
			case STDDEV_SAMP:
			case SUM:
			case VARIANCE:
			case VAR_POP:
			case VAR_SAMP:
				{
				int LA25_17 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case USER_VAR:
				{
				int LA25_18 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case LPAREN:
				{
				int LA25_19 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case ROW_SYM:
				{
				int LA25_20 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case EXISTS:
				{
				int LA25_21 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case MATCH:
				{
				int LA25_22 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case CASE_SYM:
				{
				int LA25_23 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			case INTERVAL_SYM:
				{
				int LA25_24 = input.LA(2);
				if ( (synpred287_SQL()) ) {
					alt25=1;
				}
				else if ( (synpred288_SQL()) ) {
					alt25=2;
				}
				else if ( (true) ) {
					alt25=3;
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 25, 0, input);
				throw nvae;
			}
			switch (alt25) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1268:5: ( bit_expr ( SOUNDS_SYM LIKE_SYM ) bit_expr )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1268:5: ( bit_expr ( SOUNDS_SYM LIKE_SYM ) bit_expr )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1268:7: bit_expr ( SOUNDS_SYM LIKE_SYM ) bit_expr
					{
					pushFollow(FOLLOW_bit_expr_in_predicate_like22917);
					bit_expr110=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_bit_expr.add(bit_expr110.getTree());
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1268:16: ( SOUNDS_SYM LIKE_SYM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1268:17: SOUNDS_SYM LIKE_SYM
					{
					SOUNDS_SYM111=(Token)match(input,SOUNDS_SYM,FOLLOW_SOUNDS_SYM_in_predicate_like22920); if (state.failed) return retval; 
					if ( state.backtracking==0 ) stream_SOUNDS_SYM.add(SOUNDS_SYM111);

					LIKE_SYM112=(Token)match(input,LIKE_SYM,FOLLOW_LIKE_SYM_in_predicate_like22922); if (state.failed) return retval; 
					if ( state.backtracking==0 ) stream_LIKE_SYM.add(LIKE_SYM112);

					}

					pushFollow(FOLLOW_bit_expr_in_predicate_like22926);
					bit_expr113=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_bit_expr.add(bit_expr113.getTree());
					}

					// AST REWRITE
					// elements: bit_expr, LIKE_SYM, SOUNDS_SYM, bit_expr
					// token labels: 
					// rule labels: retval
					// token list labels: 
					// rule list labels: 
					// wildcard labels: 
					if ( state.backtracking==0 ) {
					retval.tree = root_0;
					RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.getTree():null);

					root_0 = (Object)adaptor.nil();
					// 1268:50: -> ^( SOUNDS_SYM LIKE_SYM bit_expr bit_expr )
					{
						// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1268:53: ^( SOUNDS_SYM LIKE_SYM bit_expr bit_expr )
						{
						Object root_1 = (Object)adaptor.nil();
						root_1 = (Object)adaptor.becomeRoot(stream_SOUNDS_SYM.nextNode(), root_1);
						adaptor.addChild(root_1, stream_LIKE_SYM.nextNode());
						adaptor.addChild(root_1, stream_bit_expr.nextTree());
						adaptor.addChild(root_1, stream_bit_expr.nextTree());
						adaptor.addChild(root_0, root_1);
						}

					}


					retval.tree = root_0;
					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1269:5: ( bit_expr LIKE_SYM simple_expr )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1269:5: ( bit_expr LIKE_SYM simple_expr )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1269:7: bit_expr LIKE_SYM simple_expr
					{
					pushFollow(FOLLOW_bit_expr_in_predicate_like22948);
					bit_expr114=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_bit_expr.add(bit_expr114.getTree());
					LIKE_SYM115=(Token)match(input,LIKE_SYM,FOLLOW_LIKE_SYM_in_predicate_like22950); if (state.failed) return retval; 
					if ( state.backtracking==0 ) stream_LIKE_SYM.add(LIKE_SYM115);

					pushFollow(FOLLOW_simple_expr_in_predicate_like22952);
					simple_expr116=simple_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_simple_expr.add(simple_expr116.getTree());
					}

					// AST REWRITE
					// elements: bit_expr, LIKE_SYM, simple_expr
					// token labels: 
					// rule labels: retval
					// token list labels: 
					// rule list labels: 
					// wildcard labels: 
					if ( state.backtracking==0 ) {
					retval.tree = root_0;
					RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.getTree():null);

					root_0 = (Object)adaptor.nil();
					// 1269:39: -> ^( LIKE_SYM bit_expr simple_expr )
					{
						// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1269:42: ^( LIKE_SYM bit_expr simple_expr )
						{
						Object root_1 = (Object)adaptor.nil();
						root_1 = (Object)adaptor.becomeRoot(stream_LIKE_SYM.nextNode(), root_1);
						adaptor.addChild(root_1, stream_bit_expr.nextTree());
						adaptor.addChild(root_1, stream_simple_expr.nextTree());
						adaptor.addChild(root_0, root_1);
						}

					}


					retval.tree = root_0;
					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1270:5: ( bit_expr NOT_SYM LIKE_SYM simple_expr )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1270:5: ( bit_expr NOT_SYM LIKE_SYM simple_expr )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1270:7: bit_expr NOT_SYM LIKE_SYM simple_expr
					{
					pushFollow(FOLLOW_bit_expr_in_predicate_like22972);
					bit_expr117=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_bit_expr.add(bit_expr117.getTree());
					NOT_SYM118=(Token)match(input,NOT_SYM,FOLLOW_NOT_SYM_in_predicate_like22974); if (state.failed) return retval; 
					if ( state.backtracking==0 ) stream_NOT_SYM.add(NOT_SYM118);

					LIKE_SYM119=(Token)match(input,LIKE_SYM,FOLLOW_LIKE_SYM_in_predicate_like22976); if (state.failed) return retval; 
					if ( state.backtracking==0 ) stream_LIKE_SYM.add(LIKE_SYM119);

					pushFollow(FOLLOW_simple_expr_in_predicate_like22978);
					simple_expr120=simple_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) stream_simple_expr.add(simple_expr120.getTree());
					}

					// AST REWRITE
					// elements: simple_expr, bit_expr, NOT_SYM, LIKE_SYM
					// token labels: 
					// rule labels: retval
					// token list labels: 
					// rule list labels: 
					// wildcard labels: 
					if ( state.backtracking==0 ) {
					retval.tree = root_0;
					RewriteRuleSubtreeStream stream_retval=new RewriteRuleSubtreeStream(adaptor,"rule retval",retval!=null?retval.getTree():null);

					root_0 = (Object)adaptor.nil();
					// 1270:46: -> ^( NOT_SYM LIKE_SYM bit_expr simple_expr )
					{
						// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1270:49: ^( NOT_SYM LIKE_SYM bit_expr simple_expr )
						{
						Object root_1 = (Object)adaptor.nil();
						root_1 = (Object)adaptor.becomeRoot(stream_NOT_SYM.nextNode(), root_1);
						adaptor.addChild(root_1, stream_LIKE_SYM.nextNode());
						adaptor.addChild(root_1, stream_bit_expr.nextTree());
						adaptor.addChild(root_1, stream_simple_expr.nextTree());
						adaptor.addChild(root_0, root_1);
						}

					}


					retval.tree = root_0;
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "predicate_like"


	public static class bit_expr_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "bit_expr"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1273:1: bit_expr : factor1 ( VERTBAR ^ factor1 )? ;
	public final SQLParser.bit_expr_return bit_expr() throws RecognitionException {
		SQLParser.bit_expr_return retval = new SQLParser.bit_expr_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token VERTBAR122=null;
		ParserRuleReturnScope factor1121 =null;
		ParserRuleReturnScope factor1123 =null;

		Object VERTBAR122_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1273:9: ( factor1 ( VERTBAR ^ factor1 )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1274:3: factor1 ( VERTBAR ^ factor1 )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_factor1_in_bit_expr23004);
			factor1121=factor1();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, factor1121.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1274:11: ( VERTBAR ^ factor1 )?
			int alt26=2;
			int LA26_0 = input.LA(1);
			if ( (LA26_0==VERTBAR) ) {
				int LA26_1 = input.LA(2);
				if ( (synpred289_SQL()) ) {
					alt26=1;
				}
			}
			switch (alt26) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1274:13: VERTBAR ^ factor1
					{
					VERTBAR122=(Token)match(input,VERTBAR,FOLLOW_VERTBAR_in_bit_expr23008); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					VERTBAR122_tree = (Object)adaptor.create(VERTBAR122);
					root_0 = (Object)adaptor.becomeRoot(VERTBAR122_tree, root_0);
					}

					pushFollow(FOLLOW_factor1_in_bit_expr23012);
					factor1123=factor1();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, factor1123.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "bit_expr"


	public static class factor1_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "factor1"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1275:1: factor1 : factor2 ( BITAND ^ factor2 )? ;
	public final SQLParser.factor1_return factor1() throws RecognitionException {
		SQLParser.factor1_return retval = new SQLParser.factor1_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token BITAND125=null;
		ParserRuleReturnScope factor2124 =null;
		ParserRuleReturnScope factor2126 =null;

		Object BITAND125_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1275:8: ( factor2 ( BITAND ^ factor2 )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1276:3: factor2 ( BITAND ^ factor2 )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_factor2_in_factor123024);
			factor2124=factor2();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, factor2124.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1276:11: ( BITAND ^ factor2 )?
			int alt27=2;
			int LA27_0 = input.LA(1);
			if ( (LA27_0==BITAND) ) {
				int LA27_1 = input.LA(2);
				if ( (synpred290_SQL()) ) {
					alt27=1;
				}
			}
			switch (alt27) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1276:13: BITAND ^ factor2
					{
					BITAND125=(Token)match(input,BITAND,FOLLOW_BITAND_in_factor123028); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					BITAND125_tree = (Object)adaptor.create(BITAND125);
					root_0 = (Object)adaptor.becomeRoot(BITAND125_tree, root_0);
					}

					pushFollow(FOLLOW_factor2_in_factor123032);
					factor2126=factor2();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, factor2126.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "factor1"


	public static class factor2_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "factor2"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1277:1: factor2 : factor3 ( ( SHIFT_LEFT | SHIFT_RIGHT ) ^ factor3 )? ;
	public final SQLParser.factor2_return factor2() throws RecognitionException {
		SQLParser.factor2_return retval = new SQLParser.factor2_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set128=null;
		ParserRuleReturnScope factor3127 =null;
		ParserRuleReturnScope factor3129 =null;

		Object set128_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1277:8: ( factor3 ( ( SHIFT_LEFT | SHIFT_RIGHT ) ^ factor3 )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1278:3: factor3 ( ( SHIFT_LEFT | SHIFT_RIGHT ) ^ factor3 )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_factor3_in_factor223044);
			factor3127=factor3();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, factor3127.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1278:11: ( ( SHIFT_LEFT | SHIFT_RIGHT ) ^ factor3 )?
			int alt28=2;
			int LA28_0 = input.LA(1);
			if ( ((LA28_0 >= SHIFT_LEFT && LA28_0 <= SHIFT_RIGHT)) ) {
				int LA28_1 = input.LA(2);
				if ( (synpred292_SQL()) ) {
					alt28=1;
				}
			}
			switch (alt28) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1278:13: ( SHIFT_LEFT | SHIFT_RIGHT ) ^ factor3
					{
					set128=input.LT(1);
					set128=input.LT(1);
					if ( (input.LA(1) >= SHIFT_LEFT && input.LA(1) <= SHIFT_RIGHT) ) {
						input.consume();
						if ( state.backtracking==0 ) root_0 = (Object)adaptor.becomeRoot((Object)adaptor.create(set128), root_0);
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					pushFollow(FOLLOW_factor3_in_factor223056);
					factor3129=factor3();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, factor3129.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "factor2"


	public static class factor3_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "factor3"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1279:1: factor3 : factor4 ( ( PLUS | MINUS ) ^ factor4 )? ;
	public final SQLParser.factor3_return factor3() throws RecognitionException {
		SQLParser.factor3_return retval = new SQLParser.factor3_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set131=null;
		ParserRuleReturnScope factor4130 =null;
		ParserRuleReturnScope factor4132 =null;

		Object set131_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1279:8: ( factor4 ( ( PLUS | MINUS ) ^ factor4 )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1280:3: factor4 ( ( PLUS | MINUS ) ^ factor4 )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_factor4_in_factor323068);
			factor4130=factor4();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, factor4130.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1280:11: ( ( PLUS | MINUS ) ^ factor4 )?
			int alt29=2;
			int LA29_0 = input.LA(1);
			if ( (LA29_0==MINUS||LA29_0==PLUS) ) {
				int LA29_1 = input.LA(2);
				if ( (synpred294_SQL()) ) {
					alt29=1;
				}
			}
			switch (alt29) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1280:13: ( PLUS | MINUS ) ^ factor4
					{
					set131=input.LT(1);
					set131=input.LT(1);
					if ( input.LA(1)==MINUS||input.LA(1)==PLUS ) {
						input.consume();
						if ( state.backtracking==0 ) root_0 = (Object)adaptor.becomeRoot((Object)adaptor.create(set131), root_0);
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					pushFollow(FOLLOW_factor4_in_factor323080);
					factor4132=factor4();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, factor4132.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "factor3"


	public static class factor4_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "factor4"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1281:1: factor4 : factor5 ( ( ASTERISK | DIVIDE | MOD_SYM | POWER_OP ) ^ factor5 )? ;
	public final SQLParser.factor4_return factor4() throws RecognitionException {
		SQLParser.factor4_return retval = new SQLParser.factor4_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set134=null;
		ParserRuleReturnScope factor5133 =null;
		ParserRuleReturnScope factor5135 =null;

		Object set134_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1281:8: ( factor5 ( ( ASTERISK | DIVIDE | MOD_SYM | POWER_OP ) ^ factor5 )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1282:3: factor5 ( ( ASTERISK | DIVIDE | MOD_SYM | POWER_OP ) ^ factor5 )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_factor5_in_factor423092);
			factor5133=factor5();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, factor5133.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1282:11: ( ( ASTERISK | DIVIDE | MOD_SYM | POWER_OP ) ^ factor5 )?
			int alt30=2;
			int LA30_0 = input.LA(1);
			if ( (LA30_0==ASTERISK||LA30_0==DIVIDE||LA30_0==MOD_SYM||LA30_0==POWER_OP) ) {
				int LA30_1 = input.LA(2);
				if ( (synpred298_SQL()) ) {
					alt30=1;
				}
			}
			switch (alt30) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1282:13: ( ASTERISK | DIVIDE | MOD_SYM | POWER_OP ) ^ factor5
					{
					set134=input.LT(1);
					set134=input.LT(1);
					if ( input.LA(1)==ASTERISK||input.LA(1)==DIVIDE||input.LA(1)==MOD_SYM||input.LA(1)==POWER_OP ) {
						input.consume();
						if ( state.backtracking==0 ) root_0 = (Object)adaptor.becomeRoot((Object)adaptor.create(set134), root_0);
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					pushFollow(FOLLOW_factor5_in_factor423108);
					factor5135=factor5();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, factor5135.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "factor4"


	public static class factor5_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "factor5"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1283:1: factor5 : factor6 ( ( PLUS | MINUS ) ^ interval_expr )? ;
	public final SQLParser.factor5_return factor5() throws RecognitionException {
		SQLParser.factor5_return retval = new SQLParser.factor5_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set137=null;
		ParserRuleReturnScope factor6136 =null;
		ParserRuleReturnScope interval_expr138 =null;

		Object set137_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1283:8: ( factor6 ( ( PLUS | MINUS ) ^ interval_expr )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1284:3: factor6 ( ( PLUS | MINUS ) ^ interval_expr )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_factor6_in_factor523120);
			factor6136=factor6();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, factor6136.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1284:11: ( ( PLUS | MINUS ) ^ interval_expr )?
			int alt31=2;
			int LA31_0 = input.LA(1);
			if ( (LA31_0==MINUS||LA31_0==PLUS) ) {
				int LA31_1 = input.LA(2);
				if ( (synpred300_SQL()) ) {
					alt31=1;
				}
			}
			switch (alt31) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1284:13: ( PLUS | MINUS ) ^ interval_expr
					{
					set137=input.LT(1);
					set137=input.LT(1);
					if ( input.LA(1)==MINUS||input.LA(1)==PLUS ) {
						input.consume();
						if ( state.backtracking==0 ) root_0 = (Object)adaptor.becomeRoot((Object)adaptor.create(set137), root_0);
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					pushFollow(FOLLOW_interval_expr_in_factor523132);
					interval_expr138=interval_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interval_expr138.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "factor5"


	public static class factor6_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "factor6"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1285:1: factor6 : ( ( PLUS | MINUS | NEGATION | BINARY ) ^ simple_expr | simple_expr );
	public final SQLParser.factor6_return factor6() throws RecognitionException {
		SQLParser.factor6_return retval = new SQLParser.factor6_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set139=null;
		ParserRuleReturnScope simple_expr140 =null;
		ParserRuleReturnScope simple_expr141 =null;

		Object set139_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1285:8: ( ( PLUS | MINUS | NEGATION | BINARY ) ^ simple_expr | simple_expr )
			int alt32=2;
			switch ( input.LA(1) ) {
			case MINUS:
			case PLUS:
				{
				int LA32_1 = input.LA(2);
				if ( (LA32_1==ABS||LA32_1==ACOS||(LA32_1 >= ADDDATE && LA32_1 <= ADDTIME)||(LA32_1 >= AES_DECRYPT && LA32_1 <= AES_ENCRYPT)||LA32_1==ASCII_SYM||LA32_1==ASIN||(LA32_1 >= ATAN && LA32_1 <= ATAN2)||LA32_1==AVG||LA32_1==BENCHMARK||LA32_1==BIN||(LA32_1 >= BIT_AND && LA32_1 <= BIT_OR)||LA32_1==BIT_XOR||(LA32_1 >= CASE_SYM && LA32_1 <= CEILING)||LA32_1==CHAR||(LA32_1 >= CHARSET && LA32_1 <= CHAR_LENGTH)||LA32_1==COERCIBILITY||LA32_1==COLLATION||(LA32_1 >= CONCAT && LA32_1 <= CONCAT_WS)||LA32_1==CONNECTION_ID||(LA32_1 >= CONV && LA32_1 <= CONVERT_TZ)||(LA32_1 >= COS && LA32_1 <= COUNT)||LA32_1==CRC32||LA32_1==CURDATE||LA32_1==CURRENT_USER||LA32_1==CURTIME||LA32_1==DATABASE||LA32_1==DATEDIFF||(LA32_1 >= DATE_ADD && LA32_1 <= DAYOFYEAR)||(LA32_1 >= DECODE && LA32_1 <= DEFAULT)||LA32_1==DEGREES||(LA32_1 >= DES_DECRYPT && LA32_1 <= DES_ENCRYPT)||LA32_1==ELT||(LA32_1 >= ENCODE && LA32_1 <= ENCRYPT)||LA32_1==EXISTS||LA32_1==EXP||LA32_1==EXPORT_SET||LA32_1==EXTRACT||LA32_1==FALSE_SYM||LA32_1==FIELD||LA32_1==FIND_IN_SET||LA32_1==FLOOR||LA32_1==FORMAT||LA32_1==FOUND_ROWS||(LA32_1 >= FROM_BASE64 && LA32_1 <= FROM_UNIXTIME)||(LA32_1 >= GET_FORMAT && LA32_1 <= GET_LOCK)||LA32_1==GROUP_CONCAT||(LA32_1 >= HEX && LA32_1 <= HEX_DIGIT)||LA32_1==HOUR||LA32_1==ID||(LA32_1 >= IF && LA32_1 <= IFNULL)||(LA32_1 >= INET_ATON && LA32_1 <= INET_NTOA)||LA32_1==INSERT||LA32_1==INSTR||LA32_1==INTERVAL_SYM||LA32_1==IS_FREE_LOCK||LA32_1==IS_USED_LOCK||(LA32_1 >= LAST_DAY && LA32_1 <= LAST_INSERT_ID)||(LA32_1 >= LEFT && LA32_1 <= LENGTH)||LA32_1==LN||LA32_1==LOAD_FILE||LA32_1==LOCATE||(LA32_1 >= LOG && LA32_1 <= LOG2)||LA32_1==LOWER||(LA32_1 >= LPAD && LA32_1 <= LPAREN)||LA32_1==LTRIM||(LA32_1 >= MAKEDATE && LA32_1 <= MAKE_SET)||LA32_1==MASTER_POS_WAIT||LA32_1==MATCH||LA32_1==MAX_SYM||LA32_1==MD5||(LA32_1 >= MICROSECOND && LA32_1 <= MID)||(LA32_1 >= MINUS && LA32_1 <= MINUTE)||LA32_1==MIN_SYM||LA32_1==MOD||(LA32_1 >= MONTH && LA32_1 <= MONTHNAME)||LA32_1==NAME_CONST||LA32_1==NOW||LA32_1==NULL_SYM||LA32_1==OCT||LA32_1==OLD_PASSWORD||LA32_1==ORD||(LA32_1 >= PASSWORD && LA32_1 <= PERIOD_DIFF)||LA32_1==PI||LA32_1==PLUS||(LA32_1 >= POW && LA32_1 <= POWER)||LA32_1==QUARTER||LA32_1==QUOTE||(LA32_1 >= RADIANS && LA32_1 <= RAND)||LA32_1==RELEASE_LOCK||LA32_1==REPEAT||LA32_1==REPLACE||LA32_1==REVERSE||LA32_1==RIGHT||LA32_1==ROUND||(LA32_1 >= ROW_SYM && LA32_1 <= RPAD)||LA32_1==RTRIM||(LA32_1 >= SCHEMA && LA32_1 <= SECOND)||LA32_1==SEC_TO_TIME||LA32_1==SESSION_USER||LA32_1==SIGN||LA32_1==SIN||LA32_1==SLEEP||LA32_1==SOUNDEX||LA32_1==SPACE||LA32_1==SQRT||(LA32_1 >= STD && LA32_1 <= STDDEV_SAMP)||LA32_1==STRCMP||LA32_1==STR_TO_DATE||(LA32_1 >= SUBSTRING && LA32_1 <= SUM)||(LA32_1 >= SYSDATE && LA32_1 <= SYSTEM_USER)||LA32_1==TAN||LA32_1==TEXT_STRING||(LA32_1 >= TIMEDIFF && LA32_1 <= TIME_TO_SEC)||(LA32_1 >= TO_BASE64 && LA32_1 <= TO_SECONDS)||(LA32_1 >= TRIM && LA32_1 <= TRUNCATE)||LA32_1==UNHEX||LA32_1==UNIX_TIMESTAMP||LA32_1==UPPER||(LA32_1 >= USER && LA32_1 <= USER_VAR)||(LA32_1 >= UTC_DATE && LA32_1 <= UTC_TIMESTAMP)||LA32_1==UUID||LA32_1==VALUES||LA32_1==VARIANCE||(LA32_1 >= VAR_POP && LA32_1 <= VERSION_SYM)||(LA32_1 >= WEEK && LA32_1 <= WEIGHT_STRING)||(LA32_1 >= YEAR && LA32_1 <= YEARWEEK)) ) {
					alt32=1;
				}
				else if ( (LA32_1==INTEGER_NUM||LA32_1==REAL_NUMBER) ) {
					int LA32_4 = input.LA(3);
					if ( (synpred304_SQL()) ) {
						alt32=1;
					}
					else if ( (true) ) {
						alt32=2;
					}

				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 32, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ABS:
			case ACOS:
			case ADDDATE:
			case ADDTIME:
			case AES_DECRYPT:
			case AES_ENCRYPT:
			case ASCII_SYM:
			case ASIN:
			case ATAN:
			case ATAN2:
			case AVG:
			case BENCHMARK:
			case BIN:
			case BIT_AND:
			case BIT_LENGTH:
			case BIT_NUM:
			case BIT_OR:
			case BIT_XOR:
			case CASE_SYM:
			case CAST_SYM:
			case CEIL:
			case CEILING:
			case CHAR:
			case CHARSET:
			case CHAR_LENGTH:
			case COERCIBILITY:
			case COLLATION:
			case CONCAT:
			case CONCAT_WS:
			case CONNECTION_ID:
			case CONV:
			case CONVERT_SYM:
			case CONVERT_TZ:
			case COS:
			case COT:
			case COUNT:
			case CRC32:
			case CURDATE:
			case CURRENT_USER:
			case CURTIME:
			case DATABASE:
			case DATEDIFF:
			case DATE_ADD:
			case DATE_FORMAT:
			case DATE_SUB:
			case DATE_SYM:
			case DAYNAME:
			case DAYOFMONTH:
			case DAYOFWEEK:
			case DAYOFYEAR:
			case DECODE:
			case DEFAULT:
			case DEGREES:
			case DES_DECRYPT:
			case DES_ENCRYPT:
			case ELT:
			case ENCODE:
			case ENCRYPT:
			case EXISTS:
			case EXP:
			case EXPORT_SET:
			case EXTRACT:
			case FALSE_SYM:
			case FIELD:
			case FIND_IN_SET:
			case FLOOR:
			case FORMAT:
			case FOUND_ROWS:
			case FROM_BASE64:
			case FROM_DAYS:
			case FROM_UNIXTIME:
			case GET_FORMAT:
			case GET_LOCK:
			case GROUP_CONCAT:
			case HEX:
			case HEX_DIGIT:
			case HOUR:
			case ID:
			case IF:
			case IFNULL:
			case INET_ATON:
			case INET_NTOA:
			case INSERT:
			case INSTR:
			case INTEGER_NUM:
			case INTERVAL_SYM:
			case IS_FREE_LOCK:
			case IS_USED_LOCK:
			case LAST_DAY:
			case LAST_INSERT_ID:
			case LEFT:
			case LENGTH:
			case LN:
			case LOAD_FILE:
			case LOCATE:
			case LOG:
			case LOG10:
			case LOG2:
			case LOWER:
			case LPAD:
			case LPAREN:
			case LTRIM:
			case MAKEDATE:
			case MAKETIME:
			case MAKE_SET:
			case MASTER_POS_WAIT:
			case MATCH:
			case MAX_SYM:
			case MD5:
			case MICROSECOND:
			case MID:
			case MINUTE:
			case MIN_SYM:
			case MOD:
			case MONTH:
			case MONTHNAME:
			case NAME_CONST:
			case NOW:
			case NULL_SYM:
			case OCT:
			case OLD_PASSWORD:
			case ORD:
			case PASSWORD:
			case PERIOD_ADD:
			case PERIOD_DIFF:
			case PI:
			case POW:
			case POWER:
			case QUARTER:
			case QUOTE:
			case RADIANS:
			case RAND:
			case REAL_NUMBER:
			case RELEASE_LOCK:
			case REPEAT:
			case REPLACE:
			case REVERSE:
			case RIGHT:
			case ROUND:
			case ROW_SYM:
			case RPAD:
			case RTRIM:
			case SCHEMA:
			case SECOND:
			case SEC_TO_TIME:
			case SESSION_USER:
			case SIGN:
			case SIN:
			case SLEEP:
			case SOUNDEX:
			case SPACE:
			case SQRT:
			case STD:
			case STDDEV:
			case STDDEV_POP:
			case STDDEV_SAMP:
			case STRCMP:
			case STR_TO_DATE:
			case SUBSTRING:
			case SUBSTRING_INDEX:
			case SUBTIME:
			case SUM:
			case SYSDATE:
			case SYSTEM_USER:
			case TAN:
			case TEXT_STRING:
			case TIMEDIFF:
			case TIMESTAMP:
			case TIMESTAMPADD:
			case TIMESTAMPDIFF:
			case TIME_FORMAT:
			case TIME_SYM:
			case TIME_TO_SEC:
			case TO_BASE64:
			case TO_DAYS:
			case TO_SECONDS:
			case TRIM:
			case TRUE_SYM:
			case TRUNCATE:
			case UNHEX:
			case UNIX_TIMESTAMP:
			case UPPER:
			case USER:
			case USER_VAR:
			case UTC_DATE:
			case UTC_TIME:
			case UTC_TIMESTAMP:
			case UUID:
			case VALUES:
			case VARIANCE:
			case VAR_POP:
			case VAR_SAMP:
			case VERSION_SYM:
			case WEEK:
			case WEEKDAY:
			case WEEKOFYEAR:
			case WEIGHT_STRING:
			case YEAR:
			case YEARWEEK:
				{
				alt32=2;
				}
				break;
			case BINARY:
			case NEGATION:
				{
				alt32=1;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 32, 0, input);
				throw nvae;
			}
			switch (alt32) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1286:3: ( PLUS | MINUS | NEGATION | BINARY ) ^ simple_expr
					{
					root_0 = (Object)adaptor.nil();


					set139=input.LT(1);
					set139=input.LT(1);
					if ( input.LA(1)==BINARY||input.LA(1)==MINUS||input.LA(1)==NEGATION||input.LA(1)==PLUS ) {
						input.consume();
						if ( state.backtracking==0 ) root_0 = (Object)adaptor.becomeRoot((Object)adaptor.create(set139), root_0);
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					pushFollow(FOLLOW_simple_expr_in_factor623162);
					simple_expr140=simple_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, simple_expr140.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1287:5: simple_expr
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_simple_expr_in_factor623168);
					simple_expr141=simple_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, simple_expr141.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "factor6"


	public static class factor7_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "factor7"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1288:1: factor7 : simple_expr ( COLLATE_SYM ^ collation_names )? ;
	public final SQLParser.factor7_return factor7() throws RecognitionException {
		SQLParser.factor7_return retval = new SQLParser.factor7_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token COLLATE_SYM143=null;
		ParserRuleReturnScope simple_expr142 =null;
		ParserRuleReturnScope collation_names144 =null;

		Object COLLATE_SYM143_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1288:8: ( simple_expr ( COLLATE_SYM ^ collation_names )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1289:3: simple_expr ( COLLATE_SYM ^ collation_names )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_simple_expr_in_factor723177);
			simple_expr142=simple_expr();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, simple_expr142.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1289:15: ( COLLATE_SYM ^ collation_names )?
			int alt33=2;
			int LA33_0 = input.LA(1);
			if ( (LA33_0==COLLATE_SYM) ) {
				alt33=1;
			}
			switch (alt33) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1289:16: COLLATE_SYM ^ collation_names
					{
					COLLATE_SYM143=(Token)match(input,COLLATE_SYM,FOLLOW_COLLATE_SYM_in_factor723180); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COLLATE_SYM143_tree = (Object)adaptor.create(COLLATE_SYM143);
					root_0 = (Object)adaptor.becomeRoot(COLLATE_SYM143_tree, root_0);
					}

					pushFollow(FOLLOW_collation_names_in_factor723184);
					collation_names144=collation_names();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, collation_names144.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "factor7"


	public static class simple_expr_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "simple_expr"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1290:1: simple_expr : ( literal_value | column_spec | function_call | USER_VAR | expression_list | ( ROW_SYM expression_list ) | subquery | EXISTS ^ subquery | match_against_statement | case_when_statement | interval_expr );
	public final SQLParser.simple_expr_return simple_expr() throws RecognitionException {
		SQLParser.simple_expr_return retval = new SQLParser.simple_expr_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token USER_VAR148=null;
		Token ROW_SYM150=null;
		Token EXISTS153=null;
		ParserRuleReturnScope literal_value145 =null;
		ParserRuleReturnScope column_spec146 =null;
		ParserRuleReturnScope function_call147 =null;
		ParserRuleReturnScope expression_list149 =null;
		ParserRuleReturnScope expression_list151 =null;
		ParserRuleReturnScope subquery152 =null;
		ParserRuleReturnScope subquery154 =null;
		ParserRuleReturnScope match_against_statement155 =null;
		ParserRuleReturnScope case_when_statement156 =null;
		ParserRuleReturnScope interval_expr157 =null;

		Object USER_VAR148_tree=null;
		Object ROW_SYM150_tree=null;
		Object EXISTS153_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1290:12: ( literal_value | column_spec | function_call | USER_VAR | expression_list | ( ROW_SYM expression_list ) | subquery | EXISTS ^ subquery | match_against_statement | case_when_statement | interval_expr )
			int alt34=11;
			switch ( input.LA(1) ) {
			case BIT_NUM:
			case FALSE_SYM:
			case HEX_DIGIT:
			case INTEGER_NUM:
			case MINUS:
			case NULL_SYM:
			case PLUS:
			case REAL_NUMBER:
			case TEXT_STRING:
			case TRUE_SYM:
				{
				alt34=1;
				}
				break;
			case ID:
				{
				alt34=2;
				}
				break;
			case ABS:
			case ACOS:
			case ADDDATE:
			case ADDTIME:
			case AES_DECRYPT:
			case AES_ENCRYPT:
			case ASCII_SYM:
			case ASIN:
			case ATAN:
			case ATAN2:
			case AVG:
			case BENCHMARK:
			case BIN:
			case BIT_AND:
			case BIT_LENGTH:
			case BIT_OR:
			case BIT_XOR:
			case CAST_SYM:
			case CEIL:
			case CEILING:
			case CHAR:
			case CHARSET:
			case CHAR_LENGTH:
			case COERCIBILITY:
			case COLLATION:
			case CONCAT:
			case CONCAT_WS:
			case CONNECTION_ID:
			case CONV:
			case CONVERT_SYM:
			case CONVERT_TZ:
			case COS:
			case COT:
			case COUNT:
			case CRC32:
			case CURDATE:
			case CURRENT_USER:
			case CURTIME:
			case DATABASE:
			case DATEDIFF:
			case DATE_ADD:
			case DATE_FORMAT:
			case DATE_SUB:
			case DATE_SYM:
			case DAYNAME:
			case DAYOFMONTH:
			case DAYOFWEEK:
			case DAYOFYEAR:
			case DECODE:
			case DEFAULT:
			case DEGREES:
			case DES_DECRYPT:
			case DES_ENCRYPT:
			case ELT:
			case ENCODE:
			case ENCRYPT:
			case EXP:
			case EXPORT_SET:
			case EXTRACT:
			case FIELD:
			case FIND_IN_SET:
			case FLOOR:
			case FORMAT:
			case FOUND_ROWS:
			case FROM_BASE64:
			case FROM_DAYS:
			case FROM_UNIXTIME:
			case GET_FORMAT:
			case GET_LOCK:
			case GROUP_CONCAT:
			case HEX:
			case HOUR:
			case IF:
			case IFNULL:
			case INET_ATON:
			case INET_NTOA:
			case INSERT:
			case INSTR:
			case IS_FREE_LOCK:
			case IS_USED_LOCK:
			case LAST_DAY:
			case LAST_INSERT_ID:
			case LEFT:
			case LENGTH:
			case LN:
			case LOAD_FILE:
			case LOCATE:
			case LOG:
			case LOG10:
			case LOG2:
			case LOWER:
			case LPAD:
			case LTRIM:
			case MAKEDATE:
			case MAKETIME:
			case MAKE_SET:
			case MASTER_POS_WAIT:
			case MAX_SYM:
			case MD5:
			case MICROSECOND:
			case MID:
			case MINUTE:
			case MIN_SYM:
			case MOD:
			case MONTH:
			case MONTHNAME:
			case NAME_CONST:
			case NOW:
			case OCT:
			case OLD_PASSWORD:
			case ORD:
			case PASSWORD:
			case PERIOD_ADD:
			case PERIOD_DIFF:
			case PI:
			case POW:
			case POWER:
			case QUARTER:
			case QUOTE:
			case RADIANS:
			case RAND:
			case RELEASE_LOCK:
			case REPEAT:
			case REPLACE:
			case REVERSE:
			case RIGHT:
			case ROUND:
			case RPAD:
			case RTRIM:
			case SCHEMA:
			case SECOND:
			case SEC_TO_TIME:
			case SESSION_USER:
			case SIGN:
			case SIN:
			case SLEEP:
			case SOUNDEX:
			case SPACE:
			case SQRT:
			case STD:
			case STDDEV:
			case STDDEV_POP:
			case STDDEV_SAMP:
			case STRCMP:
			case STR_TO_DATE:
			case SUBSTRING:
			case SUBSTRING_INDEX:
			case SUBTIME:
			case SUM:
			case SYSDATE:
			case SYSTEM_USER:
			case TAN:
			case TIMEDIFF:
			case TIMESTAMP:
			case TIMESTAMPADD:
			case TIMESTAMPDIFF:
			case TIME_FORMAT:
			case TIME_SYM:
			case TIME_TO_SEC:
			case TO_BASE64:
			case TO_DAYS:
			case TO_SECONDS:
			case TRIM:
			case TRUNCATE:
			case UNHEX:
			case UNIX_TIMESTAMP:
			case UPPER:
			case USER:
			case UTC_DATE:
			case UTC_TIME:
			case UTC_TIMESTAMP:
			case UUID:
			case VALUES:
			case VARIANCE:
			case VAR_POP:
			case VAR_SAMP:
			case VERSION_SYM:
			case WEEK:
			case WEEKDAY:
			case WEEKOFYEAR:
			case WEIGHT_STRING:
			case YEAR:
			case YEARWEEK:
				{
				alt34=3;
				}
				break;
			case USER_VAR:
				{
				alt34=4;
				}
				break;
			case LPAREN:
				{
				int LA34_5 = input.LA(2);
				if ( (LA34_5==ABS||LA34_5==ACOS||(LA34_5 >= ADDDATE && LA34_5 <= ADDTIME)||(LA34_5 >= AES_DECRYPT && LA34_5 <= AES_ENCRYPT)||LA34_5==ASCII_SYM||LA34_5==ASIN||(LA34_5 >= ATAN && LA34_5 <= ATAN2)||LA34_5==AVG||LA34_5==BENCHMARK||(LA34_5 >= BIN && LA34_5 <= BINARY)||(LA34_5 >= BIT_AND && LA34_5 <= BIT_OR)||LA34_5==BIT_XOR||(LA34_5 >= CASE_SYM && LA34_5 <= CEILING)||LA34_5==CHAR||(LA34_5 >= CHARSET && LA34_5 <= CHAR_LENGTH)||LA34_5==COERCIBILITY||LA34_5==COLLATION||(LA34_5 >= CONCAT && LA34_5 <= CONCAT_WS)||LA34_5==CONNECTION_ID||(LA34_5 >= CONV && LA34_5 <= CONVERT_TZ)||(LA34_5 >= COS && LA34_5 <= COUNT)||LA34_5==CRC32||LA34_5==CURDATE||LA34_5==CURRENT_USER||LA34_5==CURTIME||LA34_5==DATABASE||LA34_5==DATEDIFF||(LA34_5 >= DATE_ADD && LA34_5 <= DAYOFYEAR)||(LA34_5 >= DECODE && LA34_5 <= DEFAULT)||LA34_5==DEGREES||(LA34_5 >= DES_DECRYPT && LA34_5 <= DES_ENCRYPT)||LA34_5==ELT||(LA34_5 >= ENCODE && LA34_5 <= ENCRYPT)||LA34_5==EXISTS||LA34_5==EXP||LA34_5==EXPORT_SET||LA34_5==EXTRACT||LA34_5==FALSE_SYM||LA34_5==FIELD||LA34_5==FIND_IN_SET||LA34_5==FLOOR||LA34_5==FORMAT||LA34_5==FOUND_ROWS||(LA34_5 >= FROM_BASE64 && LA34_5 <= FROM_UNIXTIME)||(LA34_5 >= GET_FORMAT && LA34_5 <= GET_LOCK)||LA34_5==GROUP_CONCAT||(LA34_5 >= HEX && LA34_5 <= HEX_DIGIT)||LA34_5==HOUR||LA34_5==ID||(LA34_5 >= IF && LA34_5 <= IFNULL)||(LA34_5 >= INET_ATON && LA34_5 <= INET_NTOA)||LA34_5==INSERT||(LA34_5 >= INSTR && LA34_5 <= INTEGER_NUM)||LA34_5==INTERVAL_SYM||LA34_5==IS_FREE_LOCK||LA34_5==IS_USED_LOCK||(LA34_5 >= LAST_DAY && LA34_5 <= LAST_INSERT_ID)||(LA34_5 >= LEFT && LA34_5 <= LENGTH)||LA34_5==LN||LA34_5==LOAD_FILE||LA34_5==LOCATE||(LA34_5 >= LOG && LA34_5 <= LOG2)||LA34_5==LOWER||(LA34_5 >= LPAD && LA34_5 <= LPAREN)||LA34_5==LTRIM||(LA34_5 >= MAKEDATE && LA34_5 <= MAKE_SET)||LA34_5==MASTER_POS_WAIT||LA34_5==MATCH||LA34_5==MAX_SYM||LA34_5==MD5||(LA34_5 >= MICROSECOND && LA34_5 <= MID)||(LA34_5 >= MINUS && LA34_5 <= MINUTE)||LA34_5==MIN_SYM||LA34_5==MOD||(LA34_5 >= MONTH && LA34_5 <= MONTHNAME)||LA34_5==NAME_CONST||LA34_5==NEGATION||(LA34_5 >= NOT_SYM && LA34_5 <= NOW)||LA34_5==NULL_SYM||LA34_5==OCT||LA34_5==OLD_PASSWORD||LA34_5==ORD||(LA34_5 >= PASSWORD && LA34_5 <= PERIOD_DIFF)||LA34_5==PI||LA34_5==PLUS||(LA34_5 >= POW && LA34_5 <= POWER)||LA34_5==QUARTER||LA34_5==QUOTE||(LA34_5 >= RADIANS && LA34_5 <= RAND)||LA34_5==REAL_NUMBER||LA34_5==RELEASE_LOCK||LA34_5==REPEAT||LA34_5==REPLACE||LA34_5==REVERSE||LA34_5==RIGHT||LA34_5==ROUND||(LA34_5 >= ROW_SYM && LA34_5 <= RPAD)||LA34_5==RTRIM||(LA34_5 >= SCHEMA && LA34_5 <= SECOND)||LA34_5==SEC_TO_TIME||LA34_5==SESSION_USER||LA34_5==SIGN||LA34_5==SIN||LA34_5==SLEEP||LA34_5==SOUNDEX||LA34_5==SPACE||LA34_5==SQRT||(LA34_5 >= STD && LA34_5 <= STDDEV_SAMP)||LA34_5==STRCMP||LA34_5==STR_TO_DATE||(LA34_5 >= SUBSTRING && LA34_5 <= SUM)||(LA34_5 >= SYSDATE && LA34_5 <= SYSTEM_USER)||LA34_5==TAN||LA34_5==TEXT_STRING||(LA34_5 >= TIMEDIFF && LA34_5 <= TIME_TO_SEC)||(LA34_5 >= TO_BASE64 && LA34_5 <= TO_SECONDS)||(LA34_5 >= TRIM && LA34_5 <= TRUNCATE)||LA34_5==UNHEX||LA34_5==UNIX_TIMESTAMP||LA34_5==UPPER||(LA34_5 >= USER && LA34_5 <= USER_VAR)||(LA34_5 >= UTC_DATE && LA34_5 <= UTC_TIMESTAMP)||LA34_5==UUID||LA34_5==VALUES||LA34_5==VARIANCE||(LA34_5 >= VAR_POP && LA34_5 <= VERSION_SYM)||(LA34_5 >= WEEK && LA34_5 <= WEIGHT_STRING)||(LA34_5 >= YEAR && LA34_5 <= YEARWEEK)) ) {
					alt34=5;
				}
				else if ( (LA34_5==SELECT) ) {
					alt34=7;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 34, 5, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ROW_SYM:
				{
				alt34=6;
				}
				break;
			case EXISTS:
				{
				alt34=8;
				}
				break;
			case MATCH:
				{
				alt34=9;
				}
				break;
			case CASE_SYM:
				{
				alt34=10;
				}
				break;
			case INTERVAL_SYM:
				{
				alt34=11;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 34, 0, input);
				throw nvae;
			}
			switch (alt34) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1291:3: literal_value
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_literal_value_in_simple_expr23194);
					literal_value145=literal_value();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, literal_value145.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1292:5: column_spec
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_column_spec_in_simple_expr23201);
					column_spec146=column_spec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_spec146.getTree());

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1293:5: function_call
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_function_call_in_simple_expr23207);
					function_call147=function_call();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, function_call147.getTree());

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1295:5: USER_VAR
					{
					root_0 = (Object)adaptor.nil();


					USER_VAR148=(Token)match(input,USER_VAR,FOLLOW_USER_VAR_in_simple_expr23216); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					USER_VAR148_tree = (Object)adaptor.create(USER_VAR148);
					adaptor.addChild(root_0, USER_VAR148_tree);
					}

					}
					break;
				case 5 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1296:5: expression_list
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_expression_list_in_simple_expr23222);
					expression_list149=expression_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list149.getTree());

					}
					break;
				case 6 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1297:5: ( ROW_SYM expression_list )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1297:5: ( ROW_SYM expression_list )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1297:6: ROW_SYM expression_list
					{
					ROW_SYM150=(Token)match(input,ROW_SYM,FOLLOW_ROW_SYM_in_simple_expr23229); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ROW_SYM150_tree = (Object)adaptor.create(ROW_SYM150);
					adaptor.addChild(root_0, ROW_SYM150_tree);
					}

					pushFollow(FOLLOW_expression_list_in_simple_expr23231);
					expression_list151=expression_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list151.getTree());

					}

					}
					break;
				case 7 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1298:5: subquery
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_subquery_in_simple_expr23238);
					subquery152=subquery();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, subquery152.getTree());

					}
					break;
				case 8 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1299:5: EXISTS ^ subquery
					{
					root_0 = (Object)adaptor.nil();


					EXISTS153=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_simple_expr23244); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EXISTS153_tree = (Object)adaptor.create(EXISTS153);
					root_0 = (Object)adaptor.becomeRoot(EXISTS153_tree, root_0);
					}

					pushFollow(FOLLOW_subquery_in_simple_expr23248);
					subquery154=subquery();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, subquery154.getTree());

					}
					break;
				case 9 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1301:5: match_against_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_match_against_statement_in_simple_expr23257);
					match_against_statement155=match_against_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, match_against_statement155.getTree());

					}
					break;
				case 10 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1302:5: case_when_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_case_when_statement_in_simple_expr23263);
					case_when_statement156=case_when_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, case_when_statement156.getTree());

					}
					break;
				case 11 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1303:5: interval_expr
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_interval_expr_in_simple_expr23269);
					interval_expr157=interval_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interval_expr157.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "simple_expr"


	public static class function_call_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "function_call"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1307:1: function_call : ( ( functionList ( LPAREN ( expression ( COMMA expression )* )? RPAREN )? ) | ( CAST_SYM LPAREN expression AS_SYM cast_data_type RPAREN ) | ( CONVERT_SYM LPAREN expression COMMA cast_data_type RPAREN ) | ( CONVERT_SYM LPAREN expression USING_SYM transcoding_name RPAREN ) | ( group_functions LPAREN ( ASTERISK | ALL | DISTINCT )? bit_expr RPAREN ) );
	public final SQLParser.function_call_return function_call() throws RecognitionException {
		SQLParser.function_call_return retval = new SQLParser.function_call_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token LPAREN159=null;
		Token COMMA161=null;
		Token RPAREN163=null;
		Token CAST_SYM164=null;
		Token LPAREN165=null;
		Token AS_SYM167=null;
		Token RPAREN169=null;
		Token CONVERT_SYM170=null;
		Token LPAREN171=null;
		Token COMMA173=null;
		Token RPAREN175=null;
		Token CONVERT_SYM176=null;
		Token LPAREN177=null;
		Token USING_SYM179=null;
		Token RPAREN181=null;
		Token LPAREN183=null;
		Token set184=null;
		Token RPAREN186=null;
		ParserRuleReturnScope functionList158 =null;
		ParserRuleReturnScope expression160 =null;
		ParserRuleReturnScope expression162 =null;
		ParserRuleReturnScope expression166 =null;
		ParserRuleReturnScope cast_data_type168 =null;
		ParserRuleReturnScope expression172 =null;
		ParserRuleReturnScope cast_data_type174 =null;
		ParserRuleReturnScope expression178 =null;
		ParserRuleReturnScope transcoding_name180 =null;
		ParserRuleReturnScope group_functions182 =null;
		ParserRuleReturnScope bit_expr185 =null;

		Object LPAREN159_tree=null;
		Object COMMA161_tree=null;
		Object RPAREN163_tree=null;
		Object CAST_SYM164_tree=null;
		Object LPAREN165_tree=null;
		Object AS_SYM167_tree=null;
		Object RPAREN169_tree=null;
		Object CONVERT_SYM170_tree=null;
		Object LPAREN171_tree=null;
		Object COMMA173_tree=null;
		Object RPAREN175_tree=null;
		Object CONVERT_SYM176_tree=null;
		Object LPAREN177_tree=null;
		Object USING_SYM179_tree=null;
		Object RPAREN181_tree=null;
		Object LPAREN183_tree=null;
		Object set184_tree=null;
		Object RPAREN186_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1307:14: ( ( functionList ( LPAREN ( expression ( COMMA expression )* )? RPAREN )? ) | ( CAST_SYM LPAREN expression AS_SYM cast_data_type RPAREN ) | ( CONVERT_SYM LPAREN expression COMMA cast_data_type RPAREN ) | ( CONVERT_SYM LPAREN expression USING_SYM transcoding_name RPAREN ) | ( group_functions LPAREN ( ASTERISK | ALL | DISTINCT )? bit_expr RPAREN ) )
			int alt39=5;
			switch ( input.LA(1) ) {
			case ABS:
			case ACOS:
			case ADDDATE:
			case ADDTIME:
			case AES_DECRYPT:
			case AES_ENCRYPT:
			case ASCII_SYM:
			case ASIN:
			case ATAN:
			case ATAN2:
			case BENCHMARK:
			case BIN:
			case BIT_LENGTH:
			case CEIL:
			case CEILING:
			case CHAR:
			case CHARSET:
			case CHAR_LENGTH:
			case COERCIBILITY:
			case COLLATION:
			case CONCAT:
			case CONCAT_WS:
			case CONNECTION_ID:
			case CONV:
			case CONVERT_TZ:
			case COS:
			case COT:
			case CRC32:
			case CURDATE:
			case CURRENT_USER:
			case CURTIME:
			case DATABASE:
			case DATEDIFF:
			case DATE_ADD:
			case DATE_FORMAT:
			case DATE_SUB:
			case DATE_SYM:
			case DAYNAME:
			case DAYOFMONTH:
			case DAYOFWEEK:
			case DAYOFYEAR:
			case DECODE:
			case DEFAULT:
			case DEGREES:
			case DES_DECRYPT:
			case DES_ENCRYPT:
			case ELT:
			case ENCODE:
			case ENCRYPT:
			case EXP:
			case EXPORT_SET:
			case EXTRACT:
			case FIELD:
			case FIND_IN_SET:
			case FLOOR:
			case FORMAT:
			case FOUND_ROWS:
			case FROM_BASE64:
			case FROM_DAYS:
			case FROM_UNIXTIME:
			case GET_FORMAT:
			case GET_LOCK:
			case HEX:
			case HOUR:
			case IF:
			case IFNULL:
			case INET_ATON:
			case INET_NTOA:
			case INSERT:
			case INSTR:
			case IS_FREE_LOCK:
			case IS_USED_LOCK:
			case LAST_DAY:
			case LAST_INSERT_ID:
			case LEFT:
			case LENGTH:
			case LN:
			case LOAD_FILE:
			case LOCATE:
			case LOG:
			case LOG10:
			case LOG2:
			case LOWER:
			case LPAD:
			case LTRIM:
			case MAKEDATE:
			case MAKETIME:
			case MAKE_SET:
			case MASTER_POS_WAIT:
			case MD5:
			case MICROSECOND:
			case MID:
			case MINUTE:
			case MOD:
			case MONTH:
			case MONTHNAME:
			case NAME_CONST:
			case NOW:
			case OCT:
			case OLD_PASSWORD:
			case ORD:
			case PASSWORD:
			case PERIOD_ADD:
			case PERIOD_DIFF:
			case PI:
			case POW:
			case POWER:
			case QUARTER:
			case QUOTE:
			case RADIANS:
			case RAND:
			case RELEASE_LOCK:
			case REPEAT:
			case REPLACE:
			case REVERSE:
			case RIGHT:
			case ROUND:
			case RPAD:
			case RTRIM:
			case SCHEMA:
			case SECOND:
			case SEC_TO_TIME:
			case SESSION_USER:
			case SIGN:
			case SIN:
			case SLEEP:
			case SOUNDEX:
			case SPACE:
			case SQRT:
			case STRCMP:
			case STR_TO_DATE:
			case SUBSTRING:
			case SUBSTRING_INDEX:
			case SUBTIME:
			case SYSDATE:
			case SYSTEM_USER:
			case TAN:
			case TIMEDIFF:
			case TIMESTAMP:
			case TIMESTAMPADD:
			case TIMESTAMPDIFF:
			case TIME_FORMAT:
			case TIME_SYM:
			case TIME_TO_SEC:
			case TO_BASE64:
			case TO_DAYS:
			case TO_SECONDS:
			case TRIM:
			case TRUNCATE:
			case UNHEX:
			case UNIX_TIMESTAMP:
			case UPPER:
			case USER:
			case UTC_DATE:
			case UTC_TIME:
			case UTC_TIMESTAMP:
			case UUID:
			case VALUES:
			case VERSION_SYM:
			case WEEK:
			case WEEKDAY:
			case WEEKOFYEAR:
			case WEIGHT_STRING:
			case YEAR:
			case YEARWEEK:
				{
				alt39=1;
				}
				break;
			case CAST_SYM:
				{
				alt39=2;
				}
				break;
			case CONVERT_SYM:
				{
				int LA39_7 = input.LA(2);
				if ( (synpred321_SQL()) ) {
					alt39=3;
				}
				else if ( (synpred322_SQL()) ) {
					alt39=4;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 39, 7, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case AVG:
			case BIT_AND:
			case BIT_OR:
			case BIT_XOR:
			case COUNT:
			case GROUP_CONCAT:
			case MAX_SYM:
			case MIN_SYM:
			case STD:
			case STDDEV:
			case STDDEV_POP:
			case STDDEV_SAMP:
			case SUM:
			case VARIANCE:
			case VAR_POP:
			case VAR_SAMP:
				{
				alt39=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 39, 0, input);
				throw nvae;
			}
			switch (alt39) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1308:5: ( functionList ( LPAREN ( expression ( COMMA expression )* )? RPAREN )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1308:5: ( functionList ( LPAREN ( expression ( COMMA expression )* )? RPAREN )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1308:8: functionList ( LPAREN ( expression ( COMMA expression )* )? RPAREN )?
					{
					pushFollow(FOLLOW_functionList_in_function_call23285);
					functionList158=functionList();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, functionList158.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1308:21: ( LPAREN ( expression ( COMMA expression )* )? RPAREN )?
					int alt37=2;
					int LA37_0 = input.LA(1);
					if ( (LA37_0==LPAREN) ) {
						alt37=1;
					}
					switch (alt37) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1308:23: LPAREN ( expression ( COMMA expression )* )? RPAREN
							{
							LPAREN159=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_function_call23289); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN159_tree = (Object)adaptor.create(LPAREN159);
							adaptor.addChild(root_0, LPAREN159_tree);
							}

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1308:30: ( expression ( COMMA expression )* )?
							int alt36=2;
							int LA36_0 = input.LA(1);
							if ( (LA36_0==ABS||LA36_0==ACOS||(LA36_0 >= ADDDATE && LA36_0 <= ADDTIME)||(LA36_0 >= AES_DECRYPT && LA36_0 <= AES_ENCRYPT)||LA36_0==ASCII_SYM||LA36_0==ASIN||(LA36_0 >= ATAN && LA36_0 <= ATAN2)||LA36_0==AVG||LA36_0==BENCHMARK||(LA36_0 >= BIN && LA36_0 <= BINARY)||(LA36_0 >= BIT_AND && LA36_0 <= BIT_OR)||LA36_0==BIT_XOR||(LA36_0 >= CASE_SYM && LA36_0 <= CEILING)||LA36_0==CHAR||(LA36_0 >= CHARSET && LA36_0 <= CHAR_LENGTH)||LA36_0==COERCIBILITY||LA36_0==COLLATION||(LA36_0 >= CONCAT && LA36_0 <= CONCAT_WS)||LA36_0==CONNECTION_ID||(LA36_0 >= CONV && LA36_0 <= CONVERT_TZ)||(LA36_0 >= COS && LA36_0 <= COUNT)||LA36_0==CRC32||LA36_0==CURDATE||LA36_0==CURRENT_USER||LA36_0==CURTIME||LA36_0==DATABASE||LA36_0==DATEDIFF||(LA36_0 >= DATE_ADD && LA36_0 <= DAYOFYEAR)||(LA36_0 >= DECODE && LA36_0 <= DEFAULT)||LA36_0==DEGREES||(LA36_0 >= DES_DECRYPT && LA36_0 <= DES_ENCRYPT)||LA36_0==ELT||(LA36_0 >= ENCODE && LA36_0 <= ENCRYPT)||LA36_0==EXISTS||LA36_0==EXP||LA36_0==EXPORT_SET||LA36_0==EXTRACT||LA36_0==FALSE_SYM||LA36_0==FIELD||LA36_0==FIND_IN_SET||LA36_0==FLOOR||LA36_0==FORMAT||LA36_0==FOUND_ROWS||(LA36_0 >= FROM_BASE64 && LA36_0 <= FROM_UNIXTIME)||(LA36_0 >= GET_FORMAT && LA36_0 <= GET_LOCK)||LA36_0==GROUP_CONCAT||(LA36_0 >= HEX && LA36_0 <= HEX_DIGIT)||LA36_0==HOUR||LA36_0==ID||(LA36_0 >= IF && LA36_0 <= IFNULL)||(LA36_0 >= INET_ATON && LA36_0 <= INET_NTOA)||LA36_0==INSERT||(LA36_0 >= INSTR && LA36_0 <= INTEGER_NUM)||LA36_0==INTERVAL_SYM||LA36_0==IS_FREE_LOCK||LA36_0==IS_USED_LOCK||(LA36_0 >= LAST_DAY && LA36_0 <= LAST_INSERT_ID)||(LA36_0 >= LEFT && LA36_0 <= LENGTH)||LA36_0==LN||LA36_0==LOAD_FILE||LA36_0==LOCATE||(LA36_0 >= LOG && LA36_0 <= LOG2)||LA36_0==LOWER||(LA36_0 >= LPAD && LA36_0 <= LPAREN)||LA36_0==LTRIM||(LA36_0 >= MAKEDATE && LA36_0 <= MAKE_SET)||LA36_0==MASTER_POS_WAIT||LA36_0==MATCH||LA36_0==MAX_SYM||LA36_0==MD5||(LA36_0 >= MICROSECOND && LA36_0 <= MID)||(LA36_0 >= MINUS && LA36_0 <= MINUTE)||LA36_0==MIN_SYM||LA36_0==MOD||(LA36_0 >= MONTH && LA36_0 <= MONTHNAME)||LA36_0==NAME_CONST||LA36_0==NEGATION||(LA36_0 >= NOT_SYM && LA36_0 <= NOW)||LA36_0==NULL_SYM||LA36_0==OCT||LA36_0==OLD_PASSWORD||LA36_0==ORD||(LA36_0 >= PASSWORD && LA36_0 <= PERIOD_DIFF)||LA36_0==PI||LA36_0==PLUS||(LA36_0 >= POW && LA36_0 <= POWER)||LA36_0==QUARTER||LA36_0==QUOTE||(LA36_0 >= RADIANS && LA36_0 <= RAND)||LA36_0==REAL_NUMBER||LA36_0==RELEASE_LOCK||LA36_0==REPEAT||LA36_0==REPLACE||LA36_0==REVERSE||LA36_0==RIGHT||LA36_0==ROUND||(LA36_0 >= ROW_SYM && LA36_0 <= RPAD)||LA36_0==RTRIM||(LA36_0 >= SCHEMA && LA36_0 <= SECOND)||LA36_0==SEC_TO_TIME||LA36_0==SESSION_USER||LA36_0==SIGN||LA36_0==SIN||LA36_0==SLEEP||LA36_0==SOUNDEX||LA36_0==SPACE||LA36_0==SQRT||(LA36_0 >= STD && LA36_0 <= STDDEV_SAMP)||LA36_0==STRCMP||LA36_0==STR_TO_DATE||(LA36_0 >= SUBSTRING && LA36_0 <= SUM)||(LA36_0 >= SYSDATE && LA36_0 <= SYSTEM_USER)||LA36_0==TAN||LA36_0==TEXT_STRING||(LA36_0 >= TIMEDIFF && LA36_0 <= TIME_TO_SEC)||(LA36_0 >= TO_BASE64 && LA36_0 <= TO_SECONDS)||(LA36_0 >= TRIM && LA36_0 <= TRUNCATE)||LA36_0==UNHEX||LA36_0==UNIX_TIMESTAMP||LA36_0==UPPER||(LA36_0 >= USER && LA36_0 <= USER_VAR)||(LA36_0 >= UTC_DATE && LA36_0 <= UTC_TIMESTAMP)||LA36_0==UUID||LA36_0==VALUES||LA36_0==VARIANCE||(LA36_0 >= VAR_POP && LA36_0 <= VERSION_SYM)||(LA36_0 >= WEEK && LA36_0 <= WEIGHT_STRING)||(LA36_0 >= YEAR && LA36_0 <= YEARWEEK)) ) {
								alt36=1;
							}
							switch (alt36) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1308:31: expression ( COMMA expression )*
									{
									pushFollow(FOLLOW_expression_in_function_call23292);
									expression160=expression();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, expression160.getTree());

									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1308:42: ( COMMA expression )*
									loop35:
									while (true) {
										int alt35=2;
										int LA35_0 = input.LA(1);
										if ( (LA35_0==COMMA) ) {
											alt35=1;
										}

										switch (alt35) {
										case 1 :
											// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1308:43: COMMA expression
											{
											COMMA161=(Token)match(input,COMMA,FOLLOW_COMMA_in_function_call23295); if (state.failed) return retval;
											if ( state.backtracking==0 ) {
											COMMA161_tree = (Object)adaptor.create(COMMA161);
											adaptor.addChild(root_0, COMMA161_tree);
											}

											pushFollow(FOLLOW_expression_in_function_call23297);
											expression162=expression();
											state._fsp--;
											if (state.failed) return retval;
											if ( state.backtracking==0 ) adaptor.addChild(root_0, expression162.getTree());

											}
											break;

										default :
											break loop35;
										}
									}

									}
									break;

							}

							RPAREN163=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_function_call23303); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN163_tree = (Object)adaptor.create(RPAREN163);
							adaptor.addChild(root_0, RPAREN163_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1309:5: ( CAST_SYM LPAREN expression AS_SYM cast_data_type RPAREN )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1309:5: ( CAST_SYM LPAREN expression AS_SYM cast_data_type RPAREN )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1309:8: CAST_SYM LPAREN expression AS_SYM cast_data_type RPAREN
					{
					CAST_SYM164=(Token)match(input,CAST_SYM,FOLLOW_CAST_SYM_in_function_call23319); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CAST_SYM164_tree = (Object)adaptor.create(CAST_SYM164);
					adaptor.addChild(root_0, CAST_SYM164_tree);
					}

					LPAREN165=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_function_call23321); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN165_tree = (Object)adaptor.create(LPAREN165);
					adaptor.addChild(root_0, LPAREN165_tree);
					}

					pushFollow(FOLLOW_expression_in_function_call23323);
					expression166=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression166.getTree());

					AS_SYM167=(Token)match(input,AS_SYM,FOLLOW_AS_SYM_in_function_call23325); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					AS_SYM167_tree = (Object)adaptor.create(AS_SYM167);
					adaptor.addChild(root_0, AS_SYM167_tree);
					}

					pushFollow(FOLLOW_cast_data_type_in_function_call23327);
					cast_data_type168=cast_data_type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, cast_data_type168.getTree());

					RPAREN169=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_function_call23329); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN169_tree = (Object)adaptor.create(RPAREN169);
					adaptor.addChild(root_0, RPAREN169_tree);
					}

					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1310:5: ( CONVERT_SYM LPAREN expression COMMA cast_data_type RPAREN )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1310:5: ( CONVERT_SYM LPAREN expression COMMA cast_data_type RPAREN )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1310:8: CONVERT_SYM LPAREN expression COMMA cast_data_type RPAREN
					{
					CONVERT_SYM170=(Token)match(input,CONVERT_SYM,FOLLOW_CONVERT_SYM_in_function_call23341); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CONVERT_SYM170_tree = (Object)adaptor.create(CONVERT_SYM170);
					adaptor.addChild(root_0, CONVERT_SYM170_tree);
					}

					LPAREN171=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_function_call23343); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN171_tree = (Object)adaptor.create(LPAREN171);
					adaptor.addChild(root_0, LPAREN171_tree);
					}

					pushFollow(FOLLOW_expression_in_function_call23345);
					expression172=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression172.getTree());

					COMMA173=(Token)match(input,COMMA,FOLLOW_COMMA_in_function_call23347); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA173_tree = (Object)adaptor.create(COMMA173);
					adaptor.addChild(root_0, COMMA173_tree);
					}

					pushFollow(FOLLOW_cast_data_type_in_function_call23349);
					cast_data_type174=cast_data_type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, cast_data_type174.getTree());

					RPAREN175=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_function_call23351); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN175_tree = (Object)adaptor.create(RPAREN175);
					adaptor.addChild(root_0, RPAREN175_tree);
					}

					}

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1311:5: ( CONVERT_SYM LPAREN expression USING_SYM transcoding_name RPAREN )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1311:5: ( CONVERT_SYM LPAREN expression USING_SYM transcoding_name RPAREN )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1311:8: CONVERT_SYM LPAREN expression USING_SYM transcoding_name RPAREN
					{
					CONVERT_SYM176=(Token)match(input,CONVERT_SYM,FOLLOW_CONVERT_SYM_in_function_call23363); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CONVERT_SYM176_tree = (Object)adaptor.create(CONVERT_SYM176);
					adaptor.addChild(root_0, CONVERT_SYM176_tree);
					}

					LPAREN177=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_function_call23365); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN177_tree = (Object)adaptor.create(LPAREN177);
					adaptor.addChild(root_0, LPAREN177_tree);
					}

					pushFollow(FOLLOW_expression_in_function_call23367);
					expression178=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression178.getTree());

					USING_SYM179=(Token)match(input,USING_SYM,FOLLOW_USING_SYM_in_function_call23369); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					USING_SYM179_tree = (Object)adaptor.create(USING_SYM179);
					adaptor.addChild(root_0, USING_SYM179_tree);
					}

					pushFollow(FOLLOW_transcoding_name_in_function_call23371);
					transcoding_name180=transcoding_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, transcoding_name180.getTree());

					RPAREN181=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_function_call23373); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN181_tree = (Object)adaptor.create(RPAREN181);
					adaptor.addChild(root_0, RPAREN181_tree);
					}

					}

					}
					break;
				case 5 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1312:5: ( group_functions LPAREN ( ASTERISK | ALL | DISTINCT )? bit_expr RPAREN )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1312:5: ( group_functions LPAREN ( ASTERISK | ALL | DISTINCT )? bit_expr RPAREN )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1312:8: group_functions LPAREN ( ASTERISK | ALL | DISTINCT )? bit_expr RPAREN
					{
					pushFollow(FOLLOW_group_functions_in_function_call23385);
					group_functions182=group_functions();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, group_functions182.getTree());

					LPAREN183=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_function_call23387); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN183_tree = (Object)adaptor.create(LPAREN183);
					adaptor.addChild(root_0, LPAREN183_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1312:31: ( ASTERISK | ALL | DISTINCT )?
					int alt38=2;
					int LA38_0 = input.LA(1);
					if ( (LA38_0==ALL||LA38_0==ASTERISK||LA38_0==DISTINCT) ) {
						alt38=1;
					}
					switch (alt38) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
							{
							set184=input.LT(1);
							if ( input.LA(1)==ALL||input.LA(1)==ASTERISK||input.LA(1)==DISTINCT ) {
								input.consume();
								if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set184));
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								throw mse;
							}
							}
							break;

					}

					pushFollow(FOLLOW_bit_expr_in_function_call23404);
					bit_expr185=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr185.getTree());

					RPAREN186=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_function_call23406); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN186_tree = (Object)adaptor.create(RPAREN186);
					adaptor.addChild(root_0, RPAREN186_tree);
					}

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "function_call"


	public static class case_when_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "case_when_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1315:1: case_when_statement : ( case_when_statement1 | case_when_statement2 );
	public final SQLParser.case_when_statement_return case_when_statement() throws RecognitionException {
		SQLParser.case_when_statement_return retval = new SQLParser.case_when_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope case_when_statement1187 =null;
		ParserRuleReturnScope case_when_statement2188 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1315:20: ( case_when_statement1 | case_when_statement2 )
			int alt40=2;
			int LA40_0 = input.LA(1);
			if ( (LA40_0==CASE_SYM) ) {
				int LA40_1 = input.LA(2);
				if ( (LA40_1==WHEN_SYM) ) {
					alt40=1;
				}
				else if ( (LA40_1==ABS||LA40_1==ACOS||(LA40_1 >= ADDDATE && LA40_1 <= ADDTIME)||(LA40_1 >= AES_DECRYPT && LA40_1 <= AES_ENCRYPT)||LA40_1==ASCII_SYM||LA40_1==ASIN||(LA40_1 >= ATAN && LA40_1 <= ATAN2)||LA40_1==AVG||LA40_1==BENCHMARK||(LA40_1 >= BIN && LA40_1 <= BINARY)||(LA40_1 >= BIT_AND && LA40_1 <= BIT_OR)||LA40_1==BIT_XOR||(LA40_1 >= CASE_SYM && LA40_1 <= CEILING)||LA40_1==CHAR||(LA40_1 >= CHARSET && LA40_1 <= CHAR_LENGTH)||LA40_1==COERCIBILITY||LA40_1==COLLATION||(LA40_1 >= CONCAT && LA40_1 <= CONCAT_WS)||LA40_1==CONNECTION_ID||(LA40_1 >= CONV && LA40_1 <= CONVERT_TZ)||(LA40_1 >= COS && LA40_1 <= COUNT)||LA40_1==CRC32||LA40_1==CURDATE||LA40_1==CURRENT_USER||LA40_1==CURTIME||LA40_1==DATABASE||LA40_1==DATEDIFF||(LA40_1 >= DATE_ADD && LA40_1 <= DAYOFYEAR)||(LA40_1 >= DECODE && LA40_1 <= DEFAULT)||LA40_1==DEGREES||(LA40_1 >= DES_DECRYPT && LA40_1 <= DES_ENCRYPT)||LA40_1==ELT||(LA40_1 >= ENCODE && LA40_1 <= ENCRYPT)||LA40_1==EXISTS||LA40_1==EXP||LA40_1==EXPORT_SET||LA40_1==EXTRACT||LA40_1==FALSE_SYM||LA40_1==FIELD||LA40_1==FIND_IN_SET||LA40_1==FLOOR||LA40_1==FORMAT||LA40_1==FOUND_ROWS||(LA40_1 >= FROM_BASE64 && LA40_1 <= FROM_UNIXTIME)||(LA40_1 >= GET_FORMAT && LA40_1 <= GET_LOCK)||LA40_1==GROUP_CONCAT||(LA40_1 >= HEX && LA40_1 <= HEX_DIGIT)||LA40_1==HOUR||LA40_1==ID||(LA40_1 >= IF && LA40_1 <= IFNULL)||(LA40_1 >= INET_ATON && LA40_1 <= INET_NTOA)||LA40_1==INSERT||(LA40_1 >= INSTR && LA40_1 <= INTEGER_NUM)||LA40_1==INTERVAL_SYM||LA40_1==IS_FREE_LOCK||LA40_1==IS_USED_LOCK||(LA40_1 >= LAST_DAY && LA40_1 <= LAST_INSERT_ID)||(LA40_1 >= LEFT && LA40_1 <= LENGTH)||LA40_1==LN||LA40_1==LOAD_FILE||LA40_1==LOCATE||(LA40_1 >= LOG && LA40_1 <= LOG2)||LA40_1==LOWER||(LA40_1 >= LPAD && LA40_1 <= LPAREN)||LA40_1==LTRIM||(LA40_1 >= MAKEDATE && LA40_1 <= MAKE_SET)||LA40_1==MASTER_POS_WAIT||LA40_1==MATCH||LA40_1==MAX_SYM||LA40_1==MD5||(LA40_1 >= MICROSECOND && LA40_1 <= MID)||(LA40_1 >= MINUS && LA40_1 <= MINUTE)||LA40_1==MIN_SYM||LA40_1==MOD||(LA40_1 >= MONTH && LA40_1 <= MONTHNAME)||LA40_1==NAME_CONST||LA40_1==NEGATION||LA40_1==NOW||LA40_1==NULL_SYM||LA40_1==OCT||LA40_1==OLD_PASSWORD||LA40_1==ORD||(LA40_1 >= PASSWORD && LA40_1 <= PERIOD_DIFF)||LA40_1==PI||LA40_1==PLUS||(LA40_1 >= POW && LA40_1 <= POWER)||LA40_1==QUARTER||LA40_1==QUOTE||(LA40_1 >= RADIANS && LA40_1 <= RAND)||LA40_1==REAL_NUMBER||LA40_1==RELEASE_LOCK||LA40_1==REPEAT||LA40_1==REPLACE||LA40_1==REVERSE||LA40_1==RIGHT||LA40_1==ROUND||(LA40_1 >= ROW_SYM && LA40_1 <= RPAD)||LA40_1==RTRIM||(LA40_1 >= SCHEMA && LA40_1 <= SECOND)||LA40_1==SEC_TO_TIME||LA40_1==SESSION_USER||LA40_1==SIGN||LA40_1==SIN||LA40_1==SLEEP||LA40_1==SOUNDEX||LA40_1==SPACE||LA40_1==SQRT||(LA40_1 >= STD && LA40_1 <= STDDEV_SAMP)||LA40_1==STRCMP||LA40_1==STR_TO_DATE||(LA40_1 >= SUBSTRING && LA40_1 <= SUM)||(LA40_1 >= SYSDATE && LA40_1 <= SYSTEM_USER)||LA40_1==TAN||LA40_1==TEXT_STRING||(LA40_1 >= TIMEDIFF && LA40_1 <= TIME_TO_SEC)||(LA40_1 >= TO_BASE64 && LA40_1 <= TO_SECONDS)||(LA40_1 >= TRIM && LA40_1 <= TRUNCATE)||LA40_1==UNHEX||LA40_1==UNIX_TIMESTAMP||LA40_1==UPPER||(LA40_1 >= USER && LA40_1 <= USER_VAR)||(LA40_1 >= UTC_DATE && LA40_1 <= UTC_TIMESTAMP)||LA40_1==UUID||LA40_1==VALUES||LA40_1==VARIANCE||(LA40_1 >= VAR_POP && LA40_1 <= VERSION_SYM)||(LA40_1 >= WEEK && LA40_1 <= WEIGHT_STRING)||(LA40_1 >= YEAR && LA40_1 <= YEARWEEK)) ) {
					alt40=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 40, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 40, 0, input);
				throw nvae;
			}

			switch (alt40) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1316:9: case_when_statement1
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_case_when_statement1_in_case_when_statement23425);
					case_when_statement1187=case_when_statement1();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, case_when_statement1187.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1316:32: case_when_statement2
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_case_when_statement2_in_case_when_statement23429);
					case_when_statement2188=case_when_statement2();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, case_when_statement2188.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "case_when_statement"


	public static class case_when_statement1_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "case_when_statement1"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1318:1: case_when_statement1 : CASE_SYM ^ ( WHEN_SYM ^ expression THEN_SYM ^ bit_expr )+ ( ELSE_SYM ^ bit_expr )? END_SYM ;
	public final SQLParser.case_when_statement1_return case_when_statement1() throws RecognitionException {
		SQLParser.case_when_statement1_return retval = new SQLParser.case_when_statement1_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token CASE_SYM189=null;
		Token WHEN_SYM190=null;
		Token THEN_SYM192=null;
		Token ELSE_SYM194=null;
		Token END_SYM196=null;
		ParserRuleReturnScope expression191 =null;
		ParserRuleReturnScope bit_expr193 =null;
		ParserRuleReturnScope bit_expr195 =null;

		Object CASE_SYM189_tree=null;
		Object WHEN_SYM190_tree=null;
		Object THEN_SYM192_tree=null;
		Object ELSE_SYM194_tree=null;
		Object END_SYM196_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1318:21: ( CASE_SYM ^ ( WHEN_SYM ^ expression THEN_SYM ^ bit_expr )+ ( ELSE_SYM ^ bit_expr )? END_SYM )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1319:9: CASE_SYM ^ ( WHEN_SYM ^ expression THEN_SYM ^ bit_expr )+ ( ELSE_SYM ^ bit_expr )? END_SYM
			{
			root_0 = (Object)adaptor.nil();


			CASE_SYM189=(Token)match(input,CASE_SYM,FOLLOW_CASE_SYM_in_case_when_statement123444); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			CASE_SYM189_tree = (Object)adaptor.create(CASE_SYM189);
			root_0 = (Object)adaptor.becomeRoot(CASE_SYM189_tree, root_0);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1320:9: ( WHEN_SYM ^ expression THEN_SYM ^ bit_expr )+
			int cnt41=0;
			loop41:
			while (true) {
				int alt41=2;
				int LA41_0 = input.LA(1);
				if ( (LA41_0==WHEN_SYM) ) {
					alt41=1;
				}

				switch (alt41) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1320:11: WHEN_SYM ^ expression THEN_SYM ^ bit_expr
					{
					WHEN_SYM190=(Token)match(input,WHEN_SYM,FOLLOW_WHEN_SYM_in_case_when_statement123458); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					WHEN_SYM190_tree = (Object)adaptor.create(WHEN_SYM190);
					root_0 = (Object)adaptor.becomeRoot(WHEN_SYM190_tree, root_0);
					}

					pushFollow(FOLLOW_expression_in_case_when_statement123462);
					expression191=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression191.getTree());

					THEN_SYM192=(Token)match(input,THEN_SYM,FOLLOW_THEN_SYM_in_case_when_statement123464); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					THEN_SYM192_tree = (Object)adaptor.create(THEN_SYM192);
					root_0 = (Object)adaptor.becomeRoot(THEN_SYM192_tree, root_0);
					}

					pushFollow(FOLLOW_bit_expr_in_case_when_statement123468);
					bit_expr193=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr193.getTree());

					}
					break;

				default :
					if ( cnt41 >= 1 ) break loop41;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(41, input);
					throw eee;
				}
				cnt41++;
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1321:9: ( ELSE_SYM ^ bit_expr )?
			int alt42=2;
			int LA42_0 = input.LA(1);
			if ( (LA42_0==ELSE_SYM) ) {
				alt42=1;
			}
			switch (alt42) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1321:11: ELSE_SYM ^ bit_expr
					{
					ELSE_SYM194=(Token)match(input,ELSE_SYM,FOLLOW_ELSE_SYM_in_case_when_statement123483); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ELSE_SYM194_tree = (Object)adaptor.create(ELSE_SYM194);
					root_0 = (Object)adaptor.becomeRoot(ELSE_SYM194_tree, root_0);
					}

					pushFollow(FOLLOW_bit_expr_in_case_when_statement123487);
					bit_expr195=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr195.getTree());

					}
					break;

			}

			END_SYM196=(Token)match(input,END_SYM,FOLLOW_END_SYM_in_case_when_statement123500); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			END_SYM196_tree = (Object)adaptor.create(END_SYM196);
			adaptor.addChild(root_0, END_SYM196_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "case_when_statement1"


	public static class case_when_statement2_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "case_when_statement2"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1324:1: case_when_statement2 : CASE_SYM ^ bit_expr ( WHEN_SYM ^ bit_expr THEN_SYM ^ bit_expr )+ ( ELSE_SYM ^ bit_expr )? END_SYM ;
	public final SQLParser.case_when_statement2_return case_when_statement2() throws RecognitionException {
		SQLParser.case_when_statement2_return retval = new SQLParser.case_when_statement2_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token CASE_SYM197=null;
		Token WHEN_SYM199=null;
		Token THEN_SYM201=null;
		Token ELSE_SYM203=null;
		Token END_SYM205=null;
		ParserRuleReturnScope bit_expr198 =null;
		ParserRuleReturnScope bit_expr200 =null;
		ParserRuleReturnScope bit_expr202 =null;
		ParserRuleReturnScope bit_expr204 =null;

		Object CASE_SYM197_tree=null;
		Object WHEN_SYM199_tree=null;
		Object THEN_SYM201_tree=null;
		Object ELSE_SYM203_tree=null;
		Object END_SYM205_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1324:21: ( CASE_SYM ^ bit_expr ( WHEN_SYM ^ bit_expr THEN_SYM ^ bit_expr )+ ( ELSE_SYM ^ bit_expr )? END_SYM )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1325:9: CASE_SYM ^ bit_expr ( WHEN_SYM ^ bit_expr THEN_SYM ^ bit_expr )+ ( ELSE_SYM ^ bit_expr )? END_SYM
			{
			root_0 = (Object)adaptor.nil();


			CASE_SYM197=(Token)match(input,CASE_SYM,FOLLOW_CASE_SYM_in_case_when_statement223515); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			CASE_SYM197_tree = (Object)adaptor.create(CASE_SYM197);
			root_0 = (Object)adaptor.becomeRoot(CASE_SYM197_tree, root_0);
			}

			pushFollow(FOLLOW_bit_expr_in_case_when_statement223519);
			bit_expr198=bit_expr();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr198.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1326:9: ( WHEN_SYM ^ bit_expr THEN_SYM ^ bit_expr )+
			int cnt43=0;
			loop43:
			while (true) {
				int alt43=2;
				int LA43_0 = input.LA(1);
				if ( (LA43_0==WHEN_SYM) ) {
					alt43=1;
				}

				switch (alt43) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1326:11: WHEN_SYM ^ bit_expr THEN_SYM ^ bit_expr
					{
					WHEN_SYM199=(Token)match(input,WHEN_SYM,FOLLOW_WHEN_SYM_in_case_when_statement223531); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					WHEN_SYM199_tree = (Object)adaptor.create(WHEN_SYM199);
					root_0 = (Object)adaptor.becomeRoot(WHEN_SYM199_tree, root_0);
					}

					pushFollow(FOLLOW_bit_expr_in_case_when_statement223535);
					bit_expr200=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr200.getTree());

					THEN_SYM201=(Token)match(input,THEN_SYM,FOLLOW_THEN_SYM_in_case_when_statement223537); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					THEN_SYM201_tree = (Object)adaptor.create(THEN_SYM201);
					root_0 = (Object)adaptor.becomeRoot(THEN_SYM201_tree, root_0);
					}

					pushFollow(FOLLOW_bit_expr_in_case_when_statement223541);
					bit_expr202=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr202.getTree());

					}
					break;

				default :
					if ( cnt43 >= 1 ) break loop43;
					if (state.backtracking>0) {state.failed=true; return retval;}
					EarlyExitException eee = new EarlyExitException(43, input);
					throw eee;
				}
				cnt43++;
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1327:9: ( ELSE_SYM ^ bit_expr )?
			int alt44=2;
			int LA44_0 = input.LA(1);
			if ( (LA44_0==ELSE_SYM) ) {
				alt44=1;
			}
			switch (alt44) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1327:11: ELSE_SYM ^ bit_expr
					{
					ELSE_SYM203=(Token)match(input,ELSE_SYM,FOLLOW_ELSE_SYM_in_case_when_statement223556); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ELSE_SYM203_tree = (Object)adaptor.create(ELSE_SYM203);
					root_0 = (Object)adaptor.becomeRoot(ELSE_SYM203_tree, root_0);
					}

					pushFollow(FOLLOW_bit_expr_in_case_when_statement223560);
					bit_expr204=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr204.getTree());

					}
					break;

			}

			END_SYM205=(Token)match(input,END_SYM,FOLLOW_END_SYM_in_case_when_statement223573); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			END_SYM205_tree = (Object)adaptor.create(END_SYM205);
			adaptor.addChild(root_0, END_SYM205_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "case_when_statement2"


	public static class match_against_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "match_against_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1331:1: match_against_statement : MATCH ( column_spec ( COMMA column_spec )* ) AGAINST ( expression ( search_modifier )? ) ;
	public final SQLParser.match_against_statement_return match_against_statement() throws RecognitionException {
		SQLParser.match_against_statement_return retval = new SQLParser.match_against_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token MATCH206=null;
		Token COMMA208=null;
		Token AGAINST210=null;
		ParserRuleReturnScope column_spec207 =null;
		ParserRuleReturnScope column_spec209 =null;
		ParserRuleReturnScope expression211 =null;
		ParserRuleReturnScope search_modifier212 =null;

		Object MATCH206_tree=null;
		Object COMMA208_tree=null;
		Object AGAINST210_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1331:24: ( MATCH ( column_spec ( COMMA column_spec )* ) AGAINST ( expression ( search_modifier )? ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1332:3: MATCH ( column_spec ( COMMA column_spec )* ) AGAINST ( expression ( search_modifier )? )
			{
			root_0 = (Object)adaptor.nil();


			MATCH206=(Token)match(input,MATCH,FOLLOW_MATCH_in_match_against_statement23585); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			MATCH206_tree = (Object)adaptor.create(MATCH206);
			adaptor.addChild(root_0, MATCH206_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1332:9: ( column_spec ( COMMA column_spec )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1332:10: column_spec ( COMMA column_spec )*
			{
			pushFollow(FOLLOW_column_spec_in_match_against_statement23588);
			column_spec207=column_spec();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, column_spec207.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1332:22: ( COMMA column_spec )*
			loop45:
			while (true) {
				int alt45=2;
				int LA45_0 = input.LA(1);
				if ( (LA45_0==COMMA) ) {
					alt45=1;
				}

				switch (alt45) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1332:23: COMMA column_spec
					{
					COMMA208=(Token)match(input,COMMA,FOLLOW_COMMA_in_match_against_statement23591); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA208_tree = (Object)adaptor.create(COMMA208);
					adaptor.addChild(root_0, COMMA208_tree);
					}

					pushFollow(FOLLOW_column_spec_in_match_against_statement23593);
					column_spec209=column_spec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_spec209.getTree());

					}
					break;

				default :
					break loop45;
				}
			}

			}

			AGAINST210=(Token)match(input,AGAINST,FOLLOW_AGAINST_in_match_against_statement23599); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			AGAINST210_tree = (Object)adaptor.create(AGAINST210);
			adaptor.addChild(root_0, AGAINST210_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1332:53: ( expression ( search_modifier )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1332:54: expression ( search_modifier )?
			{
			pushFollow(FOLLOW_expression_in_match_against_statement23602);
			expression211=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression211.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1332:65: ( search_modifier )?
			int alt46=2;
			int LA46_0 = input.LA(1);
			if ( (LA46_0==IN_SYM) ) {
				int LA46_1 = input.LA(2);
				if ( (synpred332_SQL()) ) {
					alt46=1;
				}
			}
			else if ( (LA46_0==WITH) ) {
				int LA46_2 = input.LA(2);
				if ( (synpred332_SQL()) ) {
					alt46=1;
				}
			}
			switch (alt46) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1332:66: search_modifier
					{
					pushFollow(FOLLOW_search_modifier_in_match_against_statement23605);
					search_modifier212=search_modifier();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, search_modifier212.getTree());

					}
					break;

			}

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "match_against_statement"


	public static class column_spec_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "column_spec"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1335:1: column_spec : ( ( schema_name DOT ^)? table_name DOT ^)? column_name ;
	public final SQLParser.column_spec_return column_spec() throws RecognitionException {
		SQLParser.column_spec_return retval = new SQLParser.column_spec_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token DOT214=null;
		Token DOT216=null;
		ParserRuleReturnScope schema_name213 =null;
		ParserRuleReturnScope table_name215 =null;
		ParserRuleReturnScope column_name217 =null;

		Object DOT214_tree=null;
		Object DOT216_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1335:12: ( ( ( schema_name DOT ^)? table_name DOT ^)? column_name )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1336:3: ( ( schema_name DOT ^)? table_name DOT ^)? column_name
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1336:3: ( ( schema_name DOT ^)? table_name DOT ^)?
			int alt48=2;
			int LA48_0 = input.LA(1);
			if ( (LA48_0==ID) ) {
				int LA48_1 = input.LA(2);
				if ( (LA48_1==DOT) ) {
					alt48=1;
				}
			}
			switch (alt48) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1336:5: ( schema_name DOT ^)? table_name DOT ^
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1336:5: ( schema_name DOT ^)?
					int alt47=2;
					int LA47_0 = input.LA(1);
					if ( (LA47_0==ID) ) {
						int LA47_1 = input.LA(2);
						if ( (LA47_1==DOT) ) {
							int LA47_2 = input.LA(3);
							if ( (LA47_2==ID) ) {
								int LA47_3 = input.LA(4);
								if ( (LA47_3==DOT) ) {
									alt47=1;
								}
							}
						}
					}
					switch (alt47) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1336:7: schema_name DOT ^
							{
							pushFollow(FOLLOW_schema_name_in_column_spec23624);
							schema_name213=schema_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, schema_name213.getTree());

							DOT214=(Token)match(input,DOT,FOLLOW_DOT_in_column_spec23626); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DOT214_tree = (Object)adaptor.create(DOT214);
							root_0 = (Object)adaptor.becomeRoot(DOT214_tree, root_0);
							}

							}
							break;

					}

					pushFollow(FOLLOW_table_name_in_column_spec23633);
					table_name215=table_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name215.getTree());

					DOT216=(Token)match(input,DOT,FOLLOW_DOT_in_column_spec23635); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DOT216_tree = (Object)adaptor.create(DOT216);
					root_0 = (Object)adaptor.becomeRoot(DOT216_tree, root_0);
					}

					}
					break;

			}

			pushFollow(FOLLOW_column_name_in_column_spec23642);
			column_name217=column_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, column_name217.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "column_spec"


	public static class expression_list_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "expression_list"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1338:1: expression_list : LPAREN ! expression ( COMMA ^ expression )* RPAREN !;
	public final SQLParser.expression_list_return expression_list() throws RecognitionException {
		SQLParser.expression_list_return retval = new SQLParser.expression_list_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token LPAREN218=null;
		Token COMMA220=null;
		Token RPAREN222=null;
		ParserRuleReturnScope expression219 =null;
		ParserRuleReturnScope expression221 =null;

		Object LPAREN218_tree=null;
		Object COMMA220_tree=null;
		Object RPAREN222_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1338:16: ( LPAREN ! expression ( COMMA ^ expression )* RPAREN !)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1339:3: LPAREN ! expression ( COMMA ^ expression )* RPAREN !
			{
			root_0 = (Object)adaptor.nil();


			LPAREN218=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_expression_list23652); if (state.failed) return retval;
			pushFollow(FOLLOW_expression_in_expression_list23656);
			expression219=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression219.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1339:23: ( COMMA ^ expression )*
			loop49:
			while (true) {
				int alt49=2;
				int LA49_0 = input.LA(1);
				if ( (LA49_0==COMMA) ) {
					alt49=1;
				}

				switch (alt49) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1339:25: COMMA ^ expression
					{
					COMMA220=(Token)match(input,COMMA,FOLLOW_COMMA_in_expression_list23660); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA220_tree = (Object)adaptor.create(COMMA220);
					root_0 = (Object)adaptor.becomeRoot(COMMA220_tree, root_0);
					}

					pushFollow(FOLLOW_expression_in_expression_list23664);
					expression221=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression221.getTree());

					}
					break;

				default :
					break loop49;
				}
			}

			RPAREN222=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_expression_list23669); if (state.failed) return retval;
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "expression_list"


	public static class interval_expr_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "interval_expr"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1342:1: interval_expr : INTERVAL_SYM expression interval_unit ;
	public final SQLParser.interval_expr_return interval_expr() throws RecognitionException {
		SQLParser.interval_expr_return retval = new SQLParser.interval_expr_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token INTERVAL_SYM223=null;
		ParserRuleReturnScope expression224 =null;
		ParserRuleReturnScope interval_unit225 =null;

		Object INTERVAL_SYM223_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1342:14: ( INTERVAL_SYM expression interval_unit )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1343:3: INTERVAL_SYM expression interval_unit
			{
			root_0 = (Object)adaptor.nil();


			INTERVAL_SYM223=(Token)match(input,INTERVAL_SYM,FOLLOW_INTERVAL_SYM_in_interval_expr23683); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			INTERVAL_SYM223_tree = (Object)adaptor.create(INTERVAL_SYM223);
			adaptor.addChild(root_0, INTERVAL_SYM223_tree);
			}

			pushFollow(FOLLOW_expression_in_interval_expr23685);
			expression224=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression224.getTree());

			pushFollow(FOLLOW_interval_unit_in_interval_expr23687);
			interval_unit225=interval_unit();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, interval_unit225.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "interval_expr"


	public static class table_references_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "table_references"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1352:1: table_references : table_reference ( COMMA ^ table_reference )* ;
	public final SQLParser.table_references_return table_references() throws RecognitionException {
		SQLParser.table_references_return retval = new SQLParser.table_references_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token COMMA227=null;
		ParserRuleReturnScope table_reference226 =null;
		ParserRuleReturnScope table_reference228 =null;

		Object COMMA227_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1352:17: ( table_reference ( COMMA ^ table_reference )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1353:9: table_reference ( COMMA ^ table_reference )*
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_table_reference_in_table_references23709);
			table_reference226=table_reference();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_reference226.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1353:25: ( COMMA ^ table_reference )*
			loop50:
			while (true) {
				int alt50=2;
				int LA50_0 = input.LA(1);
				if ( (LA50_0==COMMA) ) {
					int LA50_2 = input.LA(2);
					if ( (LA50_2==ID||LA50_2==LPAREN||LA50_2==OJ_SYM) ) {
						alt50=1;
					}

				}

				switch (alt50) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1353:27: COMMA ^ table_reference
					{
					COMMA227=(Token)match(input,COMMA,FOLLOW_COMMA_in_table_references23713); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA227_tree = (Object)adaptor.create(COMMA227);
					root_0 = (Object)adaptor.becomeRoot(COMMA227_tree, root_0);
					}

					pushFollow(FOLLOW_table_reference_in_table_references23717);
					table_reference228=table_reference();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_reference228.getTree());

					}
					break;

				default :
					break loop50;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_references"


	public static class table_reference_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "table_reference"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1355:1: table_reference : ( table_factor1 | table_atom );
	public final SQLParser.table_reference_return table_reference() throws RecognitionException {
		SQLParser.table_reference_return retval = new SQLParser.table_reference_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope table_factor1229 =null;
		ParserRuleReturnScope table_atom230 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1355:16: ( table_factor1 | table_atom )
			int alt51=2;
			switch ( input.LA(1) ) {
			case ID:
				{
				int LA51_1 = input.LA(2);
				if ( (synpred337_SQL()) ) {
					alt51=1;
				}
				else if ( (true) ) {
					alt51=2;
				}

				}
				break;
			case LPAREN:
				{
				int LA51_2 = input.LA(2);
				if ( (synpred337_SQL()) ) {
					alt51=1;
				}
				else if ( (true) ) {
					alt51=2;
				}

				}
				break;
			case OJ_SYM:
				{
				int LA51_3 = input.LA(2);
				if ( (synpred337_SQL()) ) {
					alt51=1;
				}
				else if ( (true) ) {
					alt51=2;
				}

				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 51, 0, input);
				throw nvae;
			}
			switch (alt51) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1356:3: table_factor1
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_table_factor1_in_table_reference23729);
					table_factor1229=table_factor1();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_factor1229.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1356:19: table_atom
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_table_atom_in_table_reference23733);
					table_atom230=table_atom();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_atom230.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_reference"


	public static class table_factor1_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "table_factor1"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1358:1: table_factor1 : table_factor2 ( table_factor1_part )? ;
	public final SQLParser.table_factor1_return table_factor1() throws RecognitionException {
		SQLParser.table_factor1_return retval = new SQLParser.table_factor1_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope table_factor2231 =null;
		ParserRuleReturnScope table_factor1_part232 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1358:14: ( table_factor2 ( table_factor1_part )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1359:3: table_factor2 ( table_factor1_part )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_table_factor2_in_table_factor123742);
			table_factor2231=table_factor2();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_factor2231.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1359:17: ( table_factor1_part )?
			int alt52=2;
			int LA52_0 = input.LA(1);
			if ( (LA52_0==CROSS||LA52_0==INNER_SYM||LA52_0==JOIN_SYM) ) {
				alt52=1;
			}
			switch (alt52) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1359:18: table_factor1_part
					{
					pushFollow(FOLLOW_table_factor1_part_in_table_factor123745);
					table_factor1_part232=table_factor1_part();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_factor1_part232.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_factor1"


	public static class table_factor2_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "table_factor2"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1361:1: table_factor2 : table_factor3 ( table_factor2_part )? ;
	public final SQLParser.table_factor2_return table_factor2() throws RecognitionException {
		SQLParser.table_factor2_return retval = new SQLParser.table_factor2_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope table_factor3233 =null;
		ParserRuleReturnScope table_factor2_part234 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1361:14: ( table_factor3 ( table_factor2_part )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1362:3: table_factor3 ( table_factor2_part )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_table_factor3_in_table_factor223756);
			table_factor3233=table_factor3();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_factor3233.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1362:17: ( table_factor2_part )?
			int alt53=2;
			int LA53_0 = input.LA(1);
			if ( (LA53_0==STRAIGHT_JOIN) ) {
				alt53=1;
			}
			switch (alt53) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1362:18: table_factor2_part
					{
					pushFollow(FOLLOW_table_factor2_part_in_table_factor223759);
					table_factor2_part234=table_factor2_part();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_factor2_part234.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_factor2"


	public static class table_factor3_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "table_factor3"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1364:1: table_factor3 : table_factor4 ( table_factor3_part )? ;
	public final SQLParser.table_factor3_return table_factor3() throws RecognitionException {
		SQLParser.table_factor3_return retval = new SQLParser.table_factor3_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope table_factor4235 =null;
		ParserRuleReturnScope table_factor3_part236 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1364:14: ( table_factor4 ( table_factor3_part )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1365:3: table_factor4 ( table_factor3_part )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_table_factor4_in_table_factor323770);
			table_factor4235=table_factor4();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_factor4235.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1365:17: ( table_factor3_part )?
			int alt54=2;
			int LA54_0 = input.LA(1);
			if ( (LA54_0==LEFT) ) {
				int LA54_1 = input.LA(2);
				if ( (synpred340_SQL()) ) {
					alt54=1;
				}
			}
			else if ( (LA54_0==RIGHT) ) {
				alt54=1;
			}
			switch (alt54) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1365:18: table_factor3_part
					{
					pushFollow(FOLLOW_table_factor3_part_in_table_factor323773);
					table_factor3_part236=table_factor3_part();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_factor3_part236.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_factor3"


	public static class table_factor4_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "table_factor4"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1367:1: table_factor4 : table_atom ( table_factor4_part )? ;
	public final SQLParser.table_factor4_return table_factor4() throws RecognitionException {
		SQLParser.table_factor4_return retval = new SQLParser.table_factor4_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope table_atom237 =null;
		ParserRuleReturnScope table_factor4_part238 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1367:14: ( table_atom ( table_factor4_part )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1368:3: table_atom ( table_factor4_part )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_table_atom_in_table_factor423784);
			table_atom237=table_atom();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_atom237.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1368:14: ( table_factor4_part )?
			int alt55=2;
			int LA55_0 = input.LA(1);
			if ( (LA55_0==NATURAL) ) {
				alt55=1;
			}
			switch (alt55) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1368:15: table_factor4_part
					{
					pushFollow(FOLLOW_table_factor4_part_in_table_factor423787);
					table_factor4_part238=table_factor4_part();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_factor4_part238.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_factor4"


	public static class table_atom_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "table_atom"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1370:1: table_atom : ( ( table_spec ^ ( partition_clause )? ( alias )? ( index_hint_list )? ) | ( subquery alias ) | ( LPAREN table_references RPAREN ) | ( OJ_SYM table_reference LEFT OUTER JOIN_SYM table_reference ON expression ) );
	public final SQLParser.table_atom_return table_atom() throws RecognitionException {
		SQLParser.table_atom_return retval = new SQLParser.table_atom_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token LPAREN245=null;
		Token RPAREN247=null;
		Token OJ_SYM248=null;
		Token LEFT250=null;
		Token OUTER251=null;
		Token JOIN_SYM252=null;
		Token ON254=null;
		ParserRuleReturnScope table_spec239 =null;
		ParserRuleReturnScope partition_clause240 =null;
		ParserRuleReturnScope alias241 =null;
		ParserRuleReturnScope index_hint_list242 =null;
		ParserRuleReturnScope subquery243 =null;
		ParserRuleReturnScope alias244 =null;
		ParserRuleReturnScope table_references246 =null;
		ParserRuleReturnScope table_reference249 =null;
		ParserRuleReturnScope table_reference253 =null;
		ParserRuleReturnScope expression255 =null;

		Object LPAREN245_tree=null;
		Object RPAREN247_tree=null;
		Object OJ_SYM248_tree=null;
		Object LEFT250_tree=null;
		Object OUTER251_tree=null;
		Object JOIN_SYM252_tree=null;
		Object ON254_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1370:11: ( ( table_spec ^ ( partition_clause )? ( alias )? ( index_hint_list )? ) | ( subquery alias ) | ( LPAREN table_references RPAREN ) | ( OJ_SYM table_reference LEFT OUTER JOIN_SYM table_reference ON expression ) )
			int alt59=4;
			switch ( input.LA(1) ) {
			case ID:
				{
				alt59=1;
				}
				break;
			case LPAREN:
				{
				int LA59_2 = input.LA(2);
				if ( (LA59_2==SELECT) ) {
					alt59=2;
				}
				else if ( (LA59_2==ID||LA59_2==LPAREN||LA59_2==OJ_SYM) ) {
					alt59=3;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 59, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case OJ_SYM:
				{
				alt59=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 59, 0, input);
				throw nvae;
			}
			switch (alt59) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1371:5: ( table_spec ^ ( partition_clause )? ( alias )? ( index_hint_list )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1371:5: ( table_spec ^ ( partition_clause )? ( alias )? ( index_hint_list )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1371:7: table_spec ^ ( partition_clause )? ( alias )? ( index_hint_list )?
					{
					pushFollow(FOLLOW_table_spec_in_table_atom23802);
					table_spec239=table_spec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) root_0 = (Object)adaptor.becomeRoot(table_spec239.getTree(), root_0);
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1371:20: ( partition_clause )?
					int alt56=2;
					alt56 = dfa56.predict(input);
					switch (alt56) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1371:21: partition_clause
							{
							pushFollow(FOLLOW_partition_clause_in_table_atom23807);
							partition_clause240=partition_clause();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_clause240.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1371:40: ( alias )?
					int alt57=2;
					int LA57_0 = input.LA(1);
					if ( (LA57_0==AS_SYM||LA57_0==ID) ) {
						alt57=1;
					}
					switch (alt57) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1371:41: alias
							{
							pushFollow(FOLLOW_alias_in_table_atom23812);
							alias241=alias();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, alias241.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1371:49: ( index_hint_list )?
					int alt58=2;
					int LA58_0 = input.LA(1);
					if ( (LA58_0==FORCE_SYM||LA58_0==IGNORE_SYM||LA58_0==USE_SYM) ) {
						alt58=1;
					}
					switch (alt58) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1371:50: index_hint_list
							{
							pushFollow(FOLLOW_index_hint_list_in_table_atom23817);
							index_hint_list242=index_hint_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_hint_list242.getTree());

							}
							break;

					}

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1372:5: ( subquery alias )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1372:5: ( subquery alias )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1372:7: subquery alias
					{
					pushFollow(FOLLOW_subquery_in_table_atom23829);
					subquery243=subquery();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, subquery243.getTree());

					pushFollow(FOLLOW_alias_in_table_atom23831);
					alias244=alias();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, alias244.getTree());

					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1373:5: ( LPAREN table_references RPAREN )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1373:5: ( LPAREN table_references RPAREN )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1373:7: LPAREN table_references RPAREN
					{
					LPAREN245=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_table_atom23841); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN245_tree = (Object)adaptor.create(LPAREN245);
					adaptor.addChild(root_0, LPAREN245_tree);
					}

					pushFollow(FOLLOW_table_references_in_table_atom23843);
					table_references246=table_references();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_references246.getTree());

					RPAREN247=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_table_atom23845); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN247_tree = (Object)adaptor.create(RPAREN247);
					adaptor.addChild(root_0, RPAREN247_tree);
					}

					}

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1374:5: ( OJ_SYM table_reference LEFT OUTER JOIN_SYM table_reference ON expression )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1374:5: ( OJ_SYM table_reference LEFT OUTER JOIN_SYM table_reference ON expression )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1374:7: OJ_SYM table_reference LEFT OUTER JOIN_SYM table_reference ON expression
					{
					OJ_SYM248=(Token)match(input,OJ_SYM,FOLLOW_OJ_SYM_in_table_atom23855); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					OJ_SYM248_tree = (Object)adaptor.create(OJ_SYM248);
					adaptor.addChild(root_0, OJ_SYM248_tree);
					}

					pushFollow(FOLLOW_table_reference_in_table_atom23857);
					table_reference249=table_reference();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_reference249.getTree());

					LEFT250=(Token)match(input,LEFT,FOLLOW_LEFT_in_table_atom23859); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LEFT250_tree = (Object)adaptor.create(LEFT250);
					adaptor.addChild(root_0, LEFT250_tree);
					}

					OUTER251=(Token)match(input,OUTER,FOLLOW_OUTER_in_table_atom23861); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					OUTER251_tree = (Object)adaptor.create(OUTER251);
					adaptor.addChild(root_0, OUTER251_tree);
					}

					JOIN_SYM252=(Token)match(input,JOIN_SYM,FOLLOW_JOIN_SYM_in_table_atom23863); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					JOIN_SYM252_tree = (Object)adaptor.create(JOIN_SYM252);
					adaptor.addChild(root_0, JOIN_SYM252_tree);
					}

					pushFollow(FOLLOW_table_reference_in_table_atom23865);
					table_reference253=table_reference();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_reference253.getTree());

					ON254=(Token)match(input,ON,FOLLOW_ON_in_table_atom23867); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ON254_tree = (Object)adaptor.create(ON254);
					adaptor.addChild(root_0, ON254_tree);
					}

					pushFollow(FOLLOW_expression_in_table_atom23869);
					expression255=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression255.getTree());

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_atom"


	public static class table_factor1_part_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "table_factor1_part"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1376:1: table_factor1_part : ( ( INNER_SYM | CROSS )? JOIN_SYM ^ table_atom ( join_condition )? ) ;
	public final SQLParser.table_factor1_part_return table_factor1_part() throws RecognitionException {
		SQLParser.table_factor1_part_return retval = new SQLParser.table_factor1_part_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set256=null;
		Token JOIN_SYM257=null;
		ParserRuleReturnScope table_atom258 =null;
		ParserRuleReturnScope join_condition259 =null;

		Object set256_tree=null;
		Object JOIN_SYM257_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1376:19: ( ( ( INNER_SYM | CROSS )? JOIN_SYM ^ table_atom ( join_condition )? ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1377:4: ( ( INNER_SYM | CROSS )? JOIN_SYM ^ table_atom ( join_condition )? )
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1377:4: ( ( INNER_SYM | CROSS )? JOIN_SYM ^ table_atom ( join_condition )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1377:4: ( INNER_SYM | CROSS )? JOIN_SYM ^ table_atom ( join_condition )?
			{
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1377:4: ( INNER_SYM | CROSS )?
			int alt60=2;
			int LA60_0 = input.LA(1);
			if ( (LA60_0==CROSS||LA60_0==INNER_SYM) ) {
				alt60=1;
			}
			switch (alt60) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
					{
					set256=input.LT(1);
					if ( input.LA(1)==CROSS||input.LA(1)==INNER_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set256));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			JOIN_SYM257=(Token)match(input,JOIN_SYM,FOLLOW_JOIN_SYM_in_table_factor1_part23890); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			JOIN_SYM257_tree = (Object)adaptor.create(JOIN_SYM257);
			root_0 = (Object)adaptor.becomeRoot(JOIN_SYM257_tree, root_0);
			}

			pushFollow(FOLLOW_table_atom_in_table_factor1_part23894);
			table_atom258=table_atom();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_atom258.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1377:47: ( join_condition )?
			int alt61=2;
			int LA61_0 = input.LA(1);
			if ( (LA61_0==ON) ) {
				int LA61_1 = input.LA(2);
				if ( (synpred350_SQL()) ) {
					alt61=1;
				}
			}
			else if ( (LA61_0==USING_SYM) ) {
				alt61=1;
			}
			switch (alt61) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1377:48: join_condition
					{
					pushFollow(FOLLOW_join_condition_in_table_factor1_part23897);
					join_condition259=join_condition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, join_condition259.getTree());

					}
					break;

			}

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_factor1_part"


	public static class table_factor2_part_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "table_factor2_part"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1379:1: table_factor2_part : ( STRAIGHT_JOIN ^ table_atom ( ON ^ expression )? ) ;
	public final SQLParser.table_factor2_part_return table_factor2_part() throws RecognitionException {
		SQLParser.table_factor2_part_return retval = new SQLParser.table_factor2_part_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token STRAIGHT_JOIN260=null;
		Token ON262=null;
		ParserRuleReturnScope table_atom261 =null;
		ParserRuleReturnScope expression263 =null;

		Object STRAIGHT_JOIN260_tree=null;
		Object ON262_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1379:19: ( ( STRAIGHT_JOIN ^ table_atom ( ON ^ expression )? ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1380:4: ( STRAIGHT_JOIN ^ table_atom ( ON ^ expression )? )
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1380:4: ( STRAIGHT_JOIN ^ table_atom ( ON ^ expression )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1380:4: STRAIGHT_JOIN ^ table_atom ( ON ^ expression )?
			{
			STRAIGHT_JOIN260=(Token)match(input,STRAIGHT_JOIN,FOLLOW_STRAIGHT_JOIN_in_table_factor2_part23912); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			STRAIGHT_JOIN260_tree = (Object)adaptor.create(STRAIGHT_JOIN260);
			root_0 = (Object)adaptor.becomeRoot(STRAIGHT_JOIN260_tree, root_0);
			}

			pushFollow(FOLLOW_table_atom_in_table_factor2_part23916);
			table_atom261=table_atom();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_atom261.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1380:31: ( ON ^ expression )?
			int alt62=2;
			int LA62_0 = input.LA(1);
			if ( (LA62_0==ON) ) {
				int LA62_1 = input.LA(2);
				if ( (synpred351_SQL()) ) {
					alt62=1;
				}
			}
			switch (alt62) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1380:32: ON ^ expression
					{
					ON262=(Token)match(input,ON,FOLLOW_ON_in_table_factor2_part23919); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ON262_tree = (Object)adaptor.create(ON262);
					root_0 = (Object)adaptor.becomeRoot(ON262_tree, root_0);
					}

					pushFollow(FOLLOW_expression_in_table_factor2_part23923);
					expression263=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression263.getTree());

					}
					break;

			}

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_factor2_part"


	public static class table_factor3_part_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "table_factor3_part"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1382:1: table_factor3_part : ( ( LEFT | RIGHT ) ( OUTER )? JOIN_SYM ^ table_factor4 join_condition ) ;
	public final SQLParser.table_factor3_part_return table_factor3_part() throws RecognitionException {
		SQLParser.table_factor3_part_return retval = new SQLParser.table_factor3_part_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set264=null;
		Token OUTER265=null;
		Token JOIN_SYM266=null;
		ParserRuleReturnScope table_factor4267 =null;
		ParserRuleReturnScope join_condition268 =null;

		Object set264_tree=null;
		Object OUTER265_tree=null;
		Object JOIN_SYM266_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1382:19: ( ( ( LEFT | RIGHT ) ( OUTER )? JOIN_SYM ^ table_factor4 join_condition ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1383:4: ( ( LEFT | RIGHT ) ( OUTER )? JOIN_SYM ^ table_factor4 join_condition )
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1383:4: ( ( LEFT | RIGHT ) ( OUTER )? JOIN_SYM ^ table_factor4 join_condition )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1383:4: ( LEFT | RIGHT ) ( OUTER )? JOIN_SYM ^ table_factor4 join_condition
			{
			set264=input.LT(1);
			if ( input.LA(1)==LEFT||input.LA(1)==RIGHT ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set264));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1383:17: ( OUTER )?
			int alt63=2;
			int LA63_0 = input.LA(1);
			if ( (LA63_0==OUTER) ) {
				alt63=1;
			}
			switch (alt63) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1383:18: OUTER
					{
					OUTER265=(Token)match(input,OUTER,FOLLOW_OUTER_in_table_factor3_part23945); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					OUTER265_tree = (Object)adaptor.create(OUTER265);
					adaptor.addChild(root_0, OUTER265_tree);
					}

					}
					break;

			}

			JOIN_SYM266=(Token)match(input,JOIN_SYM,FOLLOW_JOIN_SYM_in_table_factor3_part23949); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			JOIN_SYM266_tree = (Object)adaptor.create(JOIN_SYM266);
			root_0 = (Object)adaptor.becomeRoot(JOIN_SYM266_tree, root_0);
			}

			pushFollow(FOLLOW_table_factor4_in_table_factor3_part23953);
			table_factor4267=table_factor4();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_factor4267.getTree());

			pushFollow(FOLLOW_join_condition_in_table_factor3_part23955);
			join_condition268=join_condition();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, join_condition268.getTree());

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_factor3_part"


	public static class table_factor4_part_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "table_factor4_part"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1385:1: table_factor4_part : ( NATURAL ( ( LEFT | RIGHT ) ( OUTER )? )? JOIN_SYM ^ table_atom ) ;
	public final SQLParser.table_factor4_part_return table_factor4_part() throws RecognitionException {
		SQLParser.table_factor4_part_return retval = new SQLParser.table_factor4_part_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token NATURAL269=null;
		Token set270=null;
		Token OUTER271=null;
		Token JOIN_SYM272=null;
		ParserRuleReturnScope table_atom273 =null;

		Object NATURAL269_tree=null;
		Object set270_tree=null;
		Object OUTER271_tree=null;
		Object JOIN_SYM272_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1385:19: ( ( NATURAL ( ( LEFT | RIGHT ) ( OUTER )? )? JOIN_SYM ^ table_atom ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1386:4: ( NATURAL ( ( LEFT | RIGHT ) ( OUTER )? )? JOIN_SYM ^ table_atom )
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1386:4: ( NATURAL ( ( LEFT | RIGHT ) ( OUTER )? )? JOIN_SYM ^ table_atom )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1386:4: NATURAL ( ( LEFT | RIGHT ) ( OUTER )? )? JOIN_SYM ^ table_atom
			{
			NATURAL269=(Token)match(input,NATURAL,FOLLOW_NATURAL_in_table_factor4_part23968); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			NATURAL269_tree = (Object)adaptor.create(NATURAL269);
			adaptor.addChild(root_0, NATURAL269_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1386:12: ( ( LEFT | RIGHT ) ( OUTER )? )?
			int alt65=2;
			int LA65_0 = input.LA(1);
			if ( (LA65_0==LEFT||LA65_0==RIGHT) ) {
				alt65=1;
			}
			switch (alt65) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1386:14: ( LEFT | RIGHT ) ( OUTER )?
					{
					set270=input.LT(1);
					if ( input.LA(1)==LEFT||input.LA(1)==RIGHT ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set270));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1386:27: ( OUTER )?
					int alt64=2;
					int LA64_0 = input.LA(1);
					if ( (LA64_0==OUTER) ) {
						alt64=1;
					}
					switch (alt64) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1386:28: OUTER
							{
							OUTER271=(Token)match(input,OUTER,FOLLOW_OUTER_in_table_factor4_part23979); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							OUTER271_tree = (Object)adaptor.create(OUTER271);
							adaptor.addChild(root_0, OUTER271_tree);
							}

							}
							break;

					}

					}
					break;

			}

			JOIN_SYM272=(Token)match(input,JOIN_SYM,FOLLOW_JOIN_SYM_in_table_factor4_part23986); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			JOIN_SYM272_tree = (Object)adaptor.create(JOIN_SYM272);
			root_0 = (Object)adaptor.becomeRoot(JOIN_SYM272_tree, root_0);
			}

			pushFollow(FOLLOW_table_atom_in_table_factor4_part23990);
			table_atom273=table_atom();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_atom273.getTree());

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_factor4_part"


	public static class join_condition_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "join_condition"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1388:1: join_condition : ( ( ON ^ expression ) | ( USING_SYM ^ column_list ) );
	public final SQLParser.join_condition_return join_condition() throws RecognitionException {
		SQLParser.join_condition_return retval = new SQLParser.join_condition_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token ON274=null;
		Token USING_SYM276=null;
		ParserRuleReturnScope expression275 =null;
		ParserRuleReturnScope column_list277 =null;

		Object ON274_tree=null;
		Object USING_SYM276_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1388:15: ( ( ON ^ expression ) | ( USING_SYM ^ column_list ) )
			int alt66=2;
			int LA66_0 = input.LA(1);
			if ( (LA66_0==ON) ) {
				alt66=1;
			}
			else if ( (LA66_0==USING_SYM) ) {
				alt66=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 66, 0, input);
				throw nvae;
			}

			switch (alt66) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1389:5: ( ON ^ expression )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1389:5: ( ON ^ expression )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1389:6: ON ^ expression
					{
					ON274=(Token)match(input,ON,FOLLOW_ON_in_join_condition24004); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ON274_tree = (Object)adaptor.create(ON274);
					root_0 = (Object)adaptor.becomeRoot(ON274_tree, root_0);
					}

					pushFollow(FOLLOW_expression_in_join_condition24008);
					expression275=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression275.getTree());

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1389:25: ( USING_SYM ^ column_list )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1389:25: ( USING_SYM ^ column_list )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1389:26: USING_SYM ^ column_list
					{
					USING_SYM276=(Token)match(input,USING_SYM,FOLLOW_USING_SYM_in_join_condition24014); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					USING_SYM276_tree = (Object)adaptor.create(USING_SYM276);
					root_0 = (Object)adaptor.becomeRoot(USING_SYM276_tree, root_0);
					}

					pushFollow(FOLLOW_column_list_in_join_condition24018);
					column_list277=column_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_list277.getTree());

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "join_condition"


	public static class index_hint_list_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "index_hint_list"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1391:1: index_hint_list : index_hint ( COMMA ^ index_hint )* ;
	public final SQLParser.index_hint_list_return index_hint_list() throws RecognitionException {
		SQLParser.index_hint_list_return retval = new SQLParser.index_hint_list_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token COMMA279=null;
		ParserRuleReturnScope index_hint278 =null;
		ParserRuleReturnScope index_hint280 =null;

		Object COMMA279_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1391:16: ( index_hint ( COMMA ^ index_hint )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1392:3: index_hint ( COMMA ^ index_hint )*
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_index_hint_in_index_hint_list24028);
			index_hint278=index_hint();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, index_hint278.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1392:14: ( COMMA ^ index_hint )*
			loop67:
			while (true) {
				int alt67=2;
				int LA67_0 = input.LA(1);
				if ( (LA67_0==COMMA) ) {
					int LA67_1 = input.LA(2);
					if ( (LA67_1==FORCE_SYM||LA67_1==IGNORE_SYM||LA67_1==USE_SYM) ) {
						alt67=1;
					}

				}

				switch (alt67) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1392:15: COMMA ^ index_hint
					{
					COMMA279=(Token)match(input,COMMA,FOLLOW_COMMA_in_index_hint_list24031); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA279_tree = (Object)adaptor.create(COMMA279);
					root_0 = (Object)adaptor.becomeRoot(COMMA279_tree, root_0);
					}

					pushFollow(FOLLOW_index_hint_in_index_hint_list24035);
					index_hint280=index_hint();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_hint280.getTree());

					}
					break;

				default :
					break loop67;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "index_hint_list"


	public static class index_options_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "index_options"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1394:1: index_options : ( INDEX_SYM | KEY_SYM ) ( FOR_SYM ( ( JOIN_SYM ) | ( ORDER_SYM BY_SYM ) | ( GROUP_SYM BY_SYM ) ) )? ;
	public final SQLParser.index_options_return index_options() throws RecognitionException {
		SQLParser.index_options_return retval = new SQLParser.index_options_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set281=null;
		Token FOR_SYM282=null;
		Token JOIN_SYM283=null;
		Token ORDER_SYM284=null;
		Token BY_SYM285=null;
		Token GROUP_SYM286=null;
		Token BY_SYM287=null;

		Object set281_tree=null;
		Object FOR_SYM282_tree=null;
		Object JOIN_SYM283_tree=null;
		Object ORDER_SYM284_tree=null;
		Object BY_SYM285_tree=null;
		Object GROUP_SYM286_tree=null;
		Object BY_SYM287_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1394:14: ( ( INDEX_SYM | KEY_SYM ) ( FOR_SYM ( ( JOIN_SYM ) | ( ORDER_SYM BY_SYM ) | ( GROUP_SYM BY_SYM ) ) )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1395:3: ( INDEX_SYM | KEY_SYM ) ( FOR_SYM ( ( JOIN_SYM ) | ( ORDER_SYM BY_SYM ) | ( GROUP_SYM BY_SYM ) ) )?
			{
			root_0 = (Object)adaptor.nil();


			set281=input.LT(1);
			if ( input.LA(1)==INDEX_SYM||input.LA(1)==KEY_SYM ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set281));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1395:25: ( FOR_SYM ( ( JOIN_SYM ) | ( ORDER_SYM BY_SYM ) | ( GROUP_SYM BY_SYM ) ) )?
			int alt69=2;
			int LA69_0 = input.LA(1);
			if ( (LA69_0==FOR_SYM) ) {
				alt69=1;
			}
			switch (alt69) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1395:28: FOR_SYM ( ( JOIN_SYM ) | ( ORDER_SYM BY_SYM ) | ( GROUP_SYM BY_SYM ) )
					{
					FOR_SYM282=(Token)match(input,FOR_SYM,FOLLOW_FOR_SYM_in_index_options24057); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					FOR_SYM282_tree = (Object)adaptor.create(FOR_SYM282);
					adaptor.addChild(root_0, FOR_SYM282_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1395:36: ( ( JOIN_SYM ) | ( ORDER_SYM BY_SYM ) | ( GROUP_SYM BY_SYM ) )
					int alt68=3;
					switch ( input.LA(1) ) {
					case JOIN_SYM:
						{
						alt68=1;
						}
						break;
					case ORDER_SYM:
						{
						alt68=2;
						}
						break;
					case GROUP_SYM:
						{
						alt68=3;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 68, 0, input);
						throw nvae;
					}
					switch (alt68) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1395:37: ( JOIN_SYM )
							{
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1395:37: ( JOIN_SYM )
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1395:38: JOIN_SYM
							{
							JOIN_SYM283=(Token)match(input,JOIN_SYM,FOLLOW_JOIN_SYM_in_index_options24061); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							JOIN_SYM283_tree = (Object)adaptor.create(JOIN_SYM283);
							adaptor.addChild(root_0, JOIN_SYM283_tree);
							}

							}

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1395:50: ( ORDER_SYM BY_SYM )
							{
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1395:50: ( ORDER_SYM BY_SYM )
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1395:51: ORDER_SYM BY_SYM
							{
							ORDER_SYM284=(Token)match(input,ORDER_SYM,FOLLOW_ORDER_SYM_in_index_options24067); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ORDER_SYM284_tree = (Object)adaptor.create(ORDER_SYM284);
							adaptor.addChild(root_0, ORDER_SYM284_tree);
							}

							BY_SYM285=(Token)match(input,BY_SYM,FOLLOW_BY_SYM_in_index_options24069); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							BY_SYM285_tree = (Object)adaptor.create(BY_SYM285);
							adaptor.addChild(root_0, BY_SYM285_tree);
							}

							}

							}
							break;
						case 3 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1395:71: ( GROUP_SYM BY_SYM )
							{
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1395:71: ( GROUP_SYM BY_SYM )
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1395:72: GROUP_SYM BY_SYM
							{
							GROUP_SYM286=(Token)match(input,GROUP_SYM,FOLLOW_GROUP_SYM_in_index_options24075); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							GROUP_SYM286_tree = (Object)adaptor.create(GROUP_SYM286);
							adaptor.addChild(root_0, GROUP_SYM286_tree);
							}

							BY_SYM287=(Token)match(input,BY_SYM,FOLLOW_BY_SYM_in_index_options24077); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							BY_SYM287_tree = (Object)adaptor.create(BY_SYM287);
							adaptor.addChild(root_0, BY_SYM287_tree);
							}

							}

							}
							break;

					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "index_options"


	public static class index_hint_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "index_hint"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1397:1: index_hint : ( USE_SYM index_options LPAREN ( index_list )? RPAREN | IGNORE_SYM index_options LPAREN index_list RPAREN | FORCE_SYM index_options LPAREN index_list RPAREN );
	public final SQLParser.index_hint_return index_hint() throws RecognitionException {
		SQLParser.index_hint_return retval = new SQLParser.index_hint_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token USE_SYM288=null;
		Token LPAREN290=null;
		Token RPAREN292=null;
		Token IGNORE_SYM293=null;
		Token LPAREN295=null;
		Token RPAREN297=null;
		Token FORCE_SYM298=null;
		Token LPAREN300=null;
		Token RPAREN302=null;
		ParserRuleReturnScope index_options289 =null;
		ParserRuleReturnScope index_list291 =null;
		ParserRuleReturnScope index_options294 =null;
		ParserRuleReturnScope index_list296 =null;
		ParserRuleReturnScope index_options299 =null;
		ParserRuleReturnScope index_list301 =null;

		Object USE_SYM288_tree=null;
		Object LPAREN290_tree=null;
		Object RPAREN292_tree=null;
		Object IGNORE_SYM293_tree=null;
		Object LPAREN295_tree=null;
		Object RPAREN297_tree=null;
		Object FORCE_SYM298_tree=null;
		Object LPAREN300_tree=null;
		Object RPAREN302_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1397:11: ( USE_SYM index_options LPAREN ( index_list )? RPAREN | IGNORE_SYM index_options LPAREN index_list RPAREN | FORCE_SYM index_options LPAREN index_list RPAREN )
			int alt71=3;
			switch ( input.LA(1) ) {
			case USE_SYM:
				{
				alt71=1;
				}
				break;
			case IGNORE_SYM:
				{
				alt71=2;
				}
				break;
			case FORCE_SYM:
				{
				alt71=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 71, 0, input);
				throw nvae;
			}
			switch (alt71) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1398:5: USE_SYM index_options LPAREN ( index_list )? RPAREN
					{
					root_0 = (Object)adaptor.nil();


					USE_SYM288=(Token)match(input,USE_SYM,FOLLOW_USE_SYM_in_index_hint24094); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					USE_SYM288_tree = (Object)adaptor.create(USE_SYM288);
					adaptor.addChild(root_0, USE_SYM288_tree);
					}

					pushFollow(FOLLOW_index_options_in_index_hint24099);
					index_options289=index_options();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_options289.getTree());

					LPAREN290=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_index_hint24101); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN290_tree = (Object)adaptor.create(LPAREN290);
					adaptor.addChild(root_0, LPAREN290_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1398:37: ( index_list )?
					int alt70=2;
					int LA70_0 = input.LA(1);
					if ( (LA70_0==ID) ) {
						alt70=1;
					}
					switch (alt70) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1398:38: index_list
							{
							pushFollow(FOLLOW_index_list_in_index_hint24104);
							index_list291=index_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_list291.getTree());

							}
							break;

					}

					RPAREN292=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_index_hint24108); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN292_tree = (Object)adaptor.create(RPAREN292);
					adaptor.addChild(root_0, RPAREN292_tree);
					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1399:5: IGNORE_SYM index_options LPAREN index_list RPAREN
					{
					root_0 = (Object)adaptor.nil();


					IGNORE_SYM293=(Token)match(input,IGNORE_SYM,FOLLOW_IGNORE_SYM_in_index_hint24114); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IGNORE_SYM293_tree = (Object)adaptor.create(IGNORE_SYM293);
					adaptor.addChild(root_0, IGNORE_SYM293_tree);
					}

					pushFollow(FOLLOW_index_options_in_index_hint24116);
					index_options294=index_options();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_options294.getTree());

					LPAREN295=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_index_hint24118); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN295_tree = (Object)adaptor.create(LPAREN295);
					adaptor.addChild(root_0, LPAREN295_tree);
					}

					pushFollow(FOLLOW_index_list_in_index_hint24120);
					index_list296=index_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_list296.getTree());

					RPAREN297=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_index_hint24122); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN297_tree = (Object)adaptor.create(RPAREN297);
					adaptor.addChild(root_0, RPAREN297_tree);
					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1400:5: FORCE_SYM index_options LPAREN index_list RPAREN
					{
					root_0 = (Object)adaptor.nil();


					FORCE_SYM298=(Token)match(input,FORCE_SYM,FOLLOW_FORCE_SYM_in_index_hint24128); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					FORCE_SYM298_tree = (Object)adaptor.create(FORCE_SYM298);
					adaptor.addChild(root_0, FORCE_SYM298_tree);
					}

					pushFollow(FOLLOW_index_options_in_index_hint24131);
					index_options299=index_options();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_options299.getTree());

					LPAREN300=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_index_hint24133); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN300_tree = (Object)adaptor.create(LPAREN300);
					adaptor.addChild(root_0, LPAREN300_tree);
					}

					pushFollow(FOLLOW_index_list_in_index_hint24135);
					index_list301=index_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_list301.getTree());

					RPAREN302=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_index_hint24137); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN302_tree = (Object)adaptor.create(RPAREN302);
					adaptor.addChild(root_0, RPAREN302_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "index_hint"


	public static class index_list_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "index_list"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1402:1: index_list : index_name ( COMMA index_name )* ;
	public final SQLParser.index_list_return index_list() throws RecognitionException {
		SQLParser.index_list_return retval = new SQLParser.index_list_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token COMMA304=null;
		ParserRuleReturnScope index_name303 =null;
		ParserRuleReturnScope index_name305 =null;

		Object COMMA304_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1402:11: ( index_name ( COMMA index_name )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1403:3: index_name ( COMMA index_name )*
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_index_name_in_index_list24146);
			index_name303=index_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, index_name303.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1403:14: ( COMMA index_name )*
			loop72:
			while (true) {
				int alt72=2;
				int LA72_0 = input.LA(1);
				if ( (LA72_0==COMMA) ) {
					alt72=1;
				}

				switch (alt72) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1403:15: COMMA index_name
					{
					COMMA304=(Token)match(input,COMMA,FOLLOW_COMMA_in_index_list24149); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA304_tree = (Object)adaptor.create(COMMA304);
					adaptor.addChild(root_0, COMMA304_tree);
					}

					pushFollow(FOLLOW_index_name_in_index_list24151);
					index_name305=index_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_name305.getTree());

					}
					break;

				default :
					break loop72;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "index_list"


	public static class partition_clause_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "partition_clause"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1405:1: partition_clause : PARTITION_SYM LPAREN partition_names RPAREN ;
	public final SQLParser.partition_clause_return partition_clause() throws RecognitionException {
		SQLParser.partition_clause_return retval = new SQLParser.partition_clause_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token PARTITION_SYM306=null;
		Token LPAREN307=null;
		Token RPAREN309=null;
		ParserRuleReturnScope partition_names308 =null;

		Object PARTITION_SYM306_tree=null;
		Object LPAREN307_tree=null;
		Object RPAREN309_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1405:17: ( PARTITION_SYM LPAREN partition_names RPAREN )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1406:3: PARTITION_SYM LPAREN partition_names RPAREN
			{
			root_0 = (Object)adaptor.nil();


			PARTITION_SYM306=(Token)match(input,PARTITION_SYM,FOLLOW_PARTITION_SYM_in_partition_clause24162); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			PARTITION_SYM306_tree = (Object)adaptor.create(PARTITION_SYM306);
			adaptor.addChild(root_0, PARTITION_SYM306_tree);
			}

			LPAREN307=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_partition_clause24164); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			LPAREN307_tree = (Object)adaptor.create(LPAREN307);
			adaptor.addChild(root_0, LPAREN307_tree);
			}

			pushFollow(FOLLOW_partition_names_in_partition_clause24166);
			partition_names308=partition_names();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_names308.getTree());

			RPAREN309=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_partition_clause24168); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			RPAREN309_tree = (Object)adaptor.create(RPAREN309);
			adaptor.addChild(root_0, RPAREN309_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "partition_clause"


	public static class partition_names_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "partition_names"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1408:1: partition_names : partition_name ( COMMA partition_name )* ;
	public final SQLParser.partition_names_return partition_names() throws RecognitionException {
		SQLParser.partition_names_return retval = new SQLParser.partition_names_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token COMMA311=null;
		ParserRuleReturnScope partition_name310 =null;
		ParserRuleReturnScope partition_name312 =null;

		Object COMMA311_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1408:16: ( partition_name ( COMMA partition_name )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1408:19: partition_name ( COMMA partition_name )*
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_partition_name_in_partition_names24176);
			partition_name310=partition_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_name310.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1408:34: ( COMMA partition_name )*
			loop73:
			while (true) {
				int alt73=2;
				int LA73_0 = input.LA(1);
				if ( (LA73_0==COMMA) ) {
					int LA73_2 = input.LA(2);
					if ( (LA73_2==ID) ) {
						alt73=1;
					}

				}

				switch (alt73) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1408:35: COMMA partition_name
					{
					COMMA311=(Token)match(input,COMMA,FOLLOW_COMMA_in_partition_names24179); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA311_tree = (Object)adaptor.create(COMMA311);
					adaptor.addChild(root_0, COMMA311_tree);
					}

					pushFollow(FOLLOW_partition_name_in_partition_names24181);
					partition_name312=partition_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_name312.getTree());

					}
					break;

				default :
					break loop73;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "partition_names"


	public static class root_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "root_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1416:1: root_statement : ( SHIFT_LEFT SHIFT_RIGHT )? ( data_manipulation_statements | data_definition_statements ) ( SEMI )? ;
	public final SQLParser.root_statement_return root_statement() throws RecognitionException {
		SQLParser.root_statement_return retval = new SQLParser.root_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token SHIFT_LEFT313=null;
		Token SHIFT_RIGHT314=null;
		Token SEMI317=null;
		ParserRuleReturnScope data_manipulation_statements315 =null;
		ParserRuleReturnScope data_definition_statements316 =null;

		Object SHIFT_LEFT313_tree=null;
		Object SHIFT_RIGHT314_tree=null;
		Object SEMI317_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1416:15: ( ( SHIFT_LEFT SHIFT_RIGHT )? ( data_manipulation_statements | data_definition_statements ) ( SEMI )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1417:3: ( SHIFT_LEFT SHIFT_RIGHT )? ( data_manipulation_statements | data_definition_statements ) ( SEMI )?
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1417:3: ( SHIFT_LEFT SHIFT_RIGHT )?
			int alt74=2;
			int LA74_0 = input.LA(1);
			if ( (LA74_0==SHIFT_LEFT) ) {
				alt74=1;
			}
			switch (alt74) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1417:4: SHIFT_LEFT SHIFT_RIGHT
					{
					SHIFT_LEFT313=(Token)match(input,SHIFT_LEFT,FOLLOW_SHIFT_LEFT_in_root_statement24200); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SHIFT_LEFT313_tree = (Object)adaptor.create(SHIFT_LEFT313);
					adaptor.addChild(root_0, SHIFT_LEFT313_tree);
					}

					SHIFT_RIGHT314=(Token)match(input,SHIFT_RIGHT,FOLLOW_SHIFT_RIGHT_in_root_statement24202); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SHIFT_RIGHT314_tree = (Object)adaptor.create(SHIFT_RIGHT314);
					adaptor.addChild(root_0, SHIFT_RIGHT314_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1418:3: ( data_manipulation_statements | data_definition_statements )
			int alt75=2;
			int LA75_0 = input.LA(1);
			if ( (LA75_0==CALL_SYM||LA75_0==DELETE_SYM||LA75_0==DO_SYM||LA75_0==HANDLER_SYM||LA75_0==INSERT||LA75_0==LOAD||LA75_0==REPLACE||LA75_0==SELECT||LA75_0==UPDATE) ) {
				alt75=1;
			}
			else if ( (LA75_0==ALTER||LA75_0==CREATE||LA75_0==DROP||LA75_0==RENAME||LA75_0==TRUNCATE) ) {
				alt75=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 75, 0, input);
				throw nvae;
			}

			switch (alt75) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1418:5: data_manipulation_statements
					{
					pushFollow(FOLLOW_data_manipulation_statements_in_root_statement24212);
					data_manipulation_statements315=data_manipulation_statements();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, data_manipulation_statements315.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1418:36: data_definition_statements
					{
					pushFollow(FOLLOW_data_definition_statements_in_root_statement24216);
					data_definition_statements316=data_definition_statements();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, data_definition_statements316.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1419:3: ( SEMI )?
			int alt76=2;
			int LA76_0 = input.LA(1);
			if ( (LA76_0==SEMI) ) {
				int LA76_1 = input.LA(2);
				if ( (synpred370_SQL()) ) {
					alt76=1;
				}
			}
			switch (alt76) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1419:4: SEMI
					{
					SEMI317=(Token)match(input,SEMI,FOLLOW_SEMI_in_root_statement24225); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SEMI317_tree = (Object)adaptor.create(SEMI317);
					adaptor.addChild(root_0, SEMI317_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "root_statement"


	public static class data_manipulation_statements_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "data_manipulation_statements"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1422:1: data_manipulation_statements : ( select_statement | delete_statements | insert_statements | update_statements | call_statement | do_statement | handler_statements | load_data_statement | load_xml_statement | replace_statement );
	public final SQLParser.data_manipulation_statements_return data_manipulation_statements() throws RecognitionException {
		SQLParser.data_manipulation_statements_return retval = new SQLParser.data_manipulation_statements_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope select_statement318 =null;
		ParserRuleReturnScope delete_statements319 =null;
		ParserRuleReturnScope insert_statements320 =null;
		ParserRuleReturnScope update_statements321 =null;
		ParserRuleReturnScope call_statement322 =null;
		ParserRuleReturnScope do_statement323 =null;
		ParserRuleReturnScope handler_statements324 =null;
		ParserRuleReturnScope load_data_statement325 =null;
		ParserRuleReturnScope load_xml_statement326 =null;
		ParserRuleReturnScope replace_statement327 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1422:29: ( select_statement | delete_statements | insert_statements | update_statements | call_statement | do_statement | handler_statements | load_data_statement | load_xml_statement | replace_statement )
			int alt77=10;
			switch ( input.LA(1) ) {
			case SELECT:
				{
				alt77=1;
				}
				break;
			case DELETE_SYM:
				{
				alt77=2;
				}
				break;
			case INSERT:
				{
				alt77=3;
				}
				break;
			case UPDATE:
				{
				alt77=4;
				}
				break;
			case CALL_SYM:
				{
				alt77=5;
				}
				break;
			case DO_SYM:
				{
				alt77=6;
				}
				break;
			case HANDLER_SYM:
				{
				alt77=7;
				}
				break;
			case LOAD:
				{
				int LA77_8 = input.LA(2);
				if ( (LA77_8==DATA_SYM) ) {
					alt77=8;
				}
				else if ( (LA77_8==XML_SYM) ) {
					alt77=9;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 77, 8, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case REPLACE:
				{
				alt77=10;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 77, 0, input);
				throw nvae;
			}
			switch (alt77) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1423:5: select_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_select_statement_in_data_manipulation_statements24239);
					select_statement318=select_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, select_statement318.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1424:5: delete_statements
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_delete_statements_in_data_manipulation_statements24245);
					delete_statements319=delete_statements();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, delete_statements319.getTree());

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1425:5: insert_statements
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_insert_statements_in_data_manipulation_statements24251);
					insert_statements320=insert_statements();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, insert_statements320.getTree());

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1426:5: update_statements
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_update_statements_in_data_manipulation_statements24257);
					update_statements321=update_statements();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, update_statements321.getTree());

					}
					break;
				case 5 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1428:5: call_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_call_statement_in_data_manipulation_statements24264);
					call_statement322=call_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, call_statement322.getTree());

					}
					break;
				case 6 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1429:5: do_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_do_statement_in_data_manipulation_statements24270);
					do_statement323=do_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, do_statement323.getTree());

					}
					break;
				case 7 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1430:5: handler_statements
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_handler_statements_in_data_manipulation_statements24276);
					handler_statements324=handler_statements();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, handler_statements324.getTree());

					}
					break;
				case 8 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1431:5: load_data_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_load_data_statement_in_data_manipulation_statements24282);
					load_data_statement325=load_data_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, load_data_statement325.getTree());

					}
					break;
				case 9 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1432:5: load_xml_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_load_xml_statement_in_data_manipulation_statements24288);
					load_xml_statement326=load_xml_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, load_xml_statement326.getTree());

					}
					break;
				case 10 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1433:5: replace_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_replace_statement_in_data_manipulation_statements24294);
					replace_statement327=replace_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, replace_statement327.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "data_manipulation_statements"


	public static class data_definition_statements_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "data_definition_statements"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1436:1: data_definition_statements : ( create_database_statement | alter_database_statements | drop_database_statement | create_event_statement | alter_event_statement | drop_event_statement | create_server_statement | alter_server_statement | drop_server_statement | create_table_statement | alter_table_statement | drop_table_statement | create_view_statement | alter_view_statement | rename_table_statement | drop_view_statement | truncate_table_statement | create_index_statement | drop_index_statement );
	public final SQLParser.data_definition_statements_return data_definition_statements() throws RecognitionException {
		SQLParser.data_definition_statements_return retval = new SQLParser.data_definition_statements_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope create_database_statement328 =null;
		ParserRuleReturnScope alter_database_statements329 =null;
		ParserRuleReturnScope drop_database_statement330 =null;
		ParserRuleReturnScope create_event_statement331 =null;
		ParserRuleReturnScope alter_event_statement332 =null;
		ParserRuleReturnScope drop_event_statement333 =null;
		ParserRuleReturnScope create_server_statement334 =null;
		ParserRuleReturnScope alter_server_statement335 =null;
		ParserRuleReturnScope drop_server_statement336 =null;
		ParserRuleReturnScope create_table_statement337 =null;
		ParserRuleReturnScope alter_table_statement338 =null;
		ParserRuleReturnScope drop_table_statement339 =null;
		ParserRuleReturnScope create_view_statement340 =null;
		ParserRuleReturnScope alter_view_statement341 =null;
		ParserRuleReturnScope rename_table_statement342 =null;
		ParserRuleReturnScope drop_view_statement343 =null;
		ParserRuleReturnScope truncate_table_statement344 =null;
		ParserRuleReturnScope create_index_statement345 =null;
		ParserRuleReturnScope drop_index_statement346 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1436:27: ( create_database_statement | alter_database_statements | drop_database_statement | create_event_statement | alter_event_statement | drop_event_statement | create_server_statement | alter_server_statement | drop_server_statement | create_table_statement | alter_table_statement | drop_table_statement | create_view_statement | alter_view_statement | rename_table_statement | drop_view_statement | truncate_table_statement | create_index_statement | drop_index_statement )
			int alt78=19;
			switch ( input.LA(1) ) {
			case CREATE:
				{
				switch ( input.LA(2) ) {
				case DATABASE:
				case SCHEMA:
					{
					alt78=1;
					}
					break;
				case SERVER_SYM:
					{
					alt78=7;
					}
					break;
				case DEFINER:
					{
					int LA78_8 = input.LA(3);
					if ( (LA78_8==EQ_SYM) ) {
						int LA78_25 = input.LA(4);
						if ( (LA78_25==ID) ) {
							int LA78_27 = input.LA(5);
							if ( (LA78_27==EVENT_SYM) ) {
								alt78=4;
							}
							else if ( (LA78_27==SQL_SYM||LA78_27==VIEW_SYM) ) {
								alt78=13;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 78, 27, input);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

						}
						else if ( (LA78_25==CURRENT_USER) ) {
							int LA78_28 = input.LA(5);
							if ( (LA78_28==EVENT_SYM) ) {
								alt78=4;
							}
							else if ( (LA78_28==SQL_SYM||LA78_28==VIEW_SYM) ) {
								alt78=13;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 78, 28, input);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 78, 25, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 78, 8, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				case EVENT_SYM:
					{
					alt78=4;
					}
					break;
				case TABLE:
				case TEMPORARY:
					{
					alt78=10;
					}
					break;
				case ALGORITHM_SYM:
				case OR_SYM:
				case SQL_SYM:
				case VIEW_SYM:
					{
					alt78=13;
					}
					break;
				case FULLTEXT_SYM:
				case INDEX_SYM:
				case SPATIAL_SYM:
				case UNIQUE_SYM:
					{
					alt78=18;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 78, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case ALTER:
				{
				switch ( input.LA(2) ) {
				case DATABASE:
				case SCHEMA:
					{
					alt78=2;
					}
					break;
				case SERVER_SYM:
					{
					alt78=8;
					}
					break;
				case DEFINER:
					{
					int LA78_15 = input.LA(3);
					if ( (LA78_15==EQ_SYM) ) {
						int LA78_26 = input.LA(4);
						if ( (LA78_26==ID) ) {
							int LA78_29 = input.LA(5);
							if ( (LA78_29==EVENT_SYM) ) {
								alt78=5;
							}
							else if ( (LA78_29==SQL_SYM||LA78_29==VIEW_SYM) ) {
								alt78=14;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 78, 29, input);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

						}
						else if ( (LA78_26==CURRENT_USER) ) {
							int LA78_30 = input.LA(5);
							if ( (LA78_30==EVENT_SYM) ) {
								alt78=5;
							}
							else if ( (LA78_30==SQL_SYM||LA78_30==VIEW_SYM) ) {
								alt78=14;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 78, 30, input);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 78, 26, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 78, 15, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				case EVENT_SYM:
					{
					alt78=5;
					}
					break;
				case IGNORE_SYM:
				case TABLE:
					{
					alt78=11;
					}
					break;
				case ALGORITHM_SYM:
				case SQL_SYM:
				case VIEW_SYM:
					{
					alt78=14;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 78, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case DROP:
				{
				switch ( input.LA(2) ) {
				case DATABASE:
				case SCHEMA:
					{
					alt78=3;
					}
					break;
				case EVENT_SYM:
					{
					alt78=6;
					}
					break;
				case SERVER_SYM:
					{
					alt78=9;
					}
					break;
				case VIEW_SYM:
					{
					alt78=16;
					}
					break;
				case INDEX_SYM:
					{
					alt78=19;
					}
					break;
				case TABLE:
				case TEMPORARY:
					{
					alt78=12;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 78, 3, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case RENAME:
				{
				alt78=15;
				}
				break;
			case TRUNCATE:
				{
				alt78=17;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 78, 0, input);
				throw nvae;
			}
			switch (alt78) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1437:5: create_database_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_create_database_statement_in_data_definition_statements24307);
					create_database_statement328=create_database_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, create_database_statement328.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1438:5: alter_database_statements
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_alter_database_statements_in_data_definition_statements24313);
					alter_database_statements329=alter_database_statements();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, alter_database_statements329.getTree());

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1439:5: drop_database_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_drop_database_statement_in_data_definition_statements24319);
					drop_database_statement330=drop_database_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, drop_database_statement330.getTree());

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1441:5: create_event_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_create_event_statement_in_data_definition_statements24328);
					create_event_statement331=create_event_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, create_event_statement331.getTree());

					}
					break;
				case 5 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1442:5: alter_event_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_alter_event_statement_in_data_definition_statements24334);
					alter_event_statement332=alter_event_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, alter_event_statement332.getTree());

					}
					break;
				case 6 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1443:5: drop_event_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_drop_event_statement_in_data_definition_statements24340);
					drop_event_statement333=drop_event_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, drop_event_statement333.getTree());

					}
					break;
				case 7 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1456:5: create_server_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_create_server_statement_in_data_definition_statements24382);
					create_server_statement334=create_server_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, create_server_statement334.getTree());

					}
					break;
				case 8 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1457:5: alter_server_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_alter_server_statement_in_data_definition_statements24388);
					alter_server_statement335=alter_server_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, alter_server_statement335.getTree());

					}
					break;
				case 9 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1458:5: drop_server_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_drop_server_statement_in_data_definition_statements24394);
					drop_server_statement336=drop_server_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, drop_server_statement336.getTree());

					}
					break;
				case 10 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1460:5: create_table_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_create_table_statement_in_data_definition_statements24403);
					create_table_statement337=create_table_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, create_table_statement337.getTree());

					}
					break;
				case 11 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1461:5: alter_table_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_alter_table_statement_in_data_definition_statements24409);
					alter_table_statement338=alter_table_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, alter_table_statement338.getTree());

					}
					break;
				case 12 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1462:5: drop_table_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_drop_table_statement_in_data_definition_statements24415);
					drop_table_statement339=drop_table_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, drop_table_statement339.getTree());

					}
					break;
				case 13 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1464:5: create_view_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_create_view_statement_in_data_definition_statements24424);
					create_view_statement340=create_view_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, create_view_statement340.getTree());

					}
					break;
				case 14 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1465:5: alter_view_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_alter_view_statement_in_data_definition_statements24430);
					alter_view_statement341=alter_view_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, alter_view_statement341.getTree());

					}
					break;
				case 15 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1466:5: rename_table_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_rename_table_statement_in_data_definition_statements24436);
					rename_table_statement342=rename_table_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, rename_table_statement342.getTree());

					}
					break;
				case 16 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1467:5: drop_view_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_drop_view_statement_in_data_definition_statements24442);
					drop_view_statement343=drop_view_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, drop_view_statement343.getTree());

					}
					break;
				case 17 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1468:5: truncate_table_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_truncate_table_statement_in_data_definition_statements24448);
					truncate_table_statement344=truncate_table_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, truncate_table_statement344.getTree());

					}
					break;
				case 18 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1470:5: create_index_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_create_index_statement_in_data_definition_statements24457);
					create_index_statement345=create_index_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, create_index_statement345.getTree());

					}
					break;
				case 19 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1471:5: drop_index_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_drop_index_statement_in_data_definition_statements24463);
					drop_index_statement346=drop_index_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, drop_index_statement346.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "data_definition_statements"


	public static class select_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "select_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1504:1: select_statement : select_expression ( ( UNION_SYM ( ALL )? ) ^ select_expression )* ;
	public final SQLParser.select_statement_return select_statement() throws RecognitionException {
		SQLParser.select_statement_return retval = new SQLParser.select_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token UNION_SYM348=null;
		Token ALL349=null;
		ParserRuleReturnScope select_expression347 =null;
		ParserRuleReturnScope select_expression350 =null;

		Object UNION_SYM348_tree=null;
		Object ALL349_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1504:17: ( select_expression ( ( UNION_SYM ( ALL )? ) ^ select_expression )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1505:9: select_expression ( ( UNION_SYM ( ALL )? ) ^ select_expression )*
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_select_expression_in_select_statement24489);
			select_expression347=select_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, select_expression347.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1505:27: ( ( UNION_SYM ( ALL )? ) ^ select_expression )*
			loop80:
			while (true) {
				int alt80=2;
				int LA80_0 = input.LA(1);
				if ( (LA80_0==UNION_SYM) ) {
					alt80=1;
				}

				switch (alt80) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1505:29: ( UNION_SYM ( ALL )? ) ^ select_expression
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1505:29: ( UNION_SYM ( ALL )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1505:30: UNION_SYM ( ALL )?
					{
					UNION_SYM348=(Token)match(input,UNION_SYM,FOLLOW_UNION_SYM_in_select_statement24494); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					UNION_SYM348_tree = (Object)adaptor.create(UNION_SYM348);
					adaptor.addChild(root_0, UNION_SYM348_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1505:40: ( ALL )?
					int alt79=2;
					int LA79_0 = input.LA(1);
					if ( (LA79_0==ALL) ) {
						alt79=1;
					}
					switch (alt79) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1505:41: ALL
							{
							ALL349=(Token)match(input,ALL,FOLLOW_ALL_in_select_statement24497); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ALL349_tree = (Object)adaptor.create(ALL349);
							adaptor.addChild(root_0, ALL349_tree);
							}

							}
							break;

					}

					}

					pushFollow(FOLLOW_select_expression_in_select_statement24504);
					select_expression350=select_expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, select_expression350.getTree());

					}
					break;

				default :
					break loop80;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "select_statement"


	public static class select_expression_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "select_expression"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1508:1: select_expression : select_part ( from_part ( partition_clause )? ( where_clause )? ( groupby_clause )? ( having_clause )? )? ( orderby_clause )? ( limit_clause )? ( ( FOR_SYM UPDATE ) | ( LOCK IN_SYM SHARE_SYM MODE_SYM ) )? ;
	public final SQLParser.select_expression_return select_expression() throws RecognitionException {
		SQLParser.select_expression_return retval = new SQLParser.select_expression_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token FOR_SYM359=null;
		Token UPDATE360=null;
		Token LOCK361=null;
		Token IN_SYM362=null;
		Token SHARE_SYM363=null;
		Token MODE_SYM364=null;
		ParserRuleReturnScope select_part351 =null;
		ParserRuleReturnScope from_part352 =null;
		ParserRuleReturnScope partition_clause353 =null;
		ParserRuleReturnScope where_clause354 =null;
		ParserRuleReturnScope groupby_clause355 =null;
		ParserRuleReturnScope having_clause356 =null;
		ParserRuleReturnScope orderby_clause357 =null;
		ParserRuleReturnScope limit_clause358 =null;

		Object FOR_SYM359_tree=null;
		Object UPDATE360_tree=null;
		Object LOCK361_tree=null;
		Object IN_SYM362_tree=null;
		Object SHARE_SYM363_tree=null;
		Object MODE_SYM364_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1508:18: ( select_part ( from_part ( partition_clause )? ( where_clause )? ( groupby_clause )? ( having_clause )? )? ( orderby_clause )? ( limit_clause )? ( ( FOR_SYM UPDATE ) | ( LOCK IN_SYM SHARE_SYM MODE_SYM ) )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1509:3: select_part ( from_part ( partition_clause )? ( where_clause )? ( groupby_clause )? ( having_clause )? )? ( orderby_clause )? ( limit_clause )? ( ( FOR_SYM UPDATE ) | ( LOCK IN_SYM SHARE_SYM MODE_SYM ) )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_select_part_in_select_expression24518);
			select_part351=select_part();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, select_part351.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1510:3: ( from_part ( partition_clause )? ( where_clause )? ( groupby_clause )? ( having_clause )? )?
			int alt85=2;
			int LA85_0 = input.LA(1);
			if ( (LA85_0==FROM) ) {
				alt85=1;
			}
			switch (alt85) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1511:5: from_part ( partition_clause )? ( where_clause )? ( groupby_clause )? ( having_clause )?
					{
					pushFollow(FOLLOW_from_part_in_select_expression24529);
					from_part352=from_part();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, from_part352.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1512:5: ( partition_clause )?
					int alt81=2;
					int LA81_0 = input.LA(1);
					if ( (LA81_0==PARTITION_SYM) ) {
						alt81=1;
					}
					switch (alt81) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1512:7: partition_clause
							{
							pushFollow(FOLLOW_partition_clause_in_select_expression24537);
							partition_clause353=partition_clause();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_clause353.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1513:5: ( where_clause )?
					int alt82=2;
					int LA82_0 = input.LA(1);
					if ( (LA82_0==WHERE) ) {
						alt82=1;
					}
					switch (alt82) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1513:7: where_clause
							{
							pushFollow(FOLLOW_where_clause_in_select_expression24548);
							where_clause354=where_clause();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, where_clause354.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1514:5: ( groupby_clause )?
					int alt83=2;
					int LA83_0 = input.LA(1);
					if ( (LA83_0==GROUP_SYM) ) {
						alt83=1;
					}
					switch (alt83) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1514:7: groupby_clause
							{
							pushFollow(FOLLOW_groupby_clause_in_select_expression24560);
							groupby_clause355=groupby_clause();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, groupby_clause355.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1515:5: ( having_clause )?
					int alt84=2;
					int LA84_0 = input.LA(1);
					if ( (LA84_0==HAVING) ) {
						alt84=1;
					}
					switch (alt84) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1515:7: having_clause
							{
							pushFollow(FOLLOW_having_clause_in_select_expression24571);
							having_clause356=having_clause();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, having_clause356.getTree());

							}
							break;

					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1518:3: ( orderby_clause )?
			int alt86=2;
			int LA86_0 = input.LA(1);
			if ( (LA86_0==ORDER_SYM) ) {
				alt86=1;
			}
			switch (alt86) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1518:5: orderby_clause
					{
					pushFollow(FOLLOW_orderby_clause_in_select_expression24589);
					orderby_clause357=orderby_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, orderby_clause357.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1519:3: ( limit_clause )?
			int alt87=2;
			int LA87_0 = input.LA(1);
			if ( (LA87_0==INTEGER_NUM||LA87_0==LIMIT) ) {
				alt87=1;
			}
			switch (alt87) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1519:5: limit_clause
					{
					pushFollow(FOLLOW_limit_clause_in_select_expression24598);
					limit_clause358=limit_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, limit_clause358.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1520:3: ( ( FOR_SYM UPDATE ) | ( LOCK IN_SYM SHARE_SYM MODE_SYM ) )?
			int alt88=3;
			int LA88_0 = input.LA(1);
			if ( (LA88_0==FOR_SYM) ) {
				alt88=1;
			}
			else if ( (LA88_0==LOCK) ) {
				alt88=2;
			}
			switch (alt88) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1520:5: ( FOR_SYM UPDATE )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1520:5: ( FOR_SYM UPDATE )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1520:7: FOR_SYM UPDATE
					{
					FOR_SYM359=(Token)match(input,FOR_SYM,FOLLOW_FOR_SYM_in_select_expression24609); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					FOR_SYM359_tree = (Object)adaptor.create(FOR_SYM359);
					adaptor.addChild(root_0, FOR_SYM359_tree);
					}

					UPDATE360=(Token)match(input,UPDATE,FOLLOW_UPDATE_in_select_expression24611); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					UPDATE360_tree = (Object)adaptor.create(UPDATE360);
					adaptor.addChild(root_0, UPDATE360_tree);
					}

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1520:25: ( LOCK IN_SYM SHARE_SYM MODE_SYM )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1520:25: ( LOCK IN_SYM SHARE_SYM MODE_SYM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1520:26: LOCK IN_SYM SHARE_SYM MODE_SYM
					{
					LOCK361=(Token)match(input,LOCK,FOLLOW_LOCK_in_select_expression24617); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LOCK361_tree = (Object)adaptor.create(LOCK361);
					adaptor.addChild(root_0, LOCK361_tree);
					}

					IN_SYM362=(Token)match(input,IN_SYM,FOLLOW_IN_SYM_in_select_expression24619); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IN_SYM362_tree = (Object)adaptor.create(IN_SYM362);
					adaptor.addChild(root_0, IN_SYM362_tree);
					}

					SHARE_SYM363=(Token)match(input,SHARE_SYM,FOLLOW_SHARE_SYM_in_select_expression24621); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SHARE_SYM363_tree = (Object)adaptor.create(SHARE_SYM363);
					adaptor.addChild(root_0, SHARE_SYM363_tree);
					}

					MODE_SYM364=(Token)match(input,MODE_SYM,FOLLOW_MODE_SYM_in_select_expression24623); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MODE_SYM364_tree = (Object)adaptor.create(MODE_SYM364);
					adaptor.addChild(root_0, MODE_SYM364_tree);
					}

					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "select_expression"


	public static class select_part_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "select_part"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1523:1: select_part : SELECT ^ ( ALL | DISTINCT | DISTINCTROW )? ( HIGH_PRIORITY )? ( STRAIGHT_JOIN )? ( SQL_SMALL_RESULT )? ( SQL_BIG_RESULT )? ( SQL_BUFFER_RESULT )? ( SQL_CACHE_SYM | SQL_NO_CACHE_SYM )? ( SQL_CALC_FOUND_ROWS )? select_list ;
	public final SQLParser.select_part_return select_part() throws RecognitionException {
		SQLParser.select_part_return retval = new SQLParser.select_part_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token SELECT365=null;
		Token set366=null;
		Token HIGH_PRIORITY367=null;
		Token STRAIGHT_JOIN368=null;
		Token SQL_SMALL_RESULT369=null;
		Token SQL_BIG_RESULT370=null;
		Token SQL_BUFFER_RESULT371=null;
		Token set372=null;
		Token SQL_CALC_FOUND_ROWS373=null;
		ParserRuleReturnScope select_list374 =null;

		Object SELECT365_tree=null;
		Object set366_tree=null;
		Object HIGH_PRIORITY367_tree=null;
		Object STRAIGHT_JOIN368_tree=null;
		Object SQL_SMALL_RESULT369_tree=null;
		Object SQL_BIG_RESULT370_tree=null;
		Object SQL_BUFFER_RESULT371_tree=null;
		Object set372_tree=null;
		Object SQL_CALC_FOUND_ROWS373_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1523:12: ( SELECT ^ ( ALL | DISTINCT | DISTINCTROW )? ( HIGH_PRIORITY )? ( STRAIGHT_JOIN )? ( SQL_SMALL_RESULT )? ( SQL_BIG_RESULT )? ( SQL_BUFFER_RESULT )? ( SQL_CACHE_SYM | SQL_NO_CACHE_SYM )? ( SQL_CALC_FOUND_ROWS )? select_list )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1524:3: SELECT ^ ( ALL | DISTINCT | DISTINCTROW )? ( HIGH_PRIORITY )? ( STRAIGHT_JOIN )? ( SQL_SMALL_RESULT )? ( SQL_BIG_RESULT )? ( SQL_BUFFER_RESULT )? ( SQL_CACHE_SYM | SQL_NO_CACHE_SYM )? ( SQL_CALC_FOUND_ROWS )? select_list
			{
			root_0 = (Object)adaptor.nil();


			SELECT365=(Token)match(input,SELECT,FOLLOW_SELECT_in_select_part24638); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			SELECT365_tree = (Object)adaptor.create(SELECT365);
			root_0 = (Object)adaptor.becomeRoot(SELECT365_tree, root_0);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1526:3: ( ALL | DISTINCT | DISTINCTROW )?
			int alt89=2;
			int LA89_0 = input.LA(1);
			if ( (LA89_0==ALL||(LA89_0 >= DISTINCT && LA89_0 <= DISTINCTROW)) ) {
				alt89=1;
			}
			switch (alt89) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
					{
					set366=input.LT(1);
					if ( input.LA(1)==ALL||(input.LA(1) >= DISTINCT && input.LA(1) <= DISTINCTROW) ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set366));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1527:3: ( HIGH_PRIORITY )?
			int alt90=2;
			int LA90_0 = input.LA(1);
			if ( (LA90_0==HIGH_PRIORITY) ) {
				alt90=1;
			}
			switch (alt90) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1527:4: HIGH_PRIORITY
					{
					HIGH_PRIORITY367=(Token)match(input,HIGH_PRIORITY,FOLLOW_HIGH_PRIORITY_in_select_part24666); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					HIGH_PRIORITY367_tree = (Object)adaptor.create(HIGH_PRIORITY367);
					adaptor.addChild(root_0, HIGH_PRIORITY367_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1528:3: ( STRAIGHT_JOIN )?
			int alt91=2;
			int LA91_0 = input.LA(1);
			if ( (LA91_0==STRAIGHT_JOIN) ) {
				alt91=1;
			}
			switch (alt91) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1528:4: STRAIGHT_JOIN
					{
					STRAIGHT_JOIN368=(Token)match(input,STRAIGHT_JOIN,FOLLOW_STRAIGHT_JOIN_in_select_part24673); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					STRAIGHT_JOIN368_tree = (Object)adaptor.create(STRAIGHT_JOIN368);
					adaptor.addChild(root_0, STRAIGHT_JOIN368_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1529:3: ( SQL_SMALL_RESULT )?
			int alt92=2;
			int LA92_0 = input.LA(1);
			if ( (LA92_0==SQL_SMALL_RESULT) ) {
				alt92=1;
			}
			switch (alt92) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1529:4: SQL_SMALL_RESULT
					{
					SQL_SMALL_RESULT369=(Token)match(input,SQL_SMALL_RESULT,FOLLOW_SQL_SMALL_RESULT_in_select_part24680); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQL_SMALL_RESULT369_tree = (Object)adaptor.create(SQL_SMALL_RESULT369);
					adaptor.addChild(root_0, SQL_SMALL_RESULT369_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1529:23: ( SQL_BIG_RESULT )?
			int alt93=2;
			int LA93_0 = input.LA(1);
			if ( (LA93_0==SQL_BIG_RESULT) ) {
				alt93=1;
			}
			switch (alt93) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1529:24: SQL_BIG_RESULT
					{
					SQL_BIG_RESULT370=(Token)match(input,SQL_BIG_RESULT,FOLLOW_SQL_BIG_RESULT_in_select_part24685); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQL_BIG_RESULT370_tree = (Object)adaptor.create(SQL_BIG_RESULT370);
					adaptor.addChild(root_0, SQL_BIG_RESULT370_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1529:41: ( SQL_BUFFER_RESULT )?
			int alt94=2;
			int LA94_0 = input.LA(1);
			if ( (LA94_0==SQL_BUFFER_RESULT) ) {
				alt94=1;
			}
			switch (alt94) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1529:42: SQL_BUFFER_RESULT
					{
					SQL_BUFFER_RESULT371=(Token)match(input,SQL_BUFFER_RESULT,FOLLOW_SQL_BUFFER_RESULT_in_select_part24690); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQL_BUFFER_RESULT371_tree = (Object)adaptor.create(SQL_BUFFER_RESULT371);
					adaptor.addChild(root_0, SQL_BUFFER_RESULT371_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1530:3: ( SQL_CACHE_SYM | SQL_NO_CACHE_SYM )?
			int alt95=2;
			int LA95_0 = input.LA(1);
			if ( (LA95_0==SQL_CACHE_SYM||LA95_0==SQL_NO_CACHE_SYM) ) {
				alt95=1;
			}
			switch (alt95) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
					{
					set372=input.LT(1);
					if ( input.LA(1)==SQL_CACHE_SYM||input.LA(1)==SQL_NO_CACHE_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set372));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1530:39: ( SQL_CALC_FOUND_ROWS )?
			int alt96=2;
			int LA96_0 = input.LA(1);
			if ( (LA96_0==SQL_CALC_FOUND_ROWS) ) {
				alt96=1;
			}
			switch (alt96) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1530:40: SQL_CALC_FOUND_ROWS
					{
					SQL_CALC_FOUND_ROWS373=(Token)match(input,SQL_CALC_FOUND_ROWS,FOLLOW_SQL_CALC_FOUND_ROWS_in_select_part24706); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQL_CALC_FOUND_ROWS373_tree = (Object)adaptor.create(SQL_CALC_FOUND_ROWS373);
					adaptor.addChild(root_0, SQL_CALC_FOUND_ROWS373_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_select_list_in_select_part24713);
			select_list374=select_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, select_list374.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "select_part"


	public static class from_part_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "from_part"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1535:1: from_part : FROM ^ table_references ;
	public final SQLParser.from_part_return from_part() throws RecognitionException {
		SQLParser.from_part_return retval = new SQLParser.from_part_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token FROM375=null;
		ParserRuleReturnScope table_references376 =null;

		Object FROM375_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1535:10: ( FROM ^ table_references )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1536:3: FROM ^ table_references
			{
			root_0 = (Object)adaptor.nil();


			FROM375=(Token)match(input,FROM,FOLLOW_FROM_in_from_part24723); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			FROM375_tree = (Object)adaptor.create(FROM375);
			root_0 = (Object)adaptor.becomeRoot(FROM375_tree, root_0);
			}

			pushFollow(FOLLOW_table_references_in_from_part24727);
			table_references376=table_references();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_references376.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "from_part"


	public static class where_clause_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "where_clause"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1539:1: where_clause : WHERE ^ expression ;
	public final SQLParser.where_clause_return where_clause() throws RecognitionException {
		SQLParser.where_clause_return retval = new SQLParser.where_clause_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token WHERE377=null;
		ParserRuleReturnScope expression378 =null;

		Object WHERE377_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1539:13: ( WHERE ^ expression )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1540:3: WHERE ^ expression
			{
			root_0 = (Object)adaptor.nil();


			WHERE377=(Token)match(input,WHERE,FOLLOW_WHERE_in_where_clause24742); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			WHERE377_tree = (Object)adaptor.create(WHERE377);
			root_0 = (Object)adaptor.becomeRoot(WHERE377_tree, root_0);
			}

			pushFollow(FOLLOW_expression_in_where_clause24746);
			expression378=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression378.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "where_clause"


	public static class groupby_clause_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "groupby_clause"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1543:1: groupby_clause : ( GROUP_SYM BY_SYM ) ^ groupby_item ( COMMA ^ groupby_item )* ( WITH ROLLUP_SYM )? ;
	public final SQLParser.groupby_clause_return groupby_clause() throws RecognitionException {
		SQLParser.groupby_clause_return retval = new SQLParser.groupby_clause_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token GROUP_SYM379=null;
		Token BY_SYM380=null;
		Token COMMA382=null;
		Token WITH384=null;
		Token ROLLUP_SYM385=null;
		ParserRuleReturnScope groupby_item381 =null;
		ParserRuleReturnScope groupby_item383 =null;

		Object GROUP_SYM379_tree=null;
		Object BY_SYM380_tree=null;
		Object COMMA382_tree=null;
		Object WITH384_tree=null;
		Object ROLLUP_SYM385_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1543:15: ( ( GROUP_SYM BY_SYM ) ^ groupby_item ( COMMA ^ groupby_item )* ( WITH ROLLUP_SYM )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1544:3: ( GROUP_SYM BY_SYM ) ^ groupby_item ( COMMA ^ groupby_item )* ( WITH ROLLUP_SYM )?
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1544:3: ( GROUP_SYM BY_SYM )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1544:4: GROUP_SYM BY_SYM
			{
			GROUP_SYM379=(Token)match(input,GROUP_SYM,FOLLOW_GROUP_SYM_in_groupby_clause24757); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			GROUP_SYM379_tree = (Object)adaptor.create(GROUP_SYM379);
			adaptor.addChild(root_0, GROUP_SYM379_tree);
			}

			BY_SYM380=(Token)match(input,BY_SYM,FOLLOW_BY_SYM_in_groupby_clause24759); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			BY_SYM380_tree = (Object)adaptor.create(BY_SYM380);
			adaptor.addChild(root_0, BY_SYM380_tree);
			}

			}

			pushFollow(FOLLOW_groupby_item_in_groupby_clause24764);
			groupby_item381=groupby_item();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, groupby_item381.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1544:37: ( COMMA ^ groupby_item )*
			loop97:
			while (true) {
				int alt97=2;
				int LA97_0 = input.LA(1);
				if ( (LA97_0==COMMA) ) {
					switch ( input.LA(2) ) {
					case INSERT:
						{
						int LA97_3 = input.LA(3);
						if ( (LA97_3==EOF||LA97_3==ASTERISK||LA97_3==BITAND||LA97_3==COMMA||LA97_3==DIVIDE||LA97_3==FOR_SYM||LA97_3==HAVING||LA97_3==INTEGER_NUM||LA97_3==LIMIT||LA97_3==LOCK||LA97_3==LPAREN||LA97_3==MINUS||LA97_3==MOD_SYM||LA97_3==ON||LA97_3==ORDER_SYM||LA97_3==PLUS||LA97_3==POWER_OP||LA97_3==RPAREN||LA97_3==SEMI||(LA97_3 >= SHIFT_LEFT && LA97_3 <= SHIFT_RIGHT)||LA97_3==UNION_SYM||LA97_3==VERTBAR||LA97_3==WITH) ) {
							alt97=1;
						}

						}
						break;
					case REPLACE:
						{
						int LA97_4 = input.LA(3);
						if ( (LA97_4==EOF||LA97_4==ASTERISK||LA97_4==BITAND||LA97_4==COMMA||LA97_4==DIVIDE||LA97_4==FOR_SYM||LA97_4==HAVING||LA97_4==INTEGER_NUM||LA97_4==LIMIT||LA97_4==LOCK||LA97_4==LPAREN||LA97_4==MINUS||LA97_4==MOD_SYM||LA97_4==ON||LA97_4==ORDER_SYM||LA97_4==PLUS||LA97_4==POWER_OP||LA97_4==RPAREN||LA97_4==SEMI||(LA97_4 >= SHIFT_LEFT && LA97_4 <= SHIFT_RIGHT)||LA97_4==UNION_SYM||LA97_4==VERTBAR||LA97_4==WITH) ) {
							alt97=1;
						}

						}
						break;
					case TRUNCATE:
						{
						int LA97_5 = input.LA(3);
						if ( (LA97_5==EOF||LA97_5==ASTERISK||LA97_5==BITAND||LA97_5==COMMA||LA97_5==DIVIDE||LA97_5==FOR_SYM||LA97_5==HAVING||LA97_5==INTEGER_NUM||LA97_5==LIMIT||LA97_5==LOCK||LA97_5==LPAREN||LA97_5==MINUS||LA97_5==MOD_SYM||LA97_5==ON||LA97_5==ORDER_SYM||LA97_5==PLUS||LA97_5==POWER_OP||LA97_5==RPAREN||LA97_5==SEMI||(LA97_5 >= SHIFT_LEFT && LA97_5 <= SHIFT_RIGHT)||LA97_5==UNION_SYM||LA97_5==VERTBAR||LA97_5==WITH) ) {
							alt97=1;
						}

						}
						break;
					case ABS:
					case ACOS:
					case ADDDATE:
					case ADDTIME:
					case AES_DECRYPT:
					case AES_ENCRYPT:
					case ASCII_SYM:
					case ASIN:
					case ATAN:
					case ATAN2:
					case AVG:
					case BENCHMARK:
					case BIN:
					case BINARY:
					case BIT_AND:
					case BIT_LENGTH:
					case BIT_NUM:
					case BIT_OR:
					case BIT_XOR:
					case CASE_SYM:
					case CAST_SYM:
					case CEIL:
					case CEILING:
					case CHAR:
					case CHARSET:
					case CHAR_LENGTH:
					case COERCIBILITY:
					case COLLATION:
					case CONCAT:
					case CONCAT_WS:
					case CONNECTION_ID:
					case CONV:
					case CONVERT_SYM:
					case CONVERT_TZ:
					case COS:
					case COT:
					case COUNT:
					case CRC32:
					case CURDATE:
					case CURRENT_USER:
					case CURTIME:
					case DATABASE:
					case DATEDIFF:
					case DATE_ADD:
					case DATE_FORMAT:
					case DATE_SUB:
					case DATE_SYM:
					case DAYNAME:
					case DAYOFMONTH:
					case DAYOFWEEK:
					case DAYOFYEAR:
					case DECODE:
					case DEFAULT:
					case DEGREES:
					case DES_DECRYPT:
					case DES_ENCRYPT:
					case ELT:
					case ENCODE:
					case ENCRYPT:
					case EXISTS:
					case EXP:
					case EXPORT_SET:
					case EXTRACT:
					case FALSE_SYM:
					case FIELD:
					case FIND_IN_SET:
					case FLOOR:
					case FORMAT:
					case FOUND_ROWS:
					case FROM_BASE64:
					case FROM_DAYS:
					case FROM_UNIXTIME:
					case GET_FORMAT:
					case GET_LOCK:
					case GROUP_CONCAT:
					case HEX:
					case HEX_DIGIT:
					case HOUR:
					case ID:
					case IF:
					case IFNULL:
					case INET_ATON:
					case INET_NTOA:
					case INSTR:
					case INTEGER_NUM:
					case INTERVAL_SYM:
					case IS_FREE_LOCK:
					case IS_USED_LOCK:
					case LAST_DAY:
					case LAST_INSERT_ID:
					case LEFT:
					case LENGTH:
					case LN:
					case LOAD_FILE:
					case LOCATE:
					case LOG:
					case LOG10:
					case LOG2:
					case LOWER:
					case LPAD:
					case LPAREN:
					case LTRIM:
					case MAKEDATE:
					case MAKETIME:
					case MAKE_SET:
					case MASTER_POS_WAIT:
					case MATCH:
					case MAX_SYM:
					case MD5:
					case MICROSECOND:
					case MID:
					case MINUS:
					case MINUTE:
					case MIN_SYM:
					case MOD:
					case MONTH:
					case MONTHNAME:
					case NAME_CONST:
					case NEGATION:
					case NOW:
					case NULL_SYM:
					case OCT:
					case OLD_PASSWORD:
					case ORD:
					case PASSWORD:
					case PERIOD_ADD:
					case PERIOD_DIFF:
					case PI:
					case PLUS:
					case POW:
					case POWER:
					case QUARTER:
					case QUOTE:
					case RADIANS:
					case RAND:
					case REAL_NUMBER:
					case RELEASE_LOCK:
					case REPEAT:
					case REVERSE:
					case RIGHT:
					case ROUND:
					case ROW_SYM:
					case RPAD:
					case RTRIM:
					case SCHEMA:
					case SECOND:
					case SEC_TO_TIME:
					case SESSION_USER:
					case SIGN:
					case SIN:
					case SLEEP:
					case SOUNDEX:
					case SPACE:
					case SQRT:
					case STD:
					case STDDEV:
					case STDDEV_POP:
					case STDDEV_SAMP:
					case STRCMP:
					case STR_TO_DATE:
					case SUBSTRING:
					case SUBSTRING_INDEX:
					case SUBTIME:
					case SUM:
					case SYSDATE:
					case SYSTEM_USER:
					case TAN:
					case TEXT_STRING:
					case TIMEDIFF:
					case TIMESTAMP:
					case TIMESTAMPADD:
					case TIMESTAMPDIFF:
					case TIME_FORMAT:
					case TIME_SYM:
					case TIME_TO_SEC:
					case TO_BASE64:
					case TO_DAYS:
					case TO_SECONDS:
					case TRIM:
					case TRUE_SYM:
					case UNHEX:
					case UNIX_TIMESTAMP:
					case UPPER:
					case USER:
					case USER_VAR:
					case UTC_DATE:
					case UTC_TIME:
					case UTC_TIMESTAMP:
					case UUID:
					case VALUES:
					case VARIANCE:
					case VAR_POP:
					case VAR_SAMP:
					case VERSION_SYM:
					case WEEK:
					case WEEKDAY:
					case WEEKOFYEAR:
					case WEIGHT_STRING:
					case YEAR:
					case YEARWEEK:
						{
						alt97=1;
						}
						break;
					}
				}

				switch (alt97) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1544:38: COMMA ^ groupby_item
					{
					COMMA382=(Token)match(input,COMMA,FOLLOW_COMMA_in_groupby_clause24767); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA382_tree = (Object)adaptor.create(COMMA382);
					root_0 = (Object)adaptor.becomeRoot(COMMA382_tree, root_0);
					}

					pushFollow(FOLLOW_groupby_item_in_groupby_clause24771);
					groupby_item383=groupby_item();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, groupby_item383.getTree());

					}
					break;

				default :
					break loop97;
				}
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1544:61: ( WITH ROLLUP_SYM )?
			int alt98=2;
			int LA98_0 = input.LA(1);
			if ( (LA98_0==WITH) ) {
				int LA98_1 = input.LA(2);
				if ( (LA98_1==ROLLUP_SYM) ) {
					alt98=1;
				}
			}
			switch (alt98) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1544:62: WITH ROLLUP_SYM
					{
					WITH384=(Token)match(input,WITH,FOLLOW_WITH_in_groupby_clause24776); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					WITH384_tree = (Object)adaptor.create(WITH384);
					adaptor.addChild(root_0, WITH384_tree);
					}

					ROLLUP_SYM385=(Token)match(input,ROLLUP_SYM,FOLLOW_ROLLUP_SYM_in_groupby_clause24778); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ROLLUP_SYM385_tree = (Object)adaptor.create(ROLLUP_SYM385);
					adaptor.addChild(root_0, ROLLUP_SYM385_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "groupby_clause"


	public static class groupby_item_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "groupby_item"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1546:1: groupby_item : ( column_spec | INTEGER_NUM | bit_expr );
	public final SQLParser.groupby_item_return groupby_item() throws RecognitionException {
		SQLParser.groupby_item_return retval = new SQLParser.groupby_item_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token INTEGER_NUM387=null;
		ParserRuleReturnScope column_spec386 =null;
		ParserRuleReturnScope bit_expr388 =null;

		Object INTEGER_NUM387_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1546:13: ( column_spec | INTEGER_NUM | bit_expr )
			int alt99=3;
			switch ( input.LA(1) ) {
			case ID:
				{
				int LA99_1 = input.LA(2);
				if ( (synpred422_SQL()) ) {
					alt99=1;
				}
				else if ( (true) ) {
					alt99=3;
				}

				}
				break;
			case INTEGER_NUM:
				{
				int LA99_2 = input.LA(2);
				if ( (synpred423_SQL()) ) {
					alt99=2;
				}
				else if ( (true) ) {
					alt99=3;
				}

				}
				break;
			case ABS:
			case ACOS:
			case ADDDATE:
			case ADDTIME:
			case AES_DECRYPT:
			case AES_ENCRYPT:
			case ASCII_SYM:
			case ASIN:
			case ATAN:
			case ATAN2:
			case AVG:
			case BENCHMARK:
			case BIN:
			case BINARY:
			case BIT_AND:
			case BIT_LENGTH:
			case BIT_NUM:
			case BIT_OR:
			case BIT_XOR:
			case CASE_SYM:
			case CAST_SYM:
			case CEIL:
			case CEILING:
			case CHAR:
			case CHARSET:
			case CHAR_LENGTH:
			case COERCIBILITY:
			case COLLATION:
			case CONCAT:
			case CONCAT_WS:
			case CONNECTION_ID:
			case CONV:
			case CONVERT_SYM:
			case CONVERT_TZ:
			case COS:
			case COT:
			case COUNT:
			case CRC32:
			case CURDATE:
			case CURRENT_USER:
			case CURTIME:
			case DATABASE:
			case DATEDIFF:
			case DATE_ADD:
			case DATE_FORMAT:
			case DATE_SUB:
			case DATE_SYM:
			case DAYNAME:
			case DAYOFMONTH:
			case DAYOFWEEK:
			case DAYOFYEAR:
			case DECODE:
			case DEFAULT:
			case DEGREES:
			case DES_DECRYPT:
			case DES_ENCRYPT:
			case ELT:
			case ENCODE:
			case ENCRYPT:
			case EXISTS:
			case EXP:
			case EXPORT_SET:
			case EXTRACT:
			case FALSE_SYM:
			case FIELD:
			case FIND_IN_SET:
			case FLOOR:
			case FORMAT:
			case FOUND_ROWS:
			case FROM_BASE64:
			case FROM_DAYS:
			case FROM_UNIXTIME:
			case GET_FORMAT:
			case GET_LOCK:
			case GROUP_CONCAT:
			case HEX:
			case HEX_DIGIT:
			case HOUR:
			case IF:
			case IFNULL:
			case INET_ATON:
			case INET_NTOA:
			case INSERT:
			case INSTR:
			case INTERVAL_SYM:
			case IS_FREE_LOCK:
			case IS_USED_LOCK:
			case LAST_DAY:
			case LAST_INSERT_ID:
			case LEFT:
			case LENGTH:
			case LN:
			case LOAD_FILE:
			case LOCATE:
			case LOG:
			case LOG10:
			case LOG2:
			case LOWER:
			case LPAD:
			case LPAREN:
			case LTRIM:
			case MAKEDATE:
			case MAKETIME:
			case MAKE_SET:
			case MASTER_POS_WAIT:
			case MATCH:
			case MAX_SYM:
			case MD5:
			case MICROSECOND:
			case MID:
			case MINUS:
			case MINUTE:
			case MIN_SYM:
			case MOD:
			case MONTH:
			case MONTHNAME:
			case NAME_CONST:
			case NEGATION:
			case NOW:
			case NULL_SYM:
			case OCT:
			case OLD_PASSWORD:
			case ORD:
			case PASSWORD:
			case PERIOD_ADD:
			case PERIOD_DIFF:
			case PI:
			case PLUS:
			case POW:
			case POWER:
			case QUARTER:
			case QUOTE:
			case RADIANS:
			case RAND:
			case REAL_NUMBER:
			case RELEASE_LOCK:
			case REPEAT:
			case REPLACE:
			case REVERSE:
			case RIGHT:
			case ROUND:
			case ROW_SYM:
			case RPAD:
			case RTRIM:
			case SCHEMA:
			case SECOND:
			case SEC_TO_TIME:
			case SESSION_USER:
			case SIGN:
			case SIN:
			case SLEEP:
			case SOUNDEX:
			case SPACE:
			case SQRT:
			case STD:
			case STDDEV:
			case STDDEV_POP:
			case STDDEV_SAMP:
			case STRCMP:
			case STR_TO_DATE:
			case SUBSTRING:
			case SUBSTRING_INDEX:
			case SUBTIME:
			case SUM:
			case SYSDATE:
			case SYSTEM_USER:
			case TAN:
			case TEXT_STRING:
			case TIMEDIFF:
			case TIMESTAMP:
			case TIMESTAMPADD:
			case TIMESTAMPDIFF:
			case TIME_FORMAT:
			case TIME_SYM:
			case TIME_TO_SEC:
			case TO_BASE64:
			case TO_DAYS:
			case TO_SECONDS:
			case TRIM:
			case TRUE_SYM:
			case TRUNCATE:
			case UNHEX:
			case UNIX_TIMESTAMP:
			case UPPER:
			case USER:
			case USER_VAR:
			case UTC_DATE:
			case UTC_TIME:
			case UTC_TIMESTAMP:
			case UUID:
			case VALUES:
			case VARIANCE:
			case VAR_POP:
			case VAR_SAMP:
			case VERSION_SYM:
			case WEEK:
			case WEEKDAY:
			case WEEKOFYEAR:
			case WEIGHT_STRING:
			case YEAR:
			case YEARWEEK:
				{
				alt99=3;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 99, 0, input);
				throw nvae;
			}
			switch (alt99) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1546:15: column_spec
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_column_spec_in_groupby_item24787);
					column_spec386=column_spec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_spec386.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1546:29: INTEGER_NUM
					{
					root_0 = (Object)adaptor.nil();


					INTEGER_NUM387=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_groupby_item24791); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM387_tree = (Object)adaptor.create(INTEGER_NUM387);
					adaptor.addChild(root_0, INTEGER_NUM387_tree);
					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1546:43: bit_expr
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_bit_expr_in_groupby_item24795);
					bit_expr388=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr388.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "groupby_item"


	public static class having_clause_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "having_clause"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1548:1: having_clause : HAVING ^ expression ;
	public final SQLParser.having_clause_return having_clause() throws RecognitionException {
		SQLParser.having_clause_return retval = new SQLParser.having_clause_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token HAVING389=null;
		ParserRuleReturnScope expression390 =null;

		Object HAVING389_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1548:14: ( HAVING ^ expression )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1549:3: HAVING ^ expression
			{
			root_0 = (Object)adaptor.nil();


			HAVING389=(Token)match(input,HAVING,FOLLOW_HAVING_in_having_clause24805); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			HAVING389_tree = (Object)adaptor.create(HAVING389);
			root_0 = (Object)adaptor.becomeRoot(HAVING389_tree, root_0);
			}

			pushFollow(FOLLOW_expression_in_having_clause24809);
			expression390=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression390.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "having_clause"


	public static class orderby_clause_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "orderby_clause"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1552:1: orderby_clause : ( ORDER_SYM BY_SYM ) ^ orderby_item ( COMMA ^ orderby_item )* ;
	public final SQLParser.orderby_clause_return orderby_clause() throws RecognitionException {
		SQLParser.orderby_clause_return retval = new SQLParser.orderby_clause_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token ORDER_SYM391=null;
		Token BY_SYM392=null;
		Token COMMA394=null;
		ParserRuleReturnScope orderby_item393 =null;
		ParserRuleReturnScope orderby_item395 =null;

		Object ORDER_SYM391_tree=null;
		Object BY_SYM392_tree=null;
		Object COMMA394_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1552:15: ( ( ORDER_SYM BY_SYM ) ^ orderby_item ( COMMA ^ orderby_item )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1553:3: ( ORDER_SYM BY_SYM ) ^ orderby_item ( COMMA ^ orderby_item )*
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1553:3: ( ORDER_SYM BY_SYM )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1553:4: ORDER_SYM BY_SYM
			{
			ORDER_SYM391=(Token)match(input,ORDER_SYM,FOLLOW_ORDER_SYM_in_orderby_clause24820); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			ORDER_SYM391_tree = (Object)adaptor.create(ORDER_SYM391);
			adaptor.addChild(root_0, ORDER_SYM391_tree);
			}

			BY_SYM392=(Token)match(input,BY_SYM,FOLLOW_BY_SYM_in_orderby_clause24822); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			BY_SYM392_tree = (Object)adaptor.create(BY_SYM392);
			adaptor.addChild(root_0, BY_SYM392_tree);
			}

			}

			pushFollow(FOLLOW_orderby_item_in_orderby_clause24827);
			orderby_item393=orderby_item();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, orderby_item393.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1553:37: ( COMMA ^ orderby_item )*
			loop100:
			while (true) {
				int alt100=2;
				int LA100_0 = input.LA(1);
				if ( (LA100_0==COMMA) ) {
					switch ( input.LA(2) ) {
					case INSERT:
						{
						int LA100_3 = input.LA(3);
						if ( (LA100_3==EOF||LA100_3==ASC||LA100_3==ASTERISK||LA100_3==BITAND||LA100_3==COMMA||LA100_3==DESC||LA100_3==DIVIDE||LA100_3==FOR_SYM||LA100_3==INTEGER_NUM||LA100_3==LIMIT||LA100_3==LOCK||LA100_3==LPAREN||LA100_3==MINUS||LA100_3==MOD_SYM||LA100_3==ON||LA100_3==PLUS||LA100_3==POWER_OP||LA100_3==RPAREN||LA100_3==SEMI||(LA100_3 >= SHIFT_LEFT && LA100_3 <= SHIFT_RIGHT)||LA100_3==UNION_SYM||LA100_3==VERTBAR||LA100_3==WITH) ) {
							alt100=1;
						}

						}
						break;
					case REPLACE:
						{
						int LA100_4 = input.LA(3);
						if ( (LA100_4==EOF||LA100_4==ASC||LA100_4==ASTERISK||LA100_4==BITAND||LA100_4==COMMA||LA100_4==DESC||LA100_4==DIVIDE||LA100_4==FOR_SYM||LA100_4==INTEGER_NUM||LA100_4==LIMIT||LA100_4==LOCK||LA100_4==LPAREN||LA100_4==MINUS||LA100_4==MOD_SYM||LA100_4==ON||LA100_4==PLUS||LA100_4==POWER_OP||LA100_4==RPAREN||LA100_4==SEMI||(LA100_4 >= SHIFT_LEFT && LA100_4 <= SHIFT_RIGHT)||LA100_4==UNION_SYM||LA100_4==VERTBAR||LA100_4==WITH) ) {
							alt100=1;
						}

						}
						break;
					case TRUNCATE:
						{
						int LA100_5 = input.LA(3);
						if ( (LA100_5==EOF||LA100_5==ASC||LA100_5==ASTERISK||LA100_5==BITAND||LA100_5==COMMA||LA100_5==DESC||LA100_5==DIVIDE||LA100_5==FOR_SYM||LA100_5==INTEGER_NUM||LA100_5==LIMIT||LA100_5==LOCK||LA100_5==LPAREN||LA100_5==MINUS||LA100_5==MOD_SYM||LA100_5==ON||LA100_5==PLUS||LA100_5==POWER_OP||LA100_5==RPAREN||LA100_5==SEMI||(LA100_5 >= SHIFT_LEFT && LA100_5 <= SHIFT_RIGHT)||LA100_5==UNION_SYM||LA100_5==VERTBAR||LA100_5==WITH) ) {
							alt100=1;
						}

						}
						break;
					case ABS:
					case ACOS:
					case ADDDATE:
					case ADDTIME:
					case AES_DECRYPT:
					case AES_ENCRYPT:
					case ASCII_SYM:
					case ASIN:
					case ATAN:
					case ATAN2:
					case AVG:
					case BENCHMARK:
					case BIN:
					case BINARY:
					case BIT_AND:
					case BIT_LENGTH:
					case BIT_NUM:
					case BIT_OR:
					case BIT_XOR:
					case CASE_SYM:
					case CAST_SYM:
					case CEIL:
					case CEILING:
					case CHAR:
					case CHARSET:
					case CHAR_LENGTH:
					case COERCIBILITY:
					case COLLATION:
					case CONCAT:
					case CONCAT_WS:
					case CONNECTION_ID:
					case CONV:
					case CONVERT_SYM:
					case CONVERT_TZ:
					case COS:
					case COT:
					case COUNT:
					case CRC32:
					case CURDATE:
					case CURRENT_USER:
					case CURTIME:
					case DATABASE:
					case DATEDIFF:
					case DATE_ADD:
					case DATE_FORMAT:
					case DATE_SUB:
					case DATE_SYM:
					case DAYNAME:
					case DAYOFMONTH:
					case DAYOFWEEK:
					case DAYOFYEAR:
					case DECODE:
					case DEFAULT:
					case DEGREES:
					case DES_DECRYPT:
					case DES_ENCRYPT:
					case ELT:
					case ENCODE:
					case ENCRYPT:
					case EXISTS:
					case EXP:
					case EXPORT_SET:
					case EXTRACT:
					case FALSE_SYM:
					case FIELD:
					case FIND_IN_SET:
					case FLOOR:
					case FORMAT:
					case FOUND_ROWS:
					case FROM_BASE64:
					case FROM_DAYS:
					case FROM_UNIXTIME:
					case GET_FORMAT:
					case GET_LOCK:
					case GROUP_CONCAT:
					case HEX:
					case HEX_DIGIT:
					case HOUR:
					case ID:
					case IF:
					case IFNULL:
					case INET_ATON:
					case INET_NTOA:
					case INSTR:
					case INTEGER_NUM:
					case INTERVAL_SYM:
					case IS_FREE_LOCK:
					case IS_USED_LOCK:
					case LAST_DAY:
					case LAST_INSERT_ID:
					case LEFT:
					case LENGTH:
					case LN:
					case LOAD_FILE:
					case LOCATE:
					case LOG:
					case LOG10:
					case LOG2:
					case LOWER:
					case LPAD:
					case LPAREN:
					case LTRIM:
					case MAKEDATE:
					case MAKETIME:
					case MAKE_SET:
					case MASTER_POS_WAIT:
					case MATCH:
					case MAX_SYM:
					case MD5:
					case MICROSECOND:
					case MID:
					case MINUS:
					case MINUTE:
					case MIN_SYM:
					case MOD:
					case MONTH:
					case MONTHNAME:
					case NAME_CONST:
					case NEGATION:
					case NOW:
					case NULL_SYM:
					case OCT:
					case OLD_PASSWORD:
					case ORD:
					case PASSWORD:
					case PERIOD_ADD:
					case PERIOD_DIFF:
					case PI:
					case PLUS:
					case POW:
					case POWER:
					case QUARTER:
					case QUOTE:
					case RADIANS:
					case RAND:
					case REAL_NUMBER:
					case RELEASE_LOCK:
					case REPEAT:
					case REVERSE:
					case RIGHT:
					case ROUND:
					case ROW_SYM:
					case RPAD:
					case RTRIM:
					case SCHEMA:
					case SECOND:
					case SEC_TO_TIME:
					case SESSION_USER:
					case SIGN:
					case SIN:
					case SLEEP:
					case SOUNDEX:
					case SPACE:
					case SQRT:
					case STD:
					case STDDEV:
					case STDDEV_POP:
					case STDDEV_SAMP:
					case STRCMP:
					case STR_TO_DATE:
					case SUBSTRING:
					case SUBSTRING_INDEX:
					case SUBTIME:
					case SUM:
					case SYSDATE:
					case SYSTEM_USER:
					case TAN:
					case TEXT_STRING:
					case TIMEDIFF:
					case TIMESTAMP:
					case TIMESTAMPADD:
					case TIMESTAMPDIFF:
					case TIME_FORMAT:
					case TIME_SYM:
					case TIME_TO_SEC:
					case TO_BASE64:
					case TO_DAYS:
					case TO_SECONDS:
					case TRIM:
					case TRUE_SYM:
					case UNHEX:
					case UNIX_TIMESTAMP:
					case UPPER:
					case USER:
					case USER_VAR:
					case UTC_DATE:
					case UTC_TIME:
					case UTC_TIMESTAMP:
					case UUID:
					case VALUES:
					case VARIANCE:
					case VAR_POP:
					case VAR_SAMP:
					case VERSION_SYM:
					case WEEK:
					case WEEKDAY:
					case WEEKOFYEAR:
					case WEIGHT_STRING:
					case YEAR:
					case YEARWEEK:
						{
						alt100=1;
						}
						break;
					}
				}

				switch (alt100) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1553:38: COMMA ^ orderby_item
					{
					COMMA394=(Token)match(input,COMMA,FOLLOW_COMMA_in_orderby_clause24830); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA394_tree = (Object)adaptor.create(COMMA394);
					root_0 = (Object)adaptor.becomeRoot(COMMA394_tree, root_0);
					}

					pushFollow(FOLLOW_orderby_item_in_orderby_clause24834);
					orderby_item395=orderby_item();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, orderby_item395.getTree());

					}
					break;

				default :
					break loop100;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "orderby_clause"


	public static class orderby_item_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "orderby_item"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1555:1: orderby_item : groupby_item ( ASC | DESC )? ;
	public final SQLParser.orderby_item_return orderby_item() throws RecognitionException {
		SQLParser.orderby_item_return retval = new SQLParser.orderby_item_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set397=null;
		ParserRuleReturnScope groupby_item396 =null;

		Object set397_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1555:13: ( groupby_item ( ASC | DESC )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1555:15: groupby_item ( ASC | DESC )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_groupby_item_in_orderby_item24843);
			groupby_item396=groupby_item();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, groupby_item396.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1555:28: ( ASC | DESC )?
			int alt101=2;
			int LA101_0 = input.LA(1);
			if ( (LA101_0==ASC||LA101_0==DESC) ) {
				alt101=1;
			}
			switch (alt101) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
					{
					set397=input.LT(1);
					if ( input.LA(1)==ASC||input.LA(1)==DESC ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set397));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "orderby_item"


	public static class limit_clause_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "limit_clause"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1557:1: limit_clause : ( LIMIT ( ( offset COMMA )? row_count ) | ( row_count OFFSET_SYM offset ) );
	public final SQLParser.limit_clause_return limit_clause() throws RecognitionException {
		SQLParser.limit_clause_return retval = new SQLParser.limit_clause_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token LIMIT398=null;
		Token COMMA400=null;
		Token OFFSET_SYM403=null;
		ParserRuleReturnScope offset399 =null;
		ParserRuleReturnScope row_count401 =null;
		ParserRuleReturnScope row_count402 =null;
		ParserRuleReturnScope offset404 =null;

		Object LIMIT398_tree=null;
		Object COMMA400_tree=null;
		Object OFFSET_SYM403_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1557:13: ( LIMIT ( ( offset COMMA )? row_count ) | ( row_count OFFSET_SYM offset ) )
			int alt103=2;
			int LA103_0 = input.LA(1);
			if ( (LA103_0==LIMIT) ) {
				alt103=1;
			}
			else if ( (LA103_0==INTEGER_NUM) ) {
				alt103=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 103, 0, input);
				throw nvae;
			}

			switch (alt103) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1558:3: LIMIT ( ( offset COMMA )? row_count )
					{
					root_0 = (Object)adaptor.nil();


					LIMIT398=(Token)match(input,LIMIT,FOLLOW_LIMIT_in_limit_clause24862); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LIMIT398_tree = (Object)adaptor.create(LIMIT398);
					adaptor.addChild(root_0, LIMIT398_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1558:9: ( ( offset COMMA )? row_count )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1558:10: ( offset COMMA )? row_count
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1558:10: ( offset COMMA )?
					int alt102=2;
					int LA102_0 = input.LA(1);
					if ( (LA102_0==INTEGER_NUM) ) {
						int LA102_1 = input.LA(2);
						if ( (LA102_1==COMMA) ) {
							int LA102_2 = input.LA(3);
							if ( (LA102_2==INTEGER_NUM) ) {
								alt102=1;
							}
						}
					}
					switch (alt102) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1558:11: offset COMMA
							{
							pushFollow(FOLLOW_offset_in_limit_clause24866);
							offset399=offset();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, offset399.getTree());

							COMMA400=(Token)match(input,COMMA,FOLLOW_COMMA_in_limit_clause24868); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA400_tree = (Object)adaptor.create(COMMA400);
							adaptor.addChild(root_0, COMMA400_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_row_count_in_limit_clause24872);
					row_count401=row_count();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, row_count401.getTree());

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1558:39: ( row_count OFFSET_SYM offset )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1558:39: ( row_count OFFSET_SYM offset )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1558:40: row_count OFFSET_SYM offset
					{
					pushFollow(FOLLOW_row_count_in_limit_clause24878);
					row_count402=row_count();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, row_count402.getTree());

					OFFSET_SYM403=(Token)match(input,OFFSET_SYM,FOLLOW_OFFSET_SYM_in_limit_clause24880); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					OFFSET_SYM403_tree = (Object)adaptor.create(OFFSET_SYM403);
					adaptor.addChild(root_0, OFFSET_SYM403_tree);
					}

					pushFollow(FOLLOW_offset_in_limit_clause24882);
					offset404=offset();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, offset404.getTree());

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "limit_clause"


	public static class offset_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "offset"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1560:1: offset : INTEGER_NUM ;
	public final SQLParser.offset_return offset() throws RecognitionException {
		SQLParser.offset_return retval = new SQLParser.offset_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token INTEGER_NUM405=null;

		Object INTEGER_NUM405_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1560:7: ( INTEGER_NUM )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1560:11: INTEGER_NUM
			{
			root_0 = (Object)adaptor.nil();


			INTEGER_NUM405=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_offset24892); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			INTEGER_NUM405_tree = (Object)adaptor.create(INTEGER_NUM405);
			adaptor.addChild(root_0, INTEGER_NUM405_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "offset"


	public static class row_count_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "row_count"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1561:1: row_count : INTEGER_NUM ;
	public final SQLParser.row_count_return row_count() throws RecognitionException {
		SQLParser.row_count_return retval = new SQLParser.row_count_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token INTEGER_NUM406=null;

		Object INTEGER_NUM406_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1561:10: ( INTEGER_NUM )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1561:13: INTEGER_NUM
			{
			root_0 = (Object)adaptor.nil();


			INTEGER_NUM406=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_row_count24900); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			INTEGER_NUM406_tree = (Object)adaptor.create(INTEGER_NUM406);
			adaptor.addChild(root_0, INTEGER_NUM406_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "row_count"


	public static class select_list_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "select_list"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1563:1: select_list : ( ( displayed_column ( COMMA ^ displayed_column )* ) | ASTERISK ) ;
	public final SQLParser.select_list_return select_list() throws RecognitionException {
		SQLParser.select_list_return retval = new SQLParser.select_list_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token COMMA408=null;
		Token ASTERISK410=null;
		ParserRuleReturnScope displayed_column407 =null;
		ParserRuleReturnScope displayed_column409 =null;

		Object COMMA408_tree=null;
		Object ASTERISK410_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1563:12: ( ( ( displayed_column ( COMMA ^ displayed_column )* ) | ASTERISK ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1564:3: ( ( displayed_column ( COMMA ^ displayed_column )* ) | ASTERISK )
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1564:3: ( ( displayed_column ( COMMA ^ displayed_column )* ) | ASTERISK )
			int alt105=2;
			int LA105_0 = input.LA(1);
			if ( (LA105_0==ABS||LA105_0==ACOS||(LA105_0 >= ADDDATE && LA105_0 <= ADDTIME)||(LA105_0 >= AES_DECRYPT && LA105_0 <= AES_ENCRYPT)||LA105_0==ASCII_SYM||LA105_0==ASIN||(LA105_0 >= ATAN && LA105_0 <= ATAN2)||LA105_0==AVG||LA105_0==BENCHMARK||(LA105_0 >= BIN && LA105_0 <= BINARY)||(LA105_0 >= BIT_AND && LA105_0 <= BIT_OR)||LA105_0==BIT_XOR||(LA105_0 >= CASE_SYM && LA105_0 <= CEILING)||LA105_0==CHAR||(LA105_0 >= CHARSET && LA105_0 <= CHAR_LENGTH)||LA105_0==COERCIBILITY||LA105_0==COLLATION||(LA105_0 >= CONCAT && LA105_0 <= CONCAT_WS)||LA105_0==CONNECTION_ID||(LA105_0 >= CONV && LA105_0 <= CONVERT_TZ)||(LA105_0 >= COS && LA105_0 <= COUNT)||LA105_0==CRC32||LA105_0==CURDATE||LA105_0==CURRENT_USER||LA105_0==CURTIME||LA105_0==DATABASE||LA105_0==DATEDIFF||(LA105_0 >= DATE_ADD && LA105_0 <= DAYOFYEAR)||(LA105_0 >= DECODE && LA105_0 <= DEFAULT)||LA105_0==DEGREES||(LA105_0 >= DES_DECRYPT && LA105_0 <= DES_ENCRYPT)||LA105_0==ELT||(LA105_0 >= ENCODE && LA105_0 <= ENCRYPT)||LA105_0==EXISTS||LA105_0==EXP||LA105_0==EXPORT_SET||LA105_0==EXTRACT||LA105_0==FALSE_SYM||LA105_0==FIELD||LA105_0==FIND_IN_SET||LA105_0==FLOOR||LA105_0==FORMAT||LA105_0==FOUND_ROWS||(LA105_0 >= FROM_BASE64 && LA105_0 <= FROM_UNIXTIME)||(LA105_0 >= GET_FORMAT && LA105_0 <= GET_LOCK)||LA105_0==GROUP_CONCAT||(LA105_0 >= HEX && LA105_0 <= HEX_DIGIT)||LA105_0==HOUR||LA105_0==ID||(LA105_0 >= IF && LA105_0 <= IFNULL)||(LA105_0 >= INET_ATON && LA105_0 <= INET_NTOA)||LA105_0==INSERT||(LA105_0 >= INSTR && LA105_0 <= INTEGER_NUM)||LA105_0==INTERVAL_SYM||LA105_0==IS_FREE_LOCK||LA105_0==IS_USED_LOCK||(LA105_0 >= LAST_DAY && LA105_0 <= LAST_INSERT_ID)||(LA105_0 >= LEFT && LA105_0 <= LENGTH)||LA105_0==LN||LA105_0==LOAD_FILE||LA105_0==LOCATE||(LA105_0 >= LOG && LA105_0 <= LOG2)||LA105_0==LOWER||(LA105_0 >= LPAD && LA105_0 <= LPAREN)||LA105_0==LTRIM||(LA105_0 >= MAKEDATE && LA105_0 <= MAKE_SET)||LA105_0==MASTER_POS_WAIT||LA105_0==MATCH||LA105_0==MAX_SYM||LA105_0==MD5||(LA105_0 >= MICROSECOND && LA105_0 <= MID)||(LA105_0 >= MINUS && LA105_0 <= MINUTE)||LA105_0==MIN_SYM||LA105_0==MOD||(LA105_0 >= MONTH && LA105_0 <= MONTHNAME)||LA105_0==NAME_CONST||LA105_0==NEGATION||LA105_0==NOW||LA105_0==NULL_SYM||LA105_0==OCT||LA105_0==OLD_PASSWORD||LA105_0==ORD||(LA105_0 >= PASSWORD && LA105_0 <= PERIOD_DIFF)||LA105_0==PI||LA105_0==PLUS||(LA105_0 >= POW && LA105_0 <= POWER)||LA105_0==QUARTER||LA105_0==QUOTE||(LA105_0 >= RADIANS && LA105_0 <= RAND)||LA105_0==REAL_NUMBER||LA105_0==RELEASE_LOCK||LA105_0==REPEAT||LA105_0==REPLACE||LA105_0==REVERSE||LA105_0==RIGHT||LA105_0==ROUND||(LA105_0 >= ROW_SYM && LA105_0 <= RPAD)||LA105_0==RTRIM||(LA105_0 >= SCHEMA && LA105_0 <= SECOND)||LA105_0==SEC_TO_TIME||LA105_0==SESSION_USER||LA105_0==SIGN||LA105_0==SIN||LA105_0==SLEEP||LA105_0==SOUNDEX||LA105_0==SPACE||LA105_0==SQRT||(LA105_0 >= STD && LA105_0 <= STDDEV_SAMP)||LA105_0==STRCMP||LA105_0==STR_TO_DATE||(LA105_0 >= SUBSTRING && LA105_0 <= SUM)||(LA105_0 >= SYSDATE && LA105_0 <= SYSTEM_USER)||LA105_0==TAN||LA105_0==TEXT_STRING||(LA105_0 >= TIMEDIFF && LA105_0 <= TIME_TO_SEC)||(LA105_0 >= TO_BASE64 && LA105_0 <= TO_SECONDS)||(LA105_0 >= TRIM && LA105_0 <= TRUNCATE)||LA105_0==UNHEX||LA105_0==UNIX_TIMESTAMP||LA105_0==UPPER||(LA105_0 >= USER && LA105_0 <= USER_VAR)||(LA105_0 >= UTC_DATE && LA105_0 <= UTC_TIMESTAMP)||LA105_0==UUID||LA105_0==VALUES||LA105_0==VARIANCE||(LA105_0 >= VAR_POP && LA105_0 <= VERSION_SYM)||(LA105_0 >= WEEK && LA105_0 <= WEIGHT_STRING)||(LA105_0 >= YEAR && LA105_0 <= YEARWEEK)) ) {
				alt105=1;
			}
			else if ( (LA105_0==ASTERISK) ) {
				alt105=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 105, 0, input);
				throw nvae;
			}

			switch (alt105) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1564:5: ( displayed_column ( COMMA ^ displayed_column )* )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1564:5: ( displayed_column ( COMMA ^ displayed_column )* )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1564:7: displayed_column ( COMMA ^ displayed_column )*
					{
					pushFollow(FOLLOW_displayed_column_in_select_list24914);
					displayed_column407=displayed_column();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, displayed_column407.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1564:24: ( COMMA ^ displayed_column )*
					loop104:
					while (true) {
						int alt104=2;
						int LA104_0 = input.LA(1);
						if ( (LA104_0==COMMA) ) {
							switch ( input.LA(2) ) {
							case INSERT:
								{
								int LA104_3 = input.LA(3);
								if ( (LA104_3==ID) ) {
									int LA104_7 = input.LA(4);
									if ( (LA104_7==EOF||LA104_7==COMMA||LA104_7==FOR_SYM||LA104_7==FROM||LA104_7==INTEGER_NUM||LA104_7==LIMIT||LA104_7==LOCK||LA104_7==ON||LA104_7==ORDER_SYM||LA104_7==RPAREN||LA104_7==SEMI||LA104_7==UNION_SYM||LA104_7==WITH) ) {
										alt104=1;
									}

								}
								else if ( (LA104_3==EOF||(LA104_3 >= ASTERISK && LA104_3 <= AS_SYM)||LA104_3==BITAND||LA104_3==COMMA||LA104_3==DIVIDE||LA104_3==FOR_SYM||LA104_3==FROM||LA104_3==INTEGER_NUM||LA104_3==LIMIT||LA104_3==LOCK||LA104_3==LPAREN||LA104_3==MINUS||LA104_3==MOD_SYM||LA104_3==ON||LA104_3==ORDER_SYM||LA104_3==PLUS||LA104_3==POWER_OP||LA104_3==RPAREN||LA104_3==SEMI||(LA104_3 >= SHIFT_LEFT && LA104_3 <= SHIFT_RIGHT)||LA104_3==UNION_SYM||LA104_3==VERTBAR||LA104_3==WITH) ) {
									alt104=1;
								}

								}
								break;
							case REPLACE:
								{
								int LA104_4 = input.LA(3);
								if ( (LA104_4==ID) ) {
									int LA104_8 = input.LA(4);
									if ( (LA104_8==EOF||LA104_8==COMMA||LA104_8==FOR_SYM||LA104_8==FROM||LA104_8==INTEGER_NUM||LA104_8==LIMIT||LA104_8==LOCK||LA104_8==ON||LA104_8==ORDER_SYM||LA104_8==RPAREN||LA104_8==SEMI||LA104_8==UNION_SYM||LA104_8==WITH) ) {
										alt104=1;
									}

								}
								else if ( (LA104_4==EOF||(LA104_4 >= ASTERISK && LA104_4 <= AS_SYM)||LA104_4==BITAND||LA104_4==COMMA||LA104_4==DIVIDE||LA104_4==FOR_SYM||LA104_4==FROM||LA104_4==INTEGER_NUM||LA104_4==LIMIT||LA104_4==LOCK||LA104_4==LPAREN||LA104_4==MINUS||LA104_4==MOD_SYM||LA104_4==ON||LA104_4==ORDER_SYM||LA104_4==PLUS||LA104_4==POWER_OP||LA104_4==RPAREN||LA104_4==SEMI||(LA104_4 >= SHIFT_LEFT && LA104_4 <= SHIFT_RIGHT)||LA104_4==UNION_SYM||LA104_4==VERTBAR||LA104_4==WITH) ) {
									alt104=1;
								}

								}
								break;
							case TRUNCATE:
								{
								int LA104_5 = input.LA(3);
								if ( (LA104_5==ID) ) {
									int LA104_9 = input.LA(4);
									if ( (synpred429_SQL()) ) {
										alt104=1;
									}

								}
								else if ( (LA104_5==EOF||(LA104_5 >= ASTERISK && LA104_5 <= AS_SYM)||LA104_5==BITAND||LA104_5==COMMA||LA104_5==DIVIDE||LA104_5==FOR_SYM||LA104_5==FROM||LA104_5==INTEGER_NUM||LA104_5==LIMIT||LA104_5==LOCK||LA104_5==LPAREN||LA104_5==MINUS||LA104_5==MOD_SYM||LA104_5==ON||LA104_5==ORDER_SYM||LA104_5==PLUS||LA104_5==POWER_OP||LA104_5==RPAREN||LA104_5==SEMI||(LA104_5 >= SHIFT_LEFT && LA104_5 <= SHIFT_RIGHT)||LA104_5==UNION_SYM||LA104_5==VERTBAR||LA104_5==WITH) ) {
									alt104=1;
								}

								}
								break;
							case ABS:
							case ACOS:
							case ADDDATE:
							case ADDTIME:
							case AES_DECRYPT:
							case AES_ENCRYPT:
							case ASCII_SYM:
							case ASIN:
							case ATAN:
							case ATAN2:
							case AVG:
							case BENCHMARK:
							case BIN:
							case BINARY:
							case BIT_AND:
							case BIT_LENGTH:
							case BIT_NUM:
							case BIT_OR:
							case BIT_XOR:
							case CASE_SYM:
							case CAST_SYM:
							case CEIL:
							case CEILING:
							case CHAR:
							case CHARSET:
							case CHAR_LENGTH:
							case COERCIBILITY:
							case COLLATION:
							case CONCAT:
							case CONCAT_WS:
							case CONNECTION_ID:
							case CONV:
							case CONVERT_SYM:
							case CONVERT_TZ:
							case COS:
							case COT:
							case COUNT:
							case CRC32:
							case CURDATE:
							case CURRENT_USER:
							case CURTIME:
							case DATABASE:
							case DATEDIFF:
							case DATE_ADD:
							case DATE_FORMAT:
							case DATE_SUB:
							case DATE_SYM:
							case DAYNAME:
							case DAYOFMONTH:
							case DAYOFWEEK:
							case DAYOFYEAR:
							case DECODE:
							case DEFAULT:
							case DEGREES:
							case DES_DECRYPT:
							case DES_ENCRYPT:
							case ELT:
							case ENCODE:
							case ENCRYPT:
							case EXISTS:
							case EXP:
							case EXPORT_SET:
							case EXTRACT:
							case FALSE_SYM:
							case FIELD:
							case FIND_IN_SET:
							case FLOOR:
							case FORMAT:
							case FOUND_ROWS:
							case FROM_BASE64:
							case FROM_DAYS:
							case FROM_UNIXTIME:
							case GET_FORMAT:
							case GET_LOCK:
							case GROUP_CONCAT:
							case HEX:
							case HEX_DIGIT:
							case HOUR:
							case ID:
							case IF:
							case IFNULL:
							case INET_ATON:
							case INET_NTOA:
							case INSTR:
							case INTEGER_NUM:
							case INTERVAL_SYM:
							case IS_FREE_LOCK:
							case IS_USED_LOCK:
							case LAST_DAY:
							case LAST_INSERT_ID:
							case LEFT:
							case LENGTH:
							case LN:
							case LOAD_FILE:
							case LOCATE:
							case LOG:
							case LOG10:
							case LOG2:
							case LOWER:
							case LPAD:
							case LPAREN:
							case LTRIM:
							case MAKEDATE:
							case MAKETIME:
							case MAKE_SET:
							case MASTER_POS_WAIT:
							case MATCH:
							case MAX_SYM:
							case MD5:
							case MICROSECOND:
							case MID:
							case MINUS:
							case MINUTE:
							case MIN_SYM:
							case MOD:
							case MONTH:
							case MONTHNAME:
							case NAME_CONST:
							case NEGATION:
							case NOW:
							case NULL_SYM:
							case OCT:
							case OLD_PASSWORD:
							case ORD:
							case PASSWORD:
							case PERIOD_ADD:
							case PERIOD_DIFF:
							case PI:
							case PLUS:
							case POW:
							case POWER:
							case QUARTER:
							case QUOTE:
							case RADIANS:
							case RAND:
							case REAL_NUMBER:
							case RELEASE_LOCK:
							case REPEAT:
							case REVERSE:
							case RIGHT:
							case ROUND:
							case ROW_SYM:
							case RPAD:
							case RTRIM:
							case SCHEMA:
							case SECOND:
							case SEC_TO_TIME:
							case SESSION_USER:
							case SIGN:
							case SIN:
							case SLEEP:
							case SOUNDEX:
							case SPACE:
							case SQRT:
							case STD:
							case STDDEV:
							case STDDEV_POP:
							case STDDEV_SAMP:
							case STRCMP:
							case STR_TO_DATE:
							case SUBSTRING:
							case SUBSTRING_INDEX:
							case SUBTIME:
							case SUM:
							case SYSDATE:
							case SYSTEM_USER:
							case TAN:
							case TEXT_STRING:
							case TIMEDIFF:
							case TIMESTAMP:
							case TIMESTAMPADD:
							case TIMESTAMPDIFF:
							case TIME_FORMAT:
							case TIME_SYM:
							case TIME_TO_SEC:
							case TO_BASE64:
							case TO_DAYS:
							case TO_SECONDS:
							case TRIM:
							case TRUE_SYM:
							case UNHEX:
							case UNIX_TIMESTAMP:
							case UPPER:
							case USER:
							case USER_VAR:
							case UTC_DATE:
							case UTC_TIME:
							case UTC_TIMESTAMP:
							case UUID:
							case VALUES:
							case VARIANCE:
							case VAR_POP:
							case VAR_SAMP:
							case VERSION_SYM:
							case WEEK:
							case WEEKDAY:
							case WEEKOFYEAR:
							case WEIGHT_STRING:
							case YEAR:
							case YEARWEEK:
								{
								alt104=1;
								}
								break;
							}
						}

						switch (alt104) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1564:26: COMMA ^ displayed_column
							{
							COMMA408=(Token)match(input,COMMA,FOLLOW_COMMA_in_select_list24918); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA408_tree = (Object)adaptor.create(COMMA408);
							root_0 = (Object)adaptor.becomeRoot(COMMA408_tree, root_0);
							}

							pushFollow(FOLLOW_displayed_column_in_select_list24922);
							displayed_column409=displayed_column();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, displayed_column409.getTree());

							}
							break;

						default :
							break loop104;
						}
					}

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1565:5: ASTERISK
					{
					ASTERISK410=(Token)match(input,ASTERISK,FOLLOW_ASTERISK_in_select_list24932); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ASTERISK410_tree = (Object)adaptor.create(ASTERISK410);
					adaptor.addChild(root_0, ASTERISK410_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "select_list"


	public static class column_list_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "column_list"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1568:1: column_list : LPAREN ! column_spec ( COMMA ^ column_spec )* RPAREN !;
	public final SQLParser.column_list_return column_list() throws RecognitionException {
		SQLParser.column_list_return retval = new SQLParser.column_list_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token LPAREN411=null;
		Token COMMA413=null;
		Token RPAREN415=null;
		ParserRuleReturnScope column_spec412 =null;
		ParserRuleReturnScope column_spec414 =null;

		Object LPAREN411_tree=null;
		Object COMMA413_tree=null;
		Object RPAREN415_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1568:12: ( LPAREN ! column_spec ( COMMA ^ column_spec )* RPAREN !)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1569:3: LPAREN ! column_spec ( COMMA ^ column_spec )* RPAREN !
			{
			root_0 = (Object)adaptor.nil();


			LPAREN411=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_list24945); if (state.failed) return retval;
			pushFollow(FOLLOW_column_spec_in_column_list24949);
			column_spec412=column_spec();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, column_spec412.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1569:24: ( COMMA ^ column_spec )*
			loop106:
			while (true) {
				int alt106=2;
				int LA106_0 = input.LA(1);
				if ( (LA106_0==COMMA) ) {
					alt106=1;
				}

				switch (alt106) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1569:25: COMMA ^ column_spec
					{
					COMMA413=(Token)match(input,COMMA,FOLLOW_COMMA_in_column_list24952); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA413_tree = (Object)adaptor.create(COMMA413);
					root_0 = (Object)adaptor.becomeRoot(COMMA413_tree, root_0);
					}

					pushFollow(FOLLOW_column_spec_in_column_list24956);
					column_spec414=column_spec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_spec414.getTree());

					}
					break;

				default :
					break loop106;
				}
			}

			RPAREN415=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_list24960); if (state.failed) return retval;
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "column_list"


	public static class subquery_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "subquery"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1572:1: subquery : LPAREN ! select_statement RPAREN !;
	public final SQLParser.subquery_return subquery() throws RecognitionException {
		SQLParser.subquery_return retval = new SQLParser.subquery_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token LPAREN416=null;
		Token RPAREN418=null;
		ParserRuleReturnScope select_statement417 =null;

		Object LPAREN416_tree=null;
		Object RPAREN418_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1572:9: ( LPAREN ! select_statement RPAREN !)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1573:3: LPAREN ! select_statement RPAREN !
			{
			root_0 = (Object)adaptor.nil();


			LPAREN416=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_subquery24973); if (state.failed) return retval;
			pushFollow(FOLLOW_select_statement_in_subquery24977);
			select_statement417=select_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, select_statement417.getTree());

			RPAREN418=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_subquery24979); if (state.failed) return retval;
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subquery"


	public static class table_spec_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "table_spec"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1576:1: table_spec : ( ( schema_name DOT ^)? table_name ) ^;
	public final SQLParser.table_spec_return table_spec() throws RecognitionException {
		SQLParser.table_spec_return retval = new SQLParser.table_spec_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token DOT420=null;
		ParserRuleReturnScope schema_name419 =null;
		ParserRuleReturnScope table_name421 =null;

		Object DOT420_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1576:11: ( ( ( schema_name DOT ^)? table_name ) ^)
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1577:3: ( ( schema_name DOT ^)? table_name ) ^
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1577:3: ( ( schema_name DOT ^)? table_name )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1577:4: ( schema_name DOT ^)? table_name
			{
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1577:4: ( schema_name DOT ^)?
			int alt107=2;
			int LA107_0 = input.LA(1);
			if ( (LA107_0==ID) ) {
				int LA107_1 = input.LA(2);
				if ( (LA107_1==DOT) ) {
					int LA107_2 = input.LA(3);
					if ( (LA107_2==ID) ) {
						alt107=1;
					}
				}
			}
			switch (alt107) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1577:6: schema_name DOT ^
					{
					pushFollow(FOLLOW_schema_name_in_table_spec24994);
					schema_name419=schema_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, schema_name419.getTree());

					DOT420=(Token)match(input,DOT,FOLLOW_DOT_in_table_spec24996); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DOT420_tree = (Object)adaptor.create(DOT420);
					root_0 = (Object)adaptor.becomeRoot(DOT420_tree, root_0);
					}

					}
					break;

			}

			pushFollow(FOLLOW_table_name_in_table_spec25002);
			table_name421=table_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name421.getTree());

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_spec"


	public static class displayed_column_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "displayed_column"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1580:1: displayed_column : ( ( table_spec DOT ^ ASTERISK ) | ( column_spec ( alias )? ) | ( bit_expr ( alias )? ) );
	public final SQLParser.displayed_column_return displayed_column() throws RecognitionException {
		SQLParser.displayed_column_return retval = new SQLParser.displayed_column_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token DOT423=null;
		Token ASTERISK424=null;
		ParserRuleReturnScope table_spec422 =null;
		ParserRuleReturnScope column_spec425 =null;
		ParserRuleReturnScope alias426 =null;
		ParserRuleReturnScope bit_expr427 =null;
		ParserRuleReturnScope alias428 =null;

		Object DOT423_tree=null;
		Object ASTERISK424_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1580:18: ( ( table_spec DOT ^ ASTERISK ) | ( column_spec ( alias )? ) | ( bit_expr ( alias )? ) )
			int alt110=3;
			int LA110_0 = input.LA(1);
			if ( (LA110_0==ID) ) {
				int LA110_1 = input.LA(2);
				if ( (LA110_1==DOT) ) {
					alt110=1;
				}
				else if ( (synpred435_SQL()) ) {
					alt110=2;
				}
				else if ( (true) ) {
					alt110=3;
				}

			}
			else if ( (LA110_0==ABS||LA110_0==ACOS||(LA110_0 >= ADDDATE && LA110_0 <= ADDTIME)||(LA110_0 >= AES_DECRYPT && LA110_0 <= AES_ENCRYPT)||LA110_0==ASCII_SYM||LA110_0==ASIN||(LA110_0 >= ATAN && LA110_0 <= ATAN2)||LA110_0==AVG||LA110_0==BENCHMARK||(LA110_0 >= BIN && LA110_0 <= BINARY)||(LA110_0 >= BIT_AND && LA110_0 <= BIT_OR)||LA110_0==BIT_XOR||(LA110_0 >= CASE_SYM && LA110_0 <= CEILING)||LA110_0==CHAR||(LA110_0 >= CHARSET && LA110_0 <= CHAR_LENGTH)||LA110_0==COERCIBILITY||LA110_0==COLLATION||(LA110_0 >= CONCAT && LA110_0 <= CONCAT_WS)||LA110_0==CONNECTION_ID||(LA110_0 >= CONV && LA110_0 <= CONVERT_TZ)||(LA110_0 >= COS && LA110_0 <= COUNT)||LA110_0==CRC32||LA110_0==CURDATE||LA110_0==CURRENT_USER||LA110_0==CURTIME||LA110_0==DATABASE||LA110_0==DATEDIFF||(LA110_0 >= DATE_ADD && LA110_0 <= DAYOFYEAR)||(LA110_0 >= DECODE && LA110_0 <= DEFAULT)||LA110_0==DEGREES||(LA110_0 >= DES_DECRYPT && LA110_0 <= DES_ENCRYPT)||LA110_0==ELT||(LA110_0 >= ENCODE && LA110_0 <= ENCRYPT)||LA110_0==EXISTS||LA110_0==EXP||LA110_0==EXPORT_SET||LA110_0==EXTRACT||LA110_0==FALSE_SYM||LA110_0==FIELD||LA110_0==FIND_IN_SET||LA110_0==FLOOR||LA110_0==FORMAT||LA110_0==FOUND_ROWS||(LA110_0 >= FROM_BASE64 && LA110_0 <= FROM_UNIXTIME)||(LA110_0 >= GET_FORMAT && LA110_0 <= GET_LOCK)||LA110_0==GROUP_CONCAT||(LA110_0 >= HEX && LA110_0 <= HEX_DIGIT)||LA110_0==HOUR||(LA110_0 >= IF && LA110_0 <= IFNULL)||(LA110_0 >= INET_ATON && LA110_0 <= INET_NTOA)||LA110_0==INSERT||(LA110_0 >= INSTR && LA110_0 <= INTEGER_NUM)||LA110_0==INTERVAL_SYM||LA110_0==IS_FREE_LOCK||LA110_0==IS_USED_LOCK||(LA110_0 >= LAST_DAY && LA110_0 <= LAST_INSERT_ID)||(LA110_0 >= LEFT && LA110_0 <= LENGTH)||LA110_0==LN||LA110_0==LOAD_FILE||LA110_0==LOCATE||(LA110_0 >= LOG && LA110_0 <= LOG2)||LA110_0==LOWER||(LA110_0 >= LPAD && LA110_0 <= LPAREN)||LA110_0==LTRIM||(LA110_0 >= MAKEDATE && LA110_0 <= MAKE_SET)||LA110_0==MASTER_POS_WAIT||LA110_0==MATCH||LA110_0==MAX_SYM||LA110_0==MD5||(LA110_0 >= MICROSECOND && LA110_0 <= MID)||(LA110_0 >= MINUS && LA110_0 <= MINUTE)||LA110_0==MIN_SYM||LA110_0==MOD||(LA110_0 >= MONTH && LA110_0 <= MONTHNAME)||LA110_0==NAME_CONST||LA110_0==NEGATION||LA110_0==NOW||LA110_0==NULL_SYM||LA110_0==OCT||LA110_0==OLD_PASSWORD||LA110_0==ORD||(LA110_0 >= PASSWORD && LA110_0 <= PERIOD_DIFF)||LA110_0==PI||LA110_0==PLUS||(LA110_0 >= POW && LA110_0 <= POWER)||LA110_0==QUARTER||LA110_0==QUOTE||(LA110_0 >= RADIANS && LA110_0 <= RAND)||LA110_0==REAL_NUMBER||LA110_0==RELEASE_LOCK||LA110_0==REPEAT||LA110_0==REPLACE||LA110_0==REVERSE||LA110_0==RIGHT||LA110_0==ROUND||(LA110_0 >= ROW_SYM && LA110_0 <= RPAD)||LA110_0==RTRIM||(LA110_0 >= SCHEMA && LA110_0 <= SECOND)||LA110_0==SEC_TO_TIME||LA110_0==SESSION_USER||LA110_0==SIGN||LA110_0==SIN||LA110_0==SLEEP||LA110_0==SOUNDEX||LA110_0==SPACE||LA110_0==SQRT||(LA110_0 >= STD && LA110_0 <= STDDEV_SAMP)||LA110_0==STRCMP||LA110_0==STR_TO_DATE||(LA110_0 >= SUBSTRING && LA110_0 <= SUM)||(LA110_0 >= SYSDATE && LA110_0 <= SYSTEM_USER)||LA110_0==TAN||LA110_0==TEXT_STRING||(LA110_0 >= TIMEDIFF && LA110_0 <= TIME_TO_SEC)||(LA110_0 >= TO_BASE64 && LA110_0 <= TO_SECONDS)||(LA110_0 >= TRIM && LA110_0 <= TRUNCATE)||LA110_0==UNHEX||LA110_0==UNIX_TIMESTAMP||LA110_0==UPPER||(LA110_0 >= USER && LA110_0 <= USER_VAR)||(LA110_0 >= UTC_DATE && LA110_0 <= UTC_TIMESTAMP)||LA110_0==UUID||LA110_0==VALUES||LA110_0==VARIANCE||(LA110_0 >= VAR_POP && LA110_0 <= VERSION_SYM)||(LA110_0 >= WEEK && LA110_0 <= WEIGHT_STRING)||(LA110_0 >= YEAR && LA110_0 <= YEARWEEK)) ) {
				alt110=3;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 110, 0, input);
				throw nvae;
			}

			switch (alt110) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1581:3: ( table_spec DOT ^ ASTERISK )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1581:3: ( table_spec DOT ^ ASTERISK )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1581:5: table_spec DOT ^ ASTERISK
					{
					pushFollow(FOLLOW_table_spec_in_displayed_column25018);
					table_spec422=table_spec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_spec422.getTree());

					DOT423=(Token)match(input,DOT,FOLLOW_DOT_in_displayed_column25020); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DOT423_tree = (Object)adaptor.create(DOT423);
					root_0 = (Object)adaptor.becomeRoot(DOT423_tree, root_0);
					}

					ASTERISK424=(Token)match(input,ASTERISK,FOLLOW_ASTERISK_in_displayed_column25024); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ASTERISK424_tree = (Object)adaptor.create(ASTERISK424);
					adaptor.addChild(root_0, ASTERISK424_tree);
					}

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1583:3: ( column_spec ( alias )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1583:3: ( column_spec ( alias )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1583:5: column_spec ( alias )?
					{
					pushFollow(FOLLOW_column_spec_in_displayed_column25036);
					column_spec425=column_spec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_spec425.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1583:17: ( alias )?
					int alt108=2;
					int LA108_0 = input.LA(1);
					if ( (LA108_0==AS_SYM||LA108_0==ID) ) {
						alt108=1;
					}
					switch (alt108) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1583:18: alias
							{
							pushFollow(FOLLOW_alias_in_displayed_column25039);
							alias426=alias();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, alias426.getTree());

							}
							break;

					}

					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1585:3: ( bit_expr ( alias )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1585:3: ( bit_expr ( alias )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1585:5: bit_expr ( alias )?
					{
					pushFollow(FOLLOW_bit_expr_in_displayed_column25054);
					bit_expr427=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr427.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1585:14: ( alias )?
					int alt109=2;
					int LA109_0 = input.LA(1);
					if ( (LA109_0==AS_SYM||LA109_0==ID) ) {
						alt109=1;
					}
					switch (alt109) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1585:15: alias
							{
							pushFollow(FOLLOW_alias_in_displayed_column25057);
							alias428=alias();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, alias428.getTree());

							}
							break;

					}

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "displayed_column"


	public static class delete_statements_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "delete_statements"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1595:1: delete_statements : DELETE_SYM ( LOW_PRIORITY )? ( QUICK )? ( IGNORE_SYM )? ( delete_single_table_statement | delete_multiple_table_statement1 | delete_multiple_table_statement2 ) ;
	public final SQLParser.delete_statements_return delete_statements() throws RecognitionException {
		SQLParser.delete_statements_return retval = new SQLParser.delete_statements_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token DELETE_SYM429=null;
		Token LOW_PRIORITY430=null;
		Token QUICK431=null;
		Token IGNORE_SYM432=null;
		ParserRuleReturnScope delete_single_table_statement433 =null;
		ParserRuleReturnScope delete_multiple_table_statement1434 =null;
		ParserRuleReturnScope delete_multiple_table_statement2435 =null;

		Object DELETE_SYM429_tree=null;
		Object LOW_PRIORITY430_tree=null;
		Object QUICK431_tree=null;
		Object IGNORE_SYM432_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1595:18: ( DELETE_SYM ( LOW_PRIORITY )? ( QUICK )? ( IGNORE_SYM )? ( delete_single_table_statement | delete_multiple_table_statement1 | delete_multiple_table_statement2 ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1596:3: DELETE_SYM ( LOW_PRIORITY )? ( QUICK )? ( IGNORE_SYM )? ( delete_single_table_statement | delete_multiple_table_statement1 | delete_multiple_table_statement2 )
			{
			root_0 = (Object)adaptor.nil();


			DELETE_SYM429=(Token)match(input,DELETE_SYM,FOLLOW_DELETE_SYM_in_delete_statements25078); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			DELETE_SYM429_tree = (Object)adaptor.create(DELETE_SYM429);
			adaptor.addChild(root_0, DELETE_SYM429_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1596:14: ( LOW_PRIORITY )?
			int alt111=2;
			int LA111_0 = input.LA(1);
			if ( (LA111_0==LOW_PRIORITY) ) {
				alt111=1;
			}
			switch (alt111) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1596:15: LOW_PRIORITY
					{
					LOW_PRIORITY430=(Token)match(input,LOW_PRIORITY,FOLLOW_LOW_PRIORITY_in_delete_statements25081); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LOW_PRIORITY430_tree = (Object)adaptor.create(LOW_PRIORITY430);
					adaptor.addChild(root_0, LOW_PRIORITY430_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1596:30: ( QUICK )?
			int alt112=2;
			int LA112_0 = input.LA(1);
			if ( (LA112_0==QUICK) ) {
				alt112=1;
			}
			switch (alt112) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1596:31: QUICK
					{
					QUICK431=(Token)match(input,QUICK,FOLLOW_QUICK_in_delete_statements25086); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					QUICK431_tree = (Object)adaptor.create(QUICK431);
					adaptor.addChild(root_0, QUICK431_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1596:39: ( IGNORE_SYM )?
			int alt113=2;
			int LA113_0 = input.LA(1);
			if ( (LA113_0==IGNORE_SYM) ) {
				alt113=1;
			}
			switch (alt113) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1596:40: IGNORE_SYM
					{
					IGNORE_SYM432=(Token)match(input,IGNORE_SYM,FOLLOW_IGNORE_SYM_in_delete_statements25091); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IGNORE_SYM432_tree = (Object)adaptor.create(IGNORE_SYM432);
					adaptor.addChild(root_0, IGNORE_SYM432_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1597:3: ( delete_single_table_statement | delete_multiple_table_statement1 | delete_multiple_table_statement2 )
			int alt114=3;
			int LA114_0 = input.LA(1);
			if ( (LA114_0==FROM) ) {
				int LA114_1 = input.LA(2);
				if ( (LA114_1==ID) ) {
					switch ( input.LA(3) ) {
					case DOT:
						{
						int LA114_4 = input.LA(4);
						if ( (LA114_4==ID) ) {
							switch ( input.LA(5) ) {
							case EOF:
							case INTEGER_NUM:
							case LIMIT:
							case ORDER_SYM:
							case PARTITION_SYM:
							case SEMI:
							case WHERE:
								{
								alt114=1;
								}
								break;
							case COMMA:
								{
								int LA114_6 = input.LA(6);
								if ( (LA114_6==ALTER||LA114_6==CALL_SYM||LA114_6==CREATE||LA114_6==DELETE_SYM||(LA114_6 >= DO_SYM && LA114_6 <= DROP)||LA114_6==HANDLER_SYM||LA114_6==INSERT||LA114_6==LOAD||LA114_6==RENAME||LA114_6==REPLACE||LA114_6==SELECT||LA114_6==SHIFT_LEFT||LA114_6==TRUNCATE||LA114_6==UPDATE) ) {
									alt114=1;
								}
								else if ( (LA114_6==ID) ) {
									alt114=3;
								}

								else {
									if (state.backtracking>0) {state.failed=true; return retval;}
									int nvaeMark = input.mark();
									try {
										for (int nvaeConsume = 0; nvaeConsume < 6 - 1; nvaeConsume++) {
											input.consume();
										}
										NoViableAltException nvae =
											new NoViableAltException("", 114, 6, input);
										throw nvae;
									} finally {
										input.rewind(nvaeMark);
									}
								}

								}
								break;
							case ALL_FIELDS:
							case USING_SYM:
								{
								alt114=3;
								}
								break;
							default:
								if (state.backtracking>0) {state.failed=true; return retval;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 114, 8, input);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 114, 4, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case EOF:
					case INTEGER_NUM:
					case LIMIT:
					case ORDER_SYM:
					case PARTITION_SYM:
					case SEMI:
					case WHERE:
						{
						alt114=1;
						}
						break;
					case COMMA:
						{
						int LA114_6 = input.LA(4);
						if ( (LA114_6==ALTER||LA114_6==CALL_SYM||LA114_6==CREATE||LA114_6==DELETE_SYM||(LA114_6 >= DO_SYM && LA114_6 <= DROP)||LA114_6==HANDLER_SYM||LA114_6==INSERT||LA114_6==LOAD||LA114_6==RENAME||LA114_6==REPLACE||LA114_6==SELECT||LA114_6==SHIFT_LEFT||LA114_6==TRUNCATE||LA114_6==UPDATE) ) {
							alt114=1;
						}
						else if ( (LA114_6==ID) ) {
							alt114=3;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 114, 6, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case ALL_FIELDS:
					case USING_SYM:
						{
						alt114=3;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 114, 3, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 114, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}
			else if ( (LA114_0==ID) ) {
				alt114=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 114, 0, input);
				throw nvae;
			}

			switch (alt114) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1597:5: delete_single_table_statement
					{
					pushFollow(FOLLOW_delete_single_table_statement_in_delete_statements25099);
					delete_single_table_statement433=delete_single_table_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, delete_single_table_statement433.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1597:37: delete_multiple_table_statement1
					{
					pushFollow(FOLLOW_delete_multiple_table_statement1_in_delete_statements25103);
					delete_multiple_table_statement1434=delete_multiple_table_statement1();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, delete_multiple_table_statement1434.getTree());

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1597:72: delete_multiple_table_statement2
					{
					pushFollow(FOLLOW_delete_multiple_table_statement2_in_delete_statements25107);
					delete_multiple_table_statement2435=delete_multiple_table_statement2();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, delete_multiple_table_statement2435.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "delete_statements"


	public static class delete_single_table_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "delete_single_table_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1599:1: delete_single_table_statement : FROM table_spec ( partition_clause )? ( where_clause )? ( orderby_clause )? ( limit_clause )? ;
	public final SQLParser.delete_single_table_statement_return delete_single_table_statement() throws RecognitionException {
		SQLParser.delete_single_table_statement_return retval = new SQLParser.delete_single_table_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token FROM436=null;
		ParserRuleReturnScope table_spec437 =null;
		ParserRuleReturnScope partition_clause438 =null;
		ParserRuleReturnScope where_clause439 =null;
		ParserRuleReturnScope orderby_clause440 =null;
		ParserRuleReturnScope limit_clause441 =null;

		Object FROM436_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1599:30: ( FROM table_spec ( partition_clause )? ( where_clause )? ( orderby_clause )? ( limit_clause )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1600:3: FROM table_spec ( partition_clause )? ( where_clause )? ( orderby_clause )? ( limit_clause )?
			{
			root_0 = (Object)adaptor.nil();


			FROM436=(Token)match(input,FROM,FOLLOW_FROM_in_delete_single_table_statement25118); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			FROM436_tree = (Object)adaptor.create(FROM436);
			adaptor.addChild(root_0, FROM436_tree);
			}

			pushFollow(FOLLOW_table_spec_in_delete_single_table_statement25120);
			table_spec437=table_spec();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_spec437.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1601:3: ( partition_clause )?
			int alt115=2;
			int LA115_0 = input.LA(1);
			if ( (LA115_0==PARTITION_SYM) ) {
				alt115=1;
			}
			switch (alt115) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1601:4: partition_clause
					{
					pushFollow(FOLLOW_partition_clause_in_delete_single_table_statement25125);
					partition_clause438=partition_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_clause438.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1602:3: ( where_clause )?
			int alt116=2;
			int LA116_0 = input.LA(1);
			if ( (LA116_0==WHERE) ) {
				alt116=1;
			}
			switch (alt116) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1602:4: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_delete_single_table_statement25132);
					where_clause439=where_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, where_clause439.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1603:3: ( orderby_clause )?
			int alt117=2;
			int LA117_0 = input.LA(1);
			if ( (LA117_0==ORDER_SYM) ) {
				alt117=1;
			}
			switch (alt117) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1603:4: orderby_clause
					{
					pushFollow(FOLLOW_orderby_clause_in_delete_single_table_statement25139);
					orderby_clause440=orderby_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, orderby_clause440.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1604:3: ( limit_clause )?
			int alt118=2;
			int LA118_0 = input.LA(1);
			if ( (LA118_0==INTEGER_NUM||LA118_0==LIMIT) ) {
				alt118=1;
			}
			switch (alt118) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1604:4: limit_clause
					{
					pushFollow(FOLLOW_limit_clause_in_delete_single_table_statement25146);
					limit_clause441=limit_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, limit_clause441.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "delete_single_table_statement"


	public static class delete_multiple_table_statement1_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "delete_multiple_table_statement1"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1606:1: delete_multiple_table_statement1 : table_spec ( ALL_FIELDS )? ( COMMA table_spec ( ALL_FIELDS )? )* FROM table_references ( where_clause )? ;
	public final SQLParser.delete_multiple_table_statement1_return delete_multiple_table_statement1() throws RecognitionException {
		SQLParser.delete_multiple_table_statement1_return retval = new SQLParser.delete_multiple_table_statement1_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token ALL_FIELDS443=null;
		Token COMMA444=null;
		Token ALL_FIELDS446=null;
		Token FROM447=null;
		ParserRuleReturnScope table_spec442 =null;
		ParserRuleReturnScope table_spec445 =null;
		ParserRuleReturnScope table_references448 =null;
		ParserRuleReturnScope where_clause449 =null;

		Object ALL_FIELDS443_tree=null;
		Object COMMA444_tree=null;
		Object ALL_FIELDS446_tree=null;
		Object FROM447_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1606:33: ( table_spec ( ALL_FIELDS )? ( COMMA table_spec ( ALL_FIELDS )? )* FROM table_references ( where_clause )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1607:3: table_spec ( ALL_FIELDS )? ( COMMA table_spec ( ALL_FIELDS )? )* FROM table_references ( where_clause )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_table_spec_in_delete_multiple_table_statement125157);
			table_spec442=table_spec();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_spec442.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1607:14: ( ALL_FIELDS )?
			int alt119=2;
			int LA119_0 = input.LA(1);
			if ( (LA119_0==ALL_FIELDS) ) {
				alt119=1;
			}
			switch (alt119) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1607:15: ALL_FIELDS
					{
					ALL_FIELDS443=(Token)match(input,ALL_FIELDS,FOLLOW_ALL_FIELDS_in_delete_multiple_table_statement125160); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ALL_FIELDS443_tree = (Object)adaptor.create(ALL_FIELDS443);
					adaptor.addChild(root_0, ALL_FIELDS443_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1607:28: ( COMMA table_spec ( ALL_FIELDS )? )*
			loop121:
			while (true) {
				int alt121=2;
				int LA121_0 = input.LA(1);
				if ( (LA121_0==COMMA) ) {
					alt121=1;
				}

				switch (alt121) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1607:29: COMMA table_spec ( ALL_FIELDS )?
					{
					COMMA444=(Token)match(input,COMMA,FOLLOW_COMMA_in_delete_multiple_table_statement125165); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA444_tree = (Object)adaptor.create(COMMA444);
					adaptor.addChild(root_0, COMMA444_tree);
					}

					pushFollow(FOLLOW_table_spec_in_delete_multiple_table_statement125167);
					table_spec445=table_spec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_spec445.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1607:46: ( ALL_FIELDS )?
					int alt120=2;
					int LA120_0 = input.LA(1);
					if ( (LA120_0==ALL_FIELDS) ) {
						alt120=1;
					}
					switch (alt120) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1607:47: ALL_FIELDS
							{
							ALL_FIELDS446=(Token)match(input,ALL_FIELDS,FOLLOW_ALL_FIELDS_in_delete_multiple_table_statement125170); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ALL_FIELDS446_tree = (Object)adaptor.create(ALL_FIELDS446);
							adaptor.addChild(root_0, ALL_FIELDS446_tree);
							}

							}
							break;

					}

					}
					break;

				default :
					break loop121;
				}
			}

			FROM447=(Token)match(input,FROM,FOLLOW_FROM_in_delete_multiple_table_statement125178); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			FROM447_tree = (Object)adaptor.create(FROM447);
			adaptor.addChild(root_0, FROM447_tree);
			}

			pushFollow(FOLLOW_table_references_in_delete_multiple_table_statement125180);
			table_references448=table_references();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_references448.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1609:3: ( where_clause )?
			int alt122=2;
			int LA122_0 = input.LA(1);
			if ( (LA122_0==WHERE) ) {
				alt122=1;
			}
			switch (alt122) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1609:4: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_delete_multiple_table_statement125185);
					where_clause449=where_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, where_clause449.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "delete_multiple_table_statement1"


	public static class delete_multiple_table_statement2_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "delete_multiple_table_statement2"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1611:1: delete_multiple_table_statement2 : FROM table_spec ( ALL_FIELDS )? ( COMMA table_spec ( ALL_FIELDS )? )* USING_SYM table_references ( where_clause )? ;
	public final SQLParser.delete_multiple_table_statement2_return delete_multiple_table_statement2() throws RecognitionException {
		SQLParser.delete_multiple_table_statement2_return retval = new SQLParser.delete_multiple_table_statement2_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token FROM450=null;
		Token ALL_FIELDS452=null;
		Token COMMA453=null;
		Token ALL_FIELDS455=null;
		Token USING_SYM456=null;
		ParserRuleReturnScope table_spec451 =null;
		ParserRuleReturnScope table_spec454 =null;
		ParserRuleReturnScope table_references457 =null;
		ParserRuleReturnScope where_clause458 =null;

		Object FROM450_tree=null;
		Object ALL_FIELDS452_tree=null;
		Object COMMA453_tree=null;
		Object ALL_FIELDS455_tree=null;
		Object USING_SYM456_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1611:33: ( FROM table_spec ( ALL_FIELDS )? ( COMMA table_spec ( ALL_FIELDS )? )* USING_SYM table_references ( where_clause )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1612:3: FROM table_spec ( ALL_FIELDS )? ( COMMA table_spec ( ALL_FIELDS )? )* USING_SYM table_references ( where_clause )?
			{
			root_0 = (Object)adaptor.nil();


			FROM450=(Token)match(input,FROM,FOLLOW_FROM_in_delete_multiple_table_statement225196); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			FROM450_tree = (Object)adaptor.create(FROM450);
			adaptor.addChild(root_0, FROM450_tree);
			}

			pushFollow(FOLLOW_table_spec_in_delete_multiple_table_statement225198);
			table_spec451=table_spec();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_spec451.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1612:19: ( ALL_FIELDS )?
			int alt123=2;
			int LA123_0 = input.LA(1);
			if ( (LA123_0==ALL_FIELDS) ) {
				alt123=1;
			}
			switch (alt123) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1612:20: ALL_FIELDS
					{
					ALL_FIELDS452=(Token)match(input,ALL_FIELDS,FOLLOW_ALL_FIELDS_in_delete_multiple_table_statement225201); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ALL_FIELDS452_tree = (Object)adaptor.create(ALL_FIELDS452);
					adaptor.addChild(root_0, ALL_FIELDS452_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1612:33: ( COMMA table_spec ( ALL_FIELDS )? )*
			loop125:
			while (true) {
				int alt125=2;
				int LA125_0 = input.LA(1);
				if ( (LA125_0==COMMA) ) {
					alt125=1;
				}

				switch (alt125) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1612:34: COMMA table_spec ( ALL_FIELDS )?
					{
					COMMA453=(Token)match(input,COMMA,FOLLOW_COMMA_in_delete_multiple_table_statement225206); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA453_tree = (Object)adaptor.create(COMMA453);
					adaptor.addChild(root_0, COMMA453_tree);
					}

					pushFollow(FOLLOW_table_spec_in_delete_multiple_table_statement225208);
					table_spec454=table_spec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_spec454.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1612:51: ( ALL_FIELDS )?
					int alt124=2;
					int LA124_0 = input.LA(1);
					if ( (LA124_0==ALL_FIELDS) ) {
						alt124=1;
					}
					switch (alt124) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1612:52: ALL_FIELDS
							{
							ALL_FIELDS455=(Token)match(input,ALL_FIELDS,FOLLOW_ALL_FIELDS_in_delete_multiple_table_statement225211); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ALL_FIELDS455_tree = (Object)adaptor.create(ALL_FIELDS455);
							adaptor.addChild(root_0, ALL_FIELDS455_tree);
							}

							}
							break;

					}

					}
					break;

				default :
					break loop125;
				}
			}

			USING_SYM456=(Token)match(input,USING_SYM,FOLLOW_USING_SYM_in_delete_multiple_table_statement225219); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			USING_SYM456_tree = (Object)adaptor.create(USING_SYM456);
			adaptor.addChild(root_0, USING_SYM456_tree);
			}

			pushFollow(FOLLOW_table_references_in_delete_multiple_table_statement225221);
			table_references457=table_references();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_references457.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1614:3: ( where_clause )?
			int alt126=2;
			int LA126_0 = input.LA(1);
			if ( (LA126_0==WHERE) ) {
				alt126=1;
			}
			switch (alt126) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1614:4: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_delete_multiple_table_statement225226);
					where_clause458=where_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, where_clause458.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "delete_multiple_table_statement2"


	public static class insert_statements_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "insert_statements"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1622:1: insert_statements : ( insert_statement1 | insert_statement2 | insert_statement3 );
	public final SQLParser.insert_statements_return insert_statements() throws RecognitionException {
		SQLParser.insert_statements_return retval = new SQLParser.insert_statements_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope insert_statement1459 =null;
		ParserRuleReturnScope insert_statement2460 =null;
		ParserRuleReturnScope insert_statement3461 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1622:19: ( insert_statement1 | insert_statement2 | insert_statement3 )
			int alt127=3;
			alt127 = dfa127.predict(input);
			switch (alt127) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1623:3: insert_statement1
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_insert_statement1_in_insert_statements25244);
					insert_statement1459=insert_statement1();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, insert_statement1459.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1623:23: insert_statement2
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_insert_statement2_in_insert_statements25248);
					insert_statement2460=insert_statement2();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, insert_statement2460.getTree());

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1623:43: insert_statement3
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_insert_statement3_in_insert_statements25252);
					insert_statement3461=insert_statement3();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, insert_statement3461.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "insert_statements"


	public static class insert_header_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "insert_header"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1626:1: insert_header : INSERT ( LOW_PRIORITY | HIGH_PRIORITY )? ( IGNORE_SYM )? ( INTO )? table_spec ( partition_clause )? ;
	public final SQLParser.insert_header_return insert_header() throws RecognitionException {
		SQLParser.insert_header_return retval = new SQLParser.insert_header_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token INSERT462=null;
		Token set463=null;
		Token IGNORE_SYM464=null;
		Token INTO465=null;
		ParserRuleReturnScope table_spec466 =null;
		ParserRuleReturnScope partition_clause467 =null;

		Object INSERT462_tree=null;
		Object set463_tree=null;
		Object IGNORE_SYM464_tree=null;
		Object INTO465_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1626:14: ( INSERT ( LOW_PRIORITY | HIGH_PRIORITY )? ( IGNORE_SYM )? ( INTO )? table_spec ( partition_clause )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1627:3: INSERT ( LOW_PRIORITY | HIGH_PRIORITY )? ( IGNORE_SYM )? ( INTO )? table_spec ( partition_clause )?
			{
			root_0 = (Object)adaptor.nil();


			INSERT462=(Token)match(input,INSERT,FOLLOW_INSERT_in_insert_header25262); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			INSERT462_tree = (Object)adaptor.create(INSERT462);
			adaptor.addChild(root_0, INSERT462_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1627:10: ( LOW_PRIORITY | HIGH_PRIORITY )?
			int alt128=2;
			int LA128_0 = input.LA(1);
			if ( (LA128_0==HIGH_PRIORITY||LA128_0==LOW_PRIORITY) ) {
				alt128=1;
			}
			switch (alt128) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
					{
					set463=input.LT(1);
					if ( input.LA(1)==HIGH_PRIORITY||input.LA(1)==LOW_PRIORITY ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set463));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1627:42: ( IGNORE_SYM )?
			int alt129=2;
			int LA129_0 = input.LA(1);
			if ( (LA129_0==IGNORE_SYM) ) {
				alt129=1;
			}
			switch (alt129) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1627:43: IGNORE_SYM
					{
					IGNORE_SYM464=(Token)match(input,IGNORE_SYM,FOLLOW_IGNORE_SYM_in_insert_header25274); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IGNORE_SYM464_tree = (Object)adaptor.create(IGNORE_SYM464);
					adaptor.addChild(root_0, IGNORE_SYM464_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1628:3: ( INTO )?
			int alt130=2;
			int LA130_0 = input.LA(1);
			if ( (LA130_0==INTO) ) {
				alt130=1;
			}
			switch (alt130) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1628:4: INTO
					{
					INTO465=(Token)match(input,INTO,FOLLOW_INTO_in_insert_header25281); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTO465_tree = (Object)adaptor.create(INTO465);
					adaptor.addChild(root_0, INTO465_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_table_spec_in_insert_header25285);
			table_spec466=table_spec();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_spec466.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1629:3: ( partition_clause )?
			int alt131=2;
			int LA131_0 = input.LA(1);
			if ( (LA131_0==PARTITION_SYM) ) {
				alt131=1;
			}
			switch (alt131) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1629:4: partition_clause
					{
					pushFollow(FOLLOW_partition_clause_in_insert_header25291);
					partition_clause467=partition_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_clause467.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "insert_header"


	public static class insert_subfix_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "insert_subfix"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1632:1: insert_subfix : ON DUPLICATE_SYM KEY_SYM UPDATE column_spec EQ_SYM expression ( COMMA column_spec EQ_SYM expression )* ;
	public final SQLParser.insert_subfix_return insert_subfix() throws RecognitionException {
		SQLParser.insert_subfix_return retval = new SQLParser.insert_subfix_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token ON468=null;
		Token DUPLICATE_SYM469=null;
		Token KEY_SYM470=null;
		Token UPDATE471=null;
		Token EQ_SYM473=null;
		Token COMMA475=null;
		Token EQ_SYM477=null;
		ParserRuleReturnScope column_spec472 =null;
		ParserRuleReturnScope expression474 =null;
		ParserRuleReturnScope column_spec476 =null;
		ParserRuleReturnScope expression478 =null;

		Object ON468_tree=null;
		Object DUPLICATE_SYM469_tree=null;
		Object KEY_SYM470_tree=null;
		Object UPDATE471_tree=null;
		Object EQ_SYM473_tree=null;
		Object COMMA475_tree=null;
		Object EQ_SYM477_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1632:14: ( ON DUPLICATE_SYM KEY_SYM UPDATE column_spec EQ_SYM expression ( COMMA column_spec EQ_SYM expression )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1633:3: ON DUPLICATE_SYM KEY_SYM UPDATE column_spec EQ_SYM expression ( COMMA column_spec EQ_SYM expression )*
			{
			root_0 = (Object)adaptor.nil();


			ON468=(Token)match(input,ON,FOLLOW_ON_in_insert_subfix25303); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			ON468_tree = (Object)adaptor.create(ON468);
			adaptor.addChild(root_0, ON468_tree);
			}

			DUPLICATE_SYM469=(Token)match(input,DUPLICATE_SYM,FOLLOW_DUPLICATE_SYM_in_insert_subfix25305); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			DUPLICATE_SYM469_tree = (Object)adaptor.create(DUPLICATE_SYM469);
			adaptor.addChild(root_0, DUPLICATE_SYM469_tree);
			}

			KEY_SYM470=(Token)match(input,KEY_SYM,FOLLOW_KEY_SYM_in_insert_subfix25307); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			KEY_SYM470_tree = (Object)adaptor.create(KEY_SYM470);
			adaptor.addChild(root_0, KEY_SYM470_tree);
			}

			UPDATE471=(Token)match(input,UPDATE,FOLLOW_UPDATE_in_insert_subfix25309); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			UPDATE471_tree = (Object)adaptor.create(UPDATE471);
			adaptor.addChild(root_0, UPDATE471_tree);
			}

			pushFollow(FOLLOW_column_spec_in_insert_subfix25311);
			column_spec472=column_spec();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, column_spec472.getTree());

			EQ_SYM473=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_insert_subfix25313); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			EQ_SYM473_tree = (Object)adaptor.create(EQ_SYM473);
			adaptor.addChild(root_0, EQ_SYM473_tree);
			}

			pushFollow(FOLLOW_expression_in_insert_subfix25315);
			expression474=expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, expression474.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1633:65: ( COMMA column_spec EQ_SYM expression )*
			loop132:
			while (true) {
				int alt132=2;
				int LA132_0 = input.LA(1);
				if ( (LA132_0==COMMA) ) {
					int LA132_2 = input.LA(2);
					if ( (LA132_2==ID) ) {
						alt132=1;
					}

				}

				switch (alt132) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1633:66: COMMA column_spec EQ_SYM expression
					{
					COMMA475=(Token)match(input,COMMA,FOLLOW_COMMA_in_insert_subfix25318); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA475_tree = (Object)adaptor.create(COMMA475);
					adaptor.addChild(root_0, COMMA475_tree);
					}

					pushFollow(FOLLOW_column_spec_in_insert_subfix25320);
					column_spec476=column_spec();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_spec476.getTree());

					EQ_SYM477=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_insert_subfix25322); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EQ_SYM477_tree = (Object)adaptor.create(EQ_SYM477);
					adaptor.addChild(root_0, EQ_SYM477_tree);
					}

					pushFollow(FOLLOW_expression_in_insert_subfix25324);
					expression478=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression478.getTree());

					}
					break;

				default :
					break loop132;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "insert_subfix"


	public static class insert_statement1_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "insert_statement1"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1636:1: insert_statement1 : insert_header ( column_list )? value_list_clause ( insert_subfix )? ;
	public final SQLParser.insert_statement1_return insert_statement1() throws RecognitionException {
		SQLParser.insert_statement1_return retval = new SQLParser.insert_statement1_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope insert_header479 =null;
		ParserRuleReturnScope column_list480 =null;
		ParserRuleReturnScope value_list_clause481 =null;
		ParserRuleReturnScope insert_subfix482 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1636:18: ( insert_header ( column_list )? value_list_clause ( insert_subfix )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1637:3: insert_header ( column_list )? value_list_clause ( insert_subfix )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_insert_header_in_insert_statement125336);
			insert_header479=insert_header();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, insert_header479.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1638:3: ( column_list )?
			int alt133=2;
			int LA133_0 = input.LA(1);
			if ( (LA133_0==LPAREN) ) {
				alt133=1;
			}
			switch (alt133) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1638:4: column_list
					{
					pushFollow(FOLLOW_column_list_in_insert_statement125341);
					column_list480=column_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_list480.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_value_list_clause_in_insert_statement125348);
			value_list_clause481=value_list_clause();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, value_list_clause481.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1640:3: ( insert_subfix )?
			int alt134=2;
			int LA134_0 = input.LA(1);
			if ( (LA134_0==ON) ) {
				alt134=1;
			}
			switch (alt134) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1640:5: insert_subfix
					{
					pushFollow(FOLLOW_insert_subfix_in_insert_statement125354);
					insert_subfix482=insert_subfix();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, insert_subfix482.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "insert_statement1"


	public static class value_list_clause_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "value_list_clause"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1642:1: value_list_clause : ( VALUES | VALUE_SYM ) column_value_list ( COMMA column_value_list )* ;
	public final SQLParser.value_list_clause_return value_list_clause() throws RecognitionException {
		SQLParser.value_list_clause_return retval = new SQLParser.value_list_clause_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token set483=null;
		Token COMMA485=null;
		ParserRuleReturnScope column_value_list484 =null;
		ParserRuleReturnScope column_value_list486 =null;

		Object set483_tree=null;
		Object COMMA485_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1642:18: ( ( VALUES | VALUE_SYM ) column_value_list ( COMMA column_value_list )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1642:21: ( VALUES | VALUE_SYM ) column_value_list ( COMMA column_value_list )*
			{
			root_0 = (Object)adaptor.nil();


			set483=input.LT(1);
			if ( (input.LA(1) >= VALUES && input.LA(1) <= VALUE_SYM) ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set483));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			pushFollow(FOLLOW_column_value_list_in_value_list_clause25373);
			column_value_list484=column_value_list();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, column_value_list484.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1642:60: ( COMMA column_value_list )*
			loop135:
			while (true) {
				int alt135=2;
				int LA135_0 = input.LA(1);
				if ( (LA135_0==COMMA) ) {
					int LA135_2 = input.LA(2);
					if ( (LA135_2==LPAREN) ) {
						alt135=1;
					}

				}

				switch (alt135) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1642:61: COMMA column_value_list
					{
					COMMA485=(Token)match(input,COMMA,FOLLOW_COMMA_in_value_list_clause25376); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA485_tree = (Object)adaptor.create(COMMA485);
					adaptor.addChild(root_0, COMMA485_tree);
					}

					pushFollow(FOLLOW_column_value_list_in_value_list_clause25378);
					column_value_list486=column_value_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_value_list486.getTree());

					}
					break;

				default :
					break loop135;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "value_list_clause"


	public static class column_value_list_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "column_value_list"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1643:1: column_value_list : LPAREN ( bit_expr | DEFAULT ) ( COMMA ( bit_expr | DEFAULT ) )* RPAREN ;
	public final SQLParser.column_value_list_return column_value_list() throws RecognitionException {
		SQLParser.column_value_list_return retval = new SQLParser.column_value_list_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token LPAREN487=null;
		Token DEFAULT489=null;
		Token COMMA490=null;
		Token DEFAULT492=null;
		Token RPAREN493=null;
		ParserRuleReturnScope bit_expr488 =null;
		ParserRuleReturnScope bit_expr491 =null;

		Object LPAREN487_tree=null;
		Object DEFAULT489_tree=null;
		Object COMMA490_tree=null;
		Object DEFAULT492_tree=null;
		Object RPAREN493_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1643:18: ( LPAREN ( bit_expr | DEFAULT ) ( COMMA ( bit_expr | DEFAULT ) )* RPAREN )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1643:21: LPAREN ( bit_expr | DEFAULT ) ( COMMA ( bit_expr | DEFAULT ) )* RPAREN
			{
			root_0 = (Object)adaptor.nil();


			LPAREN487=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_value_list25387); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			LPAREN487_tree = (Object)adaptor.create(LPAREN487);
			adaptor.addChild(root_0, LPAREN487_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1643:28: ( bit_expr | DEFAULT )
			int alt136=2;
			int LA136_0 = input.LA(1);
			if ( (LA136_0==ABS||LA136_0==ACOS||(LA136_0 >= ADDDATE && LA136_0 <= ADDTIME)||(LA136_0 >= AES_DECRYPT && LA136_0 <= AES_ENCRYPT)||LA136_0==ASCII_SYM||LA136_0==ASIN||(LA136_0 >= ATAN && LA136_0 <= ATAN2)||LA136_0==AVG||LA136_0==BENCHMARK||(LA136_0 >= BIN && LA136_0 <= BINARY)||(LA136_0 >= BIT_AND && LA136_0 <= BIT_OR)||LA136_0==BIT_XOR||(LA136_0 >= CASE_SYM && LA136_0 <= CEILING)||LA136_0==CHAR||(LA136_0 >= CHARSET && LA136_0 <= CHAR_LENGTH)||LA136_0==COERCIBILITY||LA136_0==COLLATION||(LA136_0 >= CONCAT && LA136_0 <= CONCAT_WS)||LA136_0==CONNECTION_ID||(LA136_0 >= CONV && LA136_0 <= CONVERT_TZ)||(LA136_0 >= COS && LA136_0 <= COUNT)||LA136_0==CRC32||LA136_0==CURDATE||LA136_0==CURRENT_USER||LA136_0==CURTIME||LA136_0==DATABASE||LA136_0==DATEDIFF||(LA136_0 >= DATE_ADD && LA136_0 <= DAYOFYEAR)||LA136_0==DECODE||LA136_0==DEGREES||(LA136_0 >= DES_DECRYPT && LA136_0 <= DES_ENCRYPT)||LA136_0==ELT||(LA136_0 >= ENCODE && LA136_0 <= ENCRYPT)||LA136_0==EXISTS||LA136_0==EXP||LA136_0==EXPORT_SET||LA136_0==EXTRACT||LA136_0==FALSE_SYM||LA136_0==FIELD||LA136_0==FIND_IN_SET||LA136_0==FLOOR||LA136_0==FORMAT||LA136_0==FOUND_ROWS||(LA136_0 >= FROM_BASE64 && LA136_0 <= FROM_UNIXTIME)||(LA136_0 >= GET_FORMAT && LA136_0 <= GET_LOCK)||LA136_0==GROUP_CONCAT||(LA136_0 >= HEX && LA136_0 <= HEX_DIGIT)||LA136_0==HOUR||LA136_0==ID||(LA136_0 >= IF && LA136_0 <= IFNULL)||(LA136_0 >= INET_ATON && LA136_0 <= INET_NTOA)||LA136_0==INSERT||(LA136_0 >= INSTR && LA136_0 <= INTEGER_NUM)||LA136_0==INTERVAL_SYM||LA136_0==IS_FREE_LOCK||LA136_0==IS_USED_LOCK||(LA136_0 >= LAST_DAY && LA136_0 <= LAST_INSERT_ID)||(LA136_0 >= LEFT && LA136_0 <= LENGTH)||LA136_0==LN||LA136_0==LOAD_FILE||LA136_0==LOCATE||(LA136_0 >= LOG && LA136_0 <= LOG2)||LA136_0==LOWER||(LA136_0 >= LPAD && LA136_0 <= LPAREN)||LA136_0==LTRIM||(LA136_0 >= MAKEDATE && LA136_0 <= MAKE_SET)||LA136_0==MASTER_POS_WAIT||LA136_0==MATCH||LA136_0==MAX_SYM||LA136_0==MD5||(LA136_0 >= MICROSECOND && LA136_0 <= MID)||(LA136_0 >= MINUS && LA136_0 <= MINUTE)||LA136_0==MIN_SYM||LA136_0==MOD||(LA136_0 >= MONTH && LA136_0 <= MONTHNAME)||LA136_0==NAME_CONST||LA136_0==NEGATION||LA136_0==NOW||LA136_0==NULL_SYM||LA136_0==OCT||LA136_0==OLD_PASSWORD||LA136_0==ORD||(LA136_0 >= PASSWORD && LA136_0 <= PERIOD_DIFF)||LA136_0==PI||LA136_0==PLUS||(LA136_0 >= POW && LA136_0 <= POWER)||LA136_0==QUARTER||LA136_0==QUOTE||(LA136_0 >= RADIANS && LA136_0 <= RAND)||LA136_0==REAL_NUMBER||LA136_0==RELEASE_LOCK||LA136_0==REPEAT||LA136_0==REPLACE||LA136_0==REVERSE||LA136_0==RIGHT||LA136_0==ROUND||(LA136_0 >= ROW_SYM && LA136_0 <= RPAD)||LA136_0==RTRIM||(LA136_0 >= SCHEMA && LA136_0 <= SECOND)||LA136_0==SEC_TO_TIME||LA136_0==SESSION_USER||LA136_0==SIGN||LA136_0==SIN||LA136_0==SLEEP||LA136_0==SOUNDEX||LA136_0==SPACE||LA136_0==SQRT||(LA136_0 >= STD && LA136_0 <= STDDEV_SAMP)||LA136_0==STRCMP||LA136_0==STR_TO_DATE||(LA136_0 >= SUBSTRING && LA136_0 <= SUM)||(LA136_0 >= SYSDATE && LA136_0 <= SYSTEM_USER)||LA136_0==TAN||LA136_0==TEXT_STRING||(LA136_0 >= TIMEDIFF && LA136_0 <= TIME_TO_SEC)||(LA136_0 >= TO_BASE64 && LA136_0 <= TO_SECONDS)||(LA136_0 >= TRIM && LA136_0 <= TRUNCATE)||LA136_0==UNHEX||LA136_0==UNIX_TIMESTAMP||LA136_0==UPPER||(LA136_0 >= USER && LA136_0 <= USER_VAR)||(LA136_0 >= UTC_DATE && LA136_0 <= UTC_TIMESTAMP)||LA136_0==UUID||LA136_0==VALUES||LA136_0==VARIANCE||(LA136_0 >= VAR_POP && LA136_0 <= VERSION_SYM)||(LA136_0 >= WEEK && LA136_0 <= WEIGHT_STRING)||(LA136_0 >= YEAR && LA136_0 <= YEARWEEK)) ) {
				alt136=1;
			}
			else if ( (LA136_0==DEFAULT) ) {
				int LA136_2 = input.LA(2);
				if ( (synpred466_SQL()) ) {
					alt136=1;
				}
				else if ( (true) ) {
					alt136=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 136, 0, input);
				throw nvae;
			}

			switch (alt136) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1643:29: bit_expr
					{
					pushFollow(FOLLOW_bit_expr_in_column_value_list25390);
					bit_expr488=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr488.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1643:38: DEFAULT
					{
					DEFAULT489=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_value_list25392); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DEFAULT489_tree = (Object)adaptor.create(DEFAULT489);
					adaptor.addChild(root_0, DEFAULT489_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1643:47: ( COMMA ( bit_expr | DEFAULT ) )*
			loop138:
			while (true) {
				int alt138=2;
				int LA138_0 = input.LA(1);
				if ( (LA138_0==COMMA) ) {
					alt138=1;
				}

				switch (alt138) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1643:48: COMMA ( bit_expr | DEFAULT )
					{
					COMMA490=(Token)match(input,COMMA,FOLLOW_COMMA_in_column_value_list25396); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA490_tree = (Object)adaptor.create(COMMA490);
					adaptor.addChild(root_0, COMMA490_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1643:54: ( bit_expr | DEFAULT )
					int alt137=2;
					int LA137_0 = input.LA(1);
					if ( (LA137_0==ABS||LA137_0==ACOS||(LA137_0 >= ADDDATE && LA137_0 <= ADDTIME)||(LA137_0 >= AES_DECRYPT && LA137_0 <= AES_ENCRYPT)||LA137_0==ASCII_SYM||LA137_0==ASIN||(LA137_0 >= ATAN && LA137_0 <= ATAN2)||LA137_0==AVG||LA137_0==BENCHMARK||(LA137_0 >= BIN && LA137_0 <= BINARY)||(LA137_0 >= BIT_AND && LA137_0 <= BIT_OR)||LA137_0==BIT_XOR||(LA137_0 >= CASE_SYM && LA137_0 <= CEILING)||LA137_0==CHAR||(LA137_0 >= CHARSET && LA137_0 <= CHAR_LENGTH)||LA137_0==COERCIBILITY||LA137_0==COLLATION||(LA137_0 >= CONCAT && LA137_0 <= CONCAT_WS)||LA137_0==CONNECTION_ID||(LA137_0 >= CONV && LA137_0 <= CONVERT_TZ)||(LA137_0 >= COS && LA137_0 <= COUNT)||LA137_0==CRC32||LA137_0==CURDATE||LA137_0==CURRENT_USER||LA137_0==CURTIME||LA137_0==DATABASE||LA137_0==DATEDIFF||(LA137_0 >= DATE_ADD && LA137_0 <= DAYOFYEAR)||LA137_0==DECODE||LA137_0==DEGREES||(LA137_0 >= DES_DECRYPT && LA137_0 <= DES_ENCRYPT)||LA137_0==ELT||(LA137_0 >= ENCODE && LA137_0 <= ENCRYPT)||LA137_0==EXISTS||LA137_0==EXP||LA137_0==EXPORT_SET||LA137_0==EXTRACT||LA137_0==FALSE_SYM||LA137_0==FIELD||LA137_0==FIND_IN_SET||LA137_0==FLOOR||LA137_0==FORMAT||LA137_0==FOUND_ROWS||(LA137_0 >= FROM_BASE64 && LA137_0 <= FROM_UNIXTIME)||(LA137_0 >= GET_FORMAT && LA137_0 <= GET_LOCK)||LA137_0==GROUP_CONCAT||(LA137_0 >= HEX && LA137_0 <= HEX_DIGIT)||LA137_0==HOUR||LA137_0==ID||(LA137_0 >= IF && LA137_0 <= IFNULL)||(LA137_0 >= INET_ATON && LA137_0 <= INET_NTOA)||LA137_0==INSERT||(LA137_0 >= INSTR && LA137_0 <= INTEGER_NUM)||LA137_0==INTERVAL_SYM||LA137_0==IS_FREE_LOCK||LA137_0==IS_USED_LOCK||(LA137_0 >= LAST_DAY && LA137_0 <= LAST_INSERT_ID)||(LA137_0 >= LEFT && LA137_0 <= LENGTH)||LA137_0==LN||LA137_0==LOAD_FILE||LA137_0==LOCATE||(LA137_0 >= LOG && LA137_0 <= LOG2)||LA137_0==LOWER||(LA137_0 >= LPAD && LA137_0 <= LPAREN)||LA137_0==LTRIM||(LA137_0 >= MAKEDATE && LA137_0 <= MAKE_SET)||LA137_0==MASTER_POS_WAIT||LA137_0==MATCH||LA137_0==MAX_SYM||LA137_0==MD5||(LA137_0 >= MICROSECOND && LA137_0 <= MID)||(LA137_0 >= MINUS && LA137_0 <= MINUTE)||LA137_0==MIN_SYM||LA137_0==MOD||(LA137_0 >= MONTH && LA137_0 <= MONTHNAME)||LA137_0==NAME_CONST||LA137_0==NEGATION||LA137_0==NOW||LA137_0==NULL_SYM||LA137_0==OCT||LA137_0==OLD_PASSWORD||LA137_0==ORD||(LA137_0 >= PASSWORD && LA137_0 <= PERIOD_DIFF)||LA137_0==PI||LA137_0==PLUS||(LA137_0 >= POW && LA137_0 <= POWER)||LA137_0==QUARTER||LA137_0==QUOTE||(LA137_0 >= RADIANS && LA137_0 <= RAND)||LA137_0==REAL_NUMBER||LA137_0==RELEASE_LOCK||LA137_0==REPEAT||LA137_0==REPLACE||LA137_0==REVERSE||LA137_0==RIGHT||LA137_0==ROUND||(LA137_0 >= ROW_SYM && LA137_0 <= RPAD)||LA137_0==RTRIM||(LA137_0 >= SCHEMA && LA137_0 <= SECOND)||LA137_0==SEC_TO_TIME||LA137_0==SESSION_USER||LA137_0==SIGN||LA137_0==SIN||LA137_0==SLEEP||LA137_0==SOUNDEX||LA137_0==SPACE||LA137_0==SQRT||(LA137_0 >= STD && LA137_0 <= STDDEV_SAMP)||LA137_0==STRCMP||LA137_0==STR_TO_DATE||(LA137_0 >= SUBSTRING && LA137_0 <= SUM)||(LA137_0 >= SYSDATE && LA137_0 <= SYSTEM_USER)||LA137_0==TAN||LA137_0==TEXT_STRING||(LA137_0 >= TIMEDIFF && LA137_0 <= TIME_TO_SEC)||(LA137_0 >= TO_BASE64 && LA137_0 <= TO_SECONDS)||(LA137_0 >= TRIM && LA137_0 <= TRUNCATE)||LA137_0==UNHEX||LA137_0==UNIX_TIMESTAMP||LA137_0==UPPER||(LA137_0 >= USER && LA137_0 <= USER_VAR)||(LA137_0 >= UTC_DATE && LA137_0 <= UTC_TIMESTAMP)||LA137_0==UUID||LA137_0==VALUES||LA137_0==VARIANCE||(LA137_0 >= VAR_POP && LA137_0 <= VERSION_SYM)||(LA137_0 >= WEEK && LA137_0 <= WEIGHT_STRING)||(LA137_0 >= YEAR && LA137_0 <= YEARWEEK)) ) {
						alt137=1;
					}
					else if ( (LA137_0==DEFAULT) ) {
						int LA137_2 = input.LA(2);
						if ( (synpred467_SQL()) ) {
							alt137=1;
						}
						else if ( (true) ) {
							alt137=2;
						}

					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 137, 0, input);
						throw nvae;
					}

					switch (alt137) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1643:55: bit_expr
							{
							pushFollow(FOLLOW_bit_expr_in_column_value_list25399);
							bit_expr491=bit_expr();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr491.getTree());

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1643:64: DEFAULT
							{
							DEFAULT492=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_value_list25401); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT492_tree = (Object)adaptor.create(DEFAULT492);
							adaptor.addChild(root_0, DEFAULT492_tree);
							}

							}
							break;

					}

					}
					break;

				default :
					break loop138;
				}
			}

			RPAREN493=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_value_list25407); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			RPAREN493_tree = (Object)adaptor.create(RPAREN493);
			adaptor.addChild(root_0, RPAREN493_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "column_value_list"


	public static class insert_statement2_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "insert_statement2"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1645:1: insert_statement2 : insert_header set_columns_cluase ( insert_subfix )? ;
	public final SQLParser.insert_statement2_return insert_statement2() throws RecognitionException {
		SQLParser.insert_statement2_return retval = new SQLParser.insert_statement2_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope insert_header494 =null;
		ParserRuleReturnScope set_columns_cluase495 =null;
		ParserRuleReturnScope insert_subfix496 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1645:18: ( insert_header set_columns_cluase ( insert_subfix )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1646:3: insert_header set_columns_cluase ( insert_subfix )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_insert_header_in_insert_statement225417);
			insert_header494=insert_header();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, insert_header494.getTree());

			pushFollow(FOLLOW_set_columns_cluase_in_insert_statement225421);
			set_columns_cluase495=set_columns_cluase();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, set_columns_cluase495.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1648:3: ( insert_subfix )?
			int alt139=2;
			int LA139_0 = input.LA(1);
			if ( (LA139_0==ON) ) {
				alt139=1;
			}
			switch (alt139) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1648:5: insert_subfix
					{
					pushFollow(FOLLOW_insert_subfix_in_insert_statement225427);
					insert_subfix496=insert_subfix();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, insert_subfix496.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "insert_statement2"


	public static class set_columns_cluase_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "set_columns_cluase"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1650:1: set_columns_cluase : SET_SYM set_column_cluase ( COMMA set_column_cluase )* ;
	public final SQLParser.set_columns_cluase_return set_columns_cluase() throws RecognitionException {
		SQLParser.set_columns_cluase_return retval = new SQLParser.set_columns_cluase_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token SET_SYM497=null;
		Token COMMA499=null;
		ParserRuleReturnScope set_column_cluase498 =null;
		ParserRuleReturnScope set_column_cluase500 =null;

		Object SET_SYM497_tree=null;
		Object COMMA499_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1650:19: ( SET_SYM set_column_cluase ( COMMA set_column_cluase )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1650:21: SET_SYM set_column_cluase ( COMMA set_column_cluase )*
			{
			root_0 = (Object)adaptor.nil();


			SET_SYM497=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_set_columns_cluase25437); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			SET_SYM497_tree = (Object)adaptor.create(SET_SYM497);
			adaptor.addChild(root_0, SET_SYM497_tree);
			}

			pushFollow(FOLLOW_set_column_cluase_in_set_columns_cluase25439);
			set_column_cluase498=set_column_cluase();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, set_column_cluase498.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1650:47: ( COMMA set_column_cluase )*
			loop140:
			while (true) {
				int alt140=2;
				int LA140_0 = input.LA(1);
				if ( (LA140_0==COMMA) ) {
					int LA140_2 = input.LA(2);
					if ( (LA140_2==ID) ) {
						alt140=1;
					}

				}

				switch (alt140) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1650:49: COMMA set_column_cluase
					{
					COMMA499=(Token)match(input,COMMA,FOLLOW_COMMA_in_set_columns_cluase25443); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA499_tree = (Object)adaptor.create(COMMA499);
					adaptor.addChild(root_0, COMMA499_tree);
					}

					pushFollow(FOLLOW_set_column_cluase_in_set_columns_cluase25445);
					set_column_cluase500=set_column_cluase();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, set_column_cluase500.getTree());

					}
					break;

				default :
					break loop140;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "set_columns_cluase"


	public static class set_column_cluase_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "set_column_cluase"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1651:1: set_column_cluase : column_spec EQ_SYM ( expression | DEFAULT ) ;
	public final SQLParser.set_column_cluase_return set_column_cluase() throws RecognitionException {
		SQLParser.set_column_cluase_return retval = new SQLParser.set_column_cluase_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token EQ_SYM502=null;
		Token DEFAULT504=null;
		ParserRuleReturnScope column_spec501 =null;
		ParserRuleReturnScope expression503 =null;

		Object EQ_SYM502_tree=null;
		Object DEFAULT504_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1651:18: ( column_spec EQ_SYM ( expression | DEFAULT ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1651:21: column_spec EQ_SYM ( expression | DEFAULT )
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_column_spec_in_set_column_cluase25455);
			column_spec501=column_spec();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, column_spec501.getTree());

			EQ_SYM502=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_set_column_cluase25457); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			EQ_SYM502_tree = (Object)adaptor.create(EQ_SYM502);
			adaptor.addChild(root_0, EQ_SYM502_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1651:40: ( expression | DEFAULT )
			int alt141=2;
			int LA141_0 = input.LA(1);
			if ( (LA141_0==ABS||LA141_0==ACOS||(LA141_0 >= ADDDATE && LA141_0 <= ADDTIME)||(LA141_0 >= AES_DECRYPT && LA141_0 <= AES_ENCRYPT)||LA141_0==ASCII_SYM||LA141_0==ASIN||(LA141_0 >= ATAN && LA141_0 <= ATAN2)||LA141_0==AVG||LA141_0==BENCHMARK||(LA141_0 >= BIN && LA141_0 <= BINARY)||(LA141_0 >= BIT_AND && LA141_0 <= BIT_OR)||LA141_0==BIT_XOR||(LA141_0 >= CASE_SYM && LA141_0 <= CEILING)||LA141_0==CHAR||(LA141_0 >= CHARSET && LA141_0 <= CHAR_LENGTH)||LA141_0==COERCIBILITY||LA141_0==COLLATION||(LA141_0 >= CONCAT && LA141_0 <= CONCAT_WS)||LA141_0==CONNECTION_ID||(LA141_0 >= CONV && LA141_0 <= CONVERT_TZ)||(LA141_0 >= COS && LA141_0 <= COUNT)||LA141_0==CRC32||LA141_0==CURDATE||LA141_0==CURRENT_USER||LA141_0==CURTIME||LA141_0==DATABASE||LA141_0==DATEDIFF||(LA141_0 >= DATE_ADD && LA141_0 <= DAYOFYEAR)||LA141_0==DECODE||LA141_0==DEGREES||(LA141_0 >= DES_DECRYPT && LA141_0 <= DES_ENCRYPT)||LA141_0==ELT||(LA141_0 >= ENCODE && LA141_0 <= ENCRYPT)||LA141_0==EXISTS||LA141_0==EXP||LA141_0==EXPORT_SET||LA141_0==EXTRACT||LA141_0==FALSE_SYM||LA141_0==FIELD||LA141_0==FIND_IN_SET||LA141_0==FLOOR||LA141_0==FORMAT||LA141_0==FOUND_ROWS||(LA141_0 >= FROM_BASE64 && LA141_0 <= FROM_UNIXTIME)||(LA141_0 >= GET_FORMAT && LA141_0 <= GET_LOCK)||LA141_0==GROUP_CONCAT||(LA141_0 >= HEX && LA141_0 <= HEX_DIGIT)||LA141_0==HOUR||LA141_0==ID||(LA141_0 >= IF && LA141_0 <= IFNULL)||(LA141_0 >= INET_ATON && LA141_0 <= INET_NTOA)||LA141_0==INSERT||(LA141_0 >= INSTR && LA141_0 <= INTEGER_NUM)||LA141_0==INTERVAL_SYM||LA141_0==IS_FREE_LOCK||LA141_0==IS_USED_LOCK||(LA141_0 >= LAST_DAY && LA141_0 <= LAST_INSERT_ID)||(LA141_0 >= LEFT && LA141_0 <= LENGTH)||LA141_0==LN||LA141_0==LOAD_FILE||LA141_0==LOCATE||(LA141_0 >= LOG && LA141_0 <= LOG2)||LA141_0==LOWER||(LA141_0 >= LPAD && LA141_0 <= LPAREN)||LA141_0==LTRIM||(LA141_0 >= MAKEDATE && LA141_0 <= MAKE_SET)||LA141_0==MASTER_POS_WAIT||LA141_0==MATCH||LA141_0==MAX_SYM||LA141_0==MD5||(LA141_0 >= MICROSECOND && LA141_0 <= MID)||(LA141_0 >= MINUS && LA141_0 <= MINUTE)||LA141_0==MIN_SYM||LA141_0==MOD||(LA141_0 >= MONTH && LA141_0 <= MONTHNAME)||LA141_0==NAME_CONST||LA141_0==NEGATION||(LA141_0 >= NOT_SYM && LA141_0 <= NOW)||LA141_0==NULL_SYM||LA141_0==OCT||LA141_0==OLD_PASSWORD||LA141_0==ORD||(LA141_0 >= PASSWORD && LA141_0 <= PERIOD_DIFF)||LA141_0==PI||LA141_0==PLUS||(LA141_0 >= POW && LA141_0 <= POWER)||LA141_0==QUARTER||LA141_0==QUOTE||(LA141_0 >= RADIANS && LA141_0 <= RAND)||LA141_0==REAL_NUMBER||LA141_0==RELEASE_LOCK||LA141_0==REPEAT||LA141_0==REPLACE||LA141_0==REVERSE||LA141_0==RIGHT||LA141_0==ROUND||(LA141_0 >= ROW_SYM && LA141_0 <= RPAD)||LA141_0==RTRIM||(LA141_0 >= SCHEMA && LA141_0 <= SECOND)||LA141_0==SEC_TO_TIME||LA141_0==SESSION_USER||LA141_0==SIGN||LA141_0==SIN||LA141_0==SLEEP||LA141_0==SOUNDEX||LA141_0==SPACE||LA141_0==SQRT||(LA141_0 >= STD && LA141_0 <= STDDEV_SAMP)||LA141_0==STRCMP||LA141_0==STR_TO_DATE||(LA141_0 >= SUBSTRING && LA141_0 <= SUM)||(LA141_0 >= SYSDATE && LA141_0 <= SYSTEM_USER)||LA141_0==TAN||LA141_0==TEXT_STRING||(LA141_0 >= TIMEDIFF && LA141_0 <= TIME_TO_SEC)||(LA141_0 >= TO_BASE64 && LA141_0 <= TO_SECONDS)||(LA141_0 >= TRIM && LA141_0 <= TRUNCATE)||LA141_0==UNHEX||LA141_0==UNIX_TIMESTAMP||LA141_0==UPPER||(LA141_0 >= USER && LA141_0 <= USER_VAR)||(LA141_0 >= UTC_DATE && LA141_0 <= UTC_TIMESTAMP)||LA141_0==UUID||LA141_0==VALUES||LA141_0==VARIANCE||(LA141_0 >= VAR_POP && LA141_0 <= VERSION_SYM)||(LA141_0 >= WEEK && LA141_0 <= WEIGHT_STRING)||(LA141_0 >= YEAR && LA141_0 <= YEARWEEK)) ) {
				alt141=1;
			}
			else if ( (LA141_0==DEFAULT) ) {
				int LA141_2 = input.LA(2);
				if ( (synpred471_SQL()) ) {
					alt141=1;
				}
				else if ( (true) ) {
					alt141=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 141, 0, input);
				throw nvae;
			}

			switch (alt141) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1651:41: expression
					{
					pushFollow(FOLLOW_expression_in_set_column_cluase25460);
					expression503=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression503.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1651:52: DEFAULT
					{
					DEFAULT504=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_set_column_cluase25462); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DEFAULT504_tree = (Object)adaptor.create(DEFAULT504);
					adaptor.addChild(root_0, DEFAULT504_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "set_column_cluase"


	public static class insert_statement3_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "insert_statement3"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1653:1: insert_statement3 : insert_header ( column_list )? select_expression ( insert_subfix )? ;
	public final SQLParser.insert_statement3_return insert_statement3() throws RecognitionException {
		SQLParser.insert_statement3_return retval = new SQLParser.insert_statement3_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope insert_header505 =null;
		ParserRuleReturnScope column_list506 =null;
		ParserRuleReturnScope select_expression507 =null;
		ParserRuleReturnScope insert_subfix508 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1653:18: ( insert_header ( column_list )? select_expression ( insert_subfix )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1654:3: insert_header ( column_list )? select_expression ( insert_subfix )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_insert_header_in_insert_statement325473);
			insert_header505=insert_header();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, insert_header505.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1655:3: ( column_list )?
			int alt142=2;
			int LA142_0 = input.LA(1);
			if ( (LA142_0==LPAREN) ) {
				alt142=1;
			}
			switch (alt142) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1655:4: column_list
					{
					pushFollow(FOLLOW_column_list_in_insert_statement325478);
					column_list506=column_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_list506.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_select_expression_in_insert_statement325485);
			select_expression507=select_expression();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, select_expression507.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1657:3: ( insert_subfix )?
			int alt143=2;
			int LA143_0 = input.LA(1);
			if ( (LA143_0==ON) ) {
				alt143=1;
			}
			switch (alt143) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1657:5: insert_subfix
					{
					pushFollow(FOLLOW_insert_subfix_in_insert_statement325491);
					insert_subfix508=insert_subfix();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, insert_subfix508.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "insert_statement3"


	public static class update_statements_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "update_statements"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1667:1: update_statements : ( single_table_update_statement | multiple_table_update_statement );
	public final SQLParser.update_statements_return update_statements() throws RecognitionException {
		SQLParser.update_statements_return retval = new SQLParser.update_statements_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope single_table_update_statement509 =null;
		ParserRuleReturnScope multiple_table_update_statement510 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1667:19: ( single_table_update_statement | multiple_table_update_statement )
			int alt144=2;
			int LA144_0 = input.LA(1);
			if ( (LA144_0==UPDATE) ) {
				int LA144_1 = input.LA(2);
				if ( (synpred474_SQL()) ) {
					alt144=1;
				}
				else if ( (true) ) {
					alt144=2;
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 144, 0, input);
				throw nvae;
			}

			switch (alt144) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1668:3: single_table_update_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_single_table_update_statement_in_update_statements25512);
					single_table_update_statement509=single_table_update_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, single_table_update_statement509.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1668:35: multiple_table_update_statement
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_multiple_table_update_statement_in_update_statements25516);
					multiple_table_update_statement510=multiple_table_update_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, multiple_table_update_statement510.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "update_statements"


	public static class single_table_update_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "single_table_update_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1671:1: single_table_update_statement : UPDATE ( LOW_PRIORITY )? ( IGNORE_SYM )? table_reference set_columns_cluase ( where_clause )? ( orderby_clause )? ( limit_clause )? ;
	public final SQLParser.single_table_update_statement_return single_table_update_statement() throws RecognitionException {
		SQLParser.single_table_update_statement_return retval = new SQLParser.single_table_update_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token UPDATE511=null;
		Token LOW_PRIORITY512=null;
		Token IGNORE_SYM513=null;
		ParserRuleReturnScope table_reference514 =null;
		ParserRuleReturnScope set_columns_cluase515 =null;
		ParserRuleReturnScope where_clause516 =null;
		ParserRuleReturnScope orderby_clause517 =null;
		ParserRuleReturnScope limit_clause518 =null;

		Object UPDATE511_tree=null;
		Object LOW_PRIORITY512_tree=null;
		Object IGNORE_SYM513_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1671:30: ( UPDATE ( LOW_PRIORITY )? ( IGNORE_SYM )? table_reference set_columns_cluase ( where_clause )? ( orderby_clause )? ( limit_clause )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1672:1: UPDATE ( LOW_PRIORITY )? ( IGNORE_SYM )? table_reference set_columns_cluase ( where_clause )? ( orderby_clause )? ( limit_clause )?
			{
			root_0 = (Object)adaptor.nil();


			UPDATE511=(Token)match(input,UPDATE,FOLLOW_UPDATE_in_single_table_update_statement25525); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			UPDATE511_tree = (Object)adaptor.create(UPDATE511);
			adaptor.addChild(root_0, UPDATE511_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1672:8: ( LOW_PRIORITY )?
			int alt145=2;
			int LA145_0 = input.LA(1);
			if ( (LA145_0==LOW_PRIORITY) ) {
				alt145=1;
			}
			switch (alt145) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1672:9: LOW_PRIORITY
					{
					LOW_PRIORITY512=(Token)match(input,LOW_PRIORITY,FOLLOW_LOW_PRIORITY_in_single_table_update_statement25528); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LOW_PRIORITY512_tree = (Object)adaptor.create(LOW_PRIORITY512);
					adaptor.addChild(root_0, LOW_PRIORITY512_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1672:24: ( IGNORE_SYM )?
			int alt146=2;
			int LA146_0 = input.LA(1);
			if ( (LA146_0==IGNORE_SYM) ) {
				alt146=1;
			}
			switch (alt146) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1672:25: IGNORE_SYM
					{
					IGNORE_SYM513=(Token)match(input,IGNORE_SYM,FOLLOW_IGNORE_SYM_in_single_table_update_statement25533); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IGNORE_SYM513_tree = (Object)adaptor.create(IGNORE_SYM513);
					adaptor.addChild(root_0, IGNORE_SYM513_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_table_reference_in_single_table_update_statement25537);
			table_reference514=table_reference();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_reference514.getTree());

			pushFollow(FOLLOW_set_columns_cluase_in_single_table_update_statement25541);
			set_columns_cluase515=set_columns_cluase();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, set_columns_cluase515.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1674:3: ( where_clause )?
			int alt147=2;
			int LA147_0 = input.LA(1);
			if ( (LA147_0==WHERE) ) {
				alt147=1;
			}
			switch (alt147) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1674:4: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_single_table_update_statement25546);
					where_clause516=where_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, where_clause516.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1675:3: ( orderby_clause )?
			int alt148=2;
			int LA148_0 = input.LA(1);
			if ( (LA148_0==ORDER_SYM) ) {
				alt148=1;
			}
			switch (alt148) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1675:4: orderby_clause
					{
					pushFollow(FOLLOW_orderby_clause_in_single_table_update_statement25553);
					orderby_clause517=orderby_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, orderby_clause517.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1676:3: ( limit_clause )?
			int alt149=2;
			int LA149_0 = input.LA(1);
			if ( (LA149_0==INTEGER_NUM||LA149_0==LIMIT) ) {
				alt149=1;
			}
			switch (alt149) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1676:4: limit_clause
					{
					pushFollow(FOLLOW_limit_clause_in_single_table_update_statement25560);
					limit_clause518=limit_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, limit_clause518.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "single_table_update_statement"


	public static class multiple_table_update_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "multiple_table_update_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1679:1: multiple_table_update_statement : UPDATE ( LOW_PRIORITY )? ( IGNORE_SYM )? table_references set_columns_cluase ( where_clause )? ;
	public final SQLParser.multiple_table_update_statement_return multiple_table_update_statement() throws RecognitionException {
		SQLParser.multiple_table_update_statement_return retval = new SQLParser.multiple_table_update_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token UPDATE519=null;
		Token LOW_PRIORITY520=null;
		Token IGNORE_SYM521=null;
		ParserRuleReturnScope table_references522 =null;
		ParserRuleReturnScope set_columns_cluase523 =null;
		ParserRuleReturnScope where_clause524 =null;

		Object UPDATE519_tree=null;
		Object LOW_PRIORITY520_tree=null;
		Object IGNORE_SYM521_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1679:32: ( UPDATE ( LOW_PRIORITY )? ( IGNORE_SYM )? table_references set_columns_cluase ( where_clause )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1680:3: UPDATE ( LOW_PRIORITY )? ( IGNORE_SYM )? table_references set_columns_cluase ( where_clause )?
			{
			root_0 = (Object)adaptor.nil();


			UPDATE519=(Token)match(input,UPDATE,FOLLOW_UPDATE_in_multiple_table_update_statement25573); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			UPDATE519_tree = (Object)adaptor.create(UPDATE519);
			adaptor.addChild(root_0, UPDATE519_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1680:10: ( LOW_PRIORITY )?
			int alt150=2;
			int LA150_0 = input.LA(1);
			if ( (LA150_0==LOW_PRIORITY) ) {
				alt150=1;
			}
			switch (alt150) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1680:11: LOW_PRIORITY
					{
					LOW_PRIORITY520=(Token)match(input,LOW_PRIORITY,FOLLOW_LOW_PRIORITY_in_multiple_table_update_statement25576); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LOW_PRIORITY520_tree = (Object)adaptor.create(LOW_PRIORITY520);
					adaptor.addChild(root_0, LOW_PRIORITY520_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1680:26: ( IGNORE_SYM )?
			int alt151=2;
			int LA151_0 = input.LA(1);
			if ( (LA151_0==IGNORE_SYM) ) {
				alt151=1;
			}
			switch (alt151) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1680:27: IGNORE_SYM
					{
					IGNORE_SYM521=(Token)match(input,IGNORE_SYM,FOLLOW_IGNORE_SYM_in_multiple_table_update_statement25581); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IGNORE_SYM521_tree = (Object)adaptor.create(IGNORE_SYM521);
					adaptor.addChild(root_0, IGNORE_SYM521_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_table_references_in_multiple_table_update_statement25585);
			table_references522=table_references();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_references522.getTree());

			pushFollow(FOLLOW_set_columns_cluase_in_multiple_table_update_statement25589);
			set_columns_cluase523=set_columns_cluase();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, set_columns_cluase523.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1682:3: ( where_clause )?
			int alt152=2;
			int LA152_0 = input.LA(1);
			if ( (LA152_0==WHERE) ) {
				alt152=1;
			}
			switch (alt152) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1682:4: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_multiple_table_update_statement25594);
					where_clause524=where_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, where_clause524.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "multiple_table_update_statement"


	public static class call_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "call_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1691:1: call_statement : CALL_SYM procedure_name ( LPAREN ( bit_expr ( COMMA bit_expr )* )? RPAREN )? ;
	public final SQLParser.call_statement_return call_statement() throws RecognitionException {
		SQLParser.call_statement_return retval = new SQLParser.call_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token CALL_SYM525=null;
		Token LPAREN527=null;
		Token COMMA529=null;
		Token RPAREN531=null;
		ParserRuleReturnScope procedure_name526 =null;
		ParserRuleReturnScope bit_expr528 =null;
		ParserRuleReturnScope bit_expr530 =null;

		Object CALL_SYM525_tree=null;
		Object LPAREN527_tree=null;
		Object COMMA529_tree=null;
		Object RPAREN531_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1691:15: ( CALL_SYM procedure_name ( LPAREN ( bit_expr ( COMMA bit_expr )* )? RPAREN )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1692:3: CALL_SYM procedure_name ( LPAREN ( bit_expr ( COMMA bit_expr )* )? RPAREN )?
			{
			root_0 = (Object)adaptor.nil();


			CALL_SYM525=(Token)match(input,CALL_SYM,FOLLOW_CALL_SYM_in_call_statement25612); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			CALL_SYM525_tree = (Object)adaptor.create(CALL_SYM525);
			adaptor.addChild(root_0, CALL_SYM525_tree);
			}

			pushFollow(FOLLOW_procedure_name_in_call_statement25614);
			procedure_name526=procedure_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, procedure_name526.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1692:27: ( LPAREN ( bit_expr ( COMMA bit_expr )* )? RPAREN )?
			int alt155=2;
			int LA155_0 = input.LA(1);
			if ( (LA155_0==LPAREN) ) {
				alt155=1;
			}
			switch (alt155) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1692:28: LPAREN ( bit_expr ( COMMA bit_expr )* )? RPAREN
					{
					LPAREN527=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_call_statement25617); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN527_tree = (Object)adaptor.create(LPAREN527);
					adaptor.addChild(root_0, LPAREN527_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1692:35: ( bit_expr ( COMMA bit_expr )* )?
					int alt154=2;
					int LA154_0 = input.LA(1);
					if ( (LA154_0==ABS||LA154_0==ACOS||(LA154_0 >= ADDDATE && LA154_0 <= ADDTIME)||(LA154_0 >= AES_DECRYPT && LA154_0 <= AES_ENCRYPT)||LA154_0==ASCII_SYM||LA154_0==ASIN||(LA154_0 >= ATAN && LA154_0 <= ATAN2)||LA154_0==AVG||LA154_0==BENCHMARK||(LA154_0 >= BIN && LA154_0 <= BINARY)||(LA154_0 >= BIT_AND && LA154_0 <= BIT_OR)||LA154_0==BIT_XOR||(LA154_0 >= CASE_SYM && LA154_0 <= CEILING)||LA154_0==CHAR||(LA154_0 >= CHARSET && LA154_0 <= CHAR_LENGTH)||LA154_0==COERCIBILITY||LA154_0==COLLATION||(LA154_0 >= CONCAT && LA154_0 <= CONCAT_WS)||LA154_0==CONNECTION_ID||(LA154_0 >= CONV && LA154_0 <= CONVERT_TZ)||(LA154_0 >= COS && LA154_0 <= COUNT)||LA154_0==CRC32||LA154_0==CURDATE||LA154_0==CURRENT_USER||LA154_0==CURTIME||LA154_0==DATABASE||LA154_0==DATEDIFF||(LA154_0 >= DATE_ADD && LA154_0 <= DAYOFYEAR)||(LA154_0 >= DECODE && LA154_0 <= DEFAULT)||LA154_0==DEGREES||(LA154_0 >= DES_DECRYPT && LA154_0 <= DES_ENCRYPT)||LA154_0==ELT||(LA154_0 >= ENCODE && LA154_0 <= ENCRYPT)||LA154_0==EXISTS||LA154_0==EXP||LA154_0==EXPORT_SET||LA154_0==EXTRACT||LA154_0==FALSE_SYM||LA154_0==FIELD||LA154_0==FIND_IN_SET||LA154_0==FLOOR||LA154_0==FORMAT||LA154_0==FOUND_ROWS||(LA154_0 >= FROM_BASE64 && LA154_0 <= FROM_UNIXTIME)||(LA154_0 >= GET_FORMAT && LA154_0 <= GET_LOCK)||LA154_0==GROUP_CONCAT||(LA154_0 >= HEX && LA154_0 <= HEX_DIGIT)||LA154_0==HOUR||LA154_0==ID||(LA154_0 >= IF && LA154_0 <= IFNULL)||(LA154_0 >= INET_ATON && LA154_0 <= INET_NTOA)||LA154_0==INSERT||(LA154_0 >= INSTR && LA154_0 <= INTEGER_NUM)||LA154_0==INTERVAL_SYM||LA154_0==IS_FREE_LOCK||LA154_0==IS_USED_LOCK||(LA154_0 >= LAST_DAY && LA154_0 <= LAST_INSERT_ID)||(LA154_0 >= LEFT && LA154_0 <= LENGTH)||LA154_0==LN||LA154_0==LOAD_FILE||LA154_0==LOCATE||(LA154_0 >= LOG && LA154_0 <= LOG2)||LA154_0==LOWER||(LA154_0 >= LPAD && LA154_0 <= LPAREN)||LA154_0==LTRIM||(LA154_0 >= MAKEDATE && LA154_0 <= MAKE_SET)||LA154_0==MASTER_POS_WAIT||LA154_0==MATCH||LA154_0==MAX_SYM||LA154_0==MD5||(LA154_0 >= MICROSECOND && LA154_0 <= MID)||(LA154_0 >= MINUS && LA154_0 <= MINUTE)||LA154_0==MIN_SYM||LA154_0==MOD||(LA154_0 >= MONTH && LA154_0 <= MONTHNAME)||LA154_0==NAME_CONST||LA154_0==NEGATION||LA154_0==NOW||LA154_0==NULL_SYM||LA154_0==OCT||LA154_0==OLD_PASSWORD||LA154_0==ORD||(LA154_0 >= PASSWORD && LA154_0 <= PERIOD_DIFF)||LA154_0==PI||LA154_0==PLUS||(LA154_0 >= POW && LA154_0 <= POWER)||LA154_0==QUARTER||LA154_0==QUOTE||(LA154_0 >= RADIANS && LA154_0 <= RAND)||LA154_0==REAL_NUMBER||LA154_0==RELEASE_LOCK||LA154_0==REPEAT||LA154_0==REPLACE||LA154_0==REVERSE||LA154_0==RIGHT||LA154_0==ROUND||(LA154_0 >= ROW_SYM && LA154_0 <= RPAD)||LA154_0==RTRIM||(LA154_0 >= SCHEMA && LA154_0 <= SECOND)||LA154_0==SEC_TO_TIME||LA154_0==SESSION_USER||LA154_0==SIGN||LA154_0==SIN||LA154_0==SLEEP||LA154_0==SOUNDEX||LA154_0==SPACE||LA154_0==SQRT||(LA154_0 >= STD && LA154_0 <= STDDEV_SAMP)||LA154_0==STRCMP||LA154_0==STR_TO_DATE||(LA154_0 >= SUBSTRING && LA154_0 <= SUM)||(LA154_0 >= SYSDATE && LA154_0 <= SYSTEM_USER)||LA154_0==TAN||LA154_0==TEXT_STRING||(LA154_0 >= TIMEDIFF && LA154_0 <= TIME_TO_SEC)||(LA154_0 >= TO_BASE64 && LA154_0 <= TO_SECONDS)||(LA154_0 >= TRIM && LA154_0 <= TRUNCATE)||LA154_0==UNHEX||LA154_0==UNIX_TIMESTAMP||LA154_0==UPPER||(LA154_0 >= USER && LA154_0 <= USER_VAR)||(LA154_0 >= UTC_DATE && LA154_0 <= UTC_TIMESTAMP)||LA154_0==UUID||LA154_0==VALUES||LA154_0==VARIANCE||(LA154_0 >= VAR_POP && LA154_0 <= VERSION_SYM)||(LA154_0 >= WEEK && LA154_0 <= WEIGHT_STRING)||(LA154_0 >= YEAR && LA154_0 <= YEARWEEK)) ) {
						alt154=1;
					}
					switch (alt154) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1692:37: bit_expr ( COMMA bit_expr )*
							{
							pushFollow(FOLLOW_bit_expr_in_call_statement25621);
							bit_expr528=bit_expr();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr528.getTree());

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1692:46: ( COMMA bit_expr )*
							loop153:
							while (true) {
								int alt153=2;
								int LA153_0 = input.LA(1);
								if ( (LA153_0==COMMA) ) {
									alt153=1;
								}

								switch (alt153) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1692:47: COMMA bit_expr
									{
									COMMA529=(Token)match(input,COMMA,FOLLOW_COMMA_in_call_statement25624); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									COMMA529_tree = (Object)adaptor.create(COMMA529);
									adaptor.addChild(root_0, COMMA529_tree);
									}

									pushFollow(FOLLOW_bit_expr_in_call_statement25626);
									bit_expr530=bit_expr();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr530.getTree());

									}
									break;

								default :
									break loop153;
								}
							}

							}
							break;

					}

					RPAREN531=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_call_statement25633); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN531_tree = (Object)adaptor.create(RPAREN531);
					adaptor.addChild(root_0, RPAREN531_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "call_statement"


	public static class do_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "do_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1701:1: do_statement : DO_SYM root_statement ( COMMA root_statement )* ;
	public final SQLParser.do_statement_return do_statement() throws RecognitionException {
		SQLParser.do_statement_return retval = new SQLParser.do_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token DO_SYM532=null;
		Token COMMA534=null;
		ParserRuleReturnScope root_statement533 =null;
		ParserRuleReturnScope root_statement535 =null;

		Object DO_SYM532_tree=null;
		Object COMMA534_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1701:13: ( DO_SYM root_statement ( COMMA root_statement )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1702:3: DO_SYM root_statement ( COMMA root_statement )*
			{
			root_0 = (Object)adaptor.nil();


			DO_SYM532=(Token)match(input,DO_SYM,FOLLOW_DO_SYM_in_do_statement25651); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			DO_SYM532_tree = (Object)adaptor.create(DO_SYM532);
			adaptor.addChild(root_0, DO_SYM532_tree);
			}

			pushFollow(FOLLOW_root_statement_in_do_statement25653);
			root_statement533=root_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, root_statement533.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1702:25: ( COMMA root_statement )*
			loop156:
			while (true) {
				int alt156=2;
				int LA156_0 = input.LA(1);
				if ( (LA156_0==COMMA) ) {
					int LA156_2 = input.LA(2);
					if ( (synpred486_SQL()) ) {
						alt156=1;
					}

				}

				switch (alt156) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1702:26: COMMA root_statement
					{
					COMMA534=(Token)match(input,COMMA,FOLLOW_COMMA_in_do_statement25656); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA534_tree = (Object)adaptor.create(COMMA534);
					adaptor.addChild(root_0, COMMA534_tree);
					}

					pushFollow(FOLLOW_root_statement_in_do_statement25658);
					root_statement535=root_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, root_statement535.getTree());

					}
					break;

				default :
					break loop156;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "do_statement"


	public static class handler_statements_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "handler_statements"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1711:1: handler_statements : HANDLER_SYM table_name ( open_handler_statement | handler_statement1 | handler_statement2 | handler_statement3 | close_handler_statement ) ;
	public final SQLParser.handler_statements_return handler_statements() throws RecognitionException {
		SQLParser.handler_statements_return retval = new SQLParser.handler_statements_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token HANDLER_SYM536=null;
		ParserRuleReturnScope table_name537 =null;
		ParserRuleReturnScope open_handler_statement538 =null;
		ParserRuleReturnScope handler_statement1539 =null;
		ParserRuleReturnScope handler_statement2540 =null;
		ParserRuleReturnScope handler_statement3541 =null;
		ParserRuleReturnScope close_handler_statement542 =null;

		Object HANDLER_SYM536_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1711:19: ( HANDLER_SYM table_name ( open_handler_statement | handler_statement1 | handler_statement2 | handler_statement3 | close_handler_statement ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1712:3: HANDLER_SYM table_name ( open_handler_statement | handler_statement1 | handler_statement2 | handler_statement3 | close_handler_statement )
			{
			root_0 = (Object)adaptor.nil();


			HANDLER_SYM536=(Token)match(input,HANDLER_SYM,FOLLOW_HANDLER_SYM_in_handler_statements25676); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			HANDLER_SYM536_tree = (Object)adaptor.create(HANDLER_SYM536);
			adaptor.addChild(root_0, HANDLER_SYM536_tree);
			}

			pushFollow(FOLLOW_table_name_in_handler_statements25678);
			table_name537=table_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name537.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1713:3: ( open_handler_statement | handler_statement1 | handler_statement2 | handler_statement3 | close_handler_statement )
			int alt157=5;
			switch ( input.LA(1) ) {
			case OPEN_SYM:
				{
				alt157=1;
				}
				break;
			case READ_SYM:
				{
				int LA157_2 = input.LA(2);
				if ( (LA157_2==FIRST_SYM||LA157_2==NEXT_SYM) ) {
					alt157=4;
				}
				else if ( (LA157_2==ID) ) {
					int LA157_5 = input.LA(3);
					if ( (LA157_5==EQ_SYM||LA157_5==GET||LA157_5==GTH||LA157_5==LET||LA157_5==LTH||LA157_5==NOT_EQ) ) {
						alt157=2;
					}
					else if ( (LA157_5==FIRST_SYM||LA157_5==LAST_SYM||LA157_5==NEXT_SYM||LA157_5==PREV_SYM) ) {
						alt157=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 157, 5, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 157, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CLOSE_SYM:
				{
				alt157=5;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 157, 0, input);
				throw nvae;
			}
			switch (alt157) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1713:4: open_handler_statement
					{
					pushFollow(FOLLOW_open_handler_statement_in_handler_statements25683);
					open_handler_statement538=open_handler_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, open_handler_statement538.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1713:29: handler_statement1
					{
					pushFollow(FOLLOW_handler_statement1_in_handler_statements25687);
					handler_statement1539=handler_statement1();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, handler_statement1539.getTree());

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1713:50: handler_statement2
					{
					pushFollow(FOLLOW_handler_statement2_in_handler_statements25691);
					handler_statement2540=handler_statement2();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, handler_statement2540.getTree());

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1713:71: handler_statement3
					{
					pushFollow(FOLLOW_handler_statement3_in_handler_statements25695);
					handler_statement3541=handler_statement3();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, handler_statement3541.getTree());

					}
					break;
				case 5 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1713:92: close_handler_statement
					{
					pushFollow(FOLLOW_close_handler_statement_in_handler_statements25699);
					close_handler_statement542=close_handler_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, close_handler_statement542.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "handler_statements"


	public static class open_handler_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "open_handler_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1716:1: open_handler_statement : OPEN_SYM ( alias )? ;
	public final SQLParser.open_handler_statement_return open_handler_statement() throws RecognitionException {
		SQLParser.open_handler_statement_return retval = new SQLParser.open_handler_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token OPEN_SYM543=null;
		ParserRuleReturnScope alias544 =null;

		Object OPEN_SYM543_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1716:23: ( OPEN_SYM ( alias )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1717:3: OPEN_SYM ( alias )?
			{
			root_0 = (Object)adaptor.nil();


			OPEN_SYM543=(Token)match(input,OPEN_SYM,FOLLOW_OPEN_SYM_in_open_handler_statement25710); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			OPEN_SYM543_tree = (Object)adaptor.create(OPEN_SYM543);
			adaptor.addChild(root_0, OPEN_SYM543_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1717:12: ( alias )?
			int alt158=2;
			int LA158_0 = input.LA(1);
			if ( (LA158_0==AS_SYM||LA158_0==ID) ) {
				alt158=1;
			}
			switch (alt158) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1717:13: alias
					{
					pushFollow(FOLLOW_alias_in_open_handler_statement25713);
					alias544=alias();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, alias544.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "open_handler_statement"


	public static class handler_statement1_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "handler_statement1"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1720:1: handler_statement1 : READ_SYM index_name relational_op LPAREN bit_expr ( COMMA bit_expr )* RPAREN ( where_clause )? ( limit_clause )? ;
	public final SQLParser.handler_statement1_return handler_statement1() throws RecognitionException {
		SQLParser.handler_statement1_return retval = new SQLParser.handler_statement1_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token READ_SYM545=null;
		Token LPAREN548=null;
		Token COMMA550=null;
		Token RPAREN552=null;
		ParserRuleReturnScope index_name546 =null;
		ParserRuleReturnScope relational_op547 =null;
		ParserRuleReturnScope bit_expr549 =null;
		ParserRuleReturnScope bit_expr551 =null;
		ParserRuleReturnScope where_clause553 =null;
		ParserRuleReturnScope limit_clause554 =null;

		Object READ_SYM545_tree=null;
		Object LPAREN548_tree=null;
		Object COMMA550_tree=null;
		Object RPAREN552_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1720:19: ( READ_SYM index_name relational_op LPAREN bit_expr ( COMMA bit_expr )* RPAREN ( where_clause )? ( limit_clause )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1721:3: READ_SYM index_name relational_op LPAREN bit_expr ( COMMA bit_expr )* RPAREN ( where_clause )? ( limit_clause )?
			{
			root_0 = (Object)adaptor.nil();


			READ_SYM545=(Token)match(input,READ_SYM,FOLLOW_READ_SYM_in_handler_statement125725); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			READ_SYM545_tree = (Object)adaptor.create(READ_SYM545);
			adaptor.addChild(root_0, READ_SYM545_tree);
			}

			pushFollow(FOLLOW_index_name_in_handler_statement125727);
			index_name546=index_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, index_name546.getTree());

			pushFollow(FOLLOW_relational_op_in_handler_statement125729);
			relational_op547=relational_op();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, relational_op547.getTree());

			LPAREN548=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_handler_statement125731); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			LPAREN548_tree = (Object)adaptor.create(LPAREN548);
			adaptor.addChild(root_0, LPAREN548_tree);
			}

			pushFollow(FOLLOW_bit_expr_in_handler_statement125733);
			bit_expr549=bit_expr();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr549.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1721:53: ( COMMA bit_expr )*
			loop159:
			while (true) {
				int alt159=2;
				int LA159_0 = input.LA(1);
				if ( (LA159_0==COMMA) ) {
					alt159=1;
				}

				switch (alt159) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1721:54: COMMA bit_expr
					{
					COMMA550=(Token)match(input,COMMA,FOLLOW_COMMA_in_handler_statement125736); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA550_tree = (Object)adaptor.create(COMMA550);
					adaptor.addChild(root_0, COMMA550_tree);
					}

					pushFollow(FOLLOW_bit_expr_in_handler_statement125738);
					bit_expr551=bit_expr();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_expr551.getTree());

					}
					break;

				default :
					break loop159;
				}
			}

			RPAREN552=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_handler_statement125742); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			RPAREN552_tree = (Object)adaptor.create(RPAREN552);
			adaptor.addChild(root_0, RPAREN552_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1722:3: ( where_clause )?
			int alt160=2;
			int LA160_0 = input.LA(1);
			if ( (LA160_0==WHERE) ) {
				alt160=1;
			}
			switch (alt160) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1722:4: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_handler_statement125747);
					where_clause553=where_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, where_clause553.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1722:19: ( limit_clause )?
			int alt161=2;
			int LA161_0 = input.LA(1);
			if ( (LA161_0==INTEGER_NUM||LA161_0==LIMIT) ) {
				alt161=1;
			}
			switch (alt161) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1722:20: limit_clause
					{
					pushFollow(FOLLOW_limit_clause_in_handler_statement125752);
					limit_clause554=limit_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, limit_clause554.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "handler_statement1"


	public static class handler_statement2_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "handler_statement2"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1725:1: handler_statement2 : READ_SYM index_name ( FIRST_SYM | NEXT_SYM | PREV_SYM | LAST_SYM ) ( where_clause )? ( limit_clause )? ;
	public final SQLParser.handler_statement2_return handler_statement2() throws RecognitionException {
		SQLParser.handler_statement2_return retval = new SQLParser.handler_statement2_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token READ_SYM555=null;
		Token set557=null;
		ParserRuleReturnScope index_name556 =null;
		ParserRuleReturnScope where_clause558 =null;
		ParserRuleReturnScope limit_clause559 =null;

		Object READ_SYM555_tree=null;
		Object set557_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1725:19: ( READ_SYM index_name ( FIRST_SYM | NEXT_SYM | PREV_SYM | LAST_SYM ) ( where_clause )? ( limit_clause )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1726:3: READ_SYM index_name ( FIRST_SYM | NEXT_SYM | PREV_SYM | LAST_SYM ) ( where_clause )? ( limit_clause )?
			{
			root_0 = (Object)adaptor.nil();


			READ_SYM555=(Token)match(input,READ_SYM,FOLLOW_READ_SYM_in_handler_statement225764); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			READ_SYM555_tree = (Object)adaptor.create(READ_SYM555);
			adaptor.addChild(root_0, READ_SYM555_tree);
			}

			pushFollow(FOLLOW_index_name_in_handler_statement225766);
			index_name556=index_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, index_name556.getTree());

			set557=input.LT(1);
			if ( input.LA(1)==FIRST_SYM||input.LA(1)==LAST_SYM||input.LA(1)==NEXT_SYM||input.LA(1)==PREV_SYM ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set557));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1727:3: ( where_clause )?
			int alt162=2;
			int LA162_0 = input.LA(1);
			if ( (LA162_0==WHERE) ) {
				alt162=1;
			}
			switch (alt162) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1727:4: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_handler_statement225787);
					where_clause558=where_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, where_clause558.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1727:19: ( limit_clause )?
			int alt163=2;
			int LA163_0 = input.LA(1);
			if ( (LA163_0==INTEGER_NUM||LA163_0==LIMIT) ) {
				alt163=1;
			}
			switch (alt163) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1727:20: limit_clause
					{
					pushFollow(FOLLOW_limit_clause_in_handler_statement225792);
					limit_clause559=limit_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, limit_clause559.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "handler_statement2"


	public static class handler_statement3_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "handler_statement3"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1730:1: handler_statement3 : READ_SYM ( FIRST_SYM | NEXT_SYM ) ( where_clause )? ( limit_clause )? ;
	public final SQLParser.handler_statement3_return handler_statement3() throws RecognitionException {
		SQLParser.handler_statement3_return retval = new SQLParser.handler_statement3_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token READ_SYM560=null;
		Token set561=null;
		ParserRuleReturnScope where_clause562 =null;
		ParserRuleReturnScope limit_clause563 =null;

		Object READ_SYM560_tree=null;
		Object set561_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1730:19: ( READ_SYM ( FIRST_SYM | NEXT_SYM ) ( where_clause )? ( limit_clause )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1731:3: READ_SYM ( FIRST_SYM | NEXT_SYM ) ( where_clause )? ( limit_clause )?
			{
			root_0 = (Object)adaptor.nil();


			READ_SYM560=(Token)match(input,READ_SYM,FOLLOW_READ_SYM_in_handler_statement325804); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			READ_SYM560_tree = (Object)adaptor.create(READ_SYM560);
			adaptor.addChild(root_0, READ_SYM560_tree);
			}

			set561=input.LT(1);
			if ( input.LA(1)==FIRST_SYM||input.LA(1)==NEXT_SYM ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set561));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1732:3: ( where_clause )?
			int alt164=2;
			int LA164_0 = input.LA(1);
			if ( (LA164_0==WHERE) ) {
				alt164=1;
			}
			switch (alt164) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1732:4: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_handler_statement325817);
					where_clause562=where_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, where_clause562.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1732:19: ( limit_clause )?
			int alt165=2;
			int LA165_0 = input.LA(1);
			if ( (LA165_0==INTEGER_NUM||LA165_0==LIMIT) ) {
				alt165=1;
			}
			switch (alt165) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1732:20: limit_clause
					{
					pushFollow(FOLLOW_limit_clause_in_handler_statement325822);
					limit_clause563=limit_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, limit_clause563.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "handler_statement3"


	public static class close_handler_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "close_handler_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1735:1: close_handler_statement : CLOSE_SYM ;
	public final SQLParser.close_handler_statement_return close_handler_statement() throws RecognitionException {
		SQLParser.close_handler_statement_return retval = new SQLParser.close_handler_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token CLOSE_SYM564=null;

		Object CLOSE_SYM564_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1735:24: ( CLOSE_SYM )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1736:3: CLOSE_SYM
			{
			root_0 = (Object)adaptor.nil();


			CLOSE_SYM564=(Token)match(input,CLOSE_SYM,FOLLOW_CLOSE_SYM_in_close_handler_statement25834); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			CLOSE_SYM564_tree = (Object)adaptor.create(CLOSE_SYM564);
			adaptor.addChild(root_0, CLOSE_SYM564_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "close_handler_statement"


	public static class load_data_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "load_data_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1746:1: load_data_statement : LOAD DATA_SYM ( LOW_PRIORITY | CONCURRENT )? ( LOCAL_SYM )? INFILE TEXT_STRING ( REPLACE | IGNORE_SYM )? INTO TABLE table_spec ( partition_clause )? ( CHARACTER_SYM SET_SYM charset_name )? ( ( FIELDS_SYM | COLUMNS_SYM ) ( TERMINATED BY_SYM TEXT_STRING )? ( ( OPTIONALLY )? ENCLOSED BY_SYM TEXT_STRING )? ( ESCAPED BY_SYM TEXT_STRING )? )? ( LINES ( STARTING BY_SYM TEXT_STRING )? ( TERMINATED BY_SYM TEXT_STRING )? )? ( IGNORE_SYM INTEGER_NUM ( LINES | ROWS_SYM ) )? ( LPAREN ( column_spec | USER_VAR ) ( COMMA ( column_spec | USER_VAR ) )* RPAREN )? ( set_columns_cluase )? ;
	public final SQLParser.load_data_statement_return load_data_statement() throws RecognitionException {
		SQLParser.load_data_statement_return retval = new SQLParser.load_data_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token LOAD565=null;
		Token DATA_SYM566=null;
		Token set567=null;
		Token LOCAL_SYM568=null;
		Token INFILE569=null;
		Token TEXT_STRING570=null;
		Token set571=null;
		Token INTO572=null;
		Token TABLE573=null;
		Token CHARACTER_SYM576=null;
		Token SET_SYM577=null;
		Token set579=null;
		Token TERMINATED580=null;
		Token BY_SYM581=null;
		Token TEXT_STRING582=null;
		Token OPTIONALLY583=null;
		Token ENCLOSED584=null;
		Token BY_SYM585=null;
		Token TEXT_STRING586=null;
		Token ESCAPED587=null;
		Token BY_SYM588=null;
		Token TEXT_STRING589=null;
		Token LINES590=null;
		Token STARTING591=null;
		Token BY_SYM592=null;
		Token TEXT_STRING593=null;
		Token TERMINATED594=null;
		Token BY_SYM595=null;
		Token TEXT_STRING596=null;
		Token IGNORE_SYM597=null;
		Token INTEGER_NUM598=null;
		Token set599=null;
		Token LPAREN600=null;
		Token USER_VAR602=null;
		Token COMMA603=null;
		Token USER_VAR605=null;
		Token RPAREN606=null;
		ParserRuleReturnScope table_spec574 =null;
		ParserRuleReturnScope partition_clause575 =null;
		ParserRuleReturnScope charset_name578 =null;
		ParserRuleReturnScope column_spec601 =null;
		ParserRuleReturnScope column_spec604 =null;
		ParserRuleReturnScope set_columns_cluase607 =null;

		Object LOAD565_tree=null;
		Object DATA_SYM566_tree=null;
		Object set567_tree=null;
		Object LOCAL_SYM568_tree=null;
		Object INFILE569_tree=null;
		Object TEXT_STRING570_tree=null;
		Object set571_tree=null;
		Object INTO572_tree=null;
		Object TABLE573_tree=null;
		Object CHARACTER_SYM576_tree=null;
		Object SET_SYM577_tree=null;
		Object set579_tree=null;
		Object TERMINATED580_tree=null;
		Object BY_SYM581_tree=null;
		Object TEXT_STRING582_tree=null;
		Object OPTIONALLY583_tree=null;
		Object ENCLOSED584_tree=null;
		Object BY_SYM585_tree=null;
		Object TEXT_STRING586_tree=null;
		Object ESCAPED587_tree=null;
		Object BY_SYM588_tree=null;
		Object TEXT_STRING589_tree=null;
		Object LINES590_tree=null;
		Object STARTING591_tree=null;
		Object BY_SYM592_tree=null;
		Object TEXT_STRING593_tree=null;
		Object TERMINATED594_tree=null;
		Object BY_SYM595_tree=null;
		Object TEXT_STRING596_tree=null;
		Object IGNORE_SYM597_tree=null;
		Object INTEGER_NUM598_tree=null;
		Object set599_tree=null;
		Object LPAREN600_tree=null;
		Object USER_VAR602_tree=null;
		Object COMMA603_tree=null;
		Object USER_VAR605_tree=null;
		Object RPAREN606_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1746:20: ( LOAD DATA_SYM ( LOW_PRIORITY | CONCURRENT )? ( LOCAL_SYM )? INFILE TEXT_STRING ( REPLACE | IGNORE_SYM )? INTO TABLE table_spec ( partition_clause )? ( CHARACTER_SYM SET_SYM charset_name )? ( ( FIELDS_SYM | COLUMNS_SYM ) ( TERMINATED BY_SYM TEXT_STRING )? ( ( OPTIONALLY )? ENCLOSED BY_SYM TEXT_STRING )? ( ESCAPED BY_SYM TEXT_STRING )? )? ( LINES ( STARTING BY_SYM TEXT_STRING )? ( TERMINATED BY_SYM TEXT_STRING )? )? ( IGNORE_SYM INTEGER_NUM ( LINES | ROWS_SYM ) )? ( LPAREN ( column_spec | USER_VAR ) ( COMMA ( column_spec | USER_VAR ) )* RPAREN )? ( set_columns_cluase )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1747:3: LOAD DATA_SYM ( LOW_PRIORITY | CONCURRENT )? ( LOCAL_SYM )? INFILE TEXT_STRING ( REPLACE | IGNORE_SYM )? INTO TABLE table_spec ( partition_clause )? ( CHARACTER_SYM SET_SYM charset_name )? ( ( FIELDS_SYM | COLUMNS_SYM ) ( TERMINATED BY_SYM TEXT_STRING )? ( ( OPTIONALLY )? ENCLOSED BY_SYM TEXT_STRING )? ( ESCAPED BY_SYM TEXT_STRING )? )? ( LINES ( STARTING BY_SYM TEXT_STRING )? ( TERMINATED BY_SYM TEXT_STRING )? )? ( IGNORE_SYM INTEGER_NUM ( LINES | ROWS_SYM ) )? ( LPAREN ( column_spec | USER_VAR ) ( COMMA ( column_spec | USER_VAR ) )* RPAREN )? ( set_columns_cluase )?
			{
			root_0 = (Object)adaptor.nil();


			LOAD565=(Token)match(input,LOAD,FOLLOW_LOAD_in_load_data_statement25851); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			LOAD565_tree = (Object)adaptor.create(LOAD565);
			adaptor.addChild(root_0, LOAD565_tree);
			}

			DATA_SYM566=(Token)match(input,DATA_SYM,FOLLOW_DATA_SYM_in_load_data_statement25853); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			DATA_SYM566_tree = (Object)adaptor.create(DATA_SYM566);
			adaptor.addChild(root_0, DATA_SYM566_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1747:17: ( LOW_PRIORITY | CONCURRENT )?
			int alt166=2;
			int LA166_0 = input.LA(1);
			if ( (LA166_0==CONCURRENT||LA166_0==LOW_PRIORITY) ) {
				alt166=1;
			}
			switch (alt166) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
					{
					set567=input.LT(1);
					if ( input.LA(1)==CONCURRENT||input.LA(1)==LOW_PRIORITY ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set567));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1747:46: ( LOCAL_SYM )?
			int alt167=2;
			int LA167_0 = input.LA(1);
			if ( (LA167_0==LOCAL_SYM) ) {
				alt167=1;
			}
			switch (alt167) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1747:47: LOCAL_SYM
					{
					LOCAL_SYM568=(Token)match(input,LOCAL_SYM,FOLLOW_LOCAL_SYM_in_load_data_statement25865); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LOCAL_SYM568_tree = (Object)adaptor.create(LOCAL_SYM568);
					adaptor.addChild(root_0, LOCAL_SYM568_tree);
					}

					}
					break;

			}

			INFILE569=(Token)match(input,INFILE,FOLLOW_INFILE_in_load_data_statement25869); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			INFILE569_tree = (Object)adaptor.create(INFILE569);
			adaptor.addChild(root_0, INFILE569_tree);
			}

			TEXT_STRING570=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_load_data_statement25871); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			TEXT_STRING570_tree = (Object)adaptor.create(TEXT_STRING570);
			adaptor.addChild(root_0, TEXT_STRING570_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1748:3: ( REPLACE | IGNORE_SYM )?
			int alt168=2;
			int LA168_0 = input.LA(1);
			if ( (LA168_0==IGNORE_SYM||LA168_0==REPLACE) ) {
				alt168=1;
			}
			switch (alt168) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
					{
					set571=input.LT(1);
					if ( input.LA(1)==IGNORE_SYM||input.LA(1)==REPLACE ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set571));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			INTO572=(Token)match(input,INTO,FOLLOW_INTO_in_load_data_statement25886); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			INTO572_tree = (Object)adaptor.create(INTO572);
			adaptor.addChild(root_0, INTO572_tree);
			}

			TABLE573=(Token)match(input,TABLE,FOLLOW_TABLE_in_load_data_statement25888); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			TABLE573_tree = (Object)adaptor.create(TABLE573);
			adaptor.addChild(root_0, TABLE573_tree);
			}

			pushFollow(FOLLOW_table_spec_in_load_data_statement25890);
			table_spec574=table_spec();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_spec574.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1750:3: ( partition_clause )?
			int alt169=2;
			int LA169_0 = input.LA(1);
			if ( (LA169_0==PARTITION_SYM) ) {
				alt169=1;
			}
			switch (alt169) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1750:4: partition_clause
					{
					pushFollow(FOLLOW_partition_clause_in_load_data_statement25895);
					partition_clause575=partition_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_clause575.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1751:3: ( CHARACTER_SYM SET_SYM charset_name )?
			int alt170=2;
			int LA170_0 = input.LA(1);
			if ( (LA170_0==CHARACTER_SYM) ) {
				alt170=1;
			}
			switch (alt170) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1751:4: CHARACTER_SYM SET_SYM charset_name
					{
					CHARACTER_SYM576=(Token)match(input,CHARACTER_SYM,FOLLOW_CHARACTER_SYM_in_load_data_statement25902); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CHARACTER_SYM576_tree = (Object)adaptor.create(CHARACTER_SYM576);
					adaptor.addChild(root_0, CHARACTER_SYM576_tree);
					}

					SET_SYM577=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_load_data_statement25904); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SET_SYM577_tree = (Object)adaptor.create(SET_SYM577);
					adaptor.addChild(root_0, SET_SYM577_tree);
					}

					pushFollow(FOLLOW_charset_name_in_load_data_statement25906);
					charset_name578=charset_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, charset_name578.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1752:3: ( ( FIELDS_SYM | COLUMNS_SYM ) ( TERMINATED BY_SYM TEXT_STRING )? ( ( OPTIONALLY )? ENCLOSED BY_SYM TEXT_STRING )? ( ESCAPED BY_SYM TEXT_STRING )? )?
			int alt175=2;
			int LA175_0 = input.LA(1);
			if ( (LA175_0==COLUMNS_SYM||LA175_0==FIELDS_SYM) ) {
				alt175=1;
			}
			switch (alt175) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1753:5: ( FIELDS_SYM | COLUMNS_SYM ) ( TERMINATED BY_SYM TEXT_STRING )? ( ( OPTIONALLY )? ENCLOSED BY_SYM TEXT_STRING )? ( ESCAPED BY_SYM TEXT_STRING )?
					{
					set579=input.LT(1);
					if ( input.LA(1)==COLUMNS_SYM||input.LA(1)==FIELDS_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set579));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1754:5: ( TERMINATED BY_SYM TEXT_STRING )?
					int alt171=2;
					int LA171_0 = input.LA(1);
					if ( (LA171_0==TERMINATED) ) {
						alt171=1;
					}
					switch (alt171) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1754:6: TERMINATED BY_SYM TEXT_STRING
							{
							TERMINATED580=(Token)match(input,TERMINATED,FOLLOW_TERMINATED_in_load_data_statement25931); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TERMINATED580_tree = (Object)adaptor.create(TERMINATED580);
							adaptor.addChild(root_0, TERMINATED580_tree);
							}

							BY_SYM581=(Token)match(input,BY_SYM,FOLLOW_BY_SYM_in_load_data_statement25933); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							BY_SYM581_tree = (Object)adaptor.create(BY_SYM581);
							adaptor.addChild(root_0, BY_SYM581_tree);
							}

							TEXT_STRING582=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_load_data_statement25935); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TEXT_STRING582_tree = (Object)adaptor.create(TEXT_STRING582);
							adaptor.addChild(root_0, TEXT_STRING582_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1755:5: ( ( OPTIONALLY )? ENCLOSED BY_SYM TEXT_STRING )?
					int alt173=2;
					int LA173_0 = input.LA(1);
					if ( (LA173_0==ENCLOSED||LA173_0==OPTIONALLY) ) {
						alt173=1;
					}
					switch (alt173) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1755:6: ( OPTIONALLY )? ENCLOSED BY_SYM TEXT_STRING
							{
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1755:6: ( OPTIONALLY )?
							int alt172=2;
							int LA172_0 = input.LA(1);
							if ( (LA172_0==OPTIONALLY) ) {
								alt172=1;
							}
							switch (alt172) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1755:7: OPTIONALLY
									{
									OPTIONALLY583=(Token)match(input,OPTIONALLY,FOLLOW_OPTIONALLY_in_load_data_statement25945); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									OPTIONALLY583_tree = (Object)adaptor.create(OPTIONALLY583);
									adaptor.addChild(root_0, OPTIONALLY583_tree);
									}

									}
									break;

							}

							ENCLOSED584=(Token)match(input,ENCLOSED,FOLLOW_ENCLOSED_in_load_data_statement25949); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ENCLOSED584_tree = (Object)adaptor.create(ENCLOSED584);
							adaptor.addChild(root_0, ENCLOSED584_tree);
							}

							BY_SYM585=(Token)match(input,BY_SYM,FOLLOW_BY_SYM_in_load_data_statement25951); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							BY_SYM585_tree = (Object)adaptor.create(BY_SYM585);
							adaptor.addChild(root_0, BY_SYM585_tree);
							}

							TEXT_STRING586=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_load_data_statement25953); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TEXT_STRING586_tree = (Object)adaptor.create(TEXT_STRING586);
							adaptor.addChild(root_0, TEXT_STRING586_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1756:5: ( ESCAPED BY_SYM TEXT_STRING )?
					int alt174=2;
					int LA174_0 = input.LA(1);
					if ( (LA174_0==ESCAPED) ) {
						alt174=1;
					}
					switch (alt174) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1756:6: ESCAPED BY_SYM TEXT_STRING
							{
							ESCAPED587=(Token)match(input,ESCAPED,FOLLOW_ESCAPED_in_load_data_statement25962); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ESCAPED587_tree = (Object)adaptor.create(ESCAPED587);
							adaptor.addChild(root_0, ESCAPED587_tree);
							}

							BY_SYM588=(Token)match(input,BY_SYM,FOLLOW_BY_SYM_in_load_data_statement25964); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							BY_SYM588_tree = (Object)adaptor.create(BY_SYM588);
							adaptor.addChild(root_0, BY_SYM588_tree);
							}

							TEXT_STRING589=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_load_data_statement25966); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TEXT_STRING589_tree = (Object)adaptor.create(TEXT_STRING589);
							adaptor.addChild(root_0, TEXT_STRING589_tree);
							}

							}
							break;

					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1758:3: ( LINES ( STARTING BY_SYM TEXT_STRING )? ( TERMINATED BY_SYM TEXT_STRING )? )?
			int alt178=2;
			int LA178_0 = input.LA(1);
			if ( (LA178_0==LINES) ) {
				alt178=1;
			}
			switch (alt178) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1759:5: LINES ( STARTING BY_SYM TEXT_STRING )? ( TERMINATED BY_SYM TEXT_STRING )?
					{
					LINES590=(Token)match(input,LINES,FOLLOW_LINES_in_load_data_statement25983); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LINES590_tree = (Object)adaptor.create(LINES590);
					adaptor.addChild(root_0, LINES590_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1760:5: ( STARTING BY_SYM TEXT_STRING )?
					int alt176=2;
					int LA176_0 = input.LA(1);
					if ( (LA176_0==STARTING) ) {
						alt176=1;
					}
					switch (alt176) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1760:6: STARTING BY_SYM TEXT_STRING
							{
							STARTING591=(Token)match(input,STARTING,FOLLOW_STARTING_in_load_data_statement25990); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							STARTING591_tree = (Object)adaptor.create(STARTING591);
							adaptor.addChild(root_0, STARTING591_tree);
							}

							BY_SYM592=(Token)match(input,BY_SYM,FOLLOW_BY_SYM_in_load_data_statement25992); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							BY_SYM592_tree = (Object)adaptor.create(BY_SYM592);
							adaptor.addChild(root_0, BY_SYM592_tree);
							}

							TEXT_STRING593=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_load_data_statement25994); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TEXT_STRING593_tree = (Object)adaptor.create(TEXT_STRING593);
							adaptor.addChild(root_0, TEXT_STRING593_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1761:5: ( TERMINATED BY_SYM TEXT_STRING )?
					int alt177=2;
					int LA177_0 = input.LA(1);
					if ( (LA177_0==TERMINATED) ) {
						alt177=1;
					}
					switch (alt177) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1761:6: TERMINATED BY_SYM TEXT_STRING
							{
							TERMINATED594=(Token)match(input,TERMINATED,FOLLOW_TERMINATED_in_load_data_statement26003); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TERMINATED594_tree = (Object)adaptor.create(TERMINATED594);
							adaptor.addChild(root_0, TERMINATED594_tree);
							}

							BY_SYM595=(Token)match(input,BY_SYM,FOLLOW_BY_SYM_in_load_data_statement26005); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							BY_SYM595_tree = (Object)adaptor.create(BY_SYM595);
							adaptor.addChild(root_0, BY_SYM595_tree);
							}

							TEXT_STRING596=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_load_data_statement26007); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TEXT_STRING596_tree = (Object)adaptor.create(TEXT_STRING596);
							adaptor.addChild(root_0, TEXT_STRING596_tree);
							}

							}
							break;

					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1763:3: ( IGNORE_SYM INTEGER_NUM ( LINES | ROWS_SYM ) )?
			int alt179=2;
			int LA179_0 = input.LA(1);
			if ( (LA179_0==IGNORE_SYM) ) {
				alt179=1;
			}
			switch (alt179) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1763:4: IGNORE_SYM INTEGER_NUM ( LINES | ROWS_SYM )
					{
					IGNORE_SYM597=(Token)match(input,IGNORE_SYM,FOLLOW_IGNORE_SYM_in_load_data_statement26019); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IGNORE_SYM597_tree = (Object)adaptor.create(IGNORE_SYM597);
					adaptor.addChild(root_0, IGNORE_SYM597_tree);
					}

					INTEGER_NUM598=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_load_data_statement26021); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM598_tree = (Object)adaptor.create(INTEGER_NUM598);
					adaptor.addChild(root_0, INTEGER_NUM598_tree);
					}

					set599=input.LT(1);
					if ( input.LA(1)==LINES||input.LA(1)==ROWS_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set599));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1764:3: ( LPAREN ( column_spec | USER_VAR ) ( COMMA ( column_spec | USER_VAR ) )* RPAREN )?
			int alt183=2;
			int LA183_0 = input.LA(1);
			if ( (LA183_0==LPAREN) ) {
				alt183=1;
			}
			switch (alt183) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1764:4: LPAREN ( column_spec | USER_VAR ) ( COMMA ( column_spec | USER_VAR ) )* RPAREN
					{
					LPAREN600=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_load_data_statement26036); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN600_tree = (Object)adaptor.create(LPAREN600);
					adaptor.addChild(root_0, LPAREN600_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1764:11: ( column_spec | USER_VAR )
					int alt180=2;
					int LA180_0 = input.LA(1);
					if ( (LA180_0==ID) ) {
						alt180=1;
					}
					else if ( (LA180_0==USER_VAR) ) {
						alt180=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 180, 0, input);
						throw nvae;
					}

					switch (alt180) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1764:12: column_spec
							{
							pushFollow(FOLLOW_column_spec_in_load_data_statement26039);
							column_spec601=column_spec();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, column_spec601.getTree());

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1764:24: USER_VAR
							{
							USER_VAR602=(Token)match(input,USER_VAR,FOLLOW_USER_VAR_in_load_data_statement26041); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							USER_VAR602_tree = (Object)adaptor.create(USER_VAR602);
							adaptor.addChild(root_0, USER_VAR602_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1764:34: ( COMMA ( column_spec | USER_VAR ) )*
					loop182:
					while (true) {
						int alt182=2;
						int LA182_0 = input.LA(1);
						if ( (LA182_0==COMMA) ) {
							alt182=1;
						}

						switch (alt182) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1764:35: COMMA ( column_spec | USER_VAR )
							{
							COMMA603=(Token)match(input,COMMA,FOLLOW_COMMA_in_load_data_statement26045); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA603_tree = (Object)adaptor.create(COMMA603);
							adaptor.addChild(root_0, COMMA603_tree);
							}

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1764:41: ( column_spec | USER_VAR )
							int alt181=2;
							int LA181_0 = input.LA(1);
							if ( (LA181_0==ID) ) {
								alt181=1;
							}
							else if ( (LA181_0==USER_VAR) ) {
								alt181=2;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								NoViableAltException nvae =
									new NoViableAltException("", 181, 0, input);
								throw nvae;
							}

							switch (alt181) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1764:42: column_spec
									{
									pushFollow(FOLLOW_column_spec_in_load_data_statement26048);
									column_spec604=column_spec();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, column_spec604.getTree());

									}
									break;
								case 2 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1764:54: USER_VAR
									{
									USER_VAR605=(Token)match(input,USER_VAR,FOLLOW_USER_VAR_in_load_data_statement26050); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									USER_VAR605_tree = (Object)adaptor.create(USER_VAR605);
									adaptor.addChild(root_0, USER_VAR605_tree);
									}

									}
									break;

							}

							}
							break;

						default :
							break loop182;
						}
					}

					RPAREN606=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_load_data_statement26055); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN606_tree = (Object)adaptor.create(RPAREN606);
					adaptor.addChild(root_0, RPAREN606_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1765:3: ( set_columns_cluase )?
			int alt184=2;
			int LA184_0 = input.LA(1);
			if ( (LA184_0==SET_SYM) ) {
				alt184=1;
			}
			switch (alt184) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1765:4: set_columns_cluase
					{
					pushFollow(FOLLOW_set_columns_cluase_in_load_data_statement26062);
					set_columns_cluase607=set_columns_cluase();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, set_columns_cluase607.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "load_data_statement"


	public static class load_xml_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "load_xml_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1774:1: load_xml_statement : LOAD XML_SYM ( LOW_PRIORITY | CONCURRENT )? ( LOCAL_SYM )? INFILE TEXT_STRING ( REPLACE | IGNORE_SYM )? INTO TABLE table_spec ( partition_clause )? ( CHARACTER_SYM SET_SYM charset_name )? ( ROWS_SYM IDENTIFIED_SYM BY_SYM TEXT_STRING )? ( IGNORE_SYM INTEGER_NUM ( LINES | ROWS_SYM ) )? ( LPAREN ( column_spec | USER_VAR ) ( COMMA ( column_spec | USER_VAR ) )* RPAREN )? ( set_columns_cluase )? ;
	public final SQLParser.load_xml_statement_return load_xml_statement() throws RecognitionException {
		SQLParser.load_xml_statement_return retval = new SQLParser.load_xml_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token LOAD608=null;
		Token XML_SYM609=null;
		Token set610=null;
		Token LOCAL_SYM611=null;
		Token INFILE612=null;
		Token TEXT_STRING613=null;
		Token set614=null;
		Token INTO615=null;
		Token TABLE616=null;
		Token CHARACTER_SYM619=null;
		Token SET_SYM620=null;
		Token ROWS_SYM622=null;
		Token IDENTIFIED_SYM623=null;
		Token BY_SYM624=null;
		Token TEXT_STRING625=null;
		Token IGNORE_SYM626=null;
		Token INTEGER_NUM627=null;
		Token set628=null;
		Token LPAREN629=null;
		Token USER_VAR631=null;
		Token COMMA632=null;
		Token USER_VAR634=null;
		Token RPAREN635=null;
		ParserRuleReturnScope table_spec617 =null;
		ParserRuleReturnScope partition_clause618 =null;
		ParserRuleReturnScope charset_name621 =null;
		ParserRuleReturnScope column_spec630 =null;
		ParserRuleReturnScope column_spec633 =null;
		ParserRuleReturnScope set_columns_cluase636 =null;

		Object LOAD608_tree=null;
		Object XML_SYM609_tree=null;
		Object set610_tree=null;
		Object LOCAL_SYM611_tree=null;
		Object INFILE612_tree=null;
		Object TEXT_STRING613_tree=null;
		Object set614_tree=null;
		Object INTO615_tree=null;
		Object TABLE616_tree=null;
		Object CHARACTER_SYM619_tree=null;
		Object SET_SYM620_tree=null;
		Object ROWS_SYM622_tree=null;
		Object IDENTIFIED_SYM623_tree=null;
		Object BY_SYM624_tree=null;
		Object TEXT_STRING625_tree=null;
		Object IGNORE_SYM626_tree=null;
		Object INTEGER_NUM627_tree=null;
		Object set628_tree=null;
		Object LPAREN629_tree=null;
		Object USER_VAR631_tree=null;
		Object COMMA632_tree=null;
		Object USER_VAR634_tree=null;
		Object RPAREN635_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1774:19: ( LOAD XML_SYM ( LOW_PRIORITY | CONCURRENT )? ( LOCAL_SYM )? INFILE TEXT_STRING ( REPLACE | IGNORE_SYM )? INTO TABLE table_spec ( partition_clause )? ( CHARACTER_SYM SET_SYM charset_name )? ( ROWS_SYM IDENTIFIED_SYM BY_SYM TEXT_STRING )? ( IGNORE_SYM INTEGER_NUM ( LINES | ROWS_SYM ) )? ( LPAREN ( column_spec | USER_VAR ) ( COMMA ( column_spec | USER_VAR ) )* RPAREN )? ( set_columns_cluase )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1775:3: LOAD XML_SYM ( LOW_PRIORITY | CONCURRENT )? ( LOCAL_SYM )? INFILE TEXT_STRING ( REPLACE | IGNORE_SYM )? INTO TABLE table_spec ( partition_clause )? ( CHARACTER_SYM SET_SYM charset_name )? ( ROWS_SYM IDENTIFIED_SYM BY_SYM TEXT_STRING )? ( IGNORE_SYM INTEGER_NUM ( LINES | ROWS_SYM ) )? ( LPAREN ( column_spec | USER_VAR ) ( COMMA ( column_spec | USER_VAR ) )* RPAREN )? ( set_columns_cluase )?
			{
			root_0 = (Object)adaptor.nil();


			LOAD608=(Token)match(input,LOAD,FOLLOW_LOAD_in_load_xml_statement26080); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			LOAD608_tree = (Object)adaptor.create(LOAD608);
			adaptor.addChild(root_0, LOAD608_tree);
			}

			XML_SYM609=(Token)match(input,XML_SYM,FOLLOW_XML_SYM_in_load_xml_statement26082); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			XML_SYM609_tree = (Object)adaptor.create(XML_SYM609);
			adaptor.addChild(root_0, XML_SYM609_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1775:16: ( LOW_PRIORITY | CONCURRENT )?
			int alt185=2;
			int LA185_0 = input.LA(1);
			if ( (LA185_0==CONCURRENT||LA185_0==LOW_PRIORITY) ) {
				alt185=1;
			}
			switch (alt185) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
					{
					set610=input.LT(1);
					if ( input.LA(1)==CONCURRENT||input.LA(1)==LOW_PRIORITY ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set610));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1775:45: ( LOCAL_SYM )?
			int alt186=2;
			int LA186_0 = input.LA(1);
			if ( (LA186_0==LOCAL_SYM) ) {
				alt186=1;
			}
			switch (alt186) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1775:46: LOCAL_SYM
					{
					LOCAL_SYM611=(Token)match(input,LOCAL_SYM,FOLLOW_LOCAL_SYM_in_load_xml_statement26094); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LOCAL_SYM611_tree = (Object)adaptor.create(LOCAL_SYM611);
					adaptor.addChild(root_0, LOCAL_SYM611_tree);
					}

					}
					break;

			}

			INFILE612=(Token)match(input,INFILE,FOLLOW_INFILE_in_load_xml_statement26098); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			INFILE612_tree = (Object)adaptor.create(INFILE612);
			adaptor.addChild(root_0, INFILE612_tree);
			}

			TEXT_STRING613=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_load_xml_statement26100); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			TEXT_STRING613_tree = (Object)adaptor.create(TEXT_STRING613);
			adaptor.addChild(root_0, TEXT_STRING613_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1776:3: ( REPLACE | IGNORE_SYM )?
			int alt187=2;
			int LA187_0 = input.LA(1);
			if ( (LA187_0==IGNORE_SYM||LA187_0==REPLACE) ) {
				alt187=1;
			}
			switch (alt187) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
					{
					set614=input.LT(1);
					if ( input.LA(1)==IGNORE_SYM||input.LA(1)==REPLACE ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set614));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			INTO615=(Token)match(input,INTO,FOLLOW_INTO_in_load_xml_statement26115); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			INTO615_tree = (Object)adaptor.create(INTO615);
			adaptor.addChild(root_0, INTO615_tree);
			}

			TABLE616=(Token)match(input,TABLE,FOLLOW_TABLE_in_load_xml_statement26117); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			TABLE616_tree = (Object)adaptor.create(TABLE616);
			adaptor.addChild(root_0, TABLE616_tree);
			}

			pushFollow(FOLLOW_table_spec_in_load_xml_statement26119);
			table_spec617=table_spec();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_spec617.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1778:3: ( partition_clause )?
			int alt188=2;
			int LA188_0 = input.LA(1);
			if ( (LA188_0==PARTITION_SYM) ) {
				alt188=1;
			}
			switch (alt188) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1778:4: partition_clause
					{
					pushFollow(FOLLOW_partition_clause_in_load_xml_statement26124);
					partition_clause618=partition_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_clause618.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1779:3: ( CHARACTER_SYM SET_SYM charset_name )?
			int alt189=2;
			int LA189_0 = input.LA(1);
			if ( (LA189_0==CHARACTER_SYM) ) {
				alt189=1;
			}
			switch (alt189) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1779:4: CHARACTER_SYM SET_SYM charset_name
					{
					CHARACTER_SYM619=(Token)match(input,CHARACTER_SYM,FOLLOW_CHARACTER_SYM_in_load_xml_statement26131); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CHARACTER_SYM619_tree = (Object)adaptor.create(CHARACTER_SYM619);
					adaptor.addChild(root_0, CHARACTER_SYM619_tree);
					}

					SET_SYM620=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_load_xml_statement26133); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SET_SYM620_tree = (Object)adaptor.create(SET_SYM620);
					adaptor.addChild(root_0, SET_SYM620_tree);
					}

					pushFollow(FOLLOW_charset_name_in_load_xml_statement26135);
					charset_name621=charset_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, charset_name621.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1780:3: ( ROWS_SYM IDENTIFIED_SYM BY_SYM TEXT_STRING )?
			int alt190=2;
			int LA190_0 = input.LA(1);
			if ( (LA190_0==ROWS_SYM) ) {
				alt190=1;
			}
			switch (alt190) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1780:4: ROWS_SYM IDENTIFIED_SYM BY_SYM TEXT_STRING
					{
					ROWS_SYM622=(Token)match(input,ROWS_SYM,FOLLOW_ROWS_SYM_in_load_xml_statement26142); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ROWS_SYM622_tree = (Object)adaptor.create(ROWS_SYM622);
					adaptor.addChild(root_0, ROWS_SYM622_tree);
					}

					IDENTIFIED_SYM623=(Token)match(input,IDENTIFIED_SYM,FOLLOW_IDENTIFIED_SYM_in_load_xml_statement26144); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IDENTIFIED_SYM623_tree = (Object)adaptor.create(IDENTIFIED_SYM623);
					adaptor.addChild(root_0, IDENTIFIED_SYM623_tree);
					}

					BY_SYM624=(Token)match(input,BY_SYM,FOLLOW_BY_SYM_in_load_xml_statement26146); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					BY_SYM624_tree = (Object)adaptor.create(BY_SYM624);
					adaptor.addChild(root_0, BY_SYM624_tree);
					}

					TEXT_STRING625=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_load_xml_statement26148); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING625_tree = (Object)adaptor.create(TEXT_STRING625);
					adaptor.addChild(root_0, TEXT_STRING625_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1781:3: ( IGNORE_SYM INTEGER_NUM ( LINES | ROWS_SYM ) )?
			int alt191=2;
			int LA191_0 = input.LA(1);
			if ( (LA191_0==IGNORE_SYM) ) {
				alt191=1;
			}
			switch (alt191) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1781:4: IGNORE_SYM INTEGER_NUM ( LINES | ROWS_SYM )
					{
					IGNORE_SYM626=(Token)match(input,IGNORE_SYM,FOLLOW_IGNORE_SYM_in_load_xml_statement26155); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IGNORE_SYM626_tree = (Object)adaptor.create(IGNORE_SYM626);
					adaptor.addChild(root_0, IGNORE_SYM626_tree);
					}

					INTEGER_NUM627=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_load_xml_statement26157); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM627_tree = (Object)adaptor.create(INTEGER_NUM627);
					adaptor.addChild(root_0, INTEGER_NUM627_tree);
					}

					set628=input.LT(1);
					if ( input.LA(1)==LINES||input.LA(1)==ROWS_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set628));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1782:3: ( LPAREN ( column_spec | USER_VAR ) ( COMMA ( column_spec | USER_VAR ) )* RPAREN )?
			int alt195=2;
			int LA195_0 = input.LA(1);
			if ( (LA195_0==LPAREN) ) {
				alt195=1;
			}
			switch (alt195) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1782:4: LPAREN ( column_spec | USER_VAR ) ( COMMA ( column_spec | USER_VAR ) )* RPAREN
					{
					LPAREN629=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_load_xml_statement26172); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN629_tree = (Object)adaptor.create(LPAREN629);
					adaptor.addChild(root_0, LPAREN629_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1782:11: ( column_spec | USER_VAR )
					int alt192=2;
					int LA192_0 = input.LA(1);
					if ( (LA192_0==ID) ) {
						alt192=1;
					}
					else if ( (LA192_0==USER_VAR) ) {
						alt192=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 192, 0, input);
						throw nvae;
					}

					switch (alt192) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1782:12: column_spec
							{
							pushFollow(FOLLOW_column_spec_in_load_xml_statement26175);
							column_spec630=column_spec();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, column_spec630.getTree());

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1782:24: USER_VAR
							{
							USER_VAR631=(Token)match(input,USER_VAR,FOLLOW_USER_VAR_in_load_xml_statement26177); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							USER_VAR631_tree = (Object)adaptor.create(USER_VAR631);
							adaptor.addChild(root_0, USER_VAR631_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1782:34: ( COMMA ( column_spec | USER_VAR ) )*
					loop194:
					while (true) {
						int alt194=2;
						int LA194_0 = input.LA(1);
						if ( (LA194_0==COMMA) ) {
							alt194=1;
						}

						switch (alt194) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1782:35: COMMA ( column_spec | USER_VAR )
							{
							COMMA632=(Token)match(input,COMMA,FOLLOW_COMMA_in_load_xml_statement26181); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA632_tree = (Object)adaptor.create(COMMA632);
							adaptor.addChild(root_0, COMMA632_tree);
							}

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1782:41: ( column_spec | USER_VAR )
							int alt193=2;
							int LA193_0 = input.LA(1);
							if ( (LA193_0==ID) ) {
								alt193=1;
							}
							else if ( (LA193_0==USER_VAR) ) {
								alt193=2;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								NoViableAltException nvae =
									new NoViableAltException("", 193, 0, input);
								throw nvae;
							}

							switch (alt193) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1782:42: column_spec
									{
									pushFollow(FOLLOW_column_spec_in_load_xml_statement26184);
									column_spec633=column_spec();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, column_spec633.getTree());

									}
									break;
								case 2 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1782:54: USER_VAR
									{
									USER_VAR634=(Token)match(input,USER_VAR,FOLLOW_USER_VAR_in_load_xml_statement26186); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									USER_VAR634_tree = (Object)adaptor.create(USER_VAR634);
									adaptor.addChild(root_0, USER_VAR634_tree);
									}

									}
									break;

							}

							}
							break;

						default :
							break loop194;
						}
					}

					RPAREN635=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_load_xml_statement26191); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN635_tree = (Object)adaptor.create(RPAREN635);
					adaptor.addChild(root_0, RPAREN635_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1783:3: ( set_columns_cluase )?
			int alt196=2;
			int LA196_0 = input.LA(1);
			if ( (LA196_0==SET_SYM) ) {
				alt196=1;
			}
			switch (alt196) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1783:4: set_columns_cluase
					{
					pushFollow(FOLLOW_set_columns_cluase_in_load_xml_statement26198);
					set_columns_cluase636=set_columns_cluase();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, set_columns_cluase636.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "load_xml_statement"


	public static class replace_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "replace_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1792:1: replace_statement : replace_statement_header ( replace_statement1 | replace_statement2 | replace_statement3 ) ;
	public final SQLParser.replace_statement_return replace_statement() throws RecognitionException {
		SQLParser.replace_statement_return retval = new SQLParser.replace_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope replace_statement_header637 =null;
		ParserRuleReturnScope replace_statement1638 =null;
		ParserRuleReturnScope replace_statement2639 =null;
		ParserRuleReturnScope replace_statement3640 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1792:18: ( replace_statement_header ( replace_statement1 | replace_statement2 | replace_statement3 ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1793:3: replace_statement_header ( replace_statement1 | replace_statement2 | replace_statement3 )
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_replace_statement_header_in_replace_statement26216);
			replace_statement_header637=replace_statement_header();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, replace_statement_header637.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1794:3: ( replace_statement1 | replace_statement2 | replace_statement3 )
			int alt197=3;
			alt197 = dfa197.predict(input);
			switch (alt197) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1794:5: replace_statement1
					{
					pushFollow(FOLLOW_replace_statement1_in_replace_statement26222);
					replace_statement1638=replace_statement1();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, replace_statement1638.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1794:26: replace_statement2
					{
					pushFollow(FOLLOW_replace_statement2_in_replace_statement26226);
					replace_statement2639=replace_statement2();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, replace_statement2639.getTree());

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1794:47: replace_statement3
					{
					pushFollow(FOLLOW_replace_statement3_in_replace_statement26230);
					replace_statement3640=replace_statement3();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, replace_statement3640.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "replace_statement"


	public static class replace_statement_header_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "replace_statement_header"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1797:1: replace_statement_header : REPLACE ( LOW_PRIORITY | DELAYED_SYM )? ( INTO )? table_name ( partition_clause )? ;
	public final SQLParser.replace_statement_header_return replace_statement_header() throws RecognitionException {
		SQLParser.replace_statement_header_return retval = new SQLParser.replace_statement_header_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token REPLACE641=null;
		Token set642=null;
		Token INTO643=null;
		ParserRuleReturnScope table_name644 =null;
		ParserRuleReturnScope partition_clause645 =null;

		Object REPLACE641_tree=null;
		Object set642_tree=null;
		Object INTO643_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1797:25: ( REPLACE ( LOW_PRIORITY | DELAYED_SYM )? ( INTO )? table_name ( partition_clause )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1798:3: REPLACE ( LOW_PRIORITY | DELAYED_SYM )? ( INTO )? table_name ( partition_clause )?
			{
			root_0 = (Object)adaptor.nil();


			REPLACE641=(Token)match(input,REPLACE,FOLLOW_REPLACE_in_replace_statement_header26242); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			REPLACE641_tree = (Object)adaptor.create(REPLACE641);
			adaptor.addChild(root_0, REPLACE641_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1798:11: ( LOW_PRIORITY | DELAYED_SYM )?
			int alt198=2;
			int LA198_0 = input.LA(1);
			if ( (LA198_0==DELAYED_SYM||LA198_0==LOW_PRIORITY) ) {
				alt198=1;
			}
			switch (alt198) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
					{
					set642=input.LT(1);
					if ( input.LA(1)==DELAYED_SYM||input.LA(1)==LOW_PRIORITY ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set642));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1799:3: ( INTO )?
			int alt199=2;
			int LA199_0 = input.LA(1);
			if ( (LA199_0==INTO) ) {
				alt199=1;
			}
			switch (alt199) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1799:4: INTO
					{
					INTO643=(Token)match(input,INTO,FOLLOW_INTO_in_replace_statement_header26256); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTO643_tree = (Object)adaptor.create(INTO643);
					adaptor.addChild(root_0, INTO643_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_table_name_in_replace_statement_header26260);
			table_name644=table_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name644.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1800:3: ( partition_clause )?
			int alt200=2;
			int LA200_0 = input.LA(1);
			if ( (LA200_0==PARTITION_SYM) ) {
				alt200=1;
			}
			switch (alt200) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1800:4: partition_clause
					{
					pushFollow(FOLLOW_partition_clause_in_replace_statement_header26265);
					partition_clause645=partition_clause();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_clause645.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "replace_statement_header"


	public static class replace_statement1_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "replace_statement1"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1803:1: replace_statement1 : ( column_list )? value_list_clause ;
	public final SQLParser.replace_statement1_return replace_statement1() throws RecognitionException {
		SQLParser.replace_statement1_return retval = new SQLParser.replace_statement1_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope column_list646 =null;
		ParserRuleReturnScope value_list_clause647 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1803:19: ( ( column_list )? value_list_clause )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1804:3: ( column_list )? value_list_clause
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1804:3: ( column_list )?
			int alt201=2;
			int LA201_0 = input.LA(1);
			if ( (LA201_0==LPAREN) ) {
				alt201=1;
			}
			switch (alt201) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1804:4: column_list
					{
					pushFollow(FOLLOW_column_list_in_replace_statement126278);
					column_list646=column_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_list646.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_value_list_clause_in_replace_statement126284);
			value_list_clause647=value_list_clause();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, value_list_clause647.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "replace_statement1"


	public static class replace_statement2_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "replace_statement2"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1808:1: replace_statement2 : set_columns_cluase ;
	public final SQLParser.replace_statement2_return replace_statement2() throws RecognitionException {
		SQLParser.replace_statement2_return retval = new SQLParser.replace_statement2_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope set_columns_cluase648 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1808:19: ( set_columns_cluase )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1809:3: set_columns_cluase
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_set_columns_cluase_in_replace_statement226294);
			set_columns_cluase648=set_columns_cluase();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, set_columns_cluase648.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "replace_statement2"


	public static class replace_statement3_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "replace_statement3"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1812:1: replace_statement3 : ( column_list )? select_statement ;
	public final SQLParser.replace_statement3_return replace_statement3() throws RecognitionException {
		SQLParser.replace_statement3_return retval = new SQLParser.replace_statement3_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope column_list649 =null;
		ParserRuleReturnScope select_statement650 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1812:19: ( ( column_list )? select_statement )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1813:3: ( column_list )? select_statement
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1813:3: ( column_list )?
			int alt202=2;
			int LA202_0 = input.LA(1);
			if ( (LA202_0==LPAREN) ) {
				alt202=1;
			}
			switch (alt202) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1813:4: column_list
					{
					pushFollow(FOLLOW_column_list_in_replace_statement326305);
					column_list649=column_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_list649.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_select_statement_in_replace_statement326311);
			select_statement650=select_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, select_statement650.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "replace_statement3"


	public static class create_database_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "create_database_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1824:1: create_database_statement : CREATE ( DATABASE | SCHEMA ) ( IF NOT_SYM EXISTS )? schema_name ( create_specification ( COMMA create_specification )* )* ;
	public final SQLParser.create_database_statement_return create_database_statement() throws RecognitionException {
		SQLParser.create_database_statement_return retval = new SQLParser.create_database_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token CREATE651=null;
		Token set652=null;
		Token IF653=null;
		Token NOT_SYM654=null;
		Token EXISTS655=null;
		Token COMMA658=null;
		ParserRuleReturnScope schema_name656 =null;
		ParserRuleReturnScope create_specification657 =null;
		ParserRuleReturnScope create_specification659 =null;

		Object CREATE651_tree=null;
		Object set652_tree=null;
		Object IF653_tree=null;
		Object NOT_SYM654_tree=null;
		Object EXISTS655_tree=null;
		Object COMMA658_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1824:26: ( CREATE ( DATABASE | SCHEMA ) ( IF NOT_SYM EXISTS )? schema_name ( create_specification ( COMMA create_specification )* )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1825:3: CREATE ( DATABASE | SCHEMA ) ( IF NOT_SYM EXISTS )? schema_name ( create_specification ( COMMA create_specification )* )*
			{
			root_0 = (Object)adaptor.nil();


			CREATE651=(Token)match(input,CREATE,FOLLOW_CREATE_in_create_database_statement26328); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			CREATE651_tree = (Object)adaptor.create(CREATE651);
			adaptor.addChild(root_0, CREATE651_tree);
			}

			set652=input.LT(1);
			if ( input.LA(1)==DATABASE||input.LA(1)==SCHEMA ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set652));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1825:30: ( IF NOT_SYM EXISTS )?
			int alt203=2;
			int LA203_0 = input.LA(1);
			if ( (LA203_0==IF) ) {
				alt203=1;
			}
			switch (alt203) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1825:31: IF NOT_SYM EXISTS
					{
					IF653=(Token)match(input,IF,FOLLOW_IF_in_create_database_statement26339); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IF653_tree = (Object)adaptor.create(IF653);
					adaptor.addChild(root_0, IF653_tree);
					}

					NOT_SYM654=(Token)match(input,NOT_SYM,FOLLOW_NOT_SYM_in_create_database_statement26341); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					NOT_SYM654_tree = (Object)adaptor.create(NOT_SYM654);
					adaptor.addChild(root_0, NOT_SYM654_tree);
					}

					EXISTS655=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_create_database_statement26343); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EXISTS655_tree = (Object)adaptor.create(EXISTS655);
					adaptor.addChild(root_0, EXISTS655_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_schema_name_in_create_database_statement26347);
			schema_name656=schema_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, schema_name656.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1826:3: ( create_specification ( COMMA create_specification )* )*
			loop205:
			while (true) {
				int alt205=2;
				int LA205_0 = input.LA(1);
				if ( (LA205_0==CHARACTER_SYM||LA205_0==COLLATE_SYM||LA205_0==DEFAULT) ) {
					alt205=1;
				}

				switch (alt205) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1826:5: create_specification ( COMMA create_specification )*
					{
					pushFollow(FOLLOW_create_specification_in_create_database_statement26353);
					create_specification657=create_specification();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, create_specification657.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1826:26: ( COMMA create_specification )*
					loop204:
					while (true) {
						int alt204=2;
						int LA204_0 = input.LA(1);
						if ( (LA204_0==COMMA) ) {
							int LA204_2 = input.LA(2);
							if ( (LA204_2==CHARACTER_SYM||LA204_2==COLLATE_SYM||LA204_2==DEFAULT) ) {
								alt204=1;
							}

						}

						switch (alt204) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1826:27: COMMA create_specification
							{
							COMMA658=(Token)match(input,COMMA,FOLLOW_COMMA_in_create_database_statement26356); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA658_tree = (Object)adaptor.create(COMMA658);
							adaptor.addChild(root_0, COMMA658_tree);
							}

							pushFollow(FOLLOW_create_specification_in_create_database_statement26358);
							create_specification659=create_specification();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, create_specification659.getTree());

							}
							break;

						default :
							break loop204;
						}
					}

					}
					break;

				default :
					break loop205;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_database_statement"


	public static class create_specification_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "create_specification"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1828:1: create_specification : ( DEFAULT )? ( ( CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name ) | ( COLLATE_SYM ( EQ_SYM )? collation_name ) ) ;
	public final SQLParser.create_specification_return create_specification() throws RecognitionException {
		SQLParser.create_specification_return retval = new SQLParser.create_specification_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token DEFAULT660=null;
		Token CHARACTER_SYM661=null;
		Token SET_SYM662=null;
		Token EQ_SYM663=null;
		Token COLLATE_SYM665=null;
		Token EQ_SYM666=null;
		ParserRuleReturnScope charset_name664 =null;
		ParserRuleReturnScope collation_name667 =null;

		Object DEFAULT660_tree=null;
		Object CHARACTER_SYM661_tree=null;
		Object SET_SYM662_tree=null;
		Object EQ_SYM663_tree=null;
		Object COLLATE_SYM665_tree=null;
		Object EQ_SYM666_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1828:21: ( ( DEFAULT )? ( ( CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name ) | ( COLLATE_SYM ( EQ_SYM )? collation_name ) ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1829:3: ( DEFAULT )? ( ( CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name ) | ( COLLATE_SYM ( EQ_SYM )? collation_name ) )
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1829:3: ( DEFAULT )?
			int alt206=2;
			int LA206_0 = input.LA(1);
			if ( (LA206_0==DEFAULT) ) {
				alt206=1;
			}
			switch (alt206) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1829:4: DEFAULT
					{
					DEFAULT660=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_create_specification26373); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DEFAULT660_tree = (Object)adaptor.create(DEFAULT660);
					adaptor.addChild(root_0, DEFAULT660_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1830:3: ( ( CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name ) | ( COLLATE_SYM ( EQ_SYM )? collation_name ) )
			int alt209=2;
			int LA209_0 = input.LA(1);
			if ( (LA209_0==CHARACTER_SYM) ) {
				alt209=1;
			}
			else if ( (LA209_0==COLLATE_SYM) ) {
				alt209=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 209, 0, input);
				throw nvae;
			}

			switch (alt209) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1831:5: ( CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1831:5: ( CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1831:8: CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name
					{
					CHARACTER_SYM661=(Token)match(input,CHARACTER_SYM,FOLLOW_CHARACTER_SYM_in_create_specification26389); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CHARACTER_SYM661_tree = (Object)adaptor.create(CHARACTER_SYM661);
					adaptor.addChild(root_0, CHARACTER_SYM661_tree);
					}

					SET_SYM662=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_create_specification26391); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SET_SYM662_tree = (Object)adaptor.create(SET_SYM662);
					adaptor.addChild(root_0, SET_SYM662_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1831:30: ( EQ_SYM )?
					int alt207=2;
					int LA207_0 = input.LA(1);
					if ( (LA207_0==EQ_SYM) ) {
						alt207=1;
					}
					switch (alt207) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1831:31: EQ_SYM
							{
							EQ_SYM663=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_create_specification26394); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM663_tree = (Object)adaptor.create(EQ_SYM663);
							adaptor.addChild(root_0, EQ_SYM663_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_charset_name_in_create_specification26398);
					charset_name664=charset_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, charset_name664.getTree());

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1833:5: ( COLLATE_SYM ( EQ_SYM )? collation_name )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1833:5: ( COLLATE_SYM ( EQ_SYM )? collation_name )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1833:8: COLLATE_SYM ( EQ_SYM )? collation_name
					{
					COLLATE_SYM665=(Token)match(input,COLLATE_SYM,FOLLOW_COLLATE_SYM_in_create_specification26416); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COLLATE_SYM665_tree = (Object)adaptor.create(COLLATE_SYM665);
					adaptor.addChild(root_0, COLLATE_SYM665_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1833:20: ( EQ_SYM )?
					int alt208=2;
					int LA208_0 = input.LA(1);
					if ( (LA208_0==EQ_SYM) ) {
						alt208=1;
					}
					switch (alt208) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1833:21: EQ_SYM
							{
							EQ_SYM666=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_create_specification26419); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM666_tree = (Object)adaptor.create(EQ_SYM666);
							adaptor.addChild(root_0, EQ_SYM666_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_collation_name_in_create_specification26423);
					collation_name667=collation_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, collation_name667.getTree());

					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_specification"


	public static class alter_database_statements_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "alter_database_statements"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1839:1: alter_database_statements : ( alter_database_statement1 | alter_database_statement2 );
	public final SQLParser.alter_database_statements_return alter_database_statements() throws RecognitionException {
		SQLParser.alter_database_statements_return retval = new SQLParser.alter_database_statements_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope alter_database_statement1668 =null;
		ParserRuleReturnScope alter_database_statement2669 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1839:26: ( alter_database_statement1 | alter_database_statement2 )
			int alt210=2;
			int LA210_0 = input.LA(1);
			if ( (LA210_0==ALTER) ) {
				int LA210_1 = input.LA(2);
				if ( (LA210_1==DATABASE||LA210_1==SCHEMA) ) {
					int LA210_2 = input.LA(3);
					if ( (LA210_2==ID) ) {
						int LA210_3 = input.LA(4);
						if ( (LA210_3==CHARACTER_SYM||LA210_3==COLLATE_SYM||LA210_3==DEFAULT) ) {
							alt210=1;
						}
						else if ( (LA210_3==UPGRADE_SYM) ) {
							alt210=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 210, 3, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA210_2==CHARACTER_SYM||LA210_2==COLLATE_SYM||LA210_2==DEFAULT) ) {
						alt210=1;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 210, 2, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 210, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 210, 0, input);
				throw nvae;
			}

			switch (alt210) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1840:3: alter_database_statement1
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_alter_database_statement1_in_alter_database_statements26442);
					alter_database_statement1668=alter_database_statement1();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, alter_database_statement1668.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1840:31: alter_database_statement2
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_alter_database_statement2_in_alter_database_statements26446);
					alter_database_statement2669=alter_database_statement2();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, alter_database_statement2669.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_database_statements"


	public static class alter_database_statement1_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "alter_database_statement1"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1842:1: alter_database_statement1 : ALTER ( DATABASE | SCHEMA ) ( schema_name )? alter_database_specification ;
	public final SQLParser.alter_database_statement1_return alter_database_statement1() throws RecognitionException {
		SQLParser.alter_database_statement1_return retval = new SQLParser.alter_database_statement1_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token ALTER670=null;
		Token set671=null;
		ParserRuleReturnScope schema_name672 =null;
		ParserRuleReturnScope alter_database_specification673 =null;

		Object ALTER670_tree=null;
		Object set671_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1842:26: ( ALTER ( DATABASE | SCHEMA ) ( schema_name )? alter_database_specification )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1843:3: ALTER ( DATABASE | SCHEMA ) ( schema_name )? alter_database_specification
			{
			root_0 = (Object)adaptor.nil();


			ALTER670=(Token)match(input,ALTER,FOLLOW_ALTER_in_alter_database_statement126455); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			ALTER670_tree = (Object)adaptor.create(ALTER670);
			adaptor.addChild(root_0, ALTER670_tree);
			}

			set671=input.LT(1);
			if ( input.LA(1)==DATABASE||input.LA(1)==SCHEMA ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set671));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1843:29: ( schema_name )?
			int alt211=2;
			int LA211_0 = input.LA(1);
			if ( (LA211_0==ID) ) {
				alt211=1;
			}
			switch (alt211) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1843:30: schema_name
					{
					pushFollow(FOLLOW_schema_name_in_alter_database_statement126466);
					schema_name672=schema_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, schema_name672.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_alter_database_specification_in_alter_database_statement126472);
			alter_database_specification673=alter_database_specification();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, alter_database_specification673.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_database_statement1"


	public static class alter_database_statement2_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "alter_database_statement2"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1846:1: alter_database_statement2 : ALTER ( DATABASE | SCHEMA ) schema_name UPGRADE_SYM DATA_SYM DIRECTORY_SYM NAME_SYM ;
	public final SQLParser.alter_database_statement2_return alter_database_statement2() throws RecognitionException {
		SQLParser.alter_database_statement2_return retval = new SQLParser.alter_database_statement2_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token ALTER674=null;
		Token set675=null;
		Token UPGRADE_SYM677=null;
		Token DATA_SYM678=null;
		Token DIRECTORY_SYM679=null;
		Token NAME_SYM680=null;
		ParserRuleReturnScope schema_name676 =null;

		Object ALTER674_tree=null;
		Object set675_tree=null;
		Object UPGRADE_SYM677_tree=null;
		Object DATA_SYM678_tree=null;
		Object DIRECTORY_SYM679_tree=null;
		Object NAME_SYM680_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1846:26: ( ALTER ( DATABASE | SCHEMA ) schema_name UPGRADE_SYM DATA_SYM DIRECTORY_SYM NAME_SYM )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1847:3: ALTER ( DATABASE | SCHEMA ) schema_name UPGRADE_SYM DATA_SYM DIRECTORY_SYM NAME_SYM
			{
			root_0 = (Object)adaptor.nil();


			ALTER674=(Token)match(input,ALTER,FOLLOW_ALTER_in_alter_database_statement226481); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			ALTER674_tree = (Object)adaptor.create(ALTER674);
			adaptor.addChild(root_0, ALTER674_tree);
			}

			set675=input.LT(1);
			if ( input.LA(1)==DATABASE||input.LA(1)==SCHEMA ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set675));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			pushFollow(FOLLOW_schema_name_in_alter_database_statement226491);
			schema_name676=schema_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, schema_name676.getTree());

			UPGRADE_SYM677=(Token)match(input,UPGRADE_SYM,FOLLOW_UPGRADE_SYM_in_alter_database_statement226495); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			UPGRADE_SYM677_tree = (Object)adaptor.create(UPGRADE_SYM677);
			adaptor.addChild(root_0, UPGRADE_SYM677_tree);
			}

			DATA_SYM678=(Token)match(input,DATA_SYM,FOLLOW_DATA_SYM_in_alter_database_statement226497); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			DATA_SYM678_tree = (Object)adaptor.create(DATA_SYM678);
			adaptor.addChild(root_0, DATA_SYM678_tree);
			}

			DIRECTORY_SYM679=(Token)match(input,DIRECTORY_SYM,FOLLOW_DIRECTORY_SYM_in_alter_database_statement226499); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			DIRECTORY_SYM679_tree = (Object)adaptor.create(DIRECTORY_SYM679);
			adaptor.addChild(root_0, DIRECTORY_SYM679_tree);
			}

			NAME_SYM680=(Token)match(input,NAME_SYM,FOLLOW_NAME_SYM_in_alter_database_statement226501); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			NAME_SYM680_tree = (Object)adaptor.create(NAME_SYM680);
			adaptor.addChild(root_0, NAME_SYM680_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_database_statement2"


	public static class alter_database_specification_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "alter_database_specification"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1850:1: alter_database_specification : ( ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name | ( DEFAULT )? COLLATE_SYM ( EQ_SYM )? collation_names );
	public final SQLParser.alter_database_specification_return alter_database_specification() throws RecognitionException {
		SQLParser.alter_database_specification_return retval = new SQLParser.alter_database_specification_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token DEFAULT681=null;
		Token CHARACTER_SYM682=null;
		Token SET_SYM683=null;
		Token EQ_SYM684=null;
		Token DEFAULT686=null;
		Token COLLATE_SYM687=null;
		Token EQ_SYM688=null;
		ParserRuleReturnScope charset_name685 =null;
		ParserRuleReturnScope collation_names689 =null;

		Object DEFAULT681_tree=null;
		Object CHARACTER_SYM682_tree=null;
		Object SET_SYM683_tree=null;
		Object EQ_SYM684_tree=null;
		Object DEFAULT686_tree=null;
		Object COLLATE_SYM687_tree=null;
		Object EQ_SYM688_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1850:29: ( ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name | ( DEFAULT )? COLLATE_SYM ( EQ_SYM )? collation_names )
			int alt216=2;
			switch ( input.LA(1) ) {
			case DEFAULT:
				{
				int LA216_1 = input.LA(2);
				if ( (LA216_1==CHARACTER_SYM) ) {
					alt216=1;
				}
				else if ( (LA216_1==COLLATE_SYM) ) {
					alt216=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 216, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CHARACTER_SYM:
				{
				alt216=1;
				}
				break;
			case COLLATE_SYM:
				{
				alt216=2;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 216, 0, input);
				throw nvae;
			}
			switch (alt216) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1851:3: ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1851:3: ( DEFAULT )?
					int alt212=2;
					int LA212_0 = input.LA(1);
					if ( (LA212_0==DEFAULT) ) {
						alt212=1;
					}
					switch (alt212) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1851:4: DEFAULT
							{
							DEFAULT681=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_alter_database_specification26511); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT681_tree = (Object)adaptor.create(DEFAULT681);
							adaptor.addChild(root_0, DEFAULT681_tree);
							}

							}
							break;

					}

					CHARACTER_SYM682=(Token)match(input,CHARACTER_SYM,FOLLOW_CHARACTER_SYM_in_alter_database_specification26515); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CHARACTER_SYM682_tree = (Object)adaptor.create(CHARACTER_SYM682);
					adaptor.addChild(root_0, CHARACTER_SYM682_tree);
					}

					SET_SYM683=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_alter_database_specification26517); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SET_SYM683_tree = (Object)adaptor.create(SET_SYM683);
					adaptor.addChild(root_0, SET_SYM683_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1851:36: ( EQ_SYM )?
					int alt213=2;
					int LA213_0 = input.LA(1);
					if ( (LA213_0==EQ_SYM) ) {
						alt213=1;
					}
					switch (alt213) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1851:37: EQ_SYM
							{
							EQ_SYM684=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_alter_database_specification26520); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM684_tree = (Object)adaptor.create(EQ_SYM684);
							adaptor.addChild(root_0, EQ_SYM684_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_charset_name_in_alter_database_specification26524);
					charset_name685=charset_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, charset_name685.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1853:3: ( DEFAULT )? COLLATE_SYM ( EQ_SYM )? collation_names
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1853:3: ( DEFAULT )?
					int alt214=2;
					int LA214_0 = input.LA(1);
					if ( (LA214_0==DEFAULT) ) {
						alt214=1;
					}
					switch (alt214) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1853:4: DEFAULT
							{
							DEFAULT686=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_alter_database_specification26534); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT686_tree = (Object)adaptor.create(DEFAULT686);
							adaptor.addChild(root_0, DEFAULT686_tree);
							}

							}
							break;

					}

					COLLATE_SYM687=(Token)match(input,COLLATE_SYM,FOLLOW_COLLATE_SYM_in_alter_database_specification26538); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COLLATE_SYM687_tree = (Object)adaptor.create(COLLATE_SYM687);
					adaptor.addChild(root_0, COLLATE_SYM687_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1853:26: ( EQ_SYM )?
					int alt215=2;
					int LA215_0 = input.LA(1);
					if ( (LA215_0==EQ_SYM) ) {
						alt215=1;
					}
					switch (alt215) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1853:27: EQ_SYM
							{
							EQ_SYM688=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_alter_database_specification26541); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM688_tree = (Object)adaptor.create(EQ_SYM688);
							adaptor.addChild(root_0, EQ_SYM688_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_collation_names_in_alter_database_specification26545);
					collation_names689=collation_names();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, collation_names689.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_database_specification"


	public static class drop_database_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "drop_database_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1859:1: drop_database_statement : DROP ( DATABASE | SCHEMA ) ( IF EXISTS )? schema_name ;
	public final SQLParser.drop_database_statement_return drop_database_statement() throws RecognitionException {
		SQLParser.drop_database_statement_return retval = new SQLParser.drop_database_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token DROP690=null;
		Token set691=null;
		Token IF692=null;
		Token EXISTS693=null;
		ParserRuleReturnScope schema_name694 =null;

		Object DROP690_tree=null;
		Object set691_tree=null;
		Object IF692_tree=null;
		Object EXISTS693_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1859:24: ( DROP ( DATABASE | SCHEMA ) ( IF EXISTS )? schema_name )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1860:3: DROP ( DATABASE | SCHEMA ) ( IF EXISTS )? schema_name
			{
			root_0 = (Object)adaptor.nil();


			DROP690=(Token)match(input,DROP,FOLLOW_DROP_in_drop_database_statement26558); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			DROP690_tree = (Object)adaptor.create(DROP690);
			adaptor.addChild(root_0, DROP690_tree);
			}

			set691=input.LT(1);
			if ( input.LA(1)==DATABASE||input.LA(1)==SCHEMA ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set691));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1860:28: ( IF EXISTS )?
			int alt217=2;
			int LA217_0 = input.LA(1);
			if ( (LA217_0==IF) ) {
				alt217=1;
			}
			switch (alt217) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1860:29: IF EXISTS
					{
					IF692=(Token)match(input,IF,FOLLOW_IF_in_drop_database_statement26569); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IF692_tree = (Object)adaptor.create(IF692);
					adaptor.addChild(root_0, IF692_tree);
					}

					EXISTS693=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_drop_database_statement26571); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EXISTS693_tree = (Object)adaptor.create(EXISTS693);
					adaptor.addChild(root_0, EXISTS693_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_schema_name_in_drop_database_statement26575);
			schema_name694=schema_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, schema_name694.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_database_statement"


	public static class create_event_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "create_event_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1869:1: create_event_statement : CREATE ( DEFINER EQ_SYM ( user_name | CURRENT_USER ) )? EVENT_SYM ( IF NOT_SYM EXISTS )? event_name ON SCHEDULE_SYM schedule_definition ( ON COMPLETION_SYM ( NOT_SYM )? PRESERVE_SYM )? ( ENABLE_SYM | DISABLE_SYM | ( DISABLE_SYM ON SLAVE ) )? ( COMMENT_SYM TEXT_STRING )? do_statement ;
	public final SQLParser.create_event_statement_return create_event_statement() throws RecognitionException {
		SQLParser.create_event_statement_return retval = new SQLParser.create_event_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token CREATE695=null;
		Token DEFINER696=null;
		Token EQ_SYM697=null;
		Token CURRENT_USER699=null;
		Token EVENT_SYM700=null;
		Token IF701=null;
		Token NOT_SYM702=null;
		Token EXISTS703=null;
		Token ON705=null;
		Token SCHEDULE_SYM706=null;
		Token ON708=null;
		Token COMPLETION_SYM709=null;
		Token NOT_SYM710=null;
		Token PRESERVE_SYM711=null;
		Token ENABLE_SYM712=null;
		Token DISABLE_SYM713=null;
		Token DISABLE_SYM714=null;
		Token ON715=null;
		Token SLAVE716=null;
		Token COMMENT_SYM717=null;
		Token TEXT_STRING718=null;
		ParserRuleReturnScope user_name698 =null;
		ParserRuleReturnScope event_name704 =null;
		ParserRuleReturnScope schedule_definition707 =null;
		ParserRuleReturnScope do_statement719 =null;

		Object CREATE695_tree=null;
		Object DEFINER696_tree=null;
		Object EQ_SYM697_tree=null;
		Object CURRENT_USER699_tree=null;
		Object EVENT_SYM700_tree=null;
		Object IF701_tree=null;
		Object NOT_SYM702_tree=null;
		Object EXISTS703_tree=null;
		Object ON705_tree=null;
		Object SCHEDULE_SYM706_tree=null;
		Object ON708_tree=null;
		Object COMPLETION_SYM709_tree=null;
		Object NOT_SYM710_tree=null;
		Object PRESERVE_SYM711_tree=null;
		Object ENABLE_SYM712_tree=null;
		Object DISABLE_SYM713_tree=null;
		Object DISABLE_SYM714_tree=null;
		Object ON715_tree=null;
		Object SLAVE716_tree=null;
		Object COMMENT_SYM717_tree=null;
		Object TEXT_STRING718_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1869:23: ( CREATE ( DEFINER EQ_SYM ( user_name | CURRENT_USER ) )? EVENT_SYM ( IF NOT_SYM EXISTS )? event_name ON SCHEDULE_SYM schedule_definition ( ON COMPLETION_SYM ( NOT_SYM )? PRESERVE_SYM )? ( ENABLE_SYM | DISABLE_SYM | ( DISABLE_SYM ON SLAVE ) )? ( COMMENT_SYM TEXT_STRING )? do_statement )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1870:3: CREATE ( DEFINER EQ_SYM ( user_name | CURRENT_USER ) )? EVENT_SYM ( IF NOT_SYM EXISTS )? event_name ON SCHEDULE_SYM schedule_definition ( ON COMPLETION_SYM ( NOT_SYM )? PRESERVE_SYM )? ( ENABLE_SYM | DISABLE_SYM | ( DISABLE_SYM ON SLAVE ) )? ( COMMENT_SYM TEXT_STRING )? do_statement
			{
			root_0 = (Object)adaptor.nil();


			CREATE695=(Token)match(input,CREATE,FOLLOW_CREATE_in_create_event_statement26591); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			CREATE695_tree = (Object)adaptor.create(CREATE695);
			adaptor.addChild(root_0, CREATE695_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1871:3: ( DEFINER EQ_SYM ( user_name | CURRENT_USER ) )?
			int alt219=2;
			int LA219_0 = input.LA(1);
			if ( (LA219_0==DEFINER) ) {
				alt219=1;
			}
			switch (alt219) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1871:4: DEFINER EQ_SYM ( user_name | CURRENT_USER )
					{
					DEFINER696=(Token)match(input,DEFINER,FOLLOW_DEFINER_in_create_event_statement26596); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DEFINER696_tree = (Object)adaptor.create(DEFINER696);
					adaptor.addChild(root_0, DEFINER696_tree);
					}

					EQ_SYM697=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_create_event_statement26598); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EQ_SYM697_tree = (Object)adaptor.create(EQ_SYM697);
					adaptor.addChild(root_0, EQ_SYM697_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1871:19: ( user_name | CURRENT_USER )
					int alt218=2;
					int LA218_0 = input.LA(1);
					if ( (LA218_0==ID) ) {
						alt218=1;
					}
					else if ( (LA218_0==CURRENT_USER) ) {
						alt218=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 218, 0, input);
						throw nvae;
					}

					switch (alt218) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1871:21: user_name
							{
							pushFollow(FOLLOW_user_name_in_create_event_statement26602);
							user_name698=user_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, user_name698.getTree());

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1871:33: CURRENT_USER
							{
							CURRENT_USER699=(Token)match(input,CURRENT_USER,FOLLOW_CURRENT_USER_in_create_event_statement26606); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CURRENT_USER699_tree = (Object)adaptor.create(CURRENT_USER699);
							adaptor.addChild(root_0, CURRENT_USER699_tree);
							}

							}
							break;

					}

					}
					break;

			}

			EVENT_SYM700=(Token)match(input,EVENT_SYM,FOLLOW_EVENT_SYM_in_create_event_statement26614); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			EVENT_SYM700_tree = (Object)adaptor.create(EVENT_SYM700);
			adaptor.addChild(root_0, EVENT_SYM700_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1873:3: ( IF NOT_SYM EXISTS )?
			int alt220=2;
			int LA220_0 = input.LA(1);
			if ( (LA220_0==IF) ) {
				alt220=1;
			}
			switch (alt220) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1873:4: IF NOT_SYM EXISTS
					{
					IF701=(Token)match(input,IF,FOLLOW_IF_in_create_event_statement26619); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IF701_tree = (Object)adaptor.create(IF701);
					adaptor.addChild(root_0, IF701_tree);
					}

					NOT_SYM702=(Token)match(input,NOT_SYM,FOLLOW_NOT_SYM_in_create_event_statement26621); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					NOT_SYM702_tree = (Object)adaptor.create(NOT_SYM702);
					adaptor.addChild(root_0, NOT_SYM702_tree);
					}

					EXISTS703=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_create_event_statement26623); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EXISTS703_tree = (Object)adaptor.create(EXISTS703);
					adaptor.addChild(root_0, EXISTS703_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_event_name_in_create_event_statement26629);
			event_name704=event_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, event_name704.getTree());

			ON705=(Token)match(input,ON,FOLLOW_ON_in_create_event_statement26633); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			ON705_tree = (Object)adaptor.create(ON705);
			adaptor.addChild(root_0, ON705_tree);
			}

			SCHEDULE_SYM706=(Token)match(input,SCHEDULE_SYM,FOLLOW_SCHEDULE_SYM_in_create_event_statement26635); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			SCHEDULE_SYM706_tree = (Object)adaptor.create(SCHEDULE_SYM706);
			adaptor.addChild(root_0, SCHEDULE_SYM706_tree);
			}

			pushFollow(FOLLOW_schedule_definition_in_create_event_statement26637);
			schedule_definition707=schedule_definition();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, schedule_definition707.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1876:3: ( ON COMPLETION_SYM ( NOT_SYM )? PRESERVE_SYM )?
			int alt222=2;
			int LA222_0 = input.LA(1);
			if ( (LA222_0==ON) ) {
				alt222=1;
			}
			switch (alt222) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1876:4: ON COMPLETION_SYM ( NOT_SYM )? PRESERVE_SYM
					{
					ON708=(Token)match(input,ON,FOLLOW_ON_in_create_event_statement26642); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ON708_tree = (Object)adaptor.create(ON708);
					adaptor.addChild(root_0, ON708_tree);
					}

					COMPLETION_SYM709=(Token)match(input,COMPLETION_SYM,FOLLOW_COMPLETION_SYM_in_create_event_statement26644); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMPLETION_SYM709_tree = (Object)adaptor.create(COMPLETION_SYM709);
					adaptor.addChild(root_0, COMPLETION_SYM709_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1876:22: ( NOT_SYM )?
					int alt221=2;
					int LA221_0 = input.LA(1);
					if ( (LA221_0==NOT_SYM) ) {
						alt221=1;
					}
					switch (alt221) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1876:23: NOT_SYM
							{
							NOT_SYM710=(Token)match(input,NOT_SYM,FOLLOW_NOT_SYM_in_create_event_statement26647); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							NOT_SYM710_tree = (Object)adaptor.create(NOT_SYM710);
							adaptor.addChild(root_0, NOT_SYM710_tree);
							}

							}
							break;

					}

					PRESERVE_SYM711=(Token)match(input,PRESERVE_SYM,FOLLOW_PRESERVE_SYM_in_create_event_statement26651); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PRESERVE_SYM711_tree = (Object)adaptor.create(PRESERVE_SYM711);
					adaptor.addChild(root_0, PRESERVE_SYM711_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1877:3: ( ENABLE_SYM | DISABLE_SYM | ( DISABLE_SYM ON SLAVE ) )?
			int alt223=4;
			int LA223_0 = input.LA(1);
			if ( (LA223_0==ENABLE_SYM) ) {
				alt223=1;
			}
			else if ( (LA223_0==DISABLE_SYM) ) {
				int LA223_2 = input.LA(2);
				if ( (LA223_2==ON) ) {
					alt223=3;
				}
				else if ( (LA223_2==COMMENT_SYM||LA223_2==DO_SYM) ) {
					alt223=2;
				}
			}
			switch (alt223) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1877:5: ENABLE_SYM
					{
					ENABLE_SYM712=(Token)match(input,ENABLE_SYM,FOLLOW_ENABLE_SYM_in_create_event_statement26659); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ENABLE_SYM712_tree = (Object)adaptor.create(ENABLE_SYM712);
					adaptor.addChild(root_0, ENABLE_SYM712_tree);
					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1877:18: DISABLE_SYM
					{
					DISABLE_SYM713=(Token)match(input,DISABLE_SYM,FOLLOW_DISABLE_SYM_in_create_event_statement26663); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DISABLE_SYM713_tree = (Object)adaptor.create(DISABLE_SYM713);
					adaptor.addChild(root_0, DISABLE_SYM713_tree);
					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1877:32: ( DISABLE_SYM ON SLAVE )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1877:32: ( DISABLE_SYM ON SLAVE )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1877:33: DISABLE_SYM ON SLAVE
					{
					DISABLE_SYM714=(Token)match(input,DISABLE_SYM,FOLLOW_DISABLE_SYM_in_create_event_statement26668); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DISABLE_SYM714_tree = (Object)adaptor.create(DISABLE_SYM714);
					adaptor.addChild(root_0, DISABLE_SYM714_tree);
					}

					ON715=(Token)match(input,ON,FOLLOW_ON_in_create_event_statement26670); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ON715_tree = (Object)adaptor.create(ON715);
					adaptor.addChild(root_0, ON715_tree);
					}

					SLAVE716=(Token)match(input,SLAVE,FOLLOW_SLAVE_in_create_event_statement26672); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SLAVE716_tree = (Object)adaptor.create(SLAVE716);
					adaptor.addChild(root_0, SLAVE716_tree);
					}

					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1878:3: ( COMMENT_SYM TEXT_STRING )?
			int alt224=2;
			int LA224_0 = input.LA(1);
			if ( (LA224_0==COMMENT_SYM) ) {
				alt224=1;
			}
			switch (alt224) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1878:4: COMMENT_SYM TEXT_STRING
					{
					COMMENT_SYM717=(Token)match(input,COMMENT_SYM,FOLLOW_COMMENT_SYM_in_create_event_statement26681); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMENT_SYM717_tree = (Object)adaptor.create(COMMENT_SYM717);
					adaptor.addChild(root_0, COMMENT_SYM717_tree);
					}

					TEXT_STRING718=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_create_event_statement26683); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING718_tree = (Object)adaptor.create(TEXT_STRING718);
					adaptor.addChild(root_0, TEXT_STRING718_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_do_statement_in_create_event_statement26689);
			do_statement719=do_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, do_statement719.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_event_statement"


	public static class schedule_definition_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "schedule_definition"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1881:1: schedule_definition : ( ( AT_SYM timestamp ( PLUS INTERVAL_SYM interval )* ) | ( EVERY_SYM interval ) ( STARTS_SYM timestamp ( PLUS INTERVAL_SYM interval )* )? ( ENDS_SYM timestamp ( PLUS INTERVAL_SYM interval )* )? );
	public final SQLParser.schedule_definition_return schedule_definition() throws RecognitionException {
		SQLParser.schedule_definition_return retval = new SQLParser.schedule_definition_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token AT_SYM720=null;
		Token PLUS722=null;
		Token INTERVAL_SYM723=null;
		Token EVERY_SYM725=null;
		Token STARTS_SYM727=null;
		Token PLUS729=null;
		Token INTERVAL_SYM730=null;
		Token ENDS_SYM732=null;
		Token PLUS734=null;
		Token INTERVAL_SYM735=null;
		ParserRuleReturnScope timestamp721 =null;
		ParserRuleReturnScope interval724 =null;
		ParserRuleReturnScope interval726 =null;
		ParserRuleReturnScope timestamp728 =null;
		ParserRuleReturnScope interval731 =null;
		ParserRuleReturnScope timestamp733 =null;
		ParserRuleReturnScope interval736 =null;

		Object AT_SYM720_tree=null;
		Object PLUS722_tree=null;
		Object INTERVAL_SYM723_tree=null;
		Object EVERY_SYM725_tree=null;
		Object STARTS_SYM727_tree=null;
		Object PLUS729_tree=null;
		Object INTERVAL_SYM730_tree=null;
		Object ENDS_SYM732_tree=null;
		Object PLUS734_tree=null;
		Object INTERVAL_SYM735_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1881:20: ( ( AT_SYM timestamp ( PLUS INTERVAL_SYM interval )* ) | ( EVERY_SYM interval ) ( STARTS_SYM timestamp ( PLUS INTERVAL_SYM interval )* )? ( ENDS_SYM timestamp ( PLUS INTERVAL_SYM interval )* )? )
			int alt230=2;
			int LA230_0 = input.LA(1);
			if ( (LA230_0==AT_SYM) ) {
				alt230=1;
			}
			else if ( (LA230_0==EVERY_SYM) ) {
				alt230=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 230, 0, input);
				throw nvae;
			}

			switch (alt230) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1882:3: ( AT_SYM timestamp ( PLUS INTERVAL_SYM interval )* )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1882:3: ( AT_SYM timestamp ( PLUS INTERVAL_SYM interval )* )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1882:5: AT_SYM timestamp ( PLUS INTERVAL_SYM interval )*
					{
					AT_SYM720=(Token)match(input,AT_SYM,FOLLOW_AT_SYM_in_schedule_definition26700); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					AT_SYM720_tree = (Object)adaptor.create(AT_SYM720);
					adaptor.addChild(root_0, AT_SYM720_tree);
					}

					pushFollow(FOLLOW_timestamp_in_schedule_definition26702);
					timestamp721=timestamp();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, timestamp721.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1882:22: ( PLUS INTERVAL_SYM interval )*
					loop225:
					while (true) {
						int alt225=2;
						int LA225_0 = input.LA(1);
						if ( (LA225_0==PLUS) ) {
							alt225=1;
						}

						switch (alt225) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1882:23: PLUS INTERVAL_SYM interval
							{
							PLUS722=(Token)match(input,PLUS,FOLLOW_PLUS_in_schedule_definition26705); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							PLUS722_tree = (Object)adaptor.create(PLUS722);
							adaptor.addChild(root_0, PLUS722_tree);
							}

							INTERVAL_SYM723=(Token)match(input,INTERVAL_SYM,FOLLOW_INTERVAL_SYM_in_schedule_definition26707); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							INTERVAL_SYM723_tree = (Object)adaptor.create(INTERVAL_SYM723);
							adaptor.addChild(root_0, INTERVAL_SYM723_tree);
							}

							pushFollow(FOLLOW_interval_in_schedule_definition26709);
							interval724=interval();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, interval724.getTree());

							}
							break;

						default :
							break loop225;
						}
					}

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1884:3: ( EVERY_SYM interval ) ( STARTS_SYM timestamp ( PLUS INTERVAL_SYM interval )* )? ( ENDS_SYM timestamp ( PLUS INTERVAL_SYM interval )* )?
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1884:3: ( EVERY_SYM interval )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1884:5: EVERY_SYM interval
					{
					EVERY_SYM725=(Token)match(input,EVERY_SYM,FOLLOW_EVERY_SYM_in_schedule_definition26724); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EVERY_SYM725_tree = (Object)adaptor.create(EVERY_SYM725);
					adaptor.addChild(root_0, EVERY_SYM725_tree);
					}

					pushFollow(FOLLOW_interval_in_schedule_definition26726);
					interval726=interval();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, interval726.getTree());

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1885:3: ( STARTS_SYM timestamp ( PLUS INTERVAL_SYM interval )* )?
					int alt227=2;
					int LA227_0 = input.LA(1);
					if ( (LA227_0==STARTS_SYM) ) {
						alt227=1;
					}
					switch (alt227) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1885:5: STARTS_SYM timestamp ( PLUS INTERVAL_SYM interval )*
							{
							STARTS_SYM727=(Token)match(input,STARTS_SYM,FOLLOW_STARTS_SYM_in_schedule_definition26734); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							STARTS_SYM727_tree = (Object)adaptor.create(STARTS_SYM727);
							adaptor.addChild(root_0, STARTS_SYM727_tree);
							}

							pushFollow(FOLLOW_timestamp_in_schedule_definition26736);
							timestamp728=timestamp();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, timestamp728.getTree());

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1885:26: ( PLUS INTERVAL_SYM interval )*
							loop226:
							while (true) {
								int alt226=2;
								int LA226_0 = input.LA(1);
								if ( (LA226_0==PLUS) ) {
									alt226=1;
								}

								switch (alt226) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1885:27: PLUS INTERVAL_SYM interval
									{
									PLUS729=(Token)match(input,PLUS,FOLLOW_PLUS_in_schedule_definition26739); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									PLUS729_tree = (Object)adaptor.create(PLUS729);
									adaptor.addChild(root_0, PLUS729_tree);
									}

									INTERVAL_SYM730=(Token)match(input,INTERVAL_SYM,FOLLOW_INTERVAL_SYM_in_schedule_definition26741); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									INTERVAL_SYM730_tree = (Object)adaptor.create(INTERVAL_SYM730);
									adaptor.addChild(root_0, INTERVAL_SYM730_tree);
									}

									pushFollow(FOLLOW_interval_in_schedule_definition26743);
									interval731=interval();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, interval731.getTree());

									}
									break;

								default :
									break loop226;
								}
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1886:3: ( ENDS_SYM timestamp ( PLUS INTERVAL_SYM interval )* )?
					int alt229=2;
					int LA229_0 = input.LA(1);
					if ( (LA229_0==ENDS_SYM) ) {
						alt229=1;
					}
					switch (alt229) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1886:5: ENDS_SYM timestamp ( PLUS INTERVAL_SYM interval )*
							{
							ENDS_SYM732=(Token)match(input,ENDS_SYM,FOLLOW_ENDS_SYM_in_schedule_definition26754); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ENDS_SYM732_tree = (Object)adaptor.create(ENDS_SYM732);
							adaptor.addChild(root_0, ENDS_SYM732_tree);
							}

							pushFollow(FOLLOW_timestamp_in_schedule_definition26756);
							timestamp733=timestamp();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, timestamp733.getTree());

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1886:24: ( PLUS INTERVAL_SYM interval )*
							loop228:
							while (true) {
								int alt228=2;
								int LA228_0 = input.LA(1);
								if ( (LA228_0==PLUS) ) {
									alt228=1;
								}

								switch (alt228) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1886:25: PLUS INTERVAL_SYM interval
									{
									PLUS734=(Token)match(input,PLUS,FOLLOW_PLUS_in_schedule_definition26759); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									PLUS734_tree = (Object)adaptor.create(PLUS734);
									adaptor.addChild(root_0, PLUS734_tree);
									}

									INTERVAL_SYM735=(Token)match(input,INTERVAL_SYM,FOLLOW_INTERVAL_SYM_in_schedule_definition26761); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									INTERVAL_SYM735_tree = (Object)adaptor.create(INTERVAL_SYM735);
									adaptor.addChild(root_0, INTERVAL_SYM735_tree);
									}

									pushFollow(FOLLOW_interval_in_schedule_definition26763);
									interval736=interval();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, interval736.getTree());

									}
									break;

								default :
									break loop228;
								}
							}

							}
							break;

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "schedule_definition"


	public static class interval_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "interval"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1888:1: interval : INTEGER_NUM ( YEAR | QUARTER | MONTH | DAY_SYM | HOUR | MINUTE | WEEK | SECOND | YEAR_MONTH | DAY_HOUR | DAY_MINUTE | DAY_SECOND | HOUR_MINUTE | HOUR_SECOND | MINUTE_SECOND ) ;
	public final SQLParser.interval_return interval() throws RecognitionException {
		SQLParser.interval_return retval = new SQLParser.interval_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token INTEGER_NUM737=null;
		Token set738=null;

		Object INTEGER_NUM737_tree=null;
		Object set738_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1888:9: ( INTEGER_NUM ( YEAR | QUARTER | MONTH | DAY_SYM | HOUR | MINUTE | WEEK | SECOND | YEAR_MONTH | DAY_HOUR | DAY_MINUTE | DAY_SECOND | HOUR_MINUTE | HOUR_SECOND | MINUTE_SECOND ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1889:3: INTEGER_NUM ( YEAR | QUARTER | MONTH | DAY_SYM | HOUR | MINUTE | WEEK | SECOND | YEAR_MONTH | DAY_HOUR | DAY_MINUTE | DAY_SECOND | HOUR_MINUTE | HOUR_SECOND | MINUTE_SECOND )
			{
			root_0 = (Object)adaptor.nil();


			INTEGER_NUM737=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_interval26777); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			INTEGER_NUM737_tree = (Object)adaptor.create(INTEGER_NUM737);
			adaptor.addChild(root_0, INTEGER_NUM737_tree);
			}

			set738=input.LT(1);
			if ( input.LA(1)==DAY_HOUR||(input.LA(1) >= DAY_MINUTE && input.LA(1) <= DAY_SYM)||input.LA(1)==HOUR||(input.LA(1) >= HOUR_MINUTE && input.LA(1) <= HOUR_SECOND)||input.LA(1)==MINUTE||input.LA(1)==MINUTE_SECOND||input.LA(1)==MONTH||input.LA(1)==QUARTER||input.LA(1)==SECOND||input.LA(1)==WEEK||input.LA(1)==YEAR||input.LA(1)==YEAR_MONTH ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set738));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "interval"


	public static class timestamp_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "timestamp"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1894:1: timestamp : CURRENT_TIMESTAMP ;
	public final SQLParser.timestamp_return timestamp() throws RecognitionException {
		SQLParser.timestamp_return retval = new SQLParser.timestamp_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token CURRENT_TIMESTAMP739=null;

		Object CURRENT_TIMESTAMP739_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1894:10: ( CURRENT_TIMESTAMP )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1895:3: CURRENT_TIMESTAMP
			{
			root_0 = (Object)adaptor.nil();


			CURRENT_TIMESTAMP739=(Token)match(input,CURRENT_TIMESTAMP,FOLLOW_CURRENT_TIMESTAMP_in_timestamp26871); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			CURRENT_TIMESTAMP739_tree = (Object)adaptor.create(CURRENT_TIMESTAMP739);
			adaptor.addChild(root_0, CURRENT_TIMESTAMP739_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "timestamp"


	public static class alter_event_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "alter_event_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1902:1: alter_event_statement : ALTER ( DEFINER EQ_SYM ( user_name | CURRENT_USER ) )? EVENT_SYM event_name ( ON SCHEDULE_SYM schedule_definition )? ( ON COMPLETION_SYM ( NOT_SYM )? PRESERVE_SYM )? ( RENAME TO_SYM event_name )? ( ENABLE_SYM | DISABLE_SYM | ( DISABLE_SYM ON SLAVE ) )? ( COMMENT_SYM TEXT_STRING )? ( do_statement )? ;
	public final SQLParser.alter_event_statement_return alter_event_statement() throws RecognitionException {
		SQLParser.alter_event_statement_return retval = new SQLParser.alter_event_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token ALTER740=null;
		Token DEFINER741=null;
		Token EQ_SYM742=null;
		Token CURRENT_USER744=null;
		Token EVENT_SYM745=null;
		Token ON747=null;
		Token SCHEDULE_SYM748=null;
		Token ON750=null;
		Token COMPLETION_SYM751=null;
		Token NOT_SYM752=null;
		Token PRESERVE_SYM753=null;
		Token RENAME754=null;
		Token TO_SYM755=null;
		Token ENABLE_SYM757=null;
		Token DISABLE_SYM758=null;
		Token DISABLE_SYM759=null;
		Token ON760=null;
		Token SLAVE761=null;
		Token COMMENT_SYM762=null;
		Token TEXT_STRING763=null;
		ParserRuleReturnScope user_name743 =null;
		ParserRuleReturnScope event_name746 =null;
		ParserRuleReturnScope schedule_definition749 =null;
		ParserRuleReturnScope event_name756 =null;
		ParserRuleReturnScope do_statement764 =null;

		Object ALTER740_tree=null;
		Object DEFINER741_tree=null;
		Object EQ_SYM742_tree=null;
		Object CURRENT_USER744_tree=null;
		Object EVENT_SYM745_tree=null;
		Object ON747_tree=null;
		Object SCHEDULE_SYM748_tree=null;
		Object ON750_tree=null;
		Object COMPLETION_SYM751_tree=null;
		Object NOT_SYM752_tree=null;
		Object PRESERVE_SYM753_tree=null;
		Object RENAME754_tree=null;
		Object TO_SYM755_tree=null;
		Object ENABLE_SYM757_tree=null;
		Object DISABLE_SYM758_tree=null;
		Object DISABLE_SYM759_tree=null;
		Object ON760_tree=null;
		Object SLAVE761_tree=null;
		Object COMMENT_SYM762_tree=null;
		Object TEXT_STRING763_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1902:22: ( ALTER ( DEFINER EQ_SYM ( user_name | CURRENT_USER ) )? EVENT_SYM event_name ( ON SCHEDULE_SYM schedule_definition )? ( ON COMPLETION_SYM ( NOT_SYM )? PRESERVE_SYM )? ( RENAME TO_SYM event_name )? ( ENABLE_SYM | DISABLE_SYM | ( DISABLE_SYM ON SLAVE ) )? ( COMMENT_SYM TEXT_STRING )? ( do_statement )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1903:3: ALTER ( DEFINER EQ_SYM ( user_name | CURRENT_USER ) )? EVENT_SYM event_name ( ON SCHEDULE_SYM schedule_definition )? ( ON COMPLETION_SYM ( NOT_SYM )? PRESERVE_SYM )? ( RENAME TO_SYM event_name )? ( ENABLE_SYM | DISABLE_SYM | ( DISABLE_SYM ON SLAVE ) )? ( COMMENT_SYM TEXT_STRING )? ( do_statement )?
			{
			root_0 = (Object)adaptor.nil();


			ALTER740=(Token)match(input,ALTER,FOLLOW_ALTER_in_alter_event_statement26890); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			ALTER740_tree = (Object)adaptor.create(ALTER740);
			adaptor.addChild(root_0, ALTER740_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1904:3: ( DEFINER EQ_SYM ( user_name | CURRENT_USER ) )?
			int alt232=2;
			int LA232_0 = input.LA(1);
			if ( (LA232_0==DEFINER) ) {
				alt232=1;
			}
			switch (alt232) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1904:4: DEFINER EQ_SYM ( user_name | CURRENT_USER )
					{
					DEFINER741=(Token)match(input,DEFINER,FOLLOW_DEFINER_in_alter_event_statement26895); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DEFINER741_tree = (Object)adaptor.create(DEFINER741);
					adaptor.addChild(root_0, DEFINER741_tree);
					}

					EQ_SYM742=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_alter_event_statement26897); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EQ_SYM742_tree = (Object)adaptor.create(EQ_SYM742);
					adaptor.addChild(root_0, EQ_SYM742_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1904:19: ( user_name | CURRENT_USER )
					int alt231=2;
					int LA231_0 = input.LA(1);
					if ( (LA231_0==ID) ) {
						alt231=1;
					}
					else if ( (LA231_0==CURRENT_USER) ) {
						alt231=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 231, 0, input);
						throw nvae;
					}

					switch (alt231) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1904:21: user_name
							{
							pushFollow(FOLLOW_user_name_in_alter_event_statement26901);
							user_name743=user_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, user_name743.getTree());

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1904:33: CURRENT_USER
							{
							CURRENT_USER744=(Token)match(input,CURRENT_USER,FOLLOW_CURRENT_USER_in_alter_event_statement26905); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CURRENT_USER744_tree = (Object)adaptor.create(CURRENT_USER744);
							adaptor.addChild(root_0, CURRENT_USER744_tree);
							}

							}
							break;

					}

					}
					break;

			}

			EVENT_SYM745=(Token)match(input,EVENT_SYM,FOLLOW_EVENT_SYM_in_alter_event_statement26913); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			EVENT_SYM745_tree = (Object)adaptor.create(EVENT_SYM745);
			adaptor.addChild(root_0, EVENT_SYM745_tree);
			}

			pushFollow(FOLLOW_event_name_in_alter_event_statement26915);
			event_name746=event_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, event_name746.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1906:3: ( ON SCHEDULE_SYM schedule_definition )?
			int alt233=2;
			int LA233_0 = input.LA(1);
			if ( (LA233_0==ON) ) {
				int LA233_1 = input.LA(2);
				if ( (LA233_1==SCHEDULE_SYM) ) {
					alt233=1;
				}
			}
			switch (alt233) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1906:4: ON SCHEDULE_SYM schedule_definition
					{
					ON747=(Token)match(input,ON,FOLLOW_ON_in_alter_event_statement26920); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ON747_tree = (Object)adaptor.create(ON747);
					adaptor.addChild(root_0, ON747_tree);
					}

					SCHEDULE_SYM748=(Token)match(input,SCHEDULE_SYM,FOLLOW_SCHEDULE_SYM_in_alter_event_statement26922); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SCHEDULE_SYM748_tree = (Object)adaptor.create(SCHEDULE_SYM748);
					adaptor.addChild(root_0, SCHEDULE_SYM748_tree);
					}

					pushFollow(FOLLOW_schedule_definition_in_alter_event_statement26924);
					schedule_definition749=schedule_definition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, schedule_definition749.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1907:3: ( ON COMPLETION_SYM ( NOT_SYM )? PRESERVE_SYM )?
			int alt235=2;
			int LA235_0 = input.LA(1);
			if ( (LA235_0==ON) ) {
				alt235=1;
			}
			switch (alt235) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1907:4: ON COMPLETION_SYM ( NOT_SYM )? PRESERVE_SYM
					{
					ON750=(Token)match(input,ON,FOLLOW_ON_in_alter_event_statement26931); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ON750_tree = (Object)adaptor.create(ON750);
					adaptor.addChild(root_0, ON750_tree);
					}

					COMPLETION_SYM751=(Token)match(input,COMPLETION_SYM,FOLLOW_COMPLETION_SYM_in_alter_event_statement26933); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMPLETION_SYM751_tree = (Object)adaptor.create(COMPLETION_SYM751);
					adaptor.addChild(root_0, COMPLETION_SYM751_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1907:22: ( NOT_SYM )?
					int alt234=2;
					int LA234_0 = input.LA(1);
					if ( (LA234_0==NOT_SYM) ) {
						alt234=1;
					}
					switch (alt234) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1907:23: NOT_SYM
							{
							NOT_SYM752=(Token)match(input,NOT_SYM,FOLLOW_NOT_SYM_in_alter_event_statement26936); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							NOT_SYM752_tree = (Object)adaptor.create(NOT_SYM752);
							adaptor.addChild(root_0, NOT_SYM752_tree);
							}

							}
							break;

					}

					PRESERVE_SYM753=(Token)match(input,PRESERVE_SYM,FOLLOW_PRESERVE_SYM_in_alter_event_statement26940); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PRESERVE_SYM753_tree = (Object)adaptor.create(PRESERVE_SYM753);
					adaptor.addChild(root_0, PRESERVE_SYM753_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1908:3: ( RENAME TO_SYM event_name )?
			int alt236=2;
			int LA236_0 = input.LA(1);
			if ( (LA236_0==RENAME) ) {
				alt236=1;
			}
			switch (alt236) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1908:4: RENAME TO_SYM event_name
					{
					RENAME754=(Token)match(input,RENAME,FOLLOW_RENAME_in_alter_event_statement26947); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RENAME754_tree = (Object)adaptor.create(RENAME754);
					adaptor.addChild(root_0, RENAME754_tree);
					}

					TO_SYM755=(Token)match(input,TO_SYM,FOLLOW_TO_SYM_in_alter_event_statement26949); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TO_SYM755_tree = (Object)adaptor.create(TO_SYM755);
					adaptor.addChild(root_0, TO_SYM755_tree);
					}

					pushFollow(FOLLOW_event_name_in_alter_event_statement26951);
					event_name756=event_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, event_name756.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1909:3: ( ENABLE_SYM | DISABLE_SYM | ( DISABLE_SYM ON SLAVE ) )?
			int alt237=4;
			int LA237_0 = input.LA(1);
			if ( (LA237_0==ENABLE_SYM) ) {
				alt237=1;
			}
			else if ( (LA237_0==DISABLE_SYM) ) {
				int LA237_2 = input.LA(2);
				if ( (LA237_2==ON) ) {
					alt237=3;
				}
				else if ( (LA237_2==EOF||(LA237_2 >= COMMA && LA237_2 <= COMMENT_SYM)||LA237_2==DO_SYM||LA237_2==SEMI) ) {
					alt237=2;
				}
			}
			switch (alt237) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1909:5: ENABLE_SYM
					{
					ENABLE_SYM757=(Token)match(input,ENABLE_SYM,FOLLOW_ENABLE_SYM_in_alter_event_statement26959); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ENABLE_SYM757_tree = (Object)adaptor.create(ENABLE_SYM757);
					adaptor.addChild(root_0, ENABLE_SYM757_tree);
					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1909:18: DISABLE_SYM
					{
					DISABLE_SYM758=(Token)match(input,DISABLE_SYM,FOLLOW_DISABLE_SYM_in_alter_event_statement26963); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DISABLE_SYM758_tree = (Object)adaptor.create(DISABLE_SYM758);
					adaptor.addChild(root_0, DISABLE_SYM758_tree);
					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1909:32: ( DISABLE_SYM ON SLAVE )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1909:32: ( DISABLE_SYM ON SLAVE )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1909:33: DISABLE_SYM ON SLAVE
					{
					DISABLE_SYM759=(Token)match(input,DISABLE_SYM,FOLLOW_DISABLE_SYM_in_alter_event_statement26968); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DISABLE_SYM759_tree = (Object)adaptor.create(DISABLE_SYM759);
					adaptor.addChild(root_0, DISABLE_SYM759_tree);
					}

					ON760=(Token)match(input,ON,FOLLOW_ON_in_alter_event_statement26970); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ON760_tree = (Object)adaptor.create(ON760);
					adaptor.addChild(root_0, ON760_tree);
					}

					SLAVE761=(Token)match(input,SLAVE,FOLLOW_SLAVE_in_alter_event_statement26972); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SLAVE761_tree = (Object)adaptor.create(SLAVE761);
					adaptor.addChild(root_0, SLAVE761_tree);
					}

					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1910:3: ( COMMENT_SYM TEXT_STRING )?
			int alt238=2;
			int LA238_0 = input.LA(1);
			if ( (LA238_0==COMMENT_SYM) ) {
				alt238=1;
			}
			switch (alt238) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1910:4: COMMENT_SYM TEXT_STRING
					{
					COMMENT_SYM762=(Token)match(input,COMMENT_SYM,FOLLOW_COMMENT_SYM_in_alter_event_statement26981); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMENT_SYM762_tree = (Object)adaptor.create(COMMENT_SYM762);
					adaptor.addChild(root_0, COMMENT_SYM762_tree);
					}

					TEXT_STRING763=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_alter_event_statement26983); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING763_tree = (Object)adaptor.create(TEXT_STRING763);
					adaptor.addChild(root_0, TEXT_STRING763_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1911:3: ( do_statement )?
			int alt239=2;
			int LA239_0 = input.LA(1);
			if ( (LA239_0==DO_SYM) ) {
				alt239=1;
			}
			switch (alt239) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1911:4: do_statement
					{
					pushFollow(FOLLOW_do_statement_in_alter_event_statement26990);
					do_statement764=do_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, do_statement764.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_event_statement"


	public static class drop_event_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "drop_event_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1916:1: drop_event_statement : DROP EVENT_SYM ( IF EXISTS )? event_name ;
	public final SQLParser.drop_event_statement_return drop_event_statement() throws RecognitionException {
		SQLParser.drop_event_statement_return retval = new SQLParser.drop_event_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token DROP765=null;
		Token EVENT_SYM766=null;
		Token IF767=null;
		Token EXISTS768=null;
		ParserRuleReturnScope event_name769 =null;

		Object DROP765_tree=null;
		Object EVENT_SYM766_tree=null;
		Object IF767_tree=null;
		Object EXISTS768_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1916:21: ( DROP EVENT_SYM ( IF EXISTS )? event_name )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1917:3: DROP EVENT_SYM ( IF EXISTS )? event_name
			{
			root_0 = (Object)adaptor.nil();


			DROP765=(Token)match(input,DROP,FOLLOW_DROP_in_drop_event_statement27004); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			DROP765_tree = (Object)adaptor.create(DROP765);
			adaptor.addChild(root_0, DROP765_tree);
			}

			EVENT_SYM766=(Token)match(input,EVENT_SYM,FOLLOW_EVENT_SYM_in_drop_event_statement27006); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			EVENT_SYM766_tree = (Object)adaptor.create(EVENT_SYM766);
			adaptor.addChild(root_0, EVENT_SYM766_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1917:18: ( IF EXISTS )?
			int alt240=2;
			int LA240_0 = input.LA(1);
			if ( (LA240_0==IF) ) {
				alt240=1;
			}
			switch (alt240) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1917:19: IF EXISTS
					{
					IF767=(Token)match(input,IF,FOLLOW_IF_in_drop_event_statement27009); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IF767_tree = (Object)adaptor.create(IF767);
					adaptor.addChild(root_0, IF767_tree);
					}

					EXISTS768=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_drop_event_statement27011); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EXISTS768_tree = (Object)adaptor.create(EXISTS768);
					adaptor.addChild(root_0, EXISTS768_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_event_name_in_drop_event_statement27015);
			event_name769=event_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, event_name769.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_event_statement"


	public static class create_index_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "create_index_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1953:1: create_index_statement : CREATE ( UNIQUE_SYM | FULLTEXT_SYM | SPATIAL_SYM )? INDEX_SYM index_name ( index_type )? ON table_name LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( algorithm_option | lock_option )* ;
	public final SQLParser.create_index_statement_return create_index_statement() throws RecognitionException {
		SQLParser.create_index_statement_return retval = new SQLParser.create_index_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token CREATE770=null;
		Token set771=null;
		Token INDEX_SYM772=null;
		Token ON775=null;
		Token LPAREN777=null;
		Token COMMA779=null;
		Token RPAREN781=null;
		ParserRuleReturnScope index_name773 =null;
		ParserRuleReturnScope index_type774 =null;
		ParserRuleReturnScope table_name776 =null;
		ParserRuleReturnScope index_column_name778 =null;
		ParserRuleReturnScope index_column_name780 =null;
		ParserRuleReturnScope algorithm_option782 =null;
		ParserRuleReturnScope lock_option783 =null;

		Object CREATE770_tree=null;
		Object set771_tree=null;
		Object INDEX_SYM772_tree=null;
		Object ON775_tree=null;
		Object LPAREN777_tree=null;
		Object COMMA779_tree=null;
		Object RPAREN781_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1953:23: ( CREATE ( UNIQUE_SYM | FULLTEXT_SYM | SPATIAL_SYM )? INDEX_SYM index_name ( index_type )? ON table_name LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( algorithm_option | lock_option )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1954:3: CREATE ( UNIQUE_SYM | FULLTEXT_SYM | SPATIAL_SYM )? INDEX_SYM index_name ( index_type )? ON table_name LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( algorithm_option | lock_option )*
			{
			root_0 = (Object)adaptor.nil();


			CREATE770=(Token)match(input,CREATE,FOLLOW_CREATE_in_create_index_statement27038); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			CREATE770_tree = (Object)adaptor.create(CREATE770);
			adaptor.addChild(root_0, CREATE770_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1954:10: ( UNIQUE_SYM | FULLTEXT_SYM | SPATIAL_SYM )?
			int alt241=2;
			int LA241_0 = input.LA(1);
			if ( (LA241_0==FULLTEXT_SYM||LA241_0==SPATIAL_SYM||LA241_0==UNIQUE_SYM) ) {
				alt241=1;
			}
			switch (alt241) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
					{
					set771=input.LT(1);
					if ( input.LA(1)==FULLTEXT_SYM||input.LA(1)==SPATIAL_SYM||input.LA(1)==UNIQUE_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set771));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			INDEX_SYM772=(Token)match(input,INDEX_SYM,FOLLOW_INDEX_SYM_in_create_index_statement27049); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			INDEX_SYM772_tree = (Object)adaptor.create(INDEX_SYM772);
			adaptor.addChild(root_0, INDEX_SYM772_tree);
			}

			pushFollow(FOLLOW_index_name_in_create_index_statement27051);
			index_name773=index_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, index_name773.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1955:3: ( index_type )?
			int alt242=2;
			int LA242_0 = input.LA(1);
			if ( (LA242_0==USING_SYM) ) {
				alt242=1;
			}
			switch (alt242) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1955:4: index_type
					{
					pushFollow(FOLLOW_index_type_in_create_index_statement27056);
					index_type774=index_type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_type774.getTree());

					}
					break;

			}

			ON775=(Token)match(input,ON,FOLLOW_ON_in_create_index_statement27062); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			ON775_tree = (Object)adaptor.create(ON775);
			adaptor.addChild(root_0, ON775_tree);
			}

			pushFollow(FOLLOW_table_name_in_create_index_statement27064);
			table_name776=table_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name776.getTree());

			LPAREN777=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_create_index_statement27066); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			LPAREN777_tree = (Object)adaptor.create(LPAREN777);
			adaptor.addChild(root_0, LPAREN777_tree);
			}

			pushFollow(FOLLOW_index_column_name_in_create_index_statement27068);
			index_column_name778=index_column_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name778.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1956:42: ( COMMA index_column_name )*
			loop243:
			while (true) {
				int alt243=2;
				int LA243_0 = input.LA(1);
				if ( (LA243_0==COMMA) ) {
					alt243=1;
				}

				switch (alt243) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1956:43: COMMA index_column_name
					{
					COMMA779=(Token)match(input,COMMA,FOLLOW_COMMA_in_create_index_statement27071); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA779_tree = (Object)adaptor.create(COMMA779);
					adaptor.addChild(root_0, COMMA779_tree);
					}

					pushFollow(FOLLOW_index_column_name_in_create_index_statement27073);
					index_column_name780=index_column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name780.getTree());

					}
					break;

				default :
					break loop243;
				}
			}

			RPAREN781=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_create_index_statement27077); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			RPAREN781_tree = (Object)adaptor.create(RPAREN781);
			adaptor.addChild(root_0, RPAREN781_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1957:3: ( algorithm_option | lock_option )*
			loop244:
			while (true) {
				int alt244=3;
				int LA244_0 = input.LA(1);
				if ( (LA244_0==ALGORITHM_SYM) ) {
					alt244=1;
				}
				else if ( (LA244_0==LOCK) ) {
					alt244=2;
				}

				switch (alt244) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1957:4: algorithm_option
					{
					pushFollow(FOLLOW_algorithm_option_in_create_index_statement27082);
					algorithm_option782=algorithm_option();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, algorithm_option782.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1957:23: lock_option
					{
					pushFollow(FOLLOW_lock_option_in_create_index_statement27086);
					lock_option783=lock_option();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, lock_option783.getTree());

					}
					break;

				default :
					break loop244;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_index_statement"


	public static class algorithm_option_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "algorithm_option"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1959:1: algorithm_option : ALGORITHM_SYM ( EQ_SYM )? ( DEFAULT | INPLACE_SYM | COPY_SYM ) ;
	public final SQLParser.algorithm_option_return algorithm_option() throws RecognitionException {
		SQLParser.algorithm_option_return retval = new SQLParser.algorithm_option_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token ALGORITHM_SYM784=null;
		Token EQ_SYM785=null;
		Token set786=null;

		Object ALGORITHM_SYM784_tree=null;
		Object EQ_SYM785_tree=null;
		Object set786_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1959:17: ( ALGORITHM_SYM ( EQ_SYM )? ( DEFAULT | INPLACE_SYM | COPY_SYM ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1960:3: ALGORITHM_SYM ( EQ_SYM )? ( DEFAULT | INPLACE_SYM | COPY_SYM )
			{
			root_0 = (Object)adaptor.nil();


			ALGORITHM_SYM784=(Token)match(input,ALGORITHM_SYM,FOLLOW_ALGORITHM_SYM_in_algorithm_option27097); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			ALGORITHM_SYM784_tree = (Object)adaptor.create(ALGORITHM_SYM784);
			adaptor.addChild(root_0, ALGORITHM_SYM784_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1960:17: ( EQ_SYM )?
			int alt245=2;
			int LA245_0 = input.LA(1);
			if ( (LA245_0==EQ_SYM) ) {
				alt245=1;
			}
			switch (alt245) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1960:18: EQ_SYM
					{
					EQ_SYM785=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_algorithm_option27100); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EQ_SYM785_tree = (Object)adaptor.create(EQ_SYM785);
					adaptor.addChild(root_0, EQ_SYM785_tree);
					}

					}
					break;

			}

			set786=input.LT(1);
			if ( input.LA(1)==COPY_SYM||input.LA(1)==DEFAULT||input.LA(1)==INPLACE_SYM ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set786));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "algorithm_option"


	public static class lock_option_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "lock_option"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1962:1: lock_option : LOCK ( EQ_SYM )? ( DEFAULT | NONE_SYM | SHARED_SYM | EXCLUSIVE_SYM ) ;
	public final SQLParser.lock_option_return lock_option() throws RecognitionException {
		SQLParser.lock_option_return retval = new SQLParser.lock_option_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token LOCK787=null;
		Token EQ_SYM788=null;
		Token set789=null;

		Object LOCK787_tree=null;
		Object EQ_SYM788_tree=null;
		Object set789_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1962:12: ( LOCK ( EQ_SYM )? ( DEFAULT | NONE_SYM | SHARED_SYM | EXCLUSIVE_SYM ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1963:3: LOCK ( EQ_SYM )? ( DEFAULT | NONE_SYM | SHARED_SYM | EXCLUSIVE_SYM )
			{
			root_0 = (Object)adaptor.nil();


			LOCK787=(Token)match(input,LOCK,FOLLOW_LOCK_in_lock_option27119); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			LOCK787_tree = (Object)adaptor.create(LOCK787);
			adaptor.addChild(root_0, LOCK787_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1963:8: ( EQ_SYM )?
			int alt246=2;
			int LA246_0 = input.LA(1);
			if ( (LA246_0==EQ_SYM) ) {
				alt246=1;
			}
			switch (alt246) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1963:9: EQ_SYM
					{
					EQ_SYM788=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_lock_option27122); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EQ_SYM788_tree = (Object)adaptor.create(EQ_SYM788);
					adaptor.addChild(root_0, EQ_SYM788_tree);
					}

					}
					break;

			}

			set789=input.LT(1);
			if ( input.LA(1)==DEFAULT||input.LA(1)==EXCLUSIVE_SYM||input.LA(1)==NONE_SYM||input.LA(1)==SHARED_SYM ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set789));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "lock_option"


	public static class drop_index_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "drop_index_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1968:1: drop_index_statement : DROP INDEX_SYM index_name ON table_name ( algorithm_option | lock_option )* ;
	public final SQLParser.drop_index_statement_return drop_index_statement() throws RecognitionException {
		SQLParser.drop_index_statement_return retval = new SQLParser.drop_index_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token DROP790=null;
		Token INDEX_SYM791=null;
		Token ON793=null;
		ParserRuleReturnScope index_name792 =null;
		ParserRuleReturnScope table_name794 =null;
		ParserRuleReturnScope algorithm_option795 =null;
		ParserRuleReturnScope lock_option796 =null;

		Object DROP790_tree=null;
		Object INDEX_SYM791_tree=null;
		Object ON793_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1968:21: ( DROP INDEX_SYM index_name ON table_name ( algorithm_option | lock_option )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1969:3: DROP INDEX_SYM index_name ON table_name ( algorithm_option | lock_option )*
			{
			root_0 = (Object)adaptor.nil();


			DROP790=(Token)match(input,DROP,FOLLOW_DROP_in_drop_index_statement27146); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			DROP790_tree = (Object)adaptor.create(DROP790);
			adaptor.addChild(root_0, DROP790_tree);
			}

			INDEX_SYM791=(Token)match(input,INDEX_SYM,FOLLOW_INDEX_SYM_in_drop_index_statement27148); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			INDEX_SYM791_tree = (Object)adaptor.create(INDEX_SYM791);
			adaptor.addChild(root_0, INDEX_SYM791_tree);
			}

			pushFollow(FOLLOW_index_name_in_drop_index_statement27150);
			index_name792=index_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, index_name792.getTree());

			ON793=(Token)match(input,ON,FOLLOW_ON_in_drop_index_statement27152); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			ON793_tree = (Object)adaptor.create(ON793);
			adaptor.addChild(root_0, ON793_tree);
			}

			pushFollow(FOLLOW_table_name_in_drop_index_statement27154);
			table_name794=table_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name794.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1970:3: ( algorithm_option | lock_option )*
			loop247:
			while (true) {
				int alt247=3;
				int LA247_0 = input.LA(1);
				if ( (LA247_0==ALGORITHM_SYM) ) {
					alt247=1;
				}
				else if ( (LA247_0==LOCK) ) {
					alt247=2;
				}

				switch (alt247) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1970:4: algorithm_option
					{
					pushFollow(FOLLOW_algorithm_option_in_drop_index_statement27159);
					algorithm_option795=algorithm_option();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, algorithm_option795.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1970:23: lock_option
					{
					pushFollow(FOLLOW_lock_option_in_drop_index_statement27163);
					lock_option796=lock_option();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, lock_option796.getTree());

					}
					break;

				default :
					break loop247;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_index_statement"


	public static class create_server_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "create_server_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2002:1: create_server_statement : CREATE SERVER_SYM server_name FOREIGN DATA_SYM WRAPPER_SYM wrapper_name OPTIONS_SYM LPAREN create_server_option ( COMMA create_server_option )* RPAREN ;
	public final SQLParser.create_server_statement_return create_server_statement() throws RecognitionException {
		SQLParser.create_server_statement_return retval = new SQLParser.create_server_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token CREATE797=null;
		Token SERVER_SYM798=null;
		Token FOREIGN800=null;
		Token DATA_SYM801=null;
		Token WRAPPER_SYM802=null;
		Token OPTIONS_SYM804=null;
		Token LPAREN805=null;
		Token COMMA807=null;
		Token RPAREN809=null;
		ParserRuleReturnScope server_name799 =null;
		ParserRuleReturnScope wrapper_name803 =null;
		ParserRuleReturnScope create_server_option806 =null;
		ParserRuleReturnScope create_server_option808 =null;

		Object CREATE797_tree=null;
		Object SERVER_SYM798_tree=null;
		Object FOREIGN800_tree=null;
		Object DATA_SYM801_tree=null;
		Object WRAPPER_SYM802_tree=null;
		Object OPTIONS_SYM804_tree=null;
		Object LPAREN805_tree=null;
		Object COMMA807_tree=null;
		Object RPAREN809_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2002:24: ( CREATE SERVER_SYM server_name FOREIGN DATA_SYM WRAPPER_SYM wrapper_name OPTIONS_SYM LPAREN create_server_option ( COMMA create_server_option )* RPAREN )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2003:3: CREATE SERVER_SYM server_name FOREIGN DATA_SYM WRAPPER_SYM wrapper_name OPTIONS_SYM LPAREN create_server_option ( COMMA create_server_option )* RPAREN
			{
			root_0 = (Object)adaptor.nil();


			CREATE797=(Token)match(input,CREATE,FOLLOW_CREATE_in_create_server_statement27190); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			CREATE797_tree = (Object)adaptor.create(CREATE797);
			adaptor.addChild(root_0, CREATE797_tree);
			}

			SERVER_SYM798=(Token)match(input,SERVER_SYM,FOLLOW_SERVER_SYM_in_create_server_statement27192); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			SERVER_SYM798_tree = (Object)adaptor.create(SERVER_SYM798);
			adaptor.addChild(root_0, SERVER_SYM798_tree);
			}

			pushFollow(FOLLOW_server_name_in_create_server_statement27194);
			server_name799=server_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, server_name799.getTree());

			FOREIGN800=(Token)match(input,FOREIGN,FOLLOW_FOREIGN_in_create_server_statement27198); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			FOREIGN800_tree = (Object)adaptor.create(FOREIGN800);
			adaptor.addChild(root_0, FOREIGN800_tree);
			}

			DATA_SYM801=(Token)match(input,DATA_SYM,FOLLOW_DATA_SYM_in_create_server_statement27200); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			DATA_SYM801_tree = (Object)adaptor.create(DATA_SYM801);
			adaptor.addChild(root_0, DATA_SYM801_tree);
			}

			WRAPPER_SYM802=(Token)match(input,WRAPPER_SYM,FOLLOW_WRAPPER_SYM_in_create_server_statement27202); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			WRAPPER_SYM802_tree = (Object)adaptor.create(WRAPPER_SYM802);
			adaptor.addChild(root_0, WRAPPER_SYM802_tree);
			}

			pushFollow(FOLLOW_wrapper_name_in_create_server_statement27204);
			wrapper_name803=wrapper_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, wrapper_name803.getTree());

			OPTIONS_SYM804=(Token)match(input,OPTIONS_SYM,FOLLOW_OPTIONS_SYM_in_create_server_statement27208); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			OPTIONS_SYM804_tree = (Object)adaptor.create(OPTIONS_SYM804);
			adaptor.addChild(root_0, OPTIONS_SYM804_tree);
			}

			LPAREN805=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_create_server_statement27210); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			LPAREN805_tree = (Object)adaptor.create(LPAREN805);
			adaptor.addChild(root_0, LPAREN805_tree);
			}

			pushFollow(FOLLOW_create_server_option_in_create_server_statement27212);
			create_server_option806=create_server_option();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, create_server_option806.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2005:43: ( COMMA create_server_option )*
			loop248:
			while (true) {
				int alt248=2;
				int LA248_0 = input.LA(1);
				if ( (LA248_0==COMMA) ) {
					alt248=1;
				}

				switch (alt248) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2005:44: COMMA create_server_option
					{
					COMMA807=(Token)match(input,COMMA,FOLLOW_COMMA_in_create_server_statement27215); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA807_tree = (Object)adaptor.create(COMMA807);
					adaptor.addChild(root_0, COMMA807_tree);
					}

					pushFollow(FOLLOW_create_server_option_in_create_server_statement27217);
					create_server_option808=create_server_option();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, create_server_option808.getTree());

					}
					break;

				default :
					break loop248;
				}
			}

			RPAREN809=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_create_server_statement27221); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			RPAREN809_tree = (Object)adaptor.create(RPAREN809);
			adaptor.addChild(root_0, RPAREN809_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_server_statement"


	public static class create_server_option_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "create_server_option"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2007:1: create_server_option : (| ( HOST_SYM string_literal ) | ( DATABASE string_literal ) | ( USER string_literal ) | ( PASSWORD string_literal ) | ( SOCKET_SYM string_literal ) | ( OWNER_SYM string_literal ) | ( PORT_SYM number_literal ) );
	public final SQLParser.create_server_option_return create_server_option() throws RecognitionException {
		SQLParser.create_server_option_return retval = new SQLParser.create_server_option_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token HOST_SYM810=null;
		Token DATABASE812=null;
		Token USER814=null;
		Token PASSWORD816=null;
		Token SOCKET_SYM818=null;
		Token OWNER_SYM820=null;
		Token PORT_SYM822=null;
		ParserRuleReturnScope string_literal811 =null;
		ParserRuleReturnScope string_literal813 =null;
		ParserRuleReturnScope string_literal815 =null;
		ParserRuleReturnScope string_literal817 =null;
		ParserRuleReturnScope string_literal819 =null;
		ParserRuleReturnScope string_literal821 =null;
		ParserRuleReturnScope number_literal823 =null;

		Object HOST_SYM810_tree=null;
		Object DATABASE812_tree=null;
		Object USER814_tree=null;
		Object PASSWORD816_tree=null;
		Object SOCKET_SYM818_tree=null;
		Object OWNER_SYM820_tree=null;
		Object PORT_SYM822_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2007:21: (| ( HOST_SYM string_literal ) | ( DATABASE string_literal ) | ( USER string_literal ) | ( PASSWORD string_literal ) | ( SOCKET_SYM string_literal ) | ( OWNER_SYM string_literal ) | ( PORT_SYM number_literal ) )
			int alt249=8;
			switch ( input.LA(1) ) {
			case EOF:
			case COMMA:
			case RPAREN:
				{
				alt249=1;
				}
				break;
			case HOST_SYM:
				{
				alt249=2;
				}
				break;
			case DATABASE:
				{
				alt249=3;
				}
				break;
			case USER:
				{
				alt249=4;
				}
				break;
			case PASSWORD:
				{
				alt249=5;
				}
				break;
			case SOCKET_SYM:
				{
				alt249=6;
				}
				break;
			case OWNER_SYM:
				{
				alt249=7;
				}
				break;
			case PORT_SYM:
				{
				alt249=8;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 249, 0, input);
				throw nvae;
			}
			switch (alt249) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2008:3: 
					{
					root_0 = (Object)adaptor.nil();


					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2008:5: ( HOST_SYM string_literal )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2008:5: ( HOST_SYM string_literal )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2008:7: HOST_SYM string_literal
					{
					HOST_SYM810=(Token)match(input,HOST_SYM,FOLLOW_HOST_SYM_in_create_server_option27234); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					HOST_SYM810_tree = (Object)adaptor.create(HOST_SYM810);
					adaptor.addChild(root_0, HOST_SYM810_tree);
					}

					pushFollow(FOLLOW_string_literal_in_create_server_option27236);
					string_literal811=string_literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, string_literal811.getTree());

					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2009:5: ( DATABASE string_literal )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2009:5: ( DATABASE string_literal )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2009:7: DATABASE string_literal
					{
					DATABASE812=(Token)match(input,DATABASE,FOLLOW_DATABASE_in_create_server_option27246); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DATABASE812_tree = (Object)adaptor.create(DATABASE812);
					adaptor.addChild(root_0, DATABASE812_tree);
					}

					pushFollow(FOLLOW_string_literal_in_create_server_option27248);
					string_literal813=string_literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, string_literal813.getTree());

					}

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2010:5: ( USER string_literal )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2010:5: ( USER string_literal )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2010:7: USER string_literal
					{
					USER814=(Token)match(input,USER,FOLLOW_USER_in_create_server_option27258); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					USER814_tree = (Object)adaptor.create(USER814);
					adaptor.addChild(root_0, USER814_tree);
					}

					pushFollow(FOLLOW_string_literal_in_create_server_option27260);
					string_literal815=string_literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, string_literal815.getTree());

					}

					}
					break;
				case 5 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2011:5: ( PASSWORD string_literal )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2011:5: ( PASSWORD string_literal )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2011:7: PASSWORD string_literal
					{
					PASSWORD816=(Token)match(input,PASSWORD,FOLLOW_PASSWORD_in_create_server_option27270); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PASSWORD816_tree = (Object)adaptor.create(PASSWORD816);
					adaptor.addChild(root_0, PASSWORD816_tree);
					}

					pushFollow(FOLLOW_string_literal_in_create_server_option27272);
					string_literal817=string_literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, string_literal817.getTree());

					}

					}
					break;
				case 6 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2012:5: ( SOCKET_SYM string_literal )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2012:5: ( SOCKET_SYM string_literal )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2012:7: SOCKET_SYM string_literal
					{
					SOCKET_SYM818=(Token)match(input,SOCKET_SYM,FOLLOW_SOCKET_SYM_in_create_server_option27282); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SOCKET_SYM818_tree = (Object)adaptor.create(SOCKET_SYM818);
					adaptor.addChild(root_0, SOCKET_SYM818_tree);
					}

					pushFollow(FOLLOW_string_literal_in_create_server_option27284);
					string_literal819=string_literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, string_literal819.getTree());

					}

					}
					break;
				case 7 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2013:5: ( OWNER_SYM string_literal )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2013:5: ( OWNER_SYM string_literal )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2013:7: OWNER_SYM string_literal
					{
					OWNER_SYM820=(Token)match(input,OWNER_SYM,FOLLOW_OWNER_SYM_in_create_server_option27294); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					OWNER_SYM820_tree = (Object)adaptor.create(OWNER_SYM820);
					adaptor.addChild(root_0, OWNER_SYM820_tree);
					}

					pushFollow(FOLLOW_string_literal_in_create_server_option27296);
					string_literal821=string_literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, string_literal821.getTree());

					}

					}
					break;
				case 8 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2014:5: ( PORT_SYM number_literal )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2014:5: ( PORT_SYM number_literal )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2014:7: PORT_SYM number_literal
					{
					PORT_SYM822=(Token)match(input,PORT_SYM,FOLLOW_PORT_SYM_in_create_server_option27306); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PORT_SYM822_tree = (Object)adaptor.create(PORT_SYM822);
					adaptor.addChild(root_0, PORT_SYM822_tree);
					}

					pushFollow(FOLLOW_number_literal_in_create_server_option27308);
					number_literal823=number_literal();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal823.getTree());

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_server_option"


	public static class alter_server_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "alter_server_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2019:1: alter_server_statement : ALTER SERVER_SYM server_name OPTIONS_SYM LPAREN alter_server_option ( COMMA alter_server_option )* RPAREN ;
	public final SQLParser.alter_server_statement_return alter_server_statement() throws RecognitionException {
		SQLParser.alter_server_statement_return retval = new SQLParser.alter_server_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token ALTER824=null;
		Token SERVER_SYM825=null;
		Token OPTIONS_SYM827=null;
		Token LPAREN828=null;
		Token COMMA830=null;
		Token RPAREN832=null;
		ParserRuleReturnScope server_name826 =null;
		ParserRuleReturnScope alter_server_option829 =null;
		ParserRuleReturnScope alter_server_option831 =null;

		Object ALTER824_tree=null;
		Object SERVER_SYM825_tree=null;
		Object OPTIONS_SYM827_tree=null;
		Object LPAREN828_tree=null;
		Object COMMA830_tree=null;
		Object RPAREN832_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2019:23: ( ALTER SERVER_SYM server_name OPTIONS_SYM LPAREN alter_server_option ( COMMA alter_server_option )* RPAREN )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2020:3: ALTER SERVER_SYM server_name OPTIONS_SYM LPAREN alter_server_option ( COMMA alter_server_option )* RPAREN
			{
			root_0 = (Object)adaptor.nil();


			ALTER824=(Token)match(input,ALTER,FOLLOW_ALTER_in_alter_server_statement27322); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			ALTER824_tree = (Object)adaptor.create(ALTER824);
			adaptor.addChild(root_0, ALTER824_tree);
			}

			SERVER_SYM825=(Token)match(input,SERVER_SYM,FOLLOW_SERVER_SYM_in_alter_server_statement27324); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			SERVER_SYM825_tree = (Object)adaptor.create(SERVER_SYM825);
			adaptor.addChild(root_0, SERVER_SYM825_tree);
			}

			pushFollow(FOLLOW_server_name_in_alter_server_statement27326);
			server_name826=server_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, server_name826.getTree());

			OPTIONS_SYM827=(Token)match(input,OPTIONS_SYM,FOLLOW_OPTIONS_SYM_in_alter_server_statement27330); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			OPTIONS_SYM827_tree = (Object)adaptor.create(OPTIONS_SYM827);
			adaptor.addChild(root_0, OPTIONS_SYM827_tree);
			}

			LPAREN828=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_alter_server_statement27332); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			LPAREN828_tree = (Object)adaptor.create(LPAREN828);
			adaptor.addChild(root_0, LPAREN828_tree);
			}

			pushFollow(FOLLOW_alter_server_option_in_alter_server_statement27334);
			alter_server_option829=alter_server_option();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, alter_server_option829.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2021:42: ( COMMA alter_server_option )*
			loop250:
			while (true) {
				int alt250=2;
				int LA250_0 = input.LA(1);
				if ( (LA250_0==COMMA) ) {
					alt250=1;
				}

				switch (alt250) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2021:43: COMMA alter_server_option
					{
					COMMA830=(Token)match(input,COMMA,FOLLOW_COMMA_in_alter_server_statement27337); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA830_tree = (Object)adaptor.create(COMMA830);
					adaptor.addChild(root_0, COMMA830_tree);
					}

					pushFollow(FOLLOW_alter_server_option_in_alter_server_statement27339);
					alter_server_option831=alter_server_option();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, alter_server_option831.getTree());

					}
					break;

				default :
					break loop250;
				}
			}

			RPAREN832=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_alter_server_statement27343); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			RPAREN832_tree = (Object)adaptor.create(RPAREN832);
			adaptor.addChild(root_0, RPAREN832_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_server_statement"


	public static class alter_server_option_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "alter_server_option"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2023:1: alter_server_option : ( USER ) ( ID | TEXT_STRING ) ;
	public final SQLParser.alter_server_option_return alter_server_option() throws RecognitionException {
		SQLParser.alter_server_option_return retval = new SQLParser.alter_server_option_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token USER833=null;
		Token set834=null;

		Object USER833_tree=null;
		Object set834_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2023:20: ( ( USER ) ( ID | TEXT_STRING ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2024:3: ( USER ) ( ID | TEXT_STRING )
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2024:3: ( USER )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2024:4: USER
			{
			USER833=(Token)match(input,USER,FOLLOW_USER_in_alter_server_option27353); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			USER833_tree = (Object)adaptor.create(USER833);
			adaptor.addChild(root_0, USER833_tree);
			}

			}

			set834=input.LT(1);
			if ( input.LA(1)==ID||input.LA(1)==TEXT_STRING ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set834));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_server_option"


	public static class drop_server_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "drop_server_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2029:1: drop_server_statement : DROP SERVER_SYM ( IF EXISTS )? server_name ;
	public final SQLParser.drop_server_statement_return drop_server_statement() throws RecognitionException {
		SQLParser.drop_server_statement_return retval = new SQLParser.drop_server_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token DROP835=null;
		Token SERVER_SYM836=null;
		Token IF837=null;
		Token EXISTS838=null;
		ParserRuleReturnScope server_name839 =null;

		Object DROP835_tree=null;
		Object SERVER_SYM836_tree=null;
		Object IF837_tree=null;
		Object EXISTS838_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2029:22: ( DROP SERVER_SYM ( IF EXISTS )? server_name )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2030:3: DROP SERVER_SYM ( IF EXISTS )? server_name
			{
			root_0 = (Object)adaptor.nil();


			DROP835=(Token)match(input,DROP,FOLLOW_DROP_in_drop_server_statement27372); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			DROP835_tree = (Object)adaptor.create(DROP835);
			adaptor.addChild(root_0, DROP835_tree);
			}

			SERVER_SYM836=(Token)match(input,SERVER_SYM,FOLLOW_SERVER_SYM_in_drop_server_statement27374); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			SERVER_SYM836_tree = (Object)adaptor.create(SERVER_SYM836);
			adaptor.addChild(root_0, SERVER_SYM836_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2030:19: ( IF EXISTS )?
			int alt251=2;
			int LA251_0 = input.LA(1);
			if ( (LA251_0==IF) ) {
				alt251=1;
			}
			switch (alt251) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2030:20: IF EXISTS
					{
					IF837=(Token)match(input,IF,FOLLOW_IF_in_drop_server_statement27377); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IF837_tree = (Object)adaptor.create(IF837);
					adaptor.addChild(root_0, IF837_tree);
					}

					EXISTS838=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_drop_server_statement27379); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EXISTS838_tree = (Object)adaptor.create(EXISTS838);
					adaptor.addChild(root_0, EXISTS838_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_server_name_in_drop_server_statement27383);
			server_name839=server_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, server_name839.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_server_statement"


	public static class create_table_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "create_table_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2039:1: create_table_statement : ( create_table_statement1 | create_table_statement2 | create_table_statement3 );
	public final SQLParser.create_table_statement_return create_table_statement() throws RecognitionException {
		SQLParser.create_table_statement_return retval = new SQLParser.create_table_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		ParserRuleReturnScope create_table_statement1840 =null;
		ParserRuleReturnScope create_table_statement2841 =null;
		ParserRuleReturnScope create_table_statement3842 =null;


		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2039:23: ( create_table_statement1 | create_table_statement2 | create_table_statement3 )
			int alt252=3;
			int LA252_0 = input.LA(1);
			if ( (LA252_0==CREATE) ) {
				int LA252_1 = input.LA(2);
				if ( (LA252_1==TEMPORARY) ) {
					int LA252_2 = input.LA(3);
					if ( (LA252_2==TABLE) ) {
						int LA252_3 = input.LA(4);
						if ( (LA252_3==IF) ) {
							int LA252_4 = input.LA(5);
							if ( (LA252_4==NOT_SYM) ) {
								int LA252_6 = input.LA(6);
								if ( (LA252_6==EXISTS) ) {
									int LA252_10 = input.LA(7);
									if ( (LA252_10==ID) ) {
										switch ( input.LA(8) ) {
										case LPAREN:
											{
											int LA252_7 = input.LA(9);
											if ( (LA252_7==LIKE_SYM) ) {
												alt252=3;
											}
											else if ( (LA252_7==CHECK_SYM||LA252_7==CONSTRAINT||LA252_7==FOREIGN||LA252_7==FULLTEXT_SYM||LA252_7==ID||LA252_7==INDEX_SYM||LA252_7==KEY_SYM||LA252_7==PRIMARY_SYM||LA252_7==SPATIAL_SYM||LA252_7==UNIQUE_SYM) ) {
												alt252=1;
											}

											else {
												if (state.backtracking>0) {state.failed=true; return retval;}
												int nvaeMark = input.mark();
												try {
													for (int nvaeConsume = 0; nvaeConsume < 9 - 1; nvaeConsume++) {
														input.consume();
													}
													NoViableAltException nvae =
														new NoViableAltException("", 252, 7, input);
													throw nvae;
												} finally {
													input.rewind(nvaeMark);
												}
											}

											}
											break;
										case AUTO_INCREMENT:
										case AVG_ROW_LENGTH:
										case CHARACTER_SYM:
										case CHECKSUM_SYM:
										case COLLATE_SYM:
										case COMMENT_SYM:
										case CONNECTION_SYM:
										case DATA_SYM:
										case DEFAULT:
										case DELAY_KEY_WRITE_SYM:
										case ENGINE_SYM:
										case INDEX_SYM:
										case INSERT_METHOD:
										case KEY_BLOCK_SIZE:
										case MAX_ROWS:
										case MIN_ROWS:
										case PACK_KEYS_SYM:
										case PARTITION_SYM:
										case PASSWORD:
										case ROW_FORMAT_SYM:
										case SELECT:
										case STATS_AUTO_RECALC:
										case STATS_PERSISTENT:
										case UNION_SYM:
											{
											alt252=2;
											}
											break;
										case LIKE_SYM:
											{
											alt252=3;
											}
											break;
										default:
											if (state.backtracking>0) {state.failed=true; return retval;}
											int nvaeMark = input.mark();
											try {
												for (int nvaeConsume = 0; nvaeConsume < 8 - 1; nvaeConsume++) {
													input.consume();
												}
												NoViableAltException nvae =
													new NoViableAltException("", 252, 5, input);
												throw nvae;
											} finally {
												input.rewind(nvaeMark);
											}
										}
									}

									else {
										if (state.backtracking>0) {state.failed=true; return retval;}
										int nvaeMark = input.mark();
										try {
											for (int nvaeConsume = 0; nvaeConsume < 7 - 1; nvaeConsume++) {
												input.consume();
											}
											NoViableAltException nvae =
												new NoViableAltException("", 252, 10, input);
											throw nvae;
										} finally {
											input.rewind(nvaeMark);
										}
									}

								}

								else {
									if (state.backtracking>0) {state.failed=true; return retval;}
									int nvaeMark = input.mark();
									try {
										for (int nvaeConsume = 0; nvaeConsume < 6 - 1; nvaeConsume++) {
											input.consume();
										}
										NoViableAltException nvae =
											new NoViableAltException("", 252, 6, input);
										throw nvae;
									} finally {
										input.rewind(nvaeMark);
									}
								}

							}

							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 252, 4, input);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

						}
						else if ( (LA252_3==ID) ) {
							switch ( input.LA(5) ) {
							case LPAREN:
								{
								int LA252_7 = input.LA(6);
								if ( (LA252_7==LIKE_SYM) ) {
									alt252=3;
								}
								else if ( (LA252_7==CHECK_SYM||LA252_7==CONSTRAINT||LA252_7==FOREIGN||LA252_7==FULLTEXT_SYM||LA252_7==ID||LA252_7==INDEX_SYM||LA252_7==KEY_SYM||LA252_7==PRIMARY_SYM||LA252_7==SPATIAL_SYM||LA252_7==UNIQUE_SYM) ) {
									alt252=1;
								}

								else {
									if (state.backtracking>0) {state.failed=true; return retval;}
									int nvaeMark = input.mark();
									try {
										for (int nvaeConsume = 0; nvaeConsume < 6 - 1; nvaeConsume++) {
											input.consume();
										}
										NoViableAltException nvae =
											new NoViableAltException("", 252, 7, input);
										throw nvae;
									} finally {
										input.rewind(nvaeMark);
									}
								}

								}
								break;
							case AUTO_INCREMENT:
							case AVG_ROW_LENGTH:
							case CHARACTER_SYM:
							case CHECKSUM_SYM:
							case COLLATE_SYM:
							case COMMENT_SYM:
							case CONNECTION_SYM:
							case DATA_SYM:
							case DEFAULT:
							case DELAY_KEY_WRITE_SYM:
							case ENGINE_SYM:
							case INDEX_SYM:
							case INSERT_METHOD:
							case KEY_BLOCK_SIZE:
							case MAX_ROWS:
							case MIN_ROWS:
							case PACK_KEYS_SYM:
							case PARTITION_SYM:
							case PASSWORD:
							case ROW_FORMAT_SYM:
							case SELECT:
							case STATS_AUTO_RECALC:
							case STATS_PERSISTENT:
							case UNION_SYM:
								{
								alt252=2;
								}
								break;
							case LIKE_SYM:
								{
								alt252=3;
								}
								break;
							default:
								if (state.backtracking>0) {state.failed=true; return retval;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 252, 5, input);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 252, 3, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 252, 2, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}
				else if ( (LA252_1==TABLE) ) {
					int LA252_3 = input.LA(3);
					if ( (LA252_3==IF) ) {
						int LA252_4 = input.LA(4);
						if ( (LA252_4==NOT_SYM) ) {
							int LA252_6 = input.LA(5);
							if ( (LA252_6==EXISTS) ) {
								int LA252_10 = input.LA(6);
								if ( (LA252_10==ID) ) {
									switch ( input.LA(7) ) {
									case LPAREN:
										{
										int LA252_7 = input.LA(8);
										if ( (LA252_7==LIKE_SYM) ) {
											alt252=3;
										}
										else if ( (LA252_7==CHECK_SYM||LA252_7==CONSTRAINT||LA252_7==FOREIGN||LA252_7==FULLTEXT_SYM||LA252_7==ID||LA252_7==INDEX_SYM||LA252_7==KEY_SYM||LA252_7==PRIMARY_SYM||LA252_7==SPATIAL_SYM||LA252_7==UNIQUE_SYM) ) {
											alt252=1;
										}

										else {
											if (state.backtracking>0) {state.failed=true; return retval;}
											int nvaeMark = input.mark();
											try {
												for (int nvaeConsume = 0; nvaeConsume < 8 - 1; nvaeConsume++) {
													input.consume();
												}
												NoViableAltException nvae =
													new NoViableAltException("", 252, 7, input);
												throw nvae;
											} finally {
												input.rewind(nvaeMark);
											}
										}

										}
										break;
									case AUTO_INCREMENT:
									case AVG_ROW_LENGTH:
									case CHARACTER_SYM:
									case CHECKSUM_SYM:
									case COLLATE_SYM:
									case COMMENT_SYM:
									case CONNECTION_SYM:
									case DATA_SYM:
									case DEFAULT:
									case DELAY_KEY_WRITE_SYM:
									case ENGINE_SYM:
									case INDEX_SYM:
									case INSERT_METHOD:
									case KEY_BLOCK_SIZE:
									case MAX_ROWS:
									case MIN_ROWS:
									case PACK_KEYS_SYM:
									case PARTITION_SYM:
									case PASSWORD:
									case ROW_FORMAT_SYM:
									case SELECT:
									case STATS_AUTO_RECALC:
									case STATS_PERSISTENT:
									case UNION_SYM:
										{
										alt252=2;
										}
										break;
									case LIKE_SYM:
										{
										alt252=3;
										}
										break;
									default:
										if (state.backtracking>0) {state.failed=true; return retval;}
										int nvaeMark = input.mark();
										try {
											for (int nvaeConsume = 0; nvaeConsume < 7 - 1; nvaeConsume++) {
												input.consume();
											}
											NoViableAltException nvae =
												new NoViableAltException("", 252, 5, input);
											throw nvae;
										} finally {
											input.rewind(nvaeMark);
										}
									}
								}

								else {
									if (state.backtracking>0) {state.failed=true; return retval;}
									int nvaeMark = input.mark();
									try {
										for (int nvaeConsume = 0; nvaeConsume < 6 - 1; nvaeConsume++) {
											input.consume();
										}
										NoViableAltException nvae =
											new NoViableAltException("", 252, 10, input);
										throw nvae;
									} finally {
										input.rewind(nvaeMark);
									}
								}

							}

							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 252, 6, input);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 252, 4, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA252_3==ID) ) {
						switch ( input.LA(4) ) {
						case LPAREN:
							{
							int LA252_7 = input.LA(5);
							if ( (LA252_7==LIKE_SYM) ) {
								alt252=3;
							}
							else if ( (LA252_7==CHECK_SYM||LA252_7==CONSTRAINT||LA252_7==FOREIGN||LA252_7==FULLTEXT_SYM||LA252_7==ID||LA252_7==INDEX_SYM||LA252_7==KEY_SYM||LA252_7==PRIMARY_SYM||LA252_7==SPATIAL_SYM||LA252_7==UNIQUE_SYM) ) {
								alt252=1;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 252, 7, input);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

							}
							break;
						case AUTO_INCREMENT:
						case AVG_ROW_LENGTH:
						case CHARACTER_SYM:
						case CHECKSUM_SYM:
						case COLLATE_SYM:
						case COMMENT_SYM:
						case CONNECTION_SYM:
						case DATA_SYM:
						case DEFAULT:
						case DELAY_KEY_WRITE_SYM:
						case ENGINE_SYM:
						case INDEX_SYM:
						case INSERT_METHOD:
						case KEY_BLOCK_SIZE:
						case MAX_ROWS:
						case MIN_ROWS:
						case PACK_KEYS_SYM:
						case PARTITION_SYM:
						case PASSWORD:
						case ROW_FORMAT_SYM:
						case SELECT:
						case STATS_AUTO_RECALC:
						case STATS_PERSISTENT:
						case UNION_SYM:
							{
							alt252=2;
							}
							break;
						case LIKE_SYM:
							{
							alt252=3;
							}
							break;
						default:
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 252, 5, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 252, 3, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 252, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 252, 0, input);
				throw nvae;
			}

			switch (alt252) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2040:3: create_table_statement1
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_create_table_statement1_in_create_table_statement27399);
					create_table_statement1840=create_table_statement1();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, create_table_statement1840.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2040:29: create_table_statement2
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_create_table_statement2_in_create_table_statement27403);
					create_table_statement2841=create_table_statement2();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, create_table_statement2841.getTree());

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2040:55: create_table_statement3
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_create_table_statement3_in_create_table_statement27407);
					create_table_statement3842=create_table_statement3();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, create_table_statement3842.getTree());

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_table_statement"


	public static class create_table_statement1_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "create_table_statement1"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2043:1: create_table_statement1 : CREATE ( TEMPORARY )? TABLE ( IF NOT_SYM EXISTS )? table_name LPAREN create_definition ( COMMA create_definition )* RPAREN ( table_options )? ( partition_options )? ( select_statement )? ;
	public final SQLParser.create_table_statement1_return create_table_statement1() throws RecognitionException {
		SQLParser.create_table_statement1_return retval = new SQLParser.create_table_statement1_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token CREATE843=null;
		Token TEMPORARY844=null;
		Token TABLE845=null;
		Token IF846=null;
		Token NOT_SYM847=null;
		Token EXISTS848=null;
		Token LPAREN850=null;
		Token COMMA852=null;
		Token RPAREN854=null;
		ParserRuleReturnScope table_name849 =null;
		ParserRuleReturnScope create_definition851 =null;
		ParserRuleReturnScope create_definition853 =null;
		ParserRuleReturnScope table_options855 =null;
		ParserRuleReturnScope partition_options856 =null;
		ParserRuleReturnScope select_statement857 =null;

		Object CREATE843_tree=null;
		Object TEMPORARY844_tree=null;
		Object TABLE845_tree=null;
		Object IF846_tree=null;
		Object NOT_SYM847_tree=null;
		Object EXISTS848_tree=null;
		Object LPAREN850_tree=null;
		Object COMMA852_tree=null;
		Object RPAREN854_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2043:24: ( CREATE ( TEMPORARY )? TABLE ( IF NOT_SYM EXISTS )? table_name LPAREN create_definition ( COMMA create_definition )* RPAREN ( table_options )? ( partition_options )? ( select_statement )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2044:3: CREATE ( TEMPORARY )? TABLE ( IF NOT_SYM EXISTS )? table_name LPAREN create_definition ( COMMA create_definition )* RPAREN ( table_options )? ( partition_options )? ( select_statement )?
			{
			root_0 = (Object)adaptor.nil();


			CREATE843=(Token)match(input,CREATE,FOLLOW_CREATE_in_create_table_statement127419); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			CREATE843_tree = (Object)adaptor.create(CREATE843);
			adaptor.addChild(root_0, CREATE843_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2044:10: ( TEMPORARY )?
			int alt253=2;
			int LA253_0 = input.LA(1);
			if ( (LA253_0==TEMPORARY) ) {
				alt253=1;
			}
			switch (alt253) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2044:11: TEMPORARY
					{
					TEMPORARY844=(Token)match(input,TEMPORARY,FOLLOW_TEMPORARY_in_create_table_statement127422); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEMPORARY844_tree = (Object)adaptor.create(TEMPORARY844);
					adaptor.addChild(root_0, TEMPORARY844_tree);
					}

					}
					break;

			}

			TABLE845=(Token)match(input,TABLE,FOLLOW_TABLE_in_create_table_statement127426); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			TABLE845_tree = (Object)adaptor.create(TABLE845);
			adaptor.addChild(root_0, TABLE845_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2044:29: ( IF NOT_SYM EXISTS )?
			int alt254=2;
			int LA254_0 = input.LA(1);
			if ( (LA254_0==IF) ) {
				alt254=1;
			}
			switch (alt254) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2044:30: IF NOT_SYM EXISTS
					{
					IF846=(Token)match(input,IF,FOLLOW_IF_in_create_table_statement127429); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IF846_tree = (Object)adaptor.create(IF846);
					adaptor.addChild(root_0, IF846_tree);
					}

					NOT_SYM847=(Token)match(input,NOT_SYM,FOLLOW_NOT_SYM_in_create_table_statement127431); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					NOT_SYM847_tree = (Object)adaptor.create(NOT_SYM847);
					adaptor.addChild(root_0, NOT_SYM847_tree);
					}

					EXISTS848=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_create_table_statement127433); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EXISTS848_tree = (Object)adaptor.create(EXISTS848);
					adaptor.addChild(root_0, EXISTS848_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_table_name_in_create_table_statement127437);
			table_name849=table_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name849.getTree());

			LPAREN850=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_create_table_statement127441); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			LPAREN850_tree = (Object)adaptor.create(LPAREN850);
			adaptor.addChild(root_0, LPAREN850_tree);
			}

			pushFollow(FOLLOW_create_definition_in_create_table_statement127443);
			create_definition851=create_definition();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, create_definition851.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2045:28: ( COMMA create_definition )*
			loop255:
			while (true) {
				int alt255=2;
				int LA255_0 = input.LA(1);
				if ( (LA255_0==COMMA) ) {
					alt255=1;
				}

				switch (alt255) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2045:29: COMMA create_definition
					{
					COMMA852=(Token)match(input,COMMA,FOLLOW_COMMA_in_create_table_statement127446); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA852_tree = (Object)adaptor.create(COMMA852);
					adaptor.addChild(root_0, COMMA852_tree);
					}

					pushFollow(FOLLOW_create_definition_in_create_table_statement127448);
					create_definition853=create_definition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, create_definition853.getTree());

					}
					break;

				default :
					break loop255;
				}
			}

			RPAREN854=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_create_table_statement127452); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			RPAREN854_tree = (Object)adaptor.create(RPAREN854);
			adaptor.addChild(root_0, RPAREN854_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2046:3: ( table_options )?
			int alt256=2;
			int LA256_0 = input.LA(1);
			if ( (LA256_0==AUTO_INCREMENT||LA256_0==AVG_ROW_LENGTH||LA256_0==CHARACTER_SYM||LA256_0==CHECKSUM_SYM||LA256_0==COLLATE_SYM||LA256_0==COMMENT_SYM||LA256_0==CONNECTION_SYM||LA256_0==DATA_SYM||LA256_0==DEFAULT||LA256_0==DELAY_KEY_WRITE_SYM||LA256_0==ENGINE_SYM||LA256_0==INDEX_SYM||LA256_0==INSERT_METHOD||LA256_0==KEY_BLOCK_SIZE||LA256_0==MAX_ROWS||LA256_0==MIN_ROWS||LA256_0==PACK_KEYS_SYM||LA256_0==PASSWORD||LA256_0==ROW_FORMAT_SYM||(LA256_0 >= STATS_AUTO_RECALC && LA256_0 <= STATS_PERSISTENT)||LA256_0==UNION_SYM) ) {
				alt256=1;
			}
			switch (alt256) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2046:4: table_options
					{
					pushFollow(FOLLOW_table_options_in_create_table_statement127457);
					table_options855=table_options();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_options855.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2047:3: ( partition_options )?
			int alt257=2;
			int LA257_0 = input.LA(1);
			if ( (LA257_0==PARTITION_SYM) ) {
				alt257=1;
			}
			switch (alt257) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2047:4: partition_options
					{
					pushFollow(FOLLOW_partition_options_in_create_table_statement127464);
					partition_options856=partition_options();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_options856.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2048:3: ( select_statement )?
			int alt258=2;
			int LA258_0 = input.LA(1);
			if ( (LA258_0==SELECT) ) {
				alt258=1;
			}
			switch (alt258) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2048:4: select_statement
					{
					pushFollow(FOLLOW_select_statement_in_create_table_statement127471);
					select_statement857=select_statement();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, select_statement857.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_table_statement1"


	public static class create_table_statement2_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "create_table_statement2"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2051:1: create_table_statement2 : CREATE ( TEMPORARY )? TABLE ( IF NOT_SYM EXISTS )? table_name ( table_options )? ( partition_options )? select_statement ;
	public final SQLParser.create_table_statement2_return create_table_statement2() throws RecognitionException {
		SQLParser.create_table_statement2_return retval = new SQLParser.create_table_statement2_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token CREATE858=null;
		Token TEMPORARY859=null;
		Token TABLE860=null;
		Token IF861=null;
		Token NOT_SYM862=null;
		Token EXISTS863=null;
		ParserRuleReturnScope table_name864 =null;
		ParserRuleReturnScope table_options865 =null;
		ParserRuleReturnScope partition_options866 =null;
		ParserRuleReturnScope select_statement867 =null;

		Object CREATE858_tree=null;
		Object TEMPORARY859_tree=null;
		Object TABLE860_tree=null;
		Object IF861_tree=null;
		Object NOT_SYM862_tree=null;
		Object EXISTS863_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2051:24: ( CREATE ( TEMPORARY )? TABLE ( IF NOT_SYM EXISTS )? table_name ( table_options )? ( partition_options )? select_statement )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2052:3: CREATE ( TEMPORARY )? TABLE ( IF NOT_SYM EXISTS )? table_name ( table_options )? ( partition_options )? select_statement
			{
			root_0 = (Object)adaptor.nil();


			CREATE858=(Token)match(input,CREATE,FOLLOW_CREATE_in_create_table_statement227483); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			CREATE858_tree = (Object)adaptor.create(CREATE858);
			adaptor.addChild(root_0, CREATE858_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2052:10: ( TEMPORARY )?
			int alt259=2;
			int LA259_0 = input.LA(1);
			if ( (LA259_0==TEMPORARY) ) {
				alt259=1;
			}
			switch (alt259) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2052:11: TEMPORARY
					{
					TEMPORARY859=(Token)match(input,TEMPORARY,FOLLOW_TEMPORARY_in_create_table_statement227486); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEMPORARY859_tree = (Object)adaptor.create(TEMPORARY859);
					adaptor.addChild(root_0, TEMPORARY859_tree);
					}

					}
					break;

			}

			TABLE860=(Token)match(input,TABLE,FOLLOW_TABLE_in_create_table_statement227490); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			TABLE860_tree = (Object)adaptor.create(TABLE860);
			adaptor.addChild(root_0, TABLE860_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2052:29: ( IF NOT_SYM EXISTS )?
			int alt260=2;
			int LA260_0 = input.LA(1);
			if ( (LA260_0==IF) ) {
				alt260=1;
			}
			switch (alt260) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2052:30: IF NOT_SYM EXISTS
					{
					IF861=(Token)match(input,IF,FOLLOW_IF_in_create_table_statement227493); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IF861_tree = (Object)adaptor.create(IF861);
					adaptor.addChild(root_0, IF861_tree);
					}

					NOT_SYM862=(Token)match(input,NOT_SYM,FOLLOW_NOT_SYM_in_create_table_statement227495); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					NOT_SYM862_tree = (Object)adaptor.create(NOT_SYM862);
					adaptor.addChild(root_0, NOT_SYM862_tree);
					}

					EXISTS863=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_create_table_statement227497); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EXISTS863_tree = (Object)adaptor.create(EXISTS863);
					adaptor.addChild(root_0, EXISTS863_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_table_name_in_create_table_statement227501);
			table_name864=table_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name864.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2053:3: ( table_options )?
			int alt261=2;
			int LA261_0 = input.LA(1);
			if ( (LA261_0==AUTO_INCREMENT||LA261_0==AVG_ROW_LENGTH||LA261_0==CHARACTER_SYM||LA261_0==CHECKSUM_SYM||LA261_0==COLLATE_SYM||LA261_0==COMMENT_SYM||LA261_0==CONNECTION_SYM||LA261_0==DATA_SYM||LA261_0==DEFAULT||LA261_0==DELAY_KEY_WRITE_SYM||LA261_0==ENGINE_SYM||LA261_0==INDEX_SYM||LA261_0==INSERT_METHOD||LA261_0==KEY_BLOCK_SIZE||LA261_0==MAX_ROWS||LA261_0==MIN_ROWS||LA261_0==PACK_KEYS_SYM||LA261_0==PASSWORD||LA261_0==ROW_FORMAT_SYM||(LA261_0 >= STATS_AUTO_RECALC && LA261_0 <= STATS_PERSISTENT)||LA261_0==UNION_SYM) ) {
				alt261=1;
			}
			switch (alt261) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2053:4: table_options
					{
					pushFollow(FOLLOW_table_options_in_create_table_statement227506);
					table_options865=table_options();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_options865.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2054:3: ( partition_options )?
			int alt262=2;
			int LA262_0 = input.LA(1);
			if ( (LA262_0==PARTITION_SYM) ) {
				alt262=1;
			}
			switch (alt262) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2054:4: partition_options
					{
					pushFollow(FOLLOW_partition_options_in_create_table_statement227513);
					partition_options866=partition_options();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_options866.getTree());

					}
					break;

			}

			pushFollow(FOLLOW_select_statement_in_create_table_statement227519);
			select_statement867=select_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, select_statement867.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_table_statement2"


	public static class create_table_statement3_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "create_table_statement3"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2058:1: create_table_statement3 : CREATE ( TEMPORARY )? TABLE ( IF NOT_SYM EXISTS )? table_name ( ( LIKE_SYM table_name ) | ( LPAREN LIKE_SYM table_name RPAREN ) ) ;
	public final SQLParser.create_table_statement3_return create_table_statement3() throws RecognitionException {
		SQLParser.create_table_statement3_return retval = new SQLParser.create_table_statement3_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token CREATE868=null;
		Token TEMPORARY869=null;
		Token TABLE870=null;
		Token IF871=null;
		Token NOT_SYM872=null;
		Token EXISTS873=null;
		Token LIKE_SYM875=null;
		Token LPAREN877=null;
		Token LIKE_SYM878=null;
		Token RPAREN880=null;
		ParserRuleReturnScope table_name874 =null;
		ParserRuleReturnScope table_name876 =null;
		ParserRuleReturnScope table_name879 =null;

		Object CREATE868_tree=null;
		Object TEMPORARY869_tree=null;
		Object TABLE870_tree=null;
		Object IF871_tree=null;
		Object NOT_SYM872_tree=null;
		Object EXISTS873_tree=null;
		Object LIKE_SYM875_tree=null;
		Object LPAREN877_tree=null;
		Object LIKE_SYM878_tree=null;
		Object RPAREN880_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2058:24: ( CREATE ( TEMPORARY )? TABLE ( IF NOT_SYM EXISTS )? table_name ( ( LIKE_SYM table_name ) | ( LPAREN LIKE_SYM table_name RPAREN ) ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2059:3: CREATE ( TEMPORARY )? TABLE ( IF NOT_SYM EXISTS )? table_name ( ( LIKE_SYM table_name ) | ( LPAREN LIKE_SYM table_name RPAREN ) )
			{
			root_0 = (Object)adaptor.nil();


			CREATE868=(Token)match(input,CREATE,FOLLOW_CREATE_in_create_table_statement327529); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			CREATE868_tree = (Object)adaptor.create(CREATE868);
			adaptor.addChild(root_0, CREATE868_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2059:10: ( TEMPORARY )?
			int alt263=2;
			int LA263_0 = input.LA(1);
			if ( (LA263_0==TEMPORARY) ) {
				alt263=1;
			}
			switch (alt263) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2059:11: TEMPORARY
					{
					TEMPORARY869=(Token)match(input,TEMPORARY,FOLLOW_TEMPORARY_in_create_table_statement327532); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEMPORARY869_tree = (Object)adaptor.create(TEMPORARY869);
					adaptor.addChild(root_0, TEMPORARY869_tree);
					}

					}
					break;

			}

			TABLE870=(Token)match(input,TABLE,FOLLOW_TABLE_in_create_table_statement327536); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			TABLE870_tree = (Object)adaptor.create(TABLE870);
			adaptor.addChild(root_0, TABLE870_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2059:29: ( IF NOT_SYM EXISTS )?
			int alt264=2;
			int LA264_0 = input.LA(1);
			if ( (LA264_0==IF) ) {
				alt264=1;
			}
			switch (alt264) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2059:30: IF NOT_SYM EXISTS
					{
					IF871=(Token)match(input,IF,FOLLOW_IF_in_create_table_statement327539); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IF871_tree = (Object)adaptor.create(IF871);
					adaptor.addChild(root_0, IF871_tree);
					}

					NOT_SYM872=(Token)match(input,NOT_SYM,FOLLOW_NOT_SYM_in_create_table_statement327541); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					NOT_SYM872_tree = (Object)adaptor.create(NOT_SYM872);
					adaptor.addChild(root_0, NOT_SYM872_tree);
					}

					EXISTS873=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_create_table_statement327543); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EXISTS873_tree = (Object)adaptor.create(EXISTS873);
					adaptor.addChild(root_0, EXISTS873_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_table_name_in_create_table_statement327547);
			table_name874=table_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name874.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2060:3: ( ( LIKE_SYM table_name ) | ( LPAREN LIKE_SYM table_name RPAREN ) )
			int alt265=2;
			int LA265_0 = input.LA(1);
			if ( (LA265_0==LIKE_SYM) ) {
				alt265=1;
			}
			else if ( (LA265_0==LPAREN) ) {
				alt265=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 265, 0, input);
				throw nvae;
			}

			switch (alt265) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2060:5: ( LIKE_SYM table_name )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2060:5: ( LIKE_SYM table_name )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2060:6: LIKE_SYM table_name
					{
					LIKE_SYM875=(Token)match(input,LIKE_SYM,FOLLOW_LIKE_SYM_in_create_table_statement327554); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LIKE_SYM875_tree = (Object)adaptor.create(LIKE_SYM875);
					adaptor.addChild(root_0, LIKE_SYM875_tree);
					}

					pushFollow(FOLLOW_table_name_in_create_table_statement327556);
					table_name876=table_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name876.getTree());

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2060:29: ( LPAREN LIKE_SYM table_name RPAREN )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2060:29: ( LPAREN LIKE_SYM table_name RPAREN )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2060:30: LPAREN LIKE_SYM table_name RPAREN
					{
					LPAREN877=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_create_table_statement327562); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN877_tree = (Object)adaptor.create(LPAREN877);
					adaptor.addChild(root_0, LPAREN877_tree);
					}

					LIKE_SYM878=(Token)match(input,LIKE_SYM,FOLLOW_LIKE_SYM_in_create_table_statement327564); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LIKE_SYM878_tree = (Object)adaptor.create(LIKE_SYM878);
					adaptor.addChild(root_0, LIKE_SYM878_tree);
					}

					pushFollow(FOLLOW_table_name_in_create_table_statement327566);
					table_name879=table_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name879.getTree());

					RPAREN880=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_create_table_statement327568); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN880_tree = (Object)adaptor.create(RPAREN880);
					adaptor.addChild(root_0, RPAREN880_tree);
					}

					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_table_statement3"


	public static class create_definition_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "create_definition"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2063:1: create_definition : ( ( column_name column_definition ) | ( ( CONSTRAINT ( constraint_symbol_name )? )? PRIMARY_SYM KEY_SYM ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* ) | ( ( INDEX_SYM | KEY_SYM ) ( index_name )? ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* ) | ( ( CONSTRAINT ( constraint_symbol_name )? )? UNIQUE_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* ) | ( ( FULLTEXT_SYM | SPATIAL_SYM ) ( INDEX_SYM | KEY_SYM )? ( index_name )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* ) | ( ( CONSTRAINT ( constraint_symbol_name )? )? FOREIGN KEY_SYM ( index_name )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN reference_definition ) | ( CHECK_SYM LPAREN expression RPAREN ) );
	public final SQLParser.create_definition_return create_definition() throws RecognitionException {
		SQLParser.create_definition_return retval = new SQLParser.create_definition_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token CONSTRAINT883=null;
		Token PRIMARY_SYM885=null;
		Token KEY_SYM886=null;
		Token LPAREN888=null;
		Token COMMA890=null;
		Token RPAREN892=null;
		Token set894=null;
		Token LPAREN897=null;
		Token COMMA899=null;
		Token RPAREN901=null;
		Token CONSTRAINT903=null;
		Token UNIQUE_SYM905=null;
		Token set906=null;
		Token LPAREN909=null;
		Token COMMA911=null;
		Token RPAREN913=null;
		Token set915=null;
		Token set916=null;
		Token LPAREN918=null;
		Token COMMA920=null;
		Token RPAREN922=null;
		Token CONSTRAINT924=null;
		Token FOREIGN926=null;
		Token KEY_SYM927=null;
		Token LPAREN929=null;
		Token COMMA931=null;
		Token RPAREN933=null;
		Token CHECK_SYM935=null;
		Token LPAREN936=null;
		Token RPAREN938=null;
		ParserRuleReturnScope column_name881 =null;
		ParserRuleReturnScope column_definition882 =null;
		ParserRuleReturnScope constraint_symbol_name884 =null;
		ParserRuleReturnScope index_type887 =null;
		ParserRuleReturnScope index_column_name889 =null;
		ParserRuleReturnScope index_column_name891 =null;
		ParserRuleReturnScope index_option893 =null;
		ParserRuleReturnScope index_name895 =null;
		ParserRuleReturnScope index_type896 =null;
		ParserRuleReturnScope index_column_name898 =null;
		ParserRuleReturnScope index_column_name900 =null;
		ParserRuleReturnScope index_option902 =null;
		ParserRuleReturnScope constraint_symbol_name904 =null;
		ParserRuleReturnScope index_name907 =null;
		ParserRuleReturnScope index_type908 =null;
		ParserRuleReturnScope index_column_name910 =null;
		ParserRuleReturnScope index_column_name912 =null;
		ParserRuleReturnScope index_option914 =null;
		ParserRuleReturnScope index_name917 =null;
		ParserRuleReturnScope index_column_name919 =null;
		ParserRuleReturnScope index_column_name921 =null;
		ParserRuleReturnScope index_option923 =null;
		ParserRuleReturnScope constraint_symbol_name925 =null;
		ParserRuleReturnScope index_name928 =null;
		ParserRuleReturnScope index_column_name930 =null;
		ParserRuleReturnScope index_column_name932 =null;
		ParserRuleReturnScope reference_definition934 =null;
		ParserRuleReturnScope expression937 =null;

		Object CONSTRAINT883_tree=null;
		Object PRIMARY_SYM885_tree=null;
		Object KEY_SYM886_tree=null;
		Object LPAREN888_tree=null;
		Object COMMA890_tree=null;
		Object RPAREN892_tree=null;
		Object set894_tree=null;
		Object LPAREN897_tree=null;
		Object COMMA899_tree=null;
		Object RPAREN901_tree=null;
		Object CONSTRAINT903_tree=null;
		Object UNIQUE_SYM905_tree=null;
		Object set906_tree=null;
		Object LPAREN909_tree=null;
		Object COMMA911_tree=null;
		Object RPAREN913_tree=null;
		Object set915_tree=null;
		Object set916_tree=null;
		Object LPAREN918_tree=null;
		Object COMMA920_tree=null;
		Object RPAREN922_tree=null;
		Object CONSTRAINT924_tree=null;
		Object FOREIGN926_tree=null;
		Object KEY_SYM927_tree=null;
		Object LPAREN929_tree=null;
		Object COMMA931_tree=null;
		Object RPAREN933_tree=null;
		Object CHECK_SYM935_tree=null;
		Object LPAREN936_tree=null;
		Object RPAREN938_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2063:18: ( ( column_name column_definition ) | ( ( CONSTRAINT ( constraint_symbol_name )? )? PRIMARY_SYM KEY_SYM ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* ) | ( ( INDEX_SYM | KEY_SYM ) ( index_name )? ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* ) | ( ( CONSTRAINT ( constraint_symbol_name )? )? UNIQUE_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* ) | ( ( FULLTEXT_SYM | SPATIAL_SYM ) ( INDEX_SYM | KEY_SYM )? ( index_name )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* ) | ( ( CONSTRAINT ( constraint_symbol_name )? )? FOREIGN KEY_SYM ( index_name )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN reference_definition ) | ( CHECK_SYM LPAREN expression RPAREN ) )
			int alt290=7;
			switch ( input.LA(1) ) {
			case ID:
				{
				alt290=1;
				}
				break;
			case CONSTRAINT:
				{
				switch ( input.LA(2) ) {
				case ID:
					{
					switch ( input.LA(3) ) {
					case PRIMARY_SYM:
						{
						alt290=2;
						}
						break;
					case UNIQUE_SYM:
						{
						alt290=4;
						}
						break;
					case FOREIGN:
						{
						alt290=6;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 290, 9, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}
					}
					break;
				case PRIMARY_SYM:
					{
					alt290=2;
					}
					break;
				case UNIQUE_SYM:
					{
					alt290=4;
					}
					break;
				case FOREIGN:
					{
					alt290=6;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 290, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case PRIMARY_SYM:
				{
				alt290=2;
				}
				break;
			case INDEX_SYM:
			case KEY_SYM:
				{
				alt290=3;
				}
				break;
			case UNIQUE_SYM:
				{
				alt290=4;
				}
				break;
			case FULLTEXT_SYM:
			case SPATIAL_SYM:
				{
				alt290=5;
				}
				break;
			case FOREIGN:
				{
				alt290=6;
				}
				break;
			case CHECK_SYM:
				{
				alt290=7;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 290, 0, input);
				throw nvae;
			}
			switch (alt290) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2064:5: ( column_name column_definition )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2064:5: ( column_name column_definition )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2064:8: column_name column_definition
					{
					pushFollow(FOLLOW_column_name_in_create_definition27586);
					column_name881=column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_name881.getTree());

					pushFollow(FOLLOW_column_definition_in_create_definition27588);
					column_definition882=column_definition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_definition882.getTree());

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2065:5: ( ( CONSTRAINT ( constraint_symbol_name )? )? PRIMARY_SYM KEY_SYM ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2065:5: ( ( CONSTRAINT ( constraint_symbol_name )? )? PRIMARY_SYM KEY_SYM ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2065:8: ( CONSTRAINT ( constraint_symbol_name )? )? PRIMARY_SYM KEY_SYM ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )*
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2065:8: ( CONSTRAINT ( constraint_symbol_name )? )?
					int alt267=2;
					int LA267_0 = input.LA(1);
					if ( (LA267_0==CONSTRAINT) ) {
						alt267=1;
					}
					switch (alt267) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2065:9: CONSTRAINT ( constraint_symbol_name )?
							{
							CONSTRAINT883=(Token)match(input,CONSTRAINT,FOLLOW_CONSTRAINT_in_create_definition27601); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CONSTRAINT883_tree = (Object)adaptor.create(CONSTRAINT883);
							adaptor.addChild(root_0, CONSTRAINT883_tree);
							}

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2065:20: ( constraint_symbol_name )?
							int alt266=2;
							int LA266_0 = input.LA(1);
							if ( (LA266_0==ID) ) {
								alt266=1;
							}
							switch (alt266) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2065:21: constraint_symbol_name
									{
									pushFollow(FOLLOW_constraint_symbol_name_in_create_definition27604);
									constraint_symbol_name884=constraint_symbol_name();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, constraint_symbol_name884.getTree());

									}
									break;

							}

							}
							break;

					}

					PRIMARY_SYM885=(Token)match(input,PRIMARY_SYM,FOLLOW_PRIMARY_SYM_in_create_definition27610); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PRIMARY_SYM885_tree = (Object)adaptor.create(PRIMARY_SYM885);
					adaptor.addChild(root_0, PRIMARY_SYM885_tree);
					}

					KEY_SYM886=(Token)match(input,KEY_SYM,FOLLOW_KEY_SYM_in_create_definition27612); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					KEY_SYM886_tree = (Object)adaptor.create(KEY_SYM886);
					adaptor.addChild(root_0, KEY_SYM886_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2065:68: ( index_type )?
					int alt268=2;
					int LA268_0 = input.LA(1);
					if ( (LA268_0==USING_SYM) ) {
						alt268=1;
					}
					switch (alt268) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2065:69: index_type
							{
							pushFollow(FOLLOW_index_type_in_create_definition27615);
							index_type887=index_type();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_type887.getTree());

							}
							break;

					}

					LPAREN888=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_create_definition27619); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN888_tree = (Object)adaptor.create(LPAREN888);
					adaptor.addChild(root_0, LPAREN888_tree);
					}

					pushFollow(FOLLOW_index_column_name_in_create_definition27621);
					index_column_name889=index_column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name889.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2065:107: ( COMMA index_column_name )*
					loop269:
					while (true) {
						int alt269=2;
						int LA269_0 = input.LA(1);
						if ( (LA269_0==COMMA) ) {
							alt269=1;
						}

						switch (alt269) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2065:108: COMMA index_column_name
							{
							COMMA890=(Token)match(input,COMMA,FOLLOW_COMMA_in_create_definition27624); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA890_tree = (Object)adaptor.create(COMMA890);
							adaptor.addChild(root_0, COMMA890_tree);
							}

							pushFollow(FOLLOW_index_column_name_in_create_definition27626);
							index_column_name891=index_column_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name891.getTree());

							}
							break;

						default :
							break loop269;
						}
					}

					RPAREN892=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_create_definition27630); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN892_tree = (Object)adaptor.create(RPAREN892);
					adaptor.addChild(root_0, RPAREN892_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2065:141: ( index_option )*
					loop270:
					while (true) {
						int alt270=2;
						int LA270_0 = input.LA(1);
						if ( (LA270_0==COMMENT_SYM||LA270_0==KEY_BLOCK_SIZE||LA270_0==USING_SYM||LA270_0==WITH) ) {
							alt270=1;
						}

						switch (alt270) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2065:142: index_option
							{
							pushFollow(FOLLOW_index_option_in_create_definition27633);
							index_option893=index_option();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_option893.getTree());

							}
							break;

						default :
							break loop270;
						}
					}

					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2066:5: ( ( INDEX_SYM | KEY_SYM ) ( index_name )? ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2066:5: ( ( INDEX_SYM | KEY_SYM ) ( index_name )? ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2066:8: ( INDEX_SYM | KEY_SYM ) ( index_name )? ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )*
					{
					set894=input.LT(1);
					if ( input.LA(1)==INDEX_SYM||input.LA(1)==KEY_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set894));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2066:28: ( index_name )?
					int alt271=2;
					int LA271_0 = input.LA(1);
					if ( (LA271_0==ID) ) {
						alt271=1;
					}
					switch (alt271) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2066:29: index_name
							{
							pushFollow(FOLLOW_index_name_in_create_definition27654);
							index_name895=index_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_name895.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2066:42: ( index_type )?
					int alt272=2;
					int LA272_0 = input.LA(1);
					if ( (LA272_0==USING_SYM) ) {
						alt272=1;
					}
					switch (alt272) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2066:43: index_type
							{
							pushFollow(FOLLOW_index_type_in_create_definition27659);
							index_type896=index_type();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_type896.getTree());

							}
							break;

					}

					LPAREN897=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_create_definition27663); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN897_tree = (Object)adaptor.create(LPAREN897);
					adaptor.addChild(root_0, LPAREN897_tree);
					}

					pushFollow(FOLLOW_index_column_name_in_create_definition27665);
					index_column_name898=index_column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name898.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2066:81: ( COMMA index_column_name )*
					loop273:
					while (true) {
						int alt273=2;
						int LA273_0 = input.LA(1);
						if ( (LA273_0==COMMA) ) {
							alt273=1;
						}

						switch (alt273) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2066:82: COMMA index_column_name
							{
							COMMA899=(Token)match(input,COMMA,FOLLOW_COMMA_in_create_definition27668); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA899_tree = (Object)adaptor.create(COMMA899);
							adaptor.addChild(root_0, COMMA899_tree);
							}

							pushFollow(FOLLOW_index_column_name_in_create_definition27670);
							index_column_name900=index_column_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name900.getTree());

							}
							break;

						default :
							break loop273;
						}
					}

					RPAREN901=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_create_definition27674); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN901_tree = (Object)adaptor.create(RPAREN901);
					adaptor.addChild(root_0, RPAREN901_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2066:115: ( index_option )*
					loop274:
					while (true) {
						int alt274=2;
						int LA274_0 = input.LA(1);
						if ( (LA274_0==COMMENT_SYM||LA274_0==KEY_BLOCK_SIZE||LA274_0==USING_SYM||LA274_0==WITH) ) {
							alt274=1;
						}

						switch (alt274) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2066:116: index_option
							{
							pushFollow(FOLLOW_index_option_in_create_definition27677);
							index_option902=index_option();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_option902.getTree());

							}
							break;

						default :
							break loop274;
						}
					}

					}

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2067:5: ( ( CONSTRAINT ( constraint_symbol_name )? )? UNIQUE_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2067:5: ( ( CONSTRAINT ( constraint_symbol_name )? )? UNIQUE_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2067:8: ( CONSTRAINT ( constraint_symbol_name )? )? UNIQUE_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )*
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2067:8: ( CONSTRAINT ( constraint_symbol_name )? )?
					int alt276=2;
					int LA276_0 = input.LA(1);
					if ( (LA276_0==CONSTRAINT) ) {
						alt276=1;
					}
					switch (alt276) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2067:9: CONSTRAINT ( constraint_symbol_name )?
							{
							CONSTRAINT903=(Token)match(input,CONSTRAINT,FOLLOW_CONSTRAINT_in_create_definition27692); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CONSTRAINT903_tree = (Object)adaptor.create(CONSTRAINT903);
							adaptor.addChild(root_0, CONSTRAINT903_tree);
							}

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2067:20: ( constraint_symbol_name )?
							int alt275=2;
							int LA275_0 = input.LA(1);
							if ( (LA275_0==ID) ) {
								alt275=1;
							}
							switch (alt275) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2067:21: constraint_symbol_name
									{
									pushFollow(FOLLOW_constraint_symbol_name_in_create_definition27695);
									constraint_symbol_name904=constraint_symbol_name();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, constraint_symbol_name904.getTree());

									}
									break;

							}

							}
							break;

					}

					UNIQUE_SYM905=(Token)match(input,UNIQUE_SYM,FOLLOW_UNIQUE_SYM_in_create_definition27701); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					UNIQUE_SYM905_tree = (Object)adaptor.create(UNIQUE_SYM905);
					adaptor.addChild(root_0, UNIQUE_SYM905_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2067:59: ( INDEX_SYM | KEY_SYM )?
					int alt277=2;
					int LA277_0 = input.LA(1);
					if ( (LA277_0==INDEX_SYM||LA277_0==KEY_SYM) ) {
						alt277=1;
					}
					switch (alt277) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
							{
							set906=input.LT(1);
							if ( input.LA(1)==INDEX_SYM||input.LA(1)==KEY_SYM ) {
								input.consume();
								if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set906));
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								throw mse;
							}
							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2067:80: ( index_name )?
					int alt278=2;
					int LA278_0 = input.LA(1);
					if ( (LA278_0==ID) ) {
						alt278=1;
					}
					switch (alt278) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2067:81: index_name
							{
							pushFollow(FOLLOW_index_name_in_create_definition27711);
							index_name907=index_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_name907.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2067:94: ( index_type )?
					int alt279=2;
					int LA279_0 = input.LA(1);
					if ( (LA279_0==USING_SYM) ) {
						alt279=1;
					}
					switch (alt279) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2067:95: index_type
							{
							pushFollow(FOLLOW_index_type_in_create_definition27716);
							index_type908=index_type();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_type908.getTree());

							}
							break;

					}

					LPAREN909=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_create_definition27720); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN909_tree = (Object)adaptor.create(LPAREN909);
					adaptor.addChild(root_0, LPAREN909_tree);
					}

					pushFollow(FOLLOW_index_column_name_in_create_definition27722);
					index_column_name910=index_column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name910.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2067:133: ( COMMA index_column_name )*
					loop280:
					while (true) {
						int alt280=2;
						int LA280_0 = input.LA(1);
						if ( (LA280_0==COMMA) ) {
							alt280=1;
						}

						switch (alt280) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2067:134: COMMA index_column_name
							{
							COMMA911=(Token)match(input,COMMA,FOLLOW_COMMA_in_create_definition27725); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA911_tree = (Object)adaptor.create(COMMA911);
							adaptor.addChild(root_0, COMMA911_tree);
							}

							pushFollow(FOLLOW_index_column_name_in_create_definition27727);
							index_column_name912=index_column_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name912.getTree());

							}
							break;

						default :
							break loop280;
						}
					}

					RPAREN913=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_create_definition27731); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN913_tree = (Object)adaptor.create(RPAREN913);
					adaptor.addChild(root_0, RPAREN913_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2067:167: ( index_option )*
					loop281:
					while (true) {
						int alt281=2;
						int LA281_0 = input.LA(1);
						if ( (LA281_0==COMMENT_SYM||LA281_0==KEY_BLOCK_SIZE||LA281_0==USING_SYM||LA281_0==WITH) ) {
							alt281=1;
						}

						switch (alt281) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2067:168: index_option
							{
							pushFollow(FOLLOW_index_option_in_create_definition27734);
							index_option914=index_option();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_option914.getTree());

							}
							break;

						default :
							break loop281;
						}
					}

					}

					}
					break;
				case 5 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2068:5: ( ( FULLTEXT_SYM | SPATIAL_SYM ) ( INDEX_SYM | KEY_SYM )? ( index_name )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2068:5: ( ( FULLTEXT_SYM | SPATIAL_SYM ) ( INDEX_SYM | KEY_SYM )? ( index_name )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2068:8: ( FULLTEXT_SYM | SPATIAL_SYM ) ( INDEX_SYM | KEY_SYM )? ( index_name )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )*
					{
					set915=input.LT(1);
					if ( input.LA(1)==FULLTEXT_SYM||input.LA(1)==SPATIAL_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set915));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2068:35: ( INDEX_SYM | KEY_SYM )?
					int alt282=2;
					int LA282_0 = input.LA(1);
					if ( (LA282_0==INDEX_SYM||LA282_0==KEY_SYM) ) {
						alt282=1;
					}
					switch (alt282) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
							{
							set916=input.LT(1);
							if ( input.LA(1)==INDEX_SYM||input.LA(1)==KEY_SYM ) {
								input.consume();
								if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set916));
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								throw mse;
							}
							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2068:56: ( index_name )?
					int alt283=2;
					int LA283_0 = input.LA(1);
					if ( (LA283_0==ID) ) {
						alt283=1;
					}
					switch (alt283) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2068:57: index_name
							{
							pushFollow(FOLLOW_index_name_in_create_definition27762);
							index_name917=index_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_name917.getTree());

							}
							break;

					}

					LPAREN918=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_create_definition27766); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN918_tree = (Object)adaptor.create(LPAREN918);
					adaptor.addChild(root_0, LPAREN918_tree);
					}

					pushFollow(FOLLOW_index_column_name_in_create_definition27768);
					index_column_name919=index_column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name919.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2068:95: ( COMMA index_column_name )*
					loop284:
					while (true) {
						int alt284=2;
						int LA284_0 = input.LA(1);
						if ( (LA284_0==COMMA) ) {
							alt284=1;
						}

						switch (alt284) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2068:96: COMMA index_column_name
							{
							COMMA920=(Token)match(input,COMMA,FOLLOW_COMMA_in_create_definition27771); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA920_tree = (Object)adaptor.create(COMMA920);
							adaptor.addChild(root_0, COMMA920_tree);
							}

							pushFollow(FOLLOW_index_column_name_in_create_definition27773);
							index_column_name921=index_column_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name921.getTree());

							}
							break;

						default :
							break loop284;
						}
					}

					RPAREN922=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_create_definition27777); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN922_tree = (Object)adaptor.create(RPAREN922);
					adaptor.addChild(root_0, RPAREN922_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2068:129: ( index_option )*
					loop285:
					while (true) {
						int alt285=2;
						int LA285_0 = input.LA(1);
						if ( (LA285_0==COMMENT_SYM||LA285_0==KEY_BLOCK_SIZE||LA285_0==USING_SYM||LA285_0==WITH) ) {
							alt285=1;
						}

						switch (alt285) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2068:130: index_option
							{
							pushFollow(FOLLOW_index_option_in_create_definition27780);
							index_option923=index_option();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_option923.getTree());

							}
							break;

						default :
							break loop285;
						}
					}

					}

					}
					break;
				case 6 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2069:5: ( ( CONSTRAINT ( constraint_symbol_name )? )? FOREIGN KEY_SYM ( index_name )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN reference_definition )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2069:5: ( ( CONSTRAINT ( constraint_symbol_name )? )? FOREIGN KEY_SYM ( index_name )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN reference_definition )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2069:8: ( CONSTRAINT ( constraint_symbol_name )? )? FOREIGN KEY_SYM ( index_name )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN reference_definition
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2069:8: ( CONSTRAINT ( constraint_symbol_name )? )?
					int alt287=2;
					int LA287_0 = input.LA(1);
					if ( (LA287_0==CONSTRAINT) ) {
						alt287=1;
					}
					switch (alt287) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2069:9: CONSTRAINT ( constraint_symbol_name )?
							{
							CONSTRAINT924=(Token)match(input,CONSTRAINT,FOLLOW_CONSTRAINT_in_create_definition27795); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CONSTRAINT924_tree = (Object)adaptor.create(CONSTRAINT924);
							adaptor.addChild(root_0, CONSTRAINT924_tree);
							}

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2069:20: ( constraint_symbol_name )?
							int alt286=2;
							int LA286_0 = input.LA(1);
							if ( (LA286_0==ID) ) {
								alt286=1;
							}
							switch (alt286) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2069:21: constraint_symbol_name
									{
									pushFollow(FOLLOW_constraint_symbol_name_in_create_definition27798);
									constraint_symbol_name925=constraint_symbol_name();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, constraint_symbol_name925.getTree());

									}
									break;

							}

							}
							break;

					}

					FOREIGN926=(Token)match(input,FOREIGN,FOLLOW_FOREIGN_in_create_definition27804); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					FOREIGN926_tree = (Object)adaptor.create(FOREIGN926);
					adaptor.addChild(root_0, FOREIGN926_tree);
					}

					KEY_SYM927=(Token)match(input,KEY_SYM,FOLLOW_KEY_SYM_in_create_definition27806); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					KEY_SYM927_tree = (Object)adaptor.create(KEY_SYM927);
					adaptor.addChild(root_0, KEY_SYM927_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2069:64: ( index_name )?
					int alt288=2;
					int LA288_0 = input.LA(1);
					if ( (LA288_0==ID) ) {
						alt288=1;
					}
					switch (alt288) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2069:65: index_name
							{
							pushFollow(FOLLOW_index_name_in_create_definition27809);
							index_name928=index_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_name928.getTree());

							}
							break;

					}

					LPAREN929=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_create_definition27813); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN929_tree = (Object)adaptor.create(LPAREN929);
					adaptor.addChild(root_0, LPAREN929_tree);
					}

					pushFollow(FOLLOW_index_column_name_in_create_definition27815);
					index_column_name930=index_column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name930.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2069:103: ( COMMA index_column_name )*
					loop289:
					while (true) {
						int alt289=2;
						int LA289_0 = input.LA(1);
						if ( (LA289_0==COMMA) ) {
							alt289=1;
						}

						switch (alt289) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2069:104: COMMA index_column_name
							{
							COMMA931=(Token)match(input,COMMA,FOLLOW_COMMA_in_create_definition27818); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA931_tree = (Object)adaptor.create(COMMA931);
							adaptor.addChild(root_0, COMMA931_tree);
							}

							pushFollow(FOLLOW_index_column_name_in_create_definition27820);
							index_column_name932=index_column_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name932.getTree());

							}
							break;

						default :
							break loop289;
						}
					}

					RPAREN933=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_create_definition27824); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN933_tree = (Object)adaptor.create(RPAREN933);
					adaptor.addChild(root_0, RPAREN933_tree);
					}

					pushFollow(FOLLOW_reference_definition_in_create_definition27826);
					reference_definition934=reference_definition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, reference_definition934.getTree());

					}

					}
					break;
				case 7 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2070:5: ( CHECK_SYM LPAREN expression RPAREN )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2070:5: ( CHECK_SYM LPAREN expression RPAREN )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2070:8: CHECK_SYM LPAREN expression RPAREN
					{
					CHECK_SYM935=(Token)match(input,CHECK_SYM,FOLLOW_CHECK_SYM_in_create_definition27838); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CHECK_SYM935_tree = (Object)adaptor.create(CHECK_SYM935);
					adaptor.addChild(root_0, CHECK_SYM935_tree);
					}

					LPAREN936=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_create_definition27840); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN936_tree = (Object)adaptor.create(LPAREN936);
					adaptor.addChild(root_0, LPAREN936_tree);
					}

					pushFollow(FOLLOW_expression_in_create_definition27842);
					expression937=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression937.getTree());

					RPAREN938=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_create_definition27844); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN938_tree = (Object)adaptor.create(RPAREN938);
					adaptor.addChild(root_0, RPAREN938_tree);
					}

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_definition"


	public static class column_definition_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "column_definition"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2073:1: column_definition : column_data_type_header ( AUTO_INCREMENT )? ( ( UNIQUE_SYM ( KEY_SYM )? ) | ( PRIMARY_SYM ( KEY_SYM )? ) )? ( COMMENT_SYM TEXT_STRING )? ( COLUMN_FORMAT ( FIXED_SYM | DYNAMIC_SYM | DEFAULT ) )? ( reference_definition )? ;
	public final SQLParser.column_definition_return column_definition() throws RecognitionException {
		SQLParser.column_definition_return retval = new SQLParser.column_definition_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token AUTO_INCREMENT940=null;
		Token UNIQUE_SYM941=null;
		Token KEY_SYM942=null;
		Token PRIMARY_SYM943=null;
		Token KEY_SYM944=null;
		Token COMMENT_SYM945=null;
		Token TEXT_STRING946=null;
		Token COLUMN_FORMAT947=null;
		Token set948=null;
		ParserRuleReturnScope column_data_type_header939 =null;
		ParserRuleReturnScope reference_definition949 =null;

		Object AUTO_INCREMENT940_tree=null;
		Object UNIQUE_SYM941_tree=null;
		Object KEY_SYM942_tree=null;
		Object PRIMARY_SYM943_tree=null;
		Object KEY_SYM944_tree=null;
		Object COMMENT_SYM945_tree=null;
		Object TEXT_STRING946_tree=null;
		Object COLUMN_FORMAT947_tree=null;
		Object set948_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2073:18: ( column_data_type_header ( AUTO_INCREMENT )? ( ( UNIQUE_SYM ( KEY_SYM )? ) | ( PRIMARY_SYM ( KEY_SYM )? ) )? ( COMMENT_SYM TEXT_STRING )? ( COLUMN_FORMAT ( FIXED_SYM | DYNAMIC_SYM | DEFAULT ) )? ( reference_definition )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2074:3: column_data_type_header ( AUTO_INCREMENT )? ( ( UNIQUE_SYM ( KEY_SYM )? ) | ( PRIMARY_SYM ( KEY_SYM )? ) )? ( COMMENT_SYM TEXT_STRING )? ( COLUMN_FORMAT ( FIXED_SYM | DYNAMIC_SYM | DEFAULT ) )? ( reference_definition )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_column_data_type_header_in_column_definition27857);
			column_data_type_header939=column_data_type_header();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, column_data_type_header939.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2075:3: ( AUTO_INCREMENT )?
			int alt291=2;
			int LA291_0 = input.LA(1);
			if ( (LA291_0==AUTO_INCREMENT) ) {
				alt291=1;
			}
			switch (alt291) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2075:4: AUTO_INCREMENT
					{
					AUTO_INCREMENT940=(Token)match(input,AUTO_INCREMENT,FOLLOW_AUTO_INCREMENT_in_column_definition27862); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					AUTO_INCREMENT940_tree = (Object)adaptor.create(AUTO_INCREMENT940);
					adaptor.addChild(root_0, AUTO_INCREMENT940_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2075:21: ( ( UNIQUE_SYM ( KEY_SYM )? ) | ( PRIMARY_SYM ( KEY_SYM )? ) )?
			int alt294=3;
			int LA294_0 = input.LA(1);
			if ( (LA294_0==UNIQUE_SYM) ) {
				alt294=1;
			}
			else if ( (LA294_0==PRIMARY_SYM) ) {
				alt294=2;
			}
			switch (alt294) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2075:23: ( UNIQUE_SYM ( KEY_SYM )? )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2075:23: ( UNIQUE_SYM ( KEY_SYM )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2075:24: UNIQUE_SYM ( KEY_SYM )?
					{
					UNIQUE_SYM941=(Token)match(input,UNIQUE_SYM,FOLLOW_UNIQUE_SYM_in_column_definition27869); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					UNIQUE_SYM941_tree = (Object)adaptor.create(UNIQUE_SYM941);
					adaptor.addChild(root_0, UNIQUE_SYM941_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2075:35: ( KEY_SYM )?
					int alt292=2;
					int LA292_0 = input.LA(1);
					if ( (LA292_0==KEY_SYM) ) {
						alt292=1;
					}
					switch (alt292) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2075:36: KEY_SYM
							{
							KEY_SYM942=(Token)match(input,KEY_SYM,FOLLOW_KEY_SYM_in_column_definition27872); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							KEY_SYM942_tree = (Object)adaptor.create(KEY_SYM942);
							adaptor.addChild(root_0, KEY_SYM942_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2075:49: ( PRIMARY_SYM ( KEY_SYM )? )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2075:49: ( PRIMARY_SYM ( KEY_SYM )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2075:50: PRIMARY_SYM ( KEY_SYM )?
					{
					PRIMARY_SYM943=(Token)match(input,PRIMARY_SYM,FOLLOW_PRIMARY_SYM_in_column_definition27880); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PRIMARY_SYM943_tree = (Object)adaptor.create(PRIMARY_SYM943);
					adaptor.addChild(root_0, PRIMARY_SYM943_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2075:62: ( KEY_SYM )?
					int alt293=2;
					int LA293_0 = input.LA(1);
					if ( (LA293_0==KEY_SYM) ) {
						alt293=1;
					}
					switch (alt293) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2075:63: KEY_SYM
							{
							KEY_SYM944=(Token)match(input,KEY_SYM,FOLLOW_KEY_SYM_in_column_definition27883); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							KEY_SYM944_tree = (Object)adaptor.create(KEY_SYM944);
							adaptor.addChild(root_0, KEY_SYM944_tree);
							}

							}
							break;

					}

					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2076:3: ( COMMENT_SYM TEXT_STRING )?
			int alt295=2;
			int LA295_0 = input.LA(1);
			if ( (LA295_0==COMMENT_SYM) ) {
				alt295=1;
			}
			switch (alt295) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2076:4: COMMENT_SYM TEXT_STRING
					{
					COMMENT_SYM945=(Token)match(input,COMMENT_SYM,FOLLOW_COMMENT_SYM_in_column_definition27894); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMENT_SYM945_tree = (Object)adaptor.create(COMMENT_SYM945);
					adaptor.addChild(root_0, COMMENT_SYM945_tree);
					}

					TEXT_STRING946=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_column_definition27896); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING946_tree = (Object)adaptor.create(TEXT_STRING946);
					adaptor.addChild(root_0, TEXT_STRING946_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2077:3: ( COLUMN_FORMAT ( FIXED_SYM | DYNAMIC_SYM | DEFAULT ) )?
			int alt296=2;
			int LA296_0 = input.LA(1);
			if ( (LA296_0==COLUMN_FORMAT) ) {
				alt296=1;
			}
			switch (alt296) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2077:4: COLUMN_FORMAT ( FIXED_SYM | DYNAMIC_SYM | DEFAULT )
					{
					COLUMN_FORMAT947=(Token)match(input,COLUMN_FORMAT,FOLLOW_COLUMN_FORMAT_in_column_definition27903); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COLUMN_FORMAT947_tree = (Object)adaptor.create(COLUMN_FORMAT947);
					adaptor.addChild(root_0, COLUMN_FORMAT947_tree);
					}

					set948=input.LT(1);
					if ( input.LA(1)==DEFAULT||input.LA(1)==DYNAMIC_SYM||input.LA(1)==FIXED_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set948));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2078:3: ( reference_definition )?
			int alt297=2;
			int LA297_0 = input.LA(1);
			if ( (LA297_0==REFERENCES) ) {
				alt297=1;
			}
			switch (alt297) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2078:4: reference_definition
					{
					pushFollow(FOLLOW_reference_definition_in_column_definition27918);
					reference_definition949=reference_definition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, reference_definition949.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "column_definition"


	public static class null_or_notnull_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "null_or_notnull"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2081:1: null_or_notnull : ( ( NOT_SYM NULL_SYM ) | NULL_SYM );
	public final SQLParser.null_or_notnull_return null_or_notnull() throws RecognitionException {
		SQLParser.null_or_notnull_return retval = new SQLParser.null_or_notnull_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token NOT_SYM950=null;
		Token NULL_SYM951=null;
		Token NULL_SYM952=null;

		Object NOT_SYM950_tree=null;
		Object NULL_SYM951_tree=null;
		Object NULL_SYM952_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2081:16: ( ( NOT_SYM NULL_SYM ) | NULL_SYM )
			int alt298=2;
			int LA298_0 = input.LA(1);
			if ( (LA298_0==NOT_SYM) ) {
				alt298=1;
			}
			else if ( (LA298_0==NULL_SYM) ) {
				alt298=2;
			}

			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 298, 0, input);
				throw nvae;
			}

			switch (alt298) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2082:3: ( NOT_SYM NULL_SYM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2082:3: ( NOT_SYM NULL_SYM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2082:4: NOT_SYM NULL_SYM
					{
					NOT_SYM950=(Token)match(input,NOT_SYM,FOLLOW_NOT_SYM_in_null_or_notnull27931); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					NOT_SYM950_tree = (Object)adaptor.create(NOT_SYM950);
					adaptor.addChild(root_0, NOT_SYM950_tree);
					}

					NULL_SYM951=(Token)match(input,NULL_SYM,FOLLOW_NULL_SYM_in_null_or_notnull27933); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					NULL_SYM951_tree = (Object)adaptor.create(NULL_SYM951);
					adaptor.addChild(root_0, NULL_SYM951_tree);
					}

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2082:24: NULL_SYM
					{
					root_0 = (Object)adaptor.nil();


					NULL_SYM952=(Token)match(input,NULL_SYM,FOLLOW_NULL_SYM_in_null_or_notnull27938); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					NULL_SYM952_tree = (Object)adaptor.create(NULL_SYM952);
					adaptor.addChild(root_0, NULL_SYM952_tree);
					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "null_or_notnull"


	public static class column_data_type_header_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "column_data_type_header"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2085:1: column_data_type_header : ( ( BIT_SYM ( LPAREN length RPAREN )? ( null_or_notnull )? ( DEFAULT bit_literal )? ) | ( TINYINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( SMALLINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( MEDIUMINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( INT_SYM ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( INTEGER_SYM ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( BIGINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( REAL ( LPAREN length COMMA number_literal RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( DOUBLE_SYM ( LPAREN length COMMA number_literal RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( FLOAT_SYM ( LPAREN length COMMA number_literal RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( DECIMAL_SYM ( LPAREN length ( COMMA number_literal )? RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( NUMERIC_SYM ( LPAREN length ( COMMA number_literal )? RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( DATE_SYM ( null_or_notnull )? ( DEFAULT TEXT_STRING )? ) | ( TIME_SYM ( null_or_notnull )? ( DEFAULT TEXT_STRING )? ) | ( TIMESTAMP ( null_or_notnull )? ( DEFAULT ( CURRENT_TIMESTAMP | TEXT_STRING ) )? ) | ( DATETIME ( null_or_notnull )? ( DEFAULT ( CURRENT_TIMESTAMP | TEXT_STRING ) )? ) | ( YEAR ( null_or_notnull )? ( DEFAULT INTEGER_NUM )? ) | ( CHAR ( LPAREN length RPAREN )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? ) | ( VARCHAR LPAREN length RPAREN ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? ) | ( BINARY ( LPAREN length RPAREN )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? ) | ( VARBINARY LPAREN length RPAREN ( null_or_notnull )? ( DEFAULT TEXT_STRING )? ) | ( TINYBLOB ( null_or_notnull )? ) | ( BLOB_SYM ( null_or_notnull )? ) | ( MEDIUMBLOB ( null_or_notnull )? ) | ( LONGBLOB ( null_or_notnull )? ) | ( TINYTEXT ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ) | ( TEXT_SYM ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ) | ( MEDIUMTEXT ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ) | ( LONGTEXT ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ) | ( ENUM LPAREN TEXT_STRING ( COMMA TEXT_STRING )* RPAREN ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? ) | ( SET_SYM LPAREN TEXT_STRING ( COMMA TEXT_STRING )* RPAREN ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? ) );
	public final SQLParser.column_data_type_header_return column_data_type_header() throws RecognitionException {
		SQLParser.column_data_type_header_return retval = new SQLParser.column_data_type_header_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token BIT_SYM953=null;
		Token LPAREN954=null;
		Token RPAREN956=null;
		Token DEFAULT958=null;
		Token TINYINT960=null;
		Token LPAREN961=null;
		Token RPAREN963=null;
		Token UNSIGNED_SYM964=null;
		Token ZEROFILL965=null;
		Token DEFAULT967=null;
		Token SMALLINT969=null;
		Token LPAREN970=null;
		Token RPAREN972=null;
		Token UNSIGNED_SYM973=null;
		Token ZEROFILL974=null;
		Token DEFAULT976=null;
		Token MEDIUMINT978=null;
		Token LPAREN979=null;
		Token RPAREN981=null;
		Token UNSIGNED_SYM982=null;
		Token ZEROFILL983=null;
		Token DEFAULT985=null;
		Token INT_SYM987=null;
		Token LPAREN988=null;
		Token RPAREN990=null;
		Token UNSIGNED_SYM991=null;
		Token ZEROFILL992=null;
		Token DEFAULT994=null;
		Token INTEGER_SYM996=null;
		Token LPAREN997=null;
		Token RPAREN999=null;
		Token UNSIGNED_SYM1000=null;
		Token ZEROFILL1001=null;
		Token DEFAULT1003=null;
		Token BIGINT1005=null;
		Token LPAREN1006=null;
		Token RPAREN1008=null;
		Token UNSIGNED_SYM1009=null;
		Token ZEROFILL1010=null;
		Token DEFAULT1012=null;
		Token REAL1014=null;
		Token LPAREN1015=null;
		Token COMMA1017=null;
		Token RPAREN1019=null;
		Token UNSIGNED_SYM1020=null;
		Token ZEROFILL1021=null;
		Token DEFAULT1023=null;
		Token DOUBLE_SYM1025=null;
		Token LPAREN1026=null;
		Token COMMA1028=null;
		Token RPAREN1030=null;
		Token UNSIGNED_SYM1031=null;
		Token ZEROFILL1032=null;
		Token DEFAULT1034=null;
		Token FLOAT_SYM1036=null;
		Token LPAREN1037=null;
		Token COMMA1039=null;
		Token RPAREN1041=null;
		Token UNSIGNED_SYM1042=null;
		Token ZEROFILL1043=null;
		Token DEFAULT1045=null;
		Token DECIMAL_SYM1047=null;
		Token LPAREN1048=null;
		Token COMMA1050=null;
		Token RPAREN1052=null;
		Token UNSIGNED_SYM1053=null;
		Token ZEROFILL1054=null;
		Token DEFAULT1056=null;
		Token NUMERIC_SYM1058=null;
		Token LPAREN1059=null;
		Token COMMA1061=null;
		Token RPAREN1063=null;
		Token UNSIGNED_SYM1064=null;
		Token ZEROFILL1065=null;
		Token DEFAULT1067=null;
		Token DATE_SYM1069=null;
		Token DEFAULT1071=null;
		Token TEXT_STRING1072=null;
		Token TIME_SYM1073=null;
		Token DEFAULT1075=null;
		Token TEXT_STRING1076=null;
		Token TIMESTAMP1077=null;
		Token DEFAULT1079=null;
		Token set1080=null;
		Token DATETIME1081=null;
		Token DEFAULT1083=null;
		Token set1084=null;
		Token YEAR1085=null;
		Token DEFAULT1087=null;
		Token INTEGER_NUM1088=null;
		Token CHAR1089=null;
		Token LPAREN1090=null;
		Token RPAREN1092=null;
		Token CHARACTER_SYM1093=null;
		Token SET_SYM1094=null;
		Token COLLATE_SYM1096=null;
		Token DEFAULT1099=null;
		Token TEXT_STRING1100=null;
		Token VARCHAR1101=null;
		Token LPAREN1102=null;
		Token RPAREN1104=null;
		Token CHARACTER_SYM1105=null;
		Token SET_SYM1106=null;
		Token COLLATE_SYM1108=null;
		Token DEFAULT1111=null;
		Token TEXT_STRING1112=null;
		Token BINARY1113=null;
		Token LPAREN1114=null;
		Token RPAREN1116=null;
		Token DEFAULT1118=null;
		Token TEXT_STRING1119=null;
		Token VARBINARY1120=null;
		Token LPAREN1121=null;
		Token RPAREN1123=null;
		Token DEFAULT1125=null;
		Token TEXT_STRING1126=null;
		Token TINYBLOB1127=null;
		Token BLOB_SYM1129=null;
		Token MEDIUMBLOB1131=null;
		Token LONGBLOB1133=null;
		Token TINYTEXT1135=null;
		Token BINARY1136=null;
		Token CHARACTER_SYM1137=null;
		Token SET_SYM1138=null;
		Token COLLATE_SYM1140=null;
		Token TEXT_SYM1143=null;
		Token BINARY1144=null;
		Token CHARACTER_SYM1145=null;
		Token SET_SYM1146=null;
		Token COLLATE_SYM1148=null;
		Token MEDIUMTEXT1151=null;
		Token BINARY1152=null;
		Token CHARACTER_SYM1153=null;
		Token SET_SYM1154=null;
		Token COLLATE_SYM1156=null;
		Token LONGTEXT1159=null;
		Token BINARY1160=null;
		Token CHARACTER_SYM1161=null;
		Token SET_SYM1162=null;
		Token COLLATE_SYM1164=null;
		Token ENUM1167=null;
		Token LPAREN1168=null;
		Token TEXT_STRING1169=null;
		Token COMMA1170=null;
		Token TEXT_STRING1171=null;
		Token RPAREN1172=null;
		Token CHARACTER_SYM1173=null;
		Token SET_SYM1174=null;
		Token COLLATE_SYM1176=null;
		Token DEFAULT1179=null;
		Token TEXT_STRING1180=null;
		Token SET_SYM1181=null;
		Token LPAREN1182=null;
		Token TEXT_STRING1183=null;
		Token COMMA1184=null;
		Token TEXT_STRING1185=null;
		Token RPAREN1186=null;
		Token CHARACTER_SYM1187=null;
		Token SET_SYM1188=null;
		Token COLLATE_SYM1190=null;
		Token DEFAULT1193=null;
		Token TEXT_STRING1194=null;
		ParserRuleReturnScope length955 =null;
		ParserRuleReturnScope null_or_notnull957 =null;
		ParserRuleReturnScope bit_literal959 =null;
		ParserRuleReturnScope length962 =null;
		ParserRuleReturnScope null_or_notnull966 =null;
		ParserRuleReturnScope number_literal968 =null;
		ParserRuleReturnScope length971 =null;
		ParserRuleReturnScope null_or_notnull975 =null;
		ParserRuleReturnScope number_literal977 =null;
		ParserRuleReturnScope length980 =null;
		ParserRuleReturnScope null_or_notnull984 =null;
		ParserRuleReturnScope number_literal986 =null;
		ParserRuleReturnScope length989 =null;
		ParserRuleReturnScope null_or_notnull993 =null;
		ParserRuleReturnScope number_literal995 =null;
		ParserRuleReturnScope length998 =null;
		ParserRuleReturnScope null_or_notnull1002 =null;
		ParserRuleReturnScope number_literal1004 =null;
		ParserRuleReturnScope length1007 =null;
		ParserRuleReturnScope null_or_notnull1011 =null;
		ParserRuleReturnScope number_literal1013 =null;
		ParserRuleReturnScope length1016 =null;
		ParserRuleReturnScope number_literal1018 =null;
		ParserRuleReturnScope null_or_notnull1022 =null;
		ParserRuleReturnScope number_literal1024 =null;
		ParserRuleReturnScope length1027 =null;
		ParserRuleReturnScope number_literal1029 =null;
		ParserRuleReturnScope null_or_notnull1033 =null;
		ParserRuleReturnScope number_literal1035 =null;
		ParserRuleReturnScope length1038 =null;
		ParserRuleReturnScope number_literal1040 =null;
		ParserRuleReturnScope null_or_notnull1044 =null;
		ParserRuleReturnScope number_literal1046 =null;
		ParserRuleReturnScope length1049 =null;
		ParserRuleReturnScope number_literal1051 =null;
		ParserRuleReturnScope null_or_notnull1055 =null;
		ParserRuleReturnScope number_literal1057 =null;
		ParserRuleReturnScope length1060 =null;
		ParserRuleReturnScope number_literal1062 =null;
		ParserRuleReturnScope null_or_notnull1066 =null;
		ParserRuleReturnScope number_literal1068 =null;
		ParserRuleReturnScope null_or_notnull1070 =null;
		ParserRuleReturnScope null_or_notnull1074 =null;
		ParserRuleReturnScope null_or_notnull1078 =null;
		ParserRuleReturnScope null_or_notnull1082 =null;
		ParserRuleReturnScope null_or_notnull1086 =null;
		ParserRuleReturnScope length1091 =null;
		ParserRuleReturnScope charset_name1095 =null;
		ParserRuleReturnScope collation_name1097 =null;
		ParserRuleReturnScope null_or_notnull1098 =null;
		ParserRuleReturnScope length1103 =null;
		ParserRuleReturnScope charset_name1107 =null;
		ParserRuleReturnScope collation_name1109 =null;
		ParserRuleReturnScope null_or_notnull1110 =null;
		ParserRuleReturnScope length1115 =null;
		ParserRuleReturnScope null_or_notnull1117 =null;
		ParserRuleReturnScope length1122 =null;
		ParserRuleReturnScope null_or_notnull1124 =null;
		ParserRuleReturnScope null_or_notnull1128 =null;
		ParserRuleReturnScope null_or_notnull1130 =null;
		ParserRuleReturnScope null_or_notnull1132 =null;
		ParserRuleReturnScope null_or_notnull1134 =null;
		ParserRuleReturnScope charset_name1139 =null;
		ParserRuleReturnScope collation_name1141 =null;
		ParserRuleReturnScope null_or_notnull1142 =null;
		ParserRuleReturnScope charset_name1147 =null;
		ParserRuleReturnScope collation_name1149 =null;
		ParserRuleReturnScope null_or_notnull1150 =null;
		ParserRuleReturnScope charset_name1155 =null;
		ParserRuleReturnScope collation_name1157 =null;
		ParserRuleReturnScope null_or_notnull1158 =null;
		ParserRuleReturnScope charset_name1163 =null;
		ParserRuleReturnScope collation_name1165 =null;
		ParserRuleReturnScope null_or_notnull1166 =null;
		ParserRuleReturnScope charset_name1175 =null;
		ParserRuleReturnScope collation_name1177 =null;
		ParserRuleReturnScope null_or_notnull1178 =null;
		ParserRuleReturnScope charset_name1189 =null;
		ParserRuleReturnScope collation_name1191 =null;
		ParserRuleReturnScope null_or_notnull1192 =null;

		Object BIT_SYM953_tree=null;
		Object LPAREN954_tree=null;
		Object RPAREN956_tree=null;
		Object DEFAULT958_tree=null;
		Object TINYINT960_tree=null;
		Object LPAREN961_tree=null;
		Object RPAREN963_tree=null;
		Object UNSIGNED_SYM964_tree=null;
		Object ZEROFILL965_tree=null;
		Object DEFAULT967_tree=null;
		Object SMALLINT969_tree=null;
		Object LPAREN970_tree=null;
		Object RPAREN972_tree=null;
		Object UNSIGNED_SYM973_tree=null;
		Object ZEROFILL974_tree=null;
		Object DEFAULT976_tree=null;
		Object MEDIUMINT978_tree=null;
		Object LPAREN979_tree=null;
		Object RPAREN981_tree=null;
		Object UNSIGNED_SYM982_tree=null;
		Object ZEROFILL983_tree=null;
		Object DEFAULT985_tree=null;
		Object INT_SYM987_tree=null;
		Object LPAREN988_tree=null;
		Object RPAREN990_tree=null;
		Object UNSIGNED_SYM991_tree=null;
		Object ZEROFILL992_tree=null;
		Object DEFAULT994_tree=null;
		Object INTEGER_SYM996_tree=null;
		Object LPAREN997_tree=null;
		Object RPAREN999_tree=null;
		Object UNSIGNED_SYM1000_tree=null;
		Object ZEROFILL1001_tree=null;
		Object DEFAULT1003_tree=null;
		Object BIGINT1005_tree=null;
		Object LPAREN1006_tree=null;
		Object RPAREN1008_tree=null;
		Object UNSIGNED_SYM1009_tree=null;
		Object ZEROFILL1010_tree=null;
		Object DEFAULT1012_tree=null;
		Object REAL1014_tree=null;
		Object LPAREN1015_tree=null;
		Object COMMA1017_tree=null;
		Object RPAREN1019_tree=null;
		Object UNSIGNED_SYM1020_tree=null;
		Object ZEROFILL1021_tree=null;
		Object DEFAULT1023_tree=null;
		Object DOUBLE_SYM1025_tree=null;
		Object LPAREN1026_tree=null;
		Object COMMA1028_tree=null;
		Object RPAREN1030_tree=null;
		Object UNSIGNED_SYM1031_tree=null;
		Object ZEROFILL1032_tree=null;
		Object DEFAULT1034_tree=null;
		Object FLOAT_SYM1036_tree=null;
		Object LPAREN1037_tree=null;
		Object COMMA1039_tree=null;
		Object RPAREN1041_tree=null;
		Object UNSIGNED_SYM1042_tree=null;
		Object ZEROFILL1043_tree=null;
		Object DEFAULT1045_tree=null;
		Object DECIMAL_SYM1047_tree=null;
		Object LPAREN1048_tree=null;
		Object COMMA1050_tree=null;
		Object RPAREN1052_tree=null;
		Object UNSIGNED_SYM1053_tree=null;
		Object ZEROFILL1054_tree=null;
		Object DEFAULT1056_tree=null;
		Object NUMERIC_SYM1058_tree=null;
		Object LPAREN1059_tree=null;
		Object COMMA1061_tree=null;
		Object RPAREN1063_tree=null;
		Object UNSIGNED_SYM1064_tree=null;
		Object ZEROFILL1065_tree=null;
		Object DEFAULT1067_tree=null;
		Object DATE_SYM1069_tree=null;
		Object DEFAULT1071_tree=null;
		Object TEXT_STRING1072_tree=null;
		Object TIME_SYM1073_tree=null;
		Object DEFAULT1075_tree=null;
		Object TEXT_STRING1076_tree=null;
		Object TIMESTAMP1077_tree=null;
		Object DEFAULT1079_tree=null;
		Object set1080_tree=null;
		Object DATETIME1081_tree=null;
		Object DEFAULT1083_tree=null;
		Object set1084_tree=null;
		Object YEAR1085_tree=null;
		Object DEFAULT1087_tree=null;
		Object INTEGER_NUM1088_tree=null;
		Object CHAR1089_tree=null;
		Object LPAREN1090_tree=null;
		Object RPAREN1092_tree=null;
		Object CHARACTER_SYM1093_tree=null;
		Object SET_SYM1094_tree=null;
		Object COLLATE_SYM1096_tree=null;
		Object DEFAULT1099_tree=null;
		Object TEXT_STRING1100_tree=null;
		Object VARCHAR1101_tree=null;
		Object LPAREN1102_tree=null;
		Object RPAREN1104_tree=null;
		Object CHARACTER_SYM1105_tree=null;
		Object SET_SYM1106_tree=null;
		Object COLLATE_SYM1108_tree=null;
		Object DEFAULT1111_tree=null;
		Object TEXT_STRING1112_tree=null;
		Object BINARY1113_tree=null;
		Object LPAREN1114_tree=null;
		Object RPAREN1116_tree=null;
		Object DEFAULT1118_tree=null;
		Object TEXT_STRING1119_tree=null;
		Object VARBINARY1120_tree=null;
		Object LPAREN1121_tree=null;
		Object RPAREN1123_tree=null;
		Object DEFAULT1125_tree=null;
		Object TEXT_STRING1126_tree=null;
		Object TINYBLOB1127_tree=null;
		Object BLOB_SYM1129_tree=null;
		Object MEDIUMBLOB1131_tree=null;
		Object LONGBLOB1133_tree=null;
		Object TINYTEXT1135_tree=null;
		Object BINARY1136_tree=null;
		Object CHARACTER_SYM1137_tree=null;
		Object SET_SYM1138_tree=null;
		Object COLLATE_SYM1140_tree=null;
		Object TEXT_SYM1143_tree=null;
		Object BINARY1144_tree=null;
		Object CHARACTER_SYM1145_tree=null;
		Object SET_SYM1146_tree=null;
		Object COLLATE_SYM1148_tree=null;
		Object MEDIUMTEXT1151_tree=null;
		Object BINARY1152_tree=null;
		Object CHARACTER_SYM1153_tree=null;
		Object SET_SYM1154_tree=null;
		Object COLLATE_SYM1156_tree=null;
		Object LONGTEXT1159_tree=null;
		Object BINARY1160_tree=null;
		Object CHARACTER_SYM1161_tree=null;
		Object SET_SYM1162_tree=null;
		Object COLLATE_SYM1164_tree=null;
		Object ENUM1167_tree=null;
		Object LPAREN1168_tree=null;
		Object TEXT_STRING1169_tree=null;
		Object COMMA1170_tree=null;
		Object TEXT_STRING1171_tree=null;
		Object RPAREN1172_tree=null;
		Object CHARACTER_SYM1173_tree=null;
		Object SET_SYM1174_tree=null;
		Object COLLATE_SYM1176_tree=null;
		Object DEFAULT1179_tree=null;
		Object TEXT_STRING1180_tree=null;
		Object SET_SYM1181_tree=null;
		Object LPAREN1182_tree=null;
		Object TEXT_STRING1183_tree=null;
		Object COMMA1184_tree=null;
		Object TEXT_STRING1185_tree=null;
		Object RPAREN1186_tree=null;
		Object CHARACTER_SYM1187_tree=null;
		Object SET_SYM1188_tree=null;
		Object COLLATE_SYM1190_tree=null;
		Object DEFAULT1193_tree=null;
		Object TEXT_STRING1194_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2085:24: ( ( BIT_SYM ( LPAREN length RPAREN )? ( null_or_notnull )? ( DEFAULT bit_literal )? ) | ( TINYINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( SMALLINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( MEDIUMINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( INT_SYM ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( INTEGER_SYM ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( BIGINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( REAL ( LPAREN length COMMA number_literal RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( DOUBLE_SYM ( LPAREN length COMMA number_literal RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( FLOAT_SYM ( LPAREN length COMMA number_literal RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( DECIMAL_SYM ( LPAREN length ( COMMA number_literal )? RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( NUMERIC_SYM ( LPAREN length ( COMMA number_literal )? RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? ) | ( DATE_SYM ( null_or_notnull )? ( DEFAULT TEXT_STRING )? ) | ( TIME_SYM ( null_or_notnull )? ( DEFAULT TEXT_STRING )? ) | ( TIMESTAMP ( null_or_notnull )? ( DEFAULT ( CURRENT_TIMESTAMP | TEXT_STRING ) )? ) | ( DATETIME ( null_or_notnull )? ( DEFAULT ( CURRENT_TIMESTAMP | TEXT_STRING ) )? ) | ( YEAR ( null_or_notnull )? ( DEFAULT INTEGER_NUM )? ) | ( CHAR ( LPAREN length RPAREN )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? ) | ( VARCHAR LPAREN length RPAREN ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? ) | ( BINARY ( LPAREN length RPAREN )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? ) | ( VARBINARY LPAREN length RPAREN ( null_or_notnull )? ( DEFAULT TEXT_STRING )? ) | ( TINYBLOB ( null_or_notnull )? ) | ( BLOB_SYM ( null_or_notnull )? ) | ( MEDIUMBLOB ( null_or_notnull )? ) | ( LONGBLOB ( null_or_notnull )? ) | ( TINYTEXT ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ) | ( TEXT_SYM ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ) | ( MEDIUMTEXT ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ) | ( LONGTEXT ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ) | ( ENUM LPAREN TEXT_STRING ( COMMA TEXT_STRING )* RPAREN ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? ) | ( SET_SYM LPAREN TEXT_STRING ( COMMA TEXT_STRING )* RPAREN ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? ) )
			int alt413=31;
			switch ( input.LA(1) ) {
			case BIT_SYM:
				{
				alt413=1;
				}
				break;
			case TINYINT:
				{
				alt413=2;
				}
				break;
			case SMALLINT:
				{
				alt413=3;
				}
				break;
			case MEDIUMINT:
				{
				alt413=4;
				}
				break;
			case INT_SYM:
				{
				alt413=5;
				}
				break;
			case INTEGER_SYM:
				{
				alt413=6;
				}
				break;
			case BIGINT:
				{
				alt413=7;
				}
				break;
			case REAL:
				{
				alt413=8;
				}
				break;
			case DOUBLE_SYM:
				{
				alt413=9;
				}
				break;
			case FLOAT_SYM:
				{
				alt413=10;
				}
				break;
			case DECIMAL_SYM:
				{
				alt413=11;
				}
				break;
			case NUMERIC_SYM:
				{
				alt413=12;
				}
				break;
			case DATE_SYM:
				{
				alt413=13;
				}
				break;
			case TIME_SYM:
				{
				alt413=14;
				}
				break;
			case TIMESTAMP:
				{
				alt413=15;
				}
				break;
			case DATETIME:
				{
				alt413=16;
				}
				break;
			case YEAR:
				{
				alt413=17;
				}
				break;
			case CHAR:
				{
				alt413=18;
				}
				break;
			case VARCHAR:
				{
				alt413=19;
				}
				break;
			case BINARY:
				{
				alt413=20;
				}
				break;
			case VARBINARY:
				{
				alt413=21;
				}
				break;
			case TINYBLOB:
				{
				alt413=22;
				}
				break;
			case BLOB_SYM:
				{
				alt413=23;
				}
				break;
			case MEDIUMBLOB:
				{
				alt413=24;
				}
				break;
			case LONGBLOB:
				{
				alt413=25;
				}
				break;
			case TINYTEXT:
				{
				alt413=26;
				}
				break;
			case TEXT_SYM:
				{
				alt413=27;
				}
				break;
			case MEDIUMTEXT:
				{
				alt413=28;
				}
				break;
			case LONGTEXT:
				{
				alt413=29;
				}
				break;
			case ENUM:
				{
				alt413=30;
				}
				break;
			case SET_SYM:
				{
				alt413=31;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 413, 0, input);
				throw nvae;
			}
			switch (alt413) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2086:5: ( BIT_SYM ( LPAREN length RPAREN )? ( null_or_notnull )? ( DEFAULT bit_literal )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2086:5: ( BIT_SYM ( LPAREN length RPAREN )? ( null_or_notnull )? ( DEFAULT bit_literal )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2086:8: BIT_SYM ( LPAREN length RPAREN )? ( null_or_notnull )? ( DEFAULT bit_literal )?
					{
					BIT_SYM953=(Token)match(input,BIT_SYM,FOLLOW_BIT_SYM_in_column_data_type_header27953); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					BIT_SYM953_tree = (Object)adaptor.create(BIT_SYM953);
					adaptor.addChild(root_0, BIT_SYM953_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2086:15: ( LPAREN length RPAREN )?
					int alt299=2;
					int LA299_0 = input.LA(1);
					if ( (LA299_0==LPAREN) ) {
						alt299=1;
					}
					switch (alt299) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2086:16: LPAREN length RPAREN
							{
							LPAREN954=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header27955); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN954_tree = (Object)adaptor.create(LPAREN954);
							adaptor.addChild(root_0, LPAREN954_tree);
							}

							pushFollow(FOLLOW_length_in_column_data_type_header27957);
							length955=length();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, length955.getTree());

							RPAREN956=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header27959); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN956_tree = (Object)adaptor.create(RPAREN956);
							adaptor.addChild(root_0, RPAREN956_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2086:39: ( null_or_notnull )?
					int alt300=2;
					int LA300_0 = input.LA(1);
					if ( (LA300_0==NOT_SYM||LA300_0==NULL_SYM) ) {
						alt300=1;
					}
					switch (alt300) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2086:40: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header27964);
							null_or_notnull957=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull957.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2086:58: ( DEFAULT bit_literal )?
					int alt301=2;
					int LA301_0 = input.LA(1);
					if ( (LA301_0==DEFAULT) ) {
						alt301=1;
					}
					switch (alt301) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2086:59: DEFAULT bit_literal
							{
							DEFAULT958=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header27969); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT958_tree = (Object)adaptor.create(DEFAULT958);
							adaptor.addChild(root_0, DEFAULT958_tree);
							}

							pushFollow(FOLLOW_bit_literal_in_column_data_type_header27971);
							bit_literal959=bit_literal();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, bit_literal959.getTree());

							}
							break;

					}

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2087:5: ( TINYINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2087:5: ( TINYINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2087:8: TINYINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )?
					{
					TINYINT960=(Token)match(input,TINYINT,FOLLOW_TINYINT_in_column_data_type_header27985); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TINYINT960_tree = (Object)adaptor.create(TINYINT960);
					adaptor.addChild(root_0, TINYINT960_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2087:15: ( LPAREN length RPAREN )?
					int alt302=2;
					int LA302_0 = input.LA(1);
					if ( (LA302_0==LPAREN) ) {
						alt302=1;
					}
					switch (alt302) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2087:16: LPAREN length RPAREN
							{
							LPAREN961=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header27987); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN961_tree = (Object)adaptor.create(LPAREN961);
							adaptor.addChild(root_0, LPAREN961_tree);
							}

							pushFollow(FOLLOW_length_in_column_data_type_header27989);
							length962=length();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, length962.getTree());

							RPAREN963=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header27991); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN963_tree = (Object)adaptor.create(RPAREN963);
							adaptor.addChild(root_0, RPAREN963_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2087:39: ( UNSIGNED_SYM )?
					int alt303=2;
					int LA303_0 = input.LA(1);
					if ( (LA303_0==UNSIGNED_SYM) ) {
						alt303=1;
					}
					switch (alt303) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2087:40: UNSIGNED_SYM
							{
							UNSIGNED_SYM964=(Token)match(input,UNSIGNED_SYM,FOLLOW_UNSIGNED_SYM_in_column_data_type_header27996); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							UNSIGNED_SYM964_tree = (Object)adaptor.create(UNSIGNED_SYM964);
							adaptor.addChild(root_0, UNSIGNED_SYM964_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2087:55: ( ZEROFILL )?
					int alt304=2;
					int LA304_0 = input.LA(1);
					if ( (LA304_0==ZEROFILL) ) {
						alt304=1;
					}
					switch (alt304) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2087:56: ZEROFILL
							{
							ZEROFILL965=(Token)match(input,ZEROFILL,FOLLOW_ZEROFILL_in_column_data_type_header28001); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ZEROFILL965_tree = (Object)adaptor.create(ZEROFILL965);
							adaptor.addChild(root_0, ZEROFILL965_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2087:67: ( null_or_notnull )?
					int alt305=2;
					int LA305_0 = input.LA(1);
					if ( (LA305_0==NOT_SYM||LA305_0==NULL_SYM) ) {
						alt305=1;
					}
					switch (alt305) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2087:68: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28006);
							null_or_notnull966=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull966.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2087:86: ( DEFAULT number_literal )?
					int alt306=2;
					int LA306_0 = input.LA(1);
					if ( (LA306_0==DEFAULT) ) {
						alt306=1;
					}
					switch (alt306) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2087:87: DEFAULT number_literal
							{
							DEFAULT967=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28011); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT967_tree = (Object)adaptor.create(DEFAULT967);
							adaptor.addChild(root_0, DEFAULT967_tree);
							}

							pushFollow(FOLLOW_number_literal_in_column_data_type_header28013);
							number_literal968=number_literal();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal968.getTree());

							}
							break;

					}

					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2088:5: ( SMALLINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2088:5: ( SMALLINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2088:8: SMALLINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )?
					{
					SMALLINT969=(Token)match(input,SMALLINT,FOLLOW_SMALLINT_in_column_data_type_header28027); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SMALLINT969_tree = (Object)adaptor.create(SMALLINT969);
					adaptor.addChild(root_0, SMALLINT969_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2088:16: ( LPAREN length RPAREN )?
					int alt307=2;
					int LA307_0 = input.LA(1);
					if ( (LA307_0==LPAREN) ) {
						alt307=1;
					}
					switch (alt307) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2088:17: LPAREN length RPAREN
							{
							LPAREN970=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header28029); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN970_tree = (Object)adaptor.create(LPAREN970);
							adaptor.addChild(root_0, LPAREN970_tree);
							}

							pushFollow(FOLLOW_length_in_column_data_type_header28031);
							length971=length();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, length971.getTree());

							RPAREN972=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header28033); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN972_tree = (Object)adaptor.create(RPAREN972);
							adaptor.addChild(root_0, RPAREN972_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2088:40: ( UNSIGNED_SYM )?
					int alt308=2;
					int LA308_0 = input.LA(1);
					if ( (LA308_0==UNSIGNED_SYM) ) {
						alt308=1;
					}
					switch (alt308) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2088:41: UNSIGNED_SYM
							{
							UNSIGNED_SYM973=(Token)match(input,UNSIGNED_SYM,FOLLOW_UNSIGNED_SYM_in_column_data_type_header28038); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							UNSIGNED_SYM973_tree = (Object)adaptor.create(UNSIGNED_SYM973);
							adaptor.addChild(root_0, UNSIGNED_SYM973_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2088:56: ( ZEROFILL )?
					int alt309=2;
					int LA309_0 = input.LA(1);
					if ( (LA309_0==ZEROFILL) ) {
						alt309=1;
					}
					switch (alt309) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2088:57: ZEROFILL
							{
							ZEROFILL974=(Token)match(input,ZEROFILL,FOLLOW_ZEROFILL_in_column_data_type_header28043); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ZEROFILL974_tree = (Object)adaptor.create(ZEROFILL974);
							adaptor.addChild(root_0, ZEROFILL974_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2088:68: ( null_or_notnull )?
					int alt310=2;
					int LA310_0 = input.LA(1);
					if ( (LA310_0==NOT_SYM||LA310_0==NULL_SYM) ) {
						alt310=1;
					}
					switch (alt310) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2088:69: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28048);
							null_or_notnull975=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull975.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2088:87: ( DEFAULT number_literal )?
					int alt311=2;
					int LA311_0 = input.LA(1);
					if ( (LA311_0==DEFAULT) ) {
						alt311=1;
					}
					switch (alt311) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2088:88: DEFAULT number_literal
							{
							DEFAULT976=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28053); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT976_tree = (Object)adaptor.create(DEFAULT976);
							adaptor.addChild(root_0, DEFAULT976_tree);
							}

							pushFollow(FOLLOW_number_literal_in_column_data_type_header28055);
							number_literal977=number_literal();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal977.getTree());

							}
							break;

					}

					}

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2089:5: ( MEDIUMINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2089:5: ( MEDIUMINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2089:8: MEDIUMINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )?
					{
					MEDIUMINT978=(Token)match(input,MEDIUMINT,FOLLOW_MEDIUMINT_in_column_data_type_header28069); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MEDIUMINT978_tree = (Object)adaptor.create(MEDIUMINT978);
					adaptor.addChild(root_0, MEDIUMINT978_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2089:17: ( LPAREN length RPAREN )?
					int alt312=2;
					int LA312_0 = input.LA(1);
					if ( (LA312_0==LPAREN) ) {
						alt312=1;
					}
					switch (alt312) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2089:18: LPAREN length RPAREN
							{
							LPAREN979=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header28071); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN979_tree = (Object)adaptor.create(LPAREN979);
							adaptor.addChild(root_0, LPAREN979_tree);
							}

							pushFollow(FOLLOW_length_in_column_data_type_header28073);
							length980=length();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, length980.getTree());

							RPAREN981=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header28075); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN981_tree = (Object)adaptor.create(RPAREN981);
							adaptor.addChild(root_0, RPAREN981_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2089:41: ( UNSIGNED_SYM )?
					int alt313=2;
					int LA313_0 = input.LA(1);
					if ( (LA313_0==UNSIGNED_SYM) ) {
						alt313=1;
					}
					switch (alt313) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2089:42: UNSIGNED_SYM
							{
							UNSIGNED_SYM982=(Token)match(input,UNSIGNED_SYM,FOLLOW_UNSIGNED_SYM_in_column_data_type_header28080); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							UNSIGNED_SYM982_tree = (Object)adaptor.create(UNSIGNED_SYM982);
							adaptor.addChild(root_0, UNSIGNED_SYM982_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2089:57: ( ZEROFILL )?
					int alt314=2;
					int LA314_0 = input.LA(1);
					if ( (LA314_0==ZEROFILL) ) {
						alt314=1;
					}
					switch (alt314) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2089:58: ZEROFILL
							{
							ZEROFILL983=(Token)match(input,ZEROFILL,FOLLOW_ZEROFILL_in_column_data_type_header28085); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ZEROFILL983_tree = (Object)adaptor.create(ZEROFILL983);
							adaptor.addChild(root_0, ZEROFILL983_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2089:69: ( null_or_notnull )?
					int alt315=2;
					int LA315_0 = input.LA(1);
					if ( (LA315_0==NOT_SYM||LA315_0==NULL_SYM) ) {
						alt315=1;
					}
					switch (alt315) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2089:70: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28090);
							null_or_notnull984=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull984.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2089:88: ( DEFAULT number_literal )?
					int alt316=2;
					int LA316_0 = input.LA(1);
					if ( (LA316_0==DEFAULT) ) {
						alt316=1;
					}
					switch (alt316) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2089:89: DEFAULT number_literal
							{
							DEFAULT985=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28095); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT985_tree = (Object)adaptor.create(DEFAULT985);
							adaptor.addChild(root_0, DEFAULT985_tree);
							}

							pushFollow(FOLLOW_number_literal_in_column_data_type_header28097);
							number_literal986=number_literal();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal986.getTree());

							}
							break;

					}

					}

					}
					break;
				case 5 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2090:5: ( INT_SYM ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2090:5: ( INT_SYM ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2090:8: INT_SYM ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )?
					{
					INT_SYM987=(Token)match(input,INT_SYM,FOLLOW_INT_SYM_in_column_data_type_header28111); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INT_SYM987_tree = (Object)adaptor.create(INT_SYM987);
					adaptor.addChild(root_0, INT_SYM987_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2090:15: ( LPAREN length RPAREN )?
					int alt317=2;
					int LA317_0 = input.LA(1);
					if ( (LA317_0==LPAREN) ) {
						alt317=1;
					}
					switch (alt317) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2090:16: LPAREN length RPAREN
							{
							LPAREN988=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header28113); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN988_tree = (Object)adaptor.create(LPAREN988);
							adaptor.addChild(root_0, LPAREN988_tree);
							}

							pushFollow(FOLLOW_length_in_column_data_type_header28115);
							length989=length();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, length989.getTree());

							RPAREN990=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header28117); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN990_tree = (Object)adaptor.create(RPAREN990);
							adaptor.addChild(root_0, RPAREN990_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2090:39: ( UNSIGNED_SYM )?
					int alt318=2;
					int LA318_0 = input.LA(1);
					if ( (LA318_0==UNSIGNED_SYM) ) {
						alt318=1;
					}
					switch (alt318) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2090:40: UNSIGNED_SYM
							{
							UNSIGNED_SYM991=(Token)match(input,UNSIGNED_SYM,FOLLOW_UNSIGNED_SYM_in_column_data_type_header28122); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							UNSIGNED_SYM991_tree = (Object)adaptor.create(UNSIGNED_SYM991);
							adaptor.addChild(root_0, UNSIGNED_SYM991_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2090:55: ( ZEROFILL )?
					int alt319=2;
					int LA319_0 = input.LA(1);
					if ( (LA319_0==ZEROFILL) ) {
						alt319=1;
					}
					switch (alt319) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2090:56: ZEROFILL
							{
							ZEROFILL992=(Token)match(input,ZEROFILL,FOLLOW_ZEROFILL_in_column_data_type_header28127); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ZEROFILL992_tree = (Object)adaptor.create(ZEROFILL992);
							adaptor.addChild(root_0, ZEROFILL992_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2090:67: ( null_or_notnull )?
					int alt320=2;
					int LA320_0 = input.LA(1);
					if ( (LA320_0==NOT_SYM||LA320_0==NULL_SYM) ) {
						alt320=1;
					}
					switch (alt320) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2090:68: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28132);
							null_or_notnull993=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull993.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2090:86: ( DEFAULT number_literal )?
					int alt321=2;
					int LA321_0 = input.LA(1);
					if ( (LA321_0==DEFAULT) ) {
						alt321=1;
					}
					switch (alt321) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2090:87: DEFAULT number_literal
							{
							DEFAULT994=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28137); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT994_tree = (Object)adaptor.create(DEFAULT994);
							adaptor.addChild(root_0, DEFAULT994_tree);
							}

							pushFollow(FOLLOW_number_literal_in_column_data_type_header28139);
							number_literal995=number_literal();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal995.getTree());

							}
							break;

					}

					}

					}
					break;
				case 6 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2091:5: ( INTEGER_SYM ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2091:5: ( INTEGER_SYM ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2091:8: INTEGER_SYM ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )?
					{
					INTEGER_SYM996=(Token)match(input,INTEGER_SYM,FOLLOW_INTEGER_SYM_in_column_data_type_header28153); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_SYM996_tree = (Object)adaptor.create(INTEGER_SYM996);
					adaptor.addChild(root_0, INTEGER_SYM996_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2091:19: ( LPAREN length RPAREN )?
					int alt322=2;
					int LA322_0 = input.LA(1);
					if ( (LA322_0==LPAREN) ) {
						alt322=1;
					}
					switch (alt322) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2091:20: LPAREN length RPAREN
							{
							LPAREN997=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header28155); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN997_tree = (Object)adaptor.create(LPAREN997);
							adaptor.addChild(root_0, LPAREN997_tree);
							}

							pushFollow(FOLLOW_length_in_column_data_type_header28157);
							length998=length();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, length998.getTree());

							RPAREN999=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header28159); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN999_tree = (Object)adaptor.create(RPAREN999);
							adaptor.addChild(root_0, RPAREN999_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2091:43: ( UNSIGNED_SYM )?
					int alt323=2;
					int LA323_0 = input.LA(1);
					if ( (LA323_0==UNSIGNED_SYM) ) {
						alt323=1;
					}
					switch (alt323) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2091:44: UNSIGNED_SYM
							{
							UNSIGNED_SYM1000=(Token)match(input,UNSIGNED_SYM,FOLLOW_UNSIGNED_SYM_in_column_data_type_header28164); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							UNSIGNED_SYM1000_tree = (Object)adaptor.create(UNSIGNED_SYM1000);
							adaptor.addChild(root_0, UNSIGNED_SYM1000_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2091:59: ( ZEROFILL )?
					int alt324=2;
					int LA324_0 = input.LA(1);
					if ( (LA324_0==ZEROFILL) ) {
						alt324=1;
					}
					switch (alt324) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2091:60: ZEROFILL
							{
							ZEROFILL1001=(Token)match(input,ZEROFILL,FOLLOW_ZEROFILL_in_column_data_type_header28169); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ZEROFILL1001_tree = (Object)adaptor.create(ZEROFILL1001);
							adaptor.addChild(root_0, ZEROFILL1001_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2091:71: ( null_or_notnull )?
					int alt325=2;
					int LA325_0 = input.LA(1);
					if ( (LA325_0==NOT_SYM||LA325_0==NULL_SYM) ) {
						alt325=1;
					}
					switch (alt325) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2091:72: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28174);
							null_or_notnull1002=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1002.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2091:90: ( DEFAULT number_literal )?
					int alt326=2;
					int LA326_0 = input.LA(1);
					if ( (LA326_0==DEFAULT) ) {
						alt326=1;
					}
					switch (alt326) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2091:91: DEFAULT number_literal
							{
							DEFAULT1003=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28179); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1003_tree = (Object)adaptor.create(DEFAULT1003);
							adaptor.addChild(root_0, DEFAULT1003_tree);
							}

							pushFollow(FOLLOW_number_literal_in_column_data_type_header28181);
							number_literal1004=number_literal();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal1004.getTree());

							}
							break;

					}

					}

					}
					break;
				case 7 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2092:5: ( BIGINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2092:5: ( BIGINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2092:8: BIGINT ( LPAREN length RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )?
					{
					BIGINT1005=(Token)match(input,BIGINT,FOLLOW_BIGINT_in_column_data_type_header28195); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					BIGINT1005_tree = (Object)adaptor.create(BIGINT1005);
					adaptor.addChild(root_0, BIGINT1005_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2092:14: ( LPAREN length RPAREN )?
					int alt327=2;
					int LA327_0 = input.LA(1);
					if ( (LA327_0==LPAREN) ) {
						alt327=1;
					}
					switch (alt327) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2092:15: LPAREN length RPAREN
							{
							LPAREN1006=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header28197); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN1006_tree = (Object)adaptor.create(LPAREN1006);
							adaptor.addChild(root_0, LPAREN1006_tree);
							}

							pushFollow(FOLLOW_length_in_column_data_type_header28199);
							length1007=length();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, length1007.getTree());

							RPAREN1008=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header28201); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN1008_tree = (Object)adaptor.create(RPAREN1008);
							adaptor.addChild(root_0, RPAREN1008_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2092:38: ( UNSIGNED_SYM )?
					int alt328=2;
					int LA328_0 = input.LA(1);
					if ( (LA328_0==UNSIGNED_SYM) ) {
						alt328=1;
					}
					switch (alt328) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2092:39: UNSIGNED_SYM
							{
							UNSIGNED_SYM1009=(Token)match(input,UNSIGNED_SYM,FOLLOW_UNSIGNED_SYM_in_column_data_type_header28206); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							UNSIGNED_SYM1009_tree = (Object)adaptor.create(UNSIGNED_SYM1009);
							adaptor.addChild(root_0, UNSIGNED_SYM1009_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2092:54: ( ZEROFILL )?
					int alt329=2;
					int LA329_0 = input.LA(1);
					if ( (LA329_0==ZEROFILL) ) {
						alt329=1;
					}
					switch (alt329) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2092:55: ZEROFILL
							{
							ZEROFILL1010=(Token)match(input,ZEROFILL,FOLLOW_ZEROFILL_in_column_data_type_header28211); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ZEROFILL1010_tree = (Object)adaptor.create(ZEROFILL1010);
							adaptor.addChild(root_0, ZEROFILL1010_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2092:66: ( null_or_notnull )?
					int alt330=2;
					int LA330_0 = input.LA(1);
					if ( (LA330_0==NOT_SYM||LA330_0==NULL_SYM) ) {
						alt330=1;
					}
					switch (alt330) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2092:67: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28216);
							null_or_notnull1011=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1011.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2092:85: ( DEFAULT number_literal )?
					int alt331=2;
					int LA331_0 = input.LA(1);
					if ( (LA331_0==DEFAULT) ) {
						alt331=1;
					}
					switch (alt331) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2092:86: DEFAULT number_literal
							{
							DEFAULT1012=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28221); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1012_tree = (Object)adaptor.create(DEFAULT1012);
							adaptor.addChild(root_0, DEFAULT1012_tree);
							}

							pushFollow(FOLLOW_number_literal_in_column_data_type_header28223);
							number_literal1013=number_literal();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal1013.getTree());

							}
							break;

					}

					}

					}
					break;
				case 8 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2093:5: ( REAL ( LPAREN length COMMA number_literal RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2093:5: ( REAL ( LPAREN length COMMA number_literal RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2093:8: REAL ( LPAREN length COMMA number_literal RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )?
					{
					REAL1014=(Token)match(input,REAL,FOLLOW_REAL_in_column_data_type_header28237); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					REAL1014_tree = (Object)adaptor.create(REAL1014);
					adaptor.addChild(root_0, REAL1014_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2093:12: ( LPAREN length COMMA number_literal RPAREN )?
					int alt332=2;
					int LA332_0 = input.LA(1);
					if ( (LA332_0==LPAREN) ) {
						alt332=1;
					}
					switch (alt332) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2093:13: LPAREN length COMMA number_literal RPAREN
							{
							LPAREN1015=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header28239); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN1015_tree = (Object)adaptor.create(LPAREN1015);
							adaptor.addChild(root_0, LPAREN1015_tree);
							}

							pushFollow(FOLLOW_length_in_column_data_type_header28241);
							length1016=length();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, length1016.getTree());

							COMMA1017=(Token)match(input,COMMA,FOLLOW_COMMA_in_column_data_type_header28243); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA1017_tree = (Object)adaptor.create(COMMA1017);
							adaptor.addChild(root_0, COMMA1017_tree);
							}

							pushFollow(FOLLOW_number_literal_in_column_data_type_header28245);
							number_literal1018=number_literal();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal1018.getTree());

							RPAREN1019=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header28247); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN1019_tree = (Object)adaptor.create(RPAREN1019);
							adaptor.addChild(root_0, RPAREN1019_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2093:57: ( UNSIGNED_SYM )?
					int alt333=2;
					int LA333_0 = input.LA(1);
					if ( (LA333_0==UNSIGNED_SYM) ) {
						alt333=1;
					}
					switch (alt333) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2093:58: UNSIGNED_SYM
							{
							UNSIGNED_SYM1020=(Token)match(input,UNSIGNED_SYM,FOLLOW_UNSIGNED_SYM_in_column_data_type_header28252); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							UNSIGNED_SYM1020_tree = (Object)adaptor.create(UNSIGNED_SYM1020);
							adaptor.addChild(root_0, UNSIGNED_SYM1020_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2093:73: ( ZEROFILL )?
					int alt334=2;
					int LA334_0 = input.LA(1);
					if ( (LA334_0==ZEROFILL) ) {
						alt334=1;
					}
					switch (alt334) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2093:74: ZEROFILL
							{
							ZEROFILL1021=(Token)match(input,ZEROFILL,FOLLOW_ZEROFILL_in_column_data_type_header28257); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ZEROFILL1021_tree = (Object)adaptor.create(ZEROFILL1021);
							adaptor.addChild(root_0, ZEROFILL1021_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2093:85: ( null_or_notnull )?
					int alt335=2;
					int LA335_0 = input.LA(1);
					if ( (LA335_0==NOT_SYM||LA335_0==NULL_SYM) ) {
						alt335=1;
					}
					switch (alt335) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2093:86: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28262);
							null_or_notnull1022=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1022.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2093:104: ( DEFAULT number_literal )?
					int alt336=2;
					int LA336_0 = input.LA(1);
					if ( (LA336_0==DEFAULT) ) {
						alt336=1;
					}
					switch (alt336) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2093:105: DEFAULT number_literal
							{
							DEFAULT1023=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28267); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1023_tree = (Object)adaptor.create(DEFAULT1023);
							adaptor.addChild(root_0, DEFAULT1023_tree);
							}

							pushFollow(FOLLOW_number_literal_in_column_data_type_header28269);
							number_literal1024=number_literal();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal1024.getTree());

							}
							break;

					}

					}

					}
					break;
				case 9 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2094:5: ( DOUBLE_SYM ( LPAREN length COMMA number_literal RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2094:5: ( DOUBLE_SYM ( LPAREN length COMMA number_literal RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2094:8: DOUBLE_SYM ( LPAREN length COMMA number_literal RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )?
					{
					DOUBLE_SYM1025=(Token)match(input,DOUBLE_SYM,FOLLOW_DOUBLE_SYM_in_column_data_type_header28283); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DOUBLE_SYM1025_tree = (Object)adaptor.create(DOUBLE_SYM1025);
					adaptor.addChild(root_0, DOUBLE_SYM1025_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2094:18: ( LPAREN length COMMA number_literal RPAREN )?
					int alt337=2;
					int LA337_0 = input.LA(1);
					if ( (LA337_0==LPAREN) ) {
						alt337=1;
					}
					switch (alt337) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2094:19: LPAREN length COMMA number_literal RPAREN
							{
							LPAREN1026=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header28285); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN1026_tree = (Object)adaptor.create(LPAREN1026);
							adaptor.addChild(root_0, LPAREN1026_tree);
							}

							pushFollow(FOLLOW_length_in_column_data_type_header28287);
							length1027=length();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, length1027.getTree());

							COMMA1028=(Token)match(input,COMMA,FOLLOW_COMMA_in_column_data_type_header28289); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA1028_tree = (Object)adaptor.create(COMMA1028);
							adaptor.addChild(root_0, COMMA1028_tree);
							}

							pushFollow(FOLLOW_number_literal_in_column_data_type_header28291);
							number_literal1029=number_literal();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal1029.getTree());

							RPAREN1030=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header28293); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN1030_tree = (Object)adaptor.create(RPAREN1030);
							adaptor.addChild(root_0, RPAREN1030_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2094:63: ( UNSIGNED_SYM )?
					int alt338=2;
					int LA338_0 = input.LA(1);
					if ( (LA338_0==UNSIGNED_SYM) ) {
						alt338=1;
					}
					switch (alt338) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2094:64: UNSIGNED_SYM
							{
							UNSIGNED_SYM1031=(Token)match(input,UNSIGNED_SYM,FOLLOW_UNSIGNED_SYM_in_column_data_type_header28298); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							UNSIGNED_SYM1031_tree = (Object)adaptor.create(UNSIGNED_SYM1031);
							adaptor.addChild(root_0, UNSIGNED_SYM1031_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2094:79: ( ZEROFILL )?
					int alt339=2;
					int LA339_0 = input.LA(1);
					if ( (LA339_0==ZEROFILL) ) {
						alt339=1;
					}
					switch (alt339) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2094:80: ZEROFILL
							{
							ZEROFILL1032=(Token)match(input,ZEROFILL,FOLLOW_ZEROFILL_in_column_data_type_header28303); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ZEROFILL1032_tree = (Object)adaptor.create(ZEROFILL1032);
							adaptor.addChild(root_0, ZEROFILL1032_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2094:91: ( null_or_notnull )?
					int alt340=2;
					int LA340_0 = input.LA(1);
					if ( (LA340_0==NOT_SYM||LA340_0==NULL_SYM) ) {
						alt340=1;
					}
					switch (alt340) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2094:92: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28308);
							null_or_notnull1033=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1033.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2094:110: ( DEFAULT number_literal )?
					int alt341=2;
					int LA341_0 = input.LA(1);
					if ( (LA341_0==DEFAULT) ) {
						alt341=1;
					}
					switch (alt341) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2094:111: DEFAULT number_literal
							{
							DEFAULT1034=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28313); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1034_tree = (Object)adaptor.create(DEFAULT1034);
							adaptor.addChild(root_0, DEFAULT1034_tree);
							}

							pushFollow(FOLLOW_number_literal_in_column_data_type_header28315);
							number_literal1035=number_literal();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal1035.getTree());

							}
							break;

					}

					}

					}
					break;
				case 10 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2095:5: ( FLOAT_SYM ( LPAREN length COMMA number_literal RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2095:5: ( FLOAT_SYM ( LPAREN length COMMA number_literal RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2095:8: FLOAT_SYM ( LPAREN length COMMA number_literal RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )?
					{
					FLOAT_SYM1036=(Token)match(input,FLOAT_SYM,FOLLOW_FLOAT_SYM_in_column_data_type_header28329); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					FLOAT_SYM1036_tree = (Object)adaptor.create(FLOAT_SYM1036);
					adaptor.addChild(root_0, FLOAT_SYM1036_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2095:17: ( LPAREN length COMMA number_literal RPAREN )?
					int alt342=2;
					int LA342_0 = input.LA(1);
					if ( (LA342_0==LPAREN) ) {
						alt342=1;
					}
					switch (alt342) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2095:18: LPAREN length COMMA number_literal RPAREN
							{
							LPAREN1037=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header28331); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN1037_tree = (Object)adaptor.create(LPAREN1037);
							adaptor.addChild(root_0, LPAREN1037_tree);
							}

							pushFollow(FOLLOW_length_in_column_data_type_header28333);
							length1038=length();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, length1038.getTree());

							COMMA1039=(Token)match(input,COMMA,FOLLOW_COMMA_in_column_data_type_header28335); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA1039_tree = (Object)adaptor.create(COMMA1039);
							adaptor.addChild(root_0, COMMA1039_tree);
							}

							pushFollow(FOLLOW_number_literal_in_column_data_type_header28337);
							number_literal1040=number_literal();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal1040.getTree());

							RPAREN1041=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header28339); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN1041_tree = (Object)adaptor.create(RPAREN1041);
							adaptor.addChild(root_0, RPAREN1041_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2095:62: ( UNSIGNED_SYM )?
					int alt343=2;
					int LA343_0 = input.LA(1);
					if ( (LA343_0==UNSIGNED_SYM) ) {
						alt343=1;
					}
					switch (alt343) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2095:63: UNSIGNED_SYM
							{
							UNSIGNED_SYM1042=(Token)match(input,UNSIGNED_SYM,FOLLOW_UNSIGNED_SYM_in_column_data_type_header28344); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							UNSIGNED_SYM1042_tree = (Object)adaptor.create(UNSIGNED_SYM1042);
							adaptor.addChild(root_0, UNSIGNED_SYM1042_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2095:78: ( ZEROFILL )?
					int alt344=2;
					int LA344_0 = input.LA(1);
					if ( (LA344_0==ZEROFILL) ) {
						alt344=1;
					}
					switch (alt344) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2095:79: ZEROFILL
							{
							ZEROFILL1043=(Token)match(input,ZEROFILL,FOLLOW_ZEROFILL_in_column_data_type_header28349); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ZEROFILL1043_tree = (Object)adaptor.create(ZEROFILL1043);
							adaptor.addChild(root_0, ZEROFILL1043_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2095:90: ( null_or_notnull )?
					int alt345=2;
					int LA345_0 = input.LA(1);
					if ( (LA345_0==NOT_SYM||LA345_0==NULL_SYM) ) {
						alt345=1;
					}
					switch (alt345) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2095:91: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28354);
							null_or_notnull1044=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1044.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2095:109: ( DEFAULT number_literal )?
					int alt346=2;
					int LA346_0 = input.LA(1);
					if ( (LA346_0==DEFAULT) ) {
						alt346=1;
					}
					switch (alt346) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2095:110: DEFAULT number_literal
							{
							DEFAULT1045=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28359); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1045_tree = (Object)adaptor.create(DEFAULT1045);
							adaptor.addChild(root_0, DEFAULT1045_tree);
							}

							pushFollow(FOLLOW_number_literal_in_column_data_type_header28361);
							number_literal1046=number_literal();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal1046.getTree());

							}
							break;

					}

					}

					}
					break;
				case 11 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2096:5: ( DECIMAL_SYM ( LPAREN length ( COMMA number_literal )? RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2096:5: ( DECIMAL_SYM ( LPAREN length ( COMMA number_literal )? RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2096:8: DECIMAL_SYM ( LPAREN length ( COMMA number_literal )? RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )?
					{
					DECIMAL_SYM1047=(Token)match(input,DECIMAL_SYM,FOLLOW_DECIMAL_SYM_in_column_data_type_header28375); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DECIMAL_SYM1047_tree = (Object)adaptor.create(DECIMAL_SYM1047);
					adaptor.addChild(root_0, DECIMAL_SYM1047_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2096:19: ( LPAREN length ( COMMA number_literal )? RPAREN )?
					int alt348=2;
					int LA348_0 = input.LA(1);
					if ( (LA348_0==LPAREN) ) {
						alt348=1;
					}
					switch (alt348) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2096:20: LPAREN length ( COMMA number_literal )? RPAREN
							{
							LPAREN1048=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header28377); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN1048_tree = (Object)adaptor.create(LPAREN1048);
							adaptor.addChild(root_0, LPAREN1048_tree);
							}

							pushFollow(FOLLOW_length_in_column_data_type_header28379);
							length1049=length();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, length1049.getTree());

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2096:33: ( COMMA number_literal )?
							int alt347=2;
							int LA347_0 = input.LA(1);
							if ( (LA347_0==COMMA) ) {
								alt347=1;
							}
							switch (alt347) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2096:35: COMMA number_literal
									{
									COMMA1050=(Token)match(input,COMMA,FOLLOW_COMMA_in_column_data_type_header28382); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									COMMA1050_tree = (Object)adaptor.create(COMMA1050);
									adaptor.addChild(root_0, COMMA1050_tree);
									}

									pushFollow(FOLLOW_number_literal_in_column_data_type_header28384);
									number_literal1051=number_literal();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal1051.getTree());

									}
									break;

							}

							RPAREN1052=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header28388); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN1052_tree = (Object)adaptor.create(RPAREN1052);
							adaptor.addChild(root_0, RPAREN1052_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2096:67: ( UNSIGNED_SYM )?
					int alt349=2;
					int LA349_0 = input.LA(1);
					if ( (LA349_0==UNSIGNED_SYM) ) {
						alt349=1;
					}
					switch (alt349) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2096:68: UNSIGNED_SYM
							{
							UNSIGNED_SYM1053=(Token)match(input,UNSIGNED_SYM,FOLLOW_UNSIGNED_SYM_in_column_data_type_header28393); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							UNSIGNED_SYM1053_tree = (Object)adaptor.create(UNSIGNED_SYM1053);
							adaptor.addChild(root_0, UNSIGNED_SYM1053_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2096:83: ( ZEROFILL )?
					int alt350=2;
					int LA350_0 = input.LA(1);
					if ( (LA350_0==ZEROFILL) ) {
						alt350=1;
					}
					switch (alt350) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2096:84: ZEROFILL
							{
							ZEROFILL1054=(Token)match(input,ZEROFILL,FOLLOW_ZEROFILL_in_column_data_type_header28398); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ZEROFILL1054_tree = (Object)adaptor.create(ZEROFILL1054);
							adaptor.addChild(root_0, ZEROFILL1054_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2096:95: ( null_or_notnull )?
					int alt351=2;
					int LA351_0 = input.LA(1);
					if ( (LA351_0==NOT_SYM||LA351_0==NULL_SYM) ) {
						alt351=1;
					}
					switch (alt351) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2096:96: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28403);
							null_or_notnull1055=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1055.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2096:114: ( DEFAULT number_literal )?
					int alt352=2;
					int LA352_0 = input.LA(1);
					if ( (LA352_0==DEFAULT) ) {
						alt352=1;
					}
					switch (alt352) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2096:115: DEFAULT number_literal
							{
							DEFAULT1056=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28408); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1056_tree = (Object)adaptor.create(DEFAULT1056);
							adaptor.addChild(root_0, DEFAULT1056_tree);
							}

							pushFollow(FOLLOW_number_literal_in_column_data_type_header28410);
							number_literal1057=number_literal();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal1057.getTree());

							}
							break;

					}

					}

					}
					break;
				case 12 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2097:5: ( NUMERIC_SYM ( LPAREN length ( COMMA number_literal )? RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2097:5: ( NUMERIC_SYM ( LPAREN length ( COMMA number_literal )? RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2097:8: NUMERIC_SYM ( LPAREN length ( COMMA number_literal )? RPAREN )? ( UNSIGNED_SYM )? ( ZEROFILL )? ( null_or_notnull )? ( DEFAULT number_literal )?
					{
					NUMERIC_SYM1058=(Token)match(input,NUMERIC_SYM,FOLLOW_NUMERIC_SYM_in_column_data_type_header28424); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					NUMERIC_SYM1058_tree = (Object)adaptor.create(NUMERIC_SYM1058);
					adaptor.addChild(root_0, NUMERIC_SYM1058_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2097:19: ( LPAREN length ( COMMA number_literal )? RPAREN )?
					int alt354=2;
					int LA354_0 = input.LA(1);
					if ( (LA354_0==LPAREN) ) {
						alt354=1;
					}
					switch (alt354) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2097:20: LPAREN length ( COMMA number_literal )? RPAREN
							{
							LPAREN1059=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header28426); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN1059_tree = (Object)adaptor.create(LPAREN1059);
							adaptor.addChild(root_0, LPAREN1059_tree);
							}

							pushFollow(FOLLOW_length_in_column_data_type_header28428);
							length1060=length();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, length1060.getTree());

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2097:33: ( COMMA number_literal )?
							int alt353=2;
							int LA353_0 = input.LA(1);
							if ( (LA353_0==COMMA) ) {
								alt353=1;
							}
							switch (alt353) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2097:35: COMMA number_literal
									{
									COMMA1061=(Token)match(input,COMMA,FOLLOW_COMMA_in_column_data_type_header28431); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									COMMA1061_tree = (Object)adaptor.create(COMMA1061);
									adaptor.addChild(root_0, COMMA1061_tree);
									}

									pushFollow(FOLLOW_number_literal_in_column_data_type_header28433);
									number_literal1062=number_literal();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal1062.getTree());

									}
									break;

							}

							RPAREN1063=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header28437); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN1063_tree = (Object)adaptor.create(RPAREN1063);
							adaptor.addChild(root_0, RPAREN1063_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2097:67: ( UNSIGNED_SYM )?
					int alt355=2;
					int LA355_0 = input.LA(1);
					if ( (LA355_0==UNSIGNED_SYM) ) {
						alt355=1;
					}
					switch (alt355) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2097:68: UNSIGNED_SYM
							{
							UNSIGNED_SYM1064=(Token)match(input,UNSIGNED_SYM,FOLLOW_UNSIGNED_SYM_in_column_data_type_header28442); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							UNSIGNED_SYM1064_tree = (Object)adaptor.create(UNSIGNED_SYM1064);
							adaptor.addChild(root_0, UNSIGNED_SYM1064_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2097:83: ( ZEROFILL )?
					int alt356=2;
					int LA356_0 = input.LA(1);
					if ( (LA356_0==ZEROFILL) ) {
						alt356=1;
					}
					switch (alt356) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2097:84: ZEROFILL
							{
							ZEROFILL1065=(Token)match(input,ZEROFILL,FOLLOW_ZEROFILL_in_column_data_type_header28447); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ZEROFILL1065_tree = (Object)adaptor.create(ZEROFILL1065);
							adaptor.addChild(root_0, ZEROFILL1065_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2097:95: ( null_or_notnull )?
					int alt357=2;
					int LA357_0 = input.LA(1);
					if ( (LA357_0==NOT_SYM||LA357_0==NULL_SYM) ) {
						alt357=1;
					}
					switch (alt357) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2097:96: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28452);
							null_or_notnull1066=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1066.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2097:114: ( DEFAULT number_literal )?
					int alt358=2;
					int LA358_0 = input.LA(1);
					if ( (LA358_0==DEFAULT) ) {
						alt358=1;
					}
					switch (alt358) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2097:115: DEFAULT number_literal
							{
							DEFAULT1067=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28457); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1067_tree = (Object)adaptor.create(DEFAULT1067);
							adaptor.addChild(root_0, DEFAULT1067_tree);
							}

							pushFollow(FOLLOW_number_literal_in_column_data_type_header28459);
							number_literal1068=number_literal();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, number_literal1068.getTree());

							}
							break;

					}

					}

					}
					break;
				case 13 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2098:5: ( DATE_SYM ( null_or_notnull )? ( DEFAULT TEXT_STRING )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2098:5: ( DATE_SYM ( null_or_notnull )? ( DEFAULT TEXT_STRING )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2098:8: DATE_SYM ( null_or_notnull )? ( DEFAULT TEXT_STRING )?
					{
					DATE_SYM1069=(Token)match(input,DATE_SYM,FOLLOW_DATE_SYM_in_column_data_type_header28473); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DATE_SYM1069_tree = (Object)adaptor.create(DATE_SYM1069);
					adaptor.addChild(root_0, DATE_SYM1069_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2098:17: ( null_or_notnull )?
					int alt359=2;
					int LA359_0 = input.LA(1);
					if ( (LA359_0==NOT_SYM||LA359_0==NULL_SYM) ) {
						alt359=1;
					}
					switch (alt359) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2098:18: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28476);
							null_or_notnull1070=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1070.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2098:36: ( DEFAULT TEXT_STRING )?
					int alt360=2;
					int LA360_0 = input.LA(1);
					if ( (LA360_0==DEFAULT) ) {
						alt360=1;
					}
					switch (alt360) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2098:37: DEFAULT TEXT_STRING
							{
							DEFAULT1071=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28481); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1071_tree = (Object)adaptor.create(DEFAULT1071);
							adaptor.addChild(root_0, DEFAULT1071_tree);
							}

							TEXT_STRING1072=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_column_data_type_header28483); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TEXT_STRING1072_tree = (Object)adaptor.create(TEXT_STRING1072);
							adaptor.addChild(root_0, TEXT_STRING1072_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 14 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2099:5: ( TIME_SYM ( null_or_notnull )? ( DEFAULT TEXT_STRING )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2099:5: ( TIME_SYM ( null_or_notnull )? ( DEFAULT TEXT_STRING )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2099:8: TIME_SYM ( null_or_notnull )? ( DEFAULT TEXT_STRING )?
					{
					TIME_SYM1073=(Token)match(input,TIME_SYM,FOLLOW_TIME_SYM_in_column_data_type_header28497); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TIME_SYM1073_tree = (Object)adaptor.create(TIME_SYM1073);
					adaptor.addChild(root_0, TIME_SYM1073_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2099:17: ( null_or_notnull )?
					int alt361=2;
					int LA361_0 = input.LA(1);
					if ( (LA361_0==NOT_SYM||LA361_0==NULL_SYM) ) {
						alt361=1;
					}
					switch (alt361) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2099:18: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28500);
							null_or_notnull1074=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1074.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2099:36: ( DEFAULT TEXT_STRING )?
					int alt362=2;
					int LA362_0 = input.LA(1);
					if ( (LA362_0==DEFAULT) ) {
						alt362=1;
					}
					switch (alt362) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2099:37: DEFAULT TEXT_STRING
							{
							DEFAULT1075=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28505); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1075_tree = (Object)adaptor.create(DEFAULT1075);
							adaptor.addChild(root_0, DEFAULT1075_tree);
							}

							TEXT_STRING1076=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_column_data_type_header28507); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TEXT_STRING1076_tree = (Object)adaptor.create(TEXT_STRING1076);
							adaptor.addChild(root_0, TEXT_STRING1076_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 15 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2100:5: ( TIMESTAMP ( null_or_notnull )? ( DEFAULT ( CURRENT_TIMESTAMP | TEXT_STRING ) )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2100:5: ( TIMESTAMP ( null_or_notnull )? ( DEFAULT ( CURRENT_TIMESTAMP | TEXT_STRING ) )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2100:8: TIMESTAMP ( null_or_notnull )? ( DEFAULT ( CURRENT_TIMESTAMP | TEXT_STRING ) )?
					{
					TIMESTAMP1077=(Token)match(input,TIMESTAMP,FOLLOW_TIMESTAMP_in_column_data_type_header28521); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TIMESTAMP1077_tree = (Object)adaptor.create(TIMESTAMP1077);
					adaptor.addChild(root_0, TIMESTAMP1077_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2100:18: ( null_or_notnull )?
					int alt363=2;
					int LA363_0 = input.LA(1);
					if ( (LA363_0==NOT_SYM||LA363_0==NULL_SYM) ) {
						alt363=1;
					}
					switch (alt363) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2100:19: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28524);
							null_or_notnull1078=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1078.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2100:37: ( DEFAULT ( CURRENT_TIMESTAMP | TEXT_STRING ) )?
					int alt364=2;
					int LA364_0 = input.LA(1);
					if ( (LA364_0==DEFAULT) ) {
						alt364=1;
					}
					switch (alt364) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2100:38: DEFAULT ( CURRENT_TIMESTAMP | TEXT_STRING )
							{
							DEFAULT1079=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28529); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1079_tree = (Object)adaptor.create(DEFAULT1079);
							adaptor.addChild(root_0, DEFAULT1079_tree);
							}

							set1080=input.LT(1);
							if ( input.LA(1)==CURRENT_TIMESTAMP||input.LA(1)==TEXT_STRING ) {
								input.consume();
								if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1080));
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								throw mse;
							}
							}
							break;

					}

					}

					}
					break;
				case 16 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2101:5: ( DATETIME ( null_or_notnull )? ( DEFAULT ( CURRENT_TIMESTAMP | TEXT_STRING ) )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2101:5: ( DATETIME ( null_or_notnull )? ( DEFAULT ( CURRENT_TIMESTAMP | TEXT_STRING ) )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2101:8: DATETIME ( null_or_notnull )? ( DEFAULT ( CURRENT_TIMESTAMP | TEXT_STRING ) )?
					{
					DATETIME1081=(Token)match(input,DATETIME,FOLLOW_DATETIME_in_column_data_type_header28549); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DATETIME1081_tree = (Object)adaptor.create(DATETIME1081);
					adaptor.addChild(root_0, DATETIME1081_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2101:17: ( null_or_notnull )?
					int alt365=2;
					int LA365_0 = input.LA(1);
					if ( (LA365_0==NOT_SYM||LA365_0==NULL_SYM) ) {
						alt365=1;
					}
					switch (alt365) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2101:18: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28552);
							null_or_notnull1082=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1082.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2101:36: ( DEFAULT ( CURRENT_TIMESTAMP | TEXT_STRING ) )?
					int alt366=2;
					int LA366_0 = input.LA(1);
					if ( (LA366_0==DEFAULT) ) {
						alt366=1;
					}
					switch (alt366) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2101:37: DEFAULT ( CURRENT_TIMESTAMP | TEXT_STRING )
							{
							DEFAULT1083=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28557); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1083_tree = (Object)adaptor.create(DEFAULT1083);
							adaptor.addChild(root_0, DEFAULT1083_tree);
							}

							set1084=input.LT(1);
							if ( input.LA(1)==CURRENT_TIMESTAMP||input.LA(1)==TEXT_STRING ) {
								input.consume();
								if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1084));
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								throw mse;
							}
							}
							break;

					}

					}

					}
					break;
				case 17 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2102:5: ( YEAR ( null_or_notnull )? ( DEFAULT INTEGER_NUM )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2102:5: ( YEAR ( null_or_notnull )? ( DEFAULT INTEGER_NUM )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2102:8: YEAR ( null_or_notnull )? ( DEFAULT INTEGER_NUM )?
					{
					YEAR1085=(Token)match(input,YEAR,FOLLOW_YEAR_in_column_data_type_header28577); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					YEAR1085_tree = (Object)adaptor.create(YEAR1085);
					adaptor.addChild(root_0, YEAR1085_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2102:13: ( null_or_notnull )?
					int alt367=2;
					int LA367_0 = input.LA(1);
					if ( (LA367_0==NOT_SYM||LA367_0==NULL_SYM) ) {
						alt367=1;
					}
					switch (alt367) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2102:14: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28580);
							null_or_notnull1086=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1086.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2102:32: ( DEFAULT INTEGER_NUM )?
					int alt368=2;
					int LA368_0 = input.LA(1);
					if ( (LA368_0==DEFAULT) ) {
						alt368=1;
					}
					switch (alt368) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2102:33: DEFAULT INTEGER_NUM
							{
							DEFAULT1087=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28585); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1087_tree = (Object)adaptor.create(DEFAULT1087);
							adaptor.addChild(root_0, DEFAULT1087_tree);
							}

							INTEGER_NUM1088=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_column_data_type_header28587); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							INTEGER_NUM1088_tree = (Object)adaptor.create(INTEGER_NUM1088);
							adaptor.addChild(root_0, INTEGER_NUM1088_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 18 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2103:5: ( CHAR ( LPAREN length RPAREN )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2103:5: ( CHAR ( LPAREN length RPAREN )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2103:8: CHAR ( LPAREN length RPAREN )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )?
					{
					CHAR1089=(Token)match(input,CHAR,FOLLOW_CHAR_in_column_data_type_header28601); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CHAR1089_tree = (Object)adaptor.create(CHAR1089);
					adaptor.addChild(root_0, CHAR1089_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2103:15: ( LPAREN length RPAREN )?
					int alt369=2;
					int LA369_0 = input.LA(1);
					if ( (LA369_0==LPAREN) ) {
						alt369=1;
					}
					switch (alt369) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2103:16: LPAREN length RPAREN
							{
							LPAREN1090=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header28606); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN1090_tree = (Object)adaptor.create(LPAREN1090);
							adaptor.addChild(root_0, LPAREN1090_tree);
							}

							pushFollow(FOLLOW_length_in_column_data_type_header28608);
							length1091=length();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, length1091.getTree());

							RPAREN1092=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header28610); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN1092_tree = (Object)adaptor.create(RPAREN1092);
							adaptor.addChild(root_0, RPAREN1092_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2103:39: ( CHARACTER_SYM SET_SYM charset_name )?
					int alt370=2;
					int LA370_0 = input.LA(1);
					if ( (LA370_0==CHARACTER_SYM) ) {
						alt370=1;
					}
					switch (alt370) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2103:40: CHARACTER_SYM SET_SYM charset_name
							{
							CHARACTER_SYM1093=(Token)match(input,CHARACTER_SYM,FOLLOW_CHARACTER_SYM_in_column_data_type_header28615); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CHARACTER_SYM1093_tree = (Object)adaptor.create(CHARACTER_SYM1093);
							adaptor.addChild(root_0, CHARACTER_SYM1093_tree);
							}

							SET_SYM1094=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_column_data_type_header28617); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							SET_SYM1094_tree = (Object)adaptor.create(SET_SYM1094);
							adaptor.addChild(root_0, SET_SYM1094_tree);
							}

							pushFollow(FOLLOW_charset_name_in_column_data_type_header28619);
							charset_name1095=charset_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, charset_name1095.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2103:77: ( COLLATE_SYM collation_name )?
					int alt371=2;
					int LA371_0 = input.LA(1);
					if ( (LA371_0==COLLATE_SYM) ) {
						alt371=1;
					}
					switch (alt371) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2103:78: COLLATE_SYM collation_name
							{
							COLLATE_SYM1096=(Token)match(input,COLLATE_SYM,FOLLOW_COLLATE_SYM_in_column_data_type_header28624); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLLATE_SYM1096_tree = (Object)adaptor.create(COLLATE_SYM1096);
							adaptor.addChild(root_0, COLLATE_SYM1096_tree);
							}

							pushFollow(FOLLOW_collation_name_in_column_data_type_header28626);
							collation_name1097=collation_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, collation_name1097.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2103:107: ( null_or_notnull )?
					int alt372=2;
					int LA372_0 = input.LA(1);
					if ( (LA372_0==NOT_SYM||LA372_0==NULL_SYM) ) {
						alt372=1;
					}
					switch (alt372) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2103:108: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28631);
							null_or_notnull1098=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1098.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2103:126: ( DEFAULT TEXT_STRING )?
					int alt373=2;
					int LA373_0 = input.LA(1);
					if ( (LA373_0==DEFAULT) ) {
						alt373=1;
					}
					switch (alt373) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2103:127: DEFAULT TEXT_STRING
							{
							DEFAULT1099=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28636); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1099_tree = (Object)adaptor.create(DEFAULT1099);
							adaptor.addChild(root_0, DEFAULT1099_tree);
							}

							TEXT_STRING1100=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_column_data_type_header28638); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TEXT_STRING1100_tree = (Object)adaptor.create(TEXT_STRING1100);
							adaptor.addChild(root_0, TEXT_STRING1100_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 19 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2104:5: ( VARCHAR LPAREN length RPAREN ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2104:5: ( VARCHAR LPAREN length RPAREN ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2104:8: VARCHAR LPAREN length RPAREN ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )?
					{
					VARCHAR1101=(Token)match(input,VARCHAR,FOLLOW_VARCHAR_in_column_data_type_header28652); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					VARCHAR1101_tree = (Object)adaptor.create(VARCHAR1101);
					adaptor.addChild(root_0, VARCHAR1101_tree);
					}

					LPAREN1102=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header28654); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1102_tree = (Object)adaptor.create(LPAREN1102);
					adaptor.addChild(root_0, LPAREN1102_tree);
					}

					pushFollow(FOLLOW_length_in_column_data_type_header28656);
					length1103=length();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, length1103.getTree());

					RPAREN1104=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header28658); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1104_tree = (Object)adaptor.create(RPAREN1104);
					adaptor.addChild(root_0, RPAREN1104_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2104:39: ( CHARACTER_SYM SET_SYM charset_name )?
					int alt374=2;
					int LA374_0 = input.LA(1);
					if ( (LA374_0==CHARACTER_SYM) ) {
						alt374=1;
					}
					switch (alt374) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2104:40: CHARACTER_SYM SET_SYM charset_name
							{
							CHARACTER_SYM1105=(Token)match(input,CHARACTER_SYM,FOLLOW_CHARACTER_SYM_in_column_data_type_header28663); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CHARACTER_SYM1105_tree = (Object)adaptor.create(CHARACTER_SYM1105);
							adaptor.addChild(root_0, CHARACTER_SYM1105_tree);
							}

							SET_SYM1106=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_column_data_type_header28665); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							SET_SYM1106_tree = (Object)adaptor.create(SET_SYM1106);
							adaptor.addChild(root_0, SET_SYM1106_tree);
							}

							pushFollow(FOLLOW_charset_name_in_column_data_type_header28667);
							charset_name1107=charset_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, charset_name1107.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2104:77: ( COLLATE_SYM collation_name )?
					int alt375=2;
					int LA375_0 = input.LA(1);
					if ( (LA375_0==COLLATE_SYM) ) {
						alt375=1;
					}
					switch (alt375) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2104:78: COLLATE_SYM collation_name
							{
							COLLATE_SYM1108=(Token)match(input,COLLATE_SYM,FOLLOW_COLLATE_SYM_in_column_data_type_header28672); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLLATE_SYM1108_tree = (Object)adaptor.create(COLLATE_SYM1108);
							adaptor.addChild(root_0, COLLATE_SYM1108_tree);
							}

							pushFollow(FOLLOW_collation_name_in_column_data_type_header28674);
							collation_name1109=collation_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, collation_name1109.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2104:107: ( null_or_notnull )?
					int alt376=2;
					int LA376_0 = input.LA(1);
					if ( (LA376_0==NOT_SYM||LA376_0==NULL_SYM) ) {
						alt376=1;
					}
					switch (alt376) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2104:108: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28679);
							null_or_notnull1110=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1110.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2104:126: ( DEFAULT TEXT_STRING )?
					int alt377=2;
					int LA377_0 = input.LA(1);
					if ( (LA377_0==DEFAULT) ) {
						alt377=1;
					}
					switch (alt377) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2104:127: DEFAULT TEXT_STRING
							{
							DEFAULT1111=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28684); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1111_tree = (Object)adaptor.create(DEFAULT1111);
							adaptor.addChild(root_0, DEFAULT1111_tree);
							}

							TEXT_STRING1112=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_column_data_type_header28686); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TEXT_STRING1112_tree = (Object)adaptor.create(TEXT_STRING1112);
							adaptor.addChild(root_0, TEXT_STRING1112_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 20 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2105:5: ( BINARY ( LPAREN length RPAREN )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2105:5: ( BINARY ( LPAREN length RPAREN )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2105:8: BINARY ( LPAREN length RPAREN )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )?
					{
					BINARY1113=(Token)match(input,BINARY,FOLLOW_BINARY_in_column_data_type_header28700); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					BINARY1113_tree = (Object)adaptor.create(BINARY1113);
					adaptor.addChild(root_0, BINARY1113_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2105:17: ( LPAREN length RPAREN )?
					int alt378=2;
					int LA378_0 = input.LA(1);
					if ( (LA378_0==LPAREN) ) {
						alt378=1;
					}
					switch (alt378) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2105:18: LPAREN length RPAREN
							{
							LPAREN1114=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header28705); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN1114_tree = (Object)adaptor.create(LPAREN1114);
							adaptor.addChild(root_0, LPAREN1114_tree);
							}

							pushFollow(FOLLOW_length_in_column_data_type_header28707);
							length1115=length();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, length1115.getTree());

							RPAREN1116=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header28709); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN1116_tree = (Object)adaptor.create(RPAREN1116);
							adaptor.addChild(root_0, RPAREN1116_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2105:41: ( null_or_notnull )?
					int alt379=2;
					int LA379_0 = input.LA(1);
					if ( (LA379_0==NOT_SYM||LA379_0==NULL_SYM) ) {
						alt379=1;
					}
					switch (alt379) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2105:42: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28714);
							null_or_notnull1117=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1117.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2105:60: ( DEFAULT TEXT_STRING )?
					int alt380=2;
					int LA380_0 = input.LA(1);
					if ( (LA380_0==DEFAULT) ) {
						alt380=1;
					}
					switch (alt380) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2105:61: DEFAULT TEXT_STRING
							{
							DEFAULT1118=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28719); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1118_tree = (Object)adaptor.create(DEFAULT1118);
							adaptor.addChild(root_0, DEFAULT1118_tree);
							}

							TEXT_STRING1119=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_column_data_type_header28721); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TEXT_STRING1119_tree = (Object)adaptor.create(TEXT_STRING1119);
							adaptor.addChild(root_0, TEXT_STRING1119_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 21 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2106:5: ( VARBINARY LPAREN length RPAREN ( null_or_notnull )? ( DEFAULT TEXT_STRING )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2106:5: ( VARBINARY LPAREN length RPAREN ( null_or_notnull )? ( DEFAULT TEXT_STRING )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2106:8: VARBINARY LPAREN length RPAREN ( null_or_notnull )? ( DEFAULT TEXT_STRING )?
					{
					VARBINARY1120=(Token)match(input,VARBINARY,FOLLOW_VARBINARY_in_column_data_type_header28735); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					VARBINARY1120_tree = (Object)adaptor.create(VARBINARY1120);
					adaptor.addChild(root_0, VARBINARY1120_tree);
					}

					LPAREN1121=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header28737); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1121_tree = (Object)adaptor.create(LPAREN1121);
					adaptor.addChild(root_0, LPAREN1121_tree);
					}

					pushFollow(FOLLOW_length_in_column_data_type_header28739);
					length1122=length();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, length1122.getTree());

					RPAREN1123=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header28741); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1123_tree = (Object)adaptor.create(RPAREN1123);
					adaptor.addChild(root_0, RPAREN1123_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2106:39: ( null_or_notnull )?
					int alt381=2;
					int LA381_0 = input.LA(1);
					if ( (LA381_0==NOT_SYM||LA381_0==NULL_SYM) ) {
						alt381=1;
					}
					switch (alt381) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2106:40: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28744);
							null_or_notnull1124=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1124.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2106:58: ( DEFAULT TEXT_STRING )?
					int alt382=2;
					int LA382_0 = input.LA(1);
					if ( (LA382_0==DEFAULT) ) {
						alt382=1;
					}
					switch (alt382) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2106:59: DEFAULT TEXT_STRING
							{
							DEFAULT1125=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header28749); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1125_tree = (Object)adaptor.create(DEFAULT1125);
							adaptor.addChild(root_0, DEFAULT1125_tree);
							}

							TEXT_STRING1126=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_column_data_type_header28751); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TEXT_STRING1126_tree = (Object)adaptor.create(TEXT_STRING1126);
							adaptor.addChild(root_0, TEXT_STRING1126_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 22 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2107:5: ( TINYBLOB ( null_or_notnull )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2107:5: ( TINYBLOB ( null_or_notnull )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2107:8: TINYBLOB ( null_or_notnull )?
					{
					TINYBLOB1127=(Token)match(input,TINYBLOB,FOLLOW_TINYBLOB_in_column_data_type_header28765); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TINYBLOB1127_tree = (Object)adaptor.create(TINYBLOB1127);
					adaptor.addChild(root_0, TINYBLOB1127_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2107:17: ( null_or_notnull )?
					int alt383=2;
					int LA383_0 = input.LA(1);
					if ( (LA383_0==NOT_SYM||LA383_0==NULL_SYM) ) {
						alt383=1;
					}
					switch (alt383) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2107:18: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28768);
							null_or_notnull1128=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1128.getTree());

							}
							break;

					}

					}

					}
					break;
				case 23 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2108:5: ( BLOB_SYM ( null_or_notnull )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2108:5: ( BLOB_SYM ( null_or_notnull )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2108:8: BLOB_SYM ( null_or_notnull )?
					{
					BLOB_SYM1129=(Token)match(input,BLOB_SYM,FOLLOW_BLOB_SYM_in_column_data_type_header28782); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					BLOB_SYM1129_tree = (Object)adaptor.create(BLOB_SYM1129);
					adaptor.addChild(root_0, BLOB_SYM1129_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2108:17: ( null_or_notnull )?
					int alt384=2;
					int LA384_0 = input.LA(1);
					if ( (LA384_0==NOT_SYM||LA384_0==NULL_SYM) ) {
						alt384=1;
					}
					switch (alt384) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2108:18: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28785);
							null_or_notnull1130=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1130.getTree());

							}
							break;

					}

					}

					}
					break;
				case 24 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2109:5: ( MEDIUMBLOB ( null_or_notnull )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2109:5: ( MEDIUMBLOB ( null_or_notnull )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2109:8: MEDIUMBLOB ( null_or_notnull )?
					{
					MEDIUMBLOB1131=(Token)match(input,MEDIUMBLOB,FOLLOW_MEDIUMBLOB_in_column_data_type_header28799); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MEDIUMBLOB1131_tree = (Object)adaptor.create(MEDIUMBLOB1131);
					adaptor.addChild(root_0, MEDIUMBLOB1131_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2109:19: ( null_or_notnull )?
					int alt385=2;
					int LA385_0 = input.LA(1);
					if ( (LA385_0==NOT_SYM||LA385_0==NULL_SYM) ) {
						alt385=1;
					}
					switch (alt385) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2109:20: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28802);
							null_or_notnull1132=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1132.getTree());

							}
							break;

					}

					}

					}
					break;
				case 25 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2110:5: ( LONGBLOB ( null_or_notnull )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2110:5: ( LONGBLOB ( null_or_notnull )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2110:8: LONGBLOB ( null_or_notnull )?
					{
					LONGBLOB1133=(Token)match(input,LONGBLOB,FOLLOW_LONGBLOB_in_column_data_type_header28816); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LONGBLOB1133_tree = (Object)adaptor.create(LONGBLOB1133);
					adaptor.addChild(root_0, LONGBLOB1133_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2110:17: ( null_or_notnull )?
					int alt386=2;
					int LA386_0 = input.LA(1);
					if ( (LA386_0==NOT_SYM||LA386_0==NULL_SYM) ) {
						alt386=1;
					}
					switch (alt386) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2110:18: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28819);
							null_or_notnull1134=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1134.getTree());

							}
							break;

					}

					}

					}
					break;
				case 26 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2111:5: ( TINYTEXT ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2111:5: ( TINYTEXT ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2111:8: TINYTEXT ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )?
					{
					TINYTEXT1135=(Token)match(input,TINYTEXT,FOLLOW_TINYTEXT_in_column_data_type_header28833); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TINYTEXT1135_tree = (Object)adaptor.create(TINYTEXT1135);
					adaptor.addChild(root_0, TINYTEXT1135_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2111:19: ( BINARY )?
					int alt387=2;
					int LA387_0 = input.LA(1);
					if ( (LA387_0==BINARY) ) {
						alt387=1;
					}
					switch (alt387) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2111:20: BINARY
							{
							BINARY1136=(Token)match(input,BINARY,FOLLOW_BINARY_in_column_data_type_header28838); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							BINARY1136_tree = (Object)adaptor.create(BINARY1136);
							adaptor.addChild(root_0, BINARY1136_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2111:29: ( CHARACTER_SYM SET_SYM charset_name )?
					int alt388=2;
					int LA388_0 = input.LA(1);
					if ( (LA388_0==CHARACTER_SYM) ) {
						alt388=1;
					}
					switch (alt388) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2111:30: CHARACTER_SYM SET_SYM charset_name
							{
							CHARACTER_SYM1137=(Token)match(input,CHARACTER_SYM,FOLLOW_CHARACTER_SYM_in_column_data_type_header28843); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CHARACTER_SYM1137_tree = (Object)adaptor.create(CHARACTER_SYM1137);
							adaptor.addChild(root_0, CHARACTER_SYM1137_tree);
							}

							SET_SYM1138=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_column_data_type_header28845); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							SET_SYM1138_tree = (Object)adaptor.create(SET_SYM1138);
							adaptor.addChild(root_0, SET_SYM1138_tree);
							}

							pushFollow(FOLLOW_charset_name_in_column_data_type_header28847);
							charset_name1139=charset_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, charset_name1139.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2111:67: ( COLLATE_SYM collation_name )?
					int alt389=2;
					int LA389_0 = input.LA(1);
					if ( (LA389_0==COLLATE_SYM) ) {
						alt389=1;
					}
					switch (alt389) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2111:68: COLLATE_SYM collation_name
							{
							COLLATE_SYM1140=(Token)match(input,COLLATE_SYM,FOLLOW_COLLATE_SYM_in_column_data_type_header28852); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLLATE_SYM1140_tree = (Object)adaptor.create(COLLATE_SYM1140);
							adaptor.addChild(root_0, COLLATE_SYM1140_tree);
							}

							pushFollow(FOLLOW_collation_name_in_column_data_type_header28854);
							collation_name1141=collation_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, collation_name1141.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2111:97: ( null_or_notnull )?
					int alt390=2;
					int LA390_0 = input.LA(1);
					if ( (LA390_0==NOT_SYM||LA390_0==NULL_SYM) ) {
						alt390=1;
					}
					switch (alt390) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2111:98: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28859);
							null_or_notnull1142=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1142.getTree());

							}
							break;

					}

					}

					}
					break;
				case 27 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2112:5: ( TEXT_SYM ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2112:5: ( TEXT_SYM ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2112:8: TEXT_SYM ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )?
					{
					TEXT_SYM1143=(Token)match(input,TEXT_SYM,FOLLOW_TEXT_SYM_in_column_data_type_header28873); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_SYM1143_tree = (Object)adaptor.create(TEXT_SYM1143);
					adaptor.addChild(root_0, TEXT_SYM1143_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2112:19: ( BINARY )?
					int alt391=2;
					int LA391_0 = input.LA(1);
					if ( (LA391_0==BINARY) ) {
						alt391=1;
					}
					switch (alt391) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2112:20: BINARY
							{
							BINARY1144=(Token)match(input,BINARY,FOLLOW_BINARY_in_column_data_type_header28878); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							BINARY1144_tree = (Object)adaptor.create(BINARY1144);
							adaptor.addChild(root_0, BINARY1144_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2112:29: ( CHARACTER_SYM SET_SYM charset_name )?
					int alt392=2;
					int LA392_0 = input.LA(1);
					if ( (LA392_0==CHARACTER_SYM) ) {
						alt392=1;
					}
					switch (alt392) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2112:30: CHARACTER_SYM SET_SYM charset_name
							{
							CHARACTER_SYM1145=(Token)match(input,CHARACTER_SYM,FOLLOW_CHARACTER_SYM_in_column_data_type_header28883); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CHARACTER_SYM1145_tree = (Object)adaptor.create(CHARACTER_SYM1145);
							adaptor.addChild(root_0, CHARACTER_SYM1145_tree);
							}

							SET_SYM1146=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_column_data_type_header28885); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							SET_SYM1146_tree = (Object)adaptor.create(SET_SYM1146);
							adaptor.addChild(root_0, SET_SYM1146_tree);
							}

							pushFollow(FOLLOW_charset_name_in_column_data_type_header28887);
							charset_name1147=charset_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, charset_name1147.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2112:67: ( COLLATE_SYM collation_name )?
					int alt393=2;
					int LA393_0 = input.LA(1);
					if ( (LA393_0==COLLATE_SYM) ) {
						alt393=1;
					}
					switch (alt393) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2112:68: COLLATE_SYM collation_name
							{
							COLLATE_SYM1148=(Token)match(input,COLLATE_SYM,FOLLOW_COLLATE_SYM_in_column_data_type_header28892); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLLATE_SYM1148_tree = (Object)adaptor.create(COLLATE_SYM1148);
							adaptor.addChild(root_0, COLLATE_SYM1148_tree);
							}

							pushFollow(FOLLOW_collation_name_in_column_data_type_header28894);
							collation_name1149=collation_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, collation_name1149.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2112:97: ( null_or_notnull )?
					int alt394=2;
					int LA394_0 = input.LA(1);
					if ( (LA394_0==NOT_SYM||LA394_0==NULL_SYM) ) {
						alt394=1;
					}
					switch (alt394) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2112:98: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28899);
							null_or_notnull1150=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1150.getTree());

							}
							break;

					}

					}

					}
					break;
				case 28 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2113:5: ( MEDIUMTEXT ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2113:5: ( MEDIUMTEXT ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2113:8: MEDIUMTEXT ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )?
					{
					MEDIUMTEXT1151=(Token)match(input,MEDIUMTEXT,FOLLOW_MEDIUMTEXT_in_column_data_type_header28913); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MEDIUMTEXT1151_tree = (Object)adaptor.create(MEDIUMTEXT1151);
					adaptor.addChild(root_0, MEDIUMTEXT1151_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2113:19: ( BINARY )?
					int alt395=2;
					int LA395_0 = input.LA(1);
					if ( (LA395_0==BINARY) ) {
						alt395=1;
					}
					switch (alt395) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2113:20: BINARY
							{
							BINARY1152=(Token)match(input,BINARY,FOLLOW_BINARY_in_column_data_type_header28916); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							BINARY1152_tree = (Object)adaptor.create(BINARY1152);
							adaptor.addChild(root_0, BINARY1152_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2113:29: ( CHARACTER_SYM SET_SYM charset_name )?
					int alt396=2;
					int LA396_0 = input.LA(1);
					if ( (LA396_0==CHARACTER_SYM) ) {
						alt396=1;
					}
					switch (alt396) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2113:30: CHARACTER_SYM SET_SYM charset_name
							{
							CHARACTER_SYM1153=(Token)match(input,CHARACTER_SYM,FOLLOW_CHARACTER_SYM_in_column_data_type_header28921); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CHARACTER_SYM1153_tree = (Object)adaptor.create(CHARACTER_SYM1153);
							adaptor.addChild(root_0, CHARACTER_SYM1153_tree);
							}

							SET_SYM1154=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_column_data_type_header28923); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							SET_SYM1154_tree = (Object)adaptor.create(SET_SYM1154);
							adaptor.addChild(root_0, SET_SYM1154_tree);
							}

							pushFollow(FOLLOW_charset_name_in_column_data_type_header28925);
							charset_name1155=charset_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, charset_name1155.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2113:67: ( COLLATE_SYM collation_name )?
					int alt397=2;
					int LA397_0 = input.LA(1);
					if ( (LA397_0==COLLATE_SYM) ) {
						alt397=1;
					}
					switch (alt397) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2113:68: COLLATE_SYM collation_name
							{
							COLLATE_SYM1156=(Token)match(input,COLLATE_SYM,FOLLOW_COLLATE_SYM_in_column_data_type_header28930); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLLATE_SYM1156_tree = (Object)adaptor.create(COLLATE_SYM1156);
							adaptor.addChild(root_0, COLLATE_SYM1156_tree);
							}

							pushFollow(FOLLOW_collation_name_in_column_data_type_header28932);
							collation_name1157=collation_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, collation_name1157.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2113:97: ( null_or_notnull )?
					int alt398=2;
					int LA398_0 = input.LA(1);
					if ( (LA398_0==NOT_SYM||LA398_0==NULL_SYM) ) {
						alt398=1;
					}
					switch (alt398) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2113:98: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28937);
							null_or_notnull1158=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1158.getTree());

							}
							break;

					}

					}

					}
					break;
				case 29 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2114:5: ( LONGTEXT ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2114:5: ( LONGTEXT ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2114:8: LONGTEXT ( BINARY )? ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )?
					{
					LONGTEXT1159=(Token)match(input,LONGTEXT,FOLLOW_LONGTEXT_in_column_data_type_header28951); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LONGTEXT1159_tree = (Object)adaptor.create(LONGTEXT1159);
					adaptor.addChild(root_0, LONGTEXT1159_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2114:19: ( BINARY )?
					int alt399=2;
					int LA399_0 = input.LA(1);
					if ( (LA399_0==BINARY) ) {
						alt399=1;
					}
					switch (alt399) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2114:20: BINARY
							{
							BINARY1160=(Token)match(input,BINARY,FOLLOW_BINARY_in_column_data_type_header28956); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							BINARY1160_tree = (Object)adaptor.create(BINARY1160);
							adaptor.addChild(root_0, BINARY1160_tree);
							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2114:29: ( CHARACTER_SYM SET_SYM charset_name )?
					int alt400=2;
					int LA400_0 = input.LA(1);
					if ( (LA400_0==CHARACTER_SYM) ) {
						alt400=1;
					}
					switch (alt400) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2114:30: CHARACTER_SYM SET_SYM charset_name
							{
							CHARACTER_SYM1161=(Token)match(input,CHARACTER_SYM,FOLLOW_CHARACTER_SYM_in_column_data_type_header28961); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CHARACTER_SYM1161_tree = (Object)adaptor.create(CHARACTER_SYM1161);
							adaptor.addChild(root_0, CHARACTER_SYM1161_tree);
							}

							SET_SYM1162=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_column_data_type_header28963); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							SET_SYM1162_tree = (Object)adaptor.create(SET_SYM1162);
							adaptor.addChild(root_0, SET_SYM1162_tree);
							}

							pushFollow(FOLLOW_charset_name_in_column_data_type_header28965);
							charset_name1163=charset_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, charset_name1163.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2114:67: ( COLLATE_SYM collation_name )?
					int alt401=2;
					int LA401_0 = input.LA(1);
					if ( (LA401_0==COLLATE_SYM) ) {
						alt401=1;
					}
					switch (alt401) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2114:68: COLLATE_SYM collation_name
							{
							COLLATE_SYM1164=(Token)match(input,COLLATE_SYM,FOLLOW_COLLATE_SYM_in_column_data_type_header28970); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLLATE_SYM1164_tree = (Object)adaptor.create(COLLATE_SYM1164);
							adaptor.addChild(root_0, COLLATE_SYM1164_tree);
							}

							pushFollow(FOLLOW_collation_name_in_column_data_type_header28972);
							collation_name1165=collation_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, collation_name1165.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2114:97: ( null_or_notnull )?
					int alt402=2;
					int LA402_0 = input.LA(1);
					if ( (LA402_0==NOT_SYM||LA402_0==NULL_SYM) ) {
						alt402=1;
					}
					switch (alt402) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2114:98: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header28977);
							null_or_notnull1166=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1166.getTree());

							}
							break;

					}

					}

					}
					break;
				case 30 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2115:5: ( ENUM LPAREN TEXT_STRING ( COMMA TEXT_STRING )* RPAREN ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2115:5: ( ENUM LPAREN TEXT_STRING ( COMMA TEXT_STRING )* RPAREN ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2115:8: ENUM LPAREN TEXT_STRING ( COMMA TEXT_STRING )* RPAREN ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )?
					{
					ENUM1167=(Token)match(input,ENUM,FOLLOW_ENUM_in_column_data_type_header28991); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ENUM1167_tree = (Object)adaptor.create(ENUM1167);
					adaptor.addChild(root_0, ENUM1167_tree);
					}

					LPAREN1168=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header28996); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1168_tree = (Object)adaptor.create(LPAREN1168);
					adaptor.addChild(root_0, LPAREN1168_tree);
					}

					TEXT_STRING1169=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_column_data_type_header28998); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING1169_tree = (Object)adaptor.create(TEXT_STRING1169);
					adaptor.addChild(root_0, TEXT_STRING1169_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2115:35: ( COMMA TEXT_STRING )*
					loop403:
					while (true) {
						int alt403=2;
						int LA403_0 = input.LA(1);
						if ( (LA403_0==COMMA) ) {
							alt403=1;
						}

						switch (alt403) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2115:36: COMMA TEXT_STRING
							{
							COMMA1170=(Token)match(input,COMMA,FOLLOW_COMMA_in_column_data_type_header29001); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA1170_tree = (Object)adaptor.create(COMMA1170);
							adaptor.addChild(root_0, COMMA1170_tree);
							}

							TEXT_STRING1171=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_column_data_type_header29003); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TEXT_STRING1171_tree = (Object)adaptor.create(TEXT_STRING1171);
							adaptor.addChild(root_0, TEXT_STRING1171_tree);
							}

							}
							break;

						default :
							break loop403;
						}
					}

					RPAREN1172=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header29007); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1172_tree = (Object)adaptor.create(RPAREN1172);
					adaptor.addChild(root_0, RPAREN1172_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2115:63: ( CHARACTER_SYM SET_SYM charset_name )?
					int alt404=2;
					int LA404_0 = input.LA(1);
					if ( (LA404_0==CHARACTER_SYM) ) {
						alt404=1;
					}
					switch (alt404) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2115:64: CHARACTER_SYM SET_SYM charset_name
							{
							CHARACTER_SYM1173=(Token)match(input,CHARACTER_SYM,FOLLOW_CHARACTER_SYM_in_column_data_type_header29010); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CHARACTER_SYM1173_tree = (Object)adaptor.create(CHARACTER_SYM1173);
							adaptor.addChild(root_0, CHARACTER_SYM1173_tree);
							}

							SET_SYM1174=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_column_data_type_header29012); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							SET_SYM1174_tree = (Object)adaptor.create(SET_SYM1174);
							adaptor.addChild(root_0, SET_SYM1174_tree);
							}

							pushFollow(FOLLOW_charset_name_in_column_data_type_header29014);
							charset_name1175=charset_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, charset_name1175.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2115:101: ( COLLATE_SYM collation_name )?
					int alt405=2;
					int LA405_0 = input.LA(1);
					if ( (LA405_0==COLLATE_SYM) ) {
						alt405=1;
					}
					switch (alt405) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2115:102: COLLATE_SYM collation_name
							{
							COLLATE_SYM1176=(Token)match(input,COLLATE_SYM,FOLLOW_COLLATE_SYM_in_column_data_type_header29019); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLLATE_SYM1176_tree = (Object)adaptor.create(COLLATE_SYM1176);
							adaptor.addChild(root_0, COLLATE_SYM1176_tree);
							}

							pushFollow(FOLLOW_collation_name_in_column_data_type_header29021);
							collation_name1177=collation_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, collation_name1177.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2115:131: ( null_or_notnull )?
					int alt406=2;
					int LA406_0 = input.LA(1);
					if ( (LA406_0==NOT_SYM||LA406_0==NULL_SYM) ) {
						alt406=1;
					}
					switch (alt406) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2115:132: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header29026);
							null_or_notnull1178=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1178.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2115:150: ( DEFAULT TEXT_STRING )?
					int alt407=2;
					int LA407_0 = input.LA(1);
					if ( (LA407_0==DEFAULT) ) {
						alt407=1;
					}
					switch (alt407) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2115:151: DEFAULT TEXT_STRING
							{
							DEFAULT1179=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header29031); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1179_tree = (Object)adaptor.create(DEFAULT1179);
							adaptor.addChild(root_0, DEFAULT1179_tree);
							}

							TEXT_STRING1180=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_column_data_type_header29033); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TEXT_STRING1180_tree = (Object)adaptor.create(TEXT_STRING1180);
							adaptor.addChild(root_0, TEXT_STRING1180_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 31 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2116:5: ( SET_SYM LPAREN TEXT_STRING ( COMMA TEXT_STRING )* RPAREN ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2116:5: ( SET_SYM LPAREN TEXT_STRING ( COMMA TEXT_STRING )* RPAREN ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2116:8: SET_SYM LPAREN TEXT_STRING ( COMMA TEXT_STRING )* RPAREN ( CHARACTER_SYM SET_SYM charset_name )? ( COLLATE_SYM collation_name )? ( null_or_notnull )? ( DEFAULT TEXT_STRING )?
					{
					SET_SYM1181=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_column_data_type_header29047); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SET_SYM1181_tree = (Object)adaptor.create(SET_SYM1181);
					adaptor.addChild(root_0, SET_SYM1181_tree);
					}

					LPAREN1182=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_column_data_type_header29049); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1182_tree = (Object)adaptor.create(LPAREN1182);
					adaptor.addChild(root_0, LPAREN1182_tree);
					}

					TEXT_STRING1183=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_column_data_type_header29051); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING1183_tree = (Object)adaptor.create(TEXT_STRING1183);
					adaptor.addChild(root_0, TEXT_STRING1183_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2116:35: ( COMMA TEXT_STRING )*
					loop408:
					while (true) {
						int alt408=2;
						int LA408_0 = input.LA(1);
						if ( (LA408_0==COMMA) ) {
							alt408=1;
						}

						switch (alt408) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2116:36: COMMA TEXT_STRING
							{
							COMMA1184=(Token)match(input,COMMA,FOLLOW_COMMA_in_column_data_type_header29054); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA1184_tree = (Object)adaptor.create(COMMA1184);
							adaptor.addChild(root_0, COMMA1184_tree);
							}

							TEXT_STRING1185=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_column_data_type_header29056); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TEXT_STRING1185_tree = (Object)adaptor.create(TEXT_STRING1185);
							adaptor.addChild(root_0, TEXT_STRING1185_tree);
							}

							}
							break;

						default :
							break loop408;
						}
					}

					RPAREN1186=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_column_data_type_header29060); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1186_tree = (Object)adaptor.create(RPAREN1186);
					adaptor.addChild(root_0, RPAREN1186_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2116:63: ( CHARACTER_SYM SET_SYM charset_name )?
					int alt409=2;
					int LA409_0 = input.LA(1);
					if ( (LA409_0==CHARACTER_SYM) ) {
						alt409=1;
					}
					switch (alt409) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2116:64: CHARACTER_SYM SET_SYM charset_name
							{
							CHARACTER_SYM1187=(Token)match(input,CHARACTER_SYM,FOLLOW_CHARACTER_SYM_in_column_data_type_header29063); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CHARACTER_SYM1187_tree = (Object)adaptor.create(CHARACTER_SYM1187);
							adaptor.addChild(root_0, CHARACTER_SYM1187_tree);
							}

							SET_SYM1188=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_column_data_type_header29065); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							SET_SYM1188_tree = (Object)adaptor.create(SET_SYM1188);
							adaptor.addChild(root_0, SET_SYM1188_tree);
							}

							pushFollow(FOLLOW_charset_name_in_column_data_type_header29067);
							charset_name1189=charset_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, charset_name1189.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2116:101: ( COLLATE_SYM collation_name )?
					int alt410=2;
					int LA410_0 = input.LA(1);
					if ( (LA410_0==COLLATE_SYM) ) {
						alt410=1;
					}
					switch (alt410) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2116:102: COLLATE_SYM collation_name
							{
							COLLATE_SYM1190=(Token)match(input,COLLATE_SYM,FOLLOW_COLLATE_SYM_in_column_data_type_header29072); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLLATE_SYM1190_tree = (Object)adaptor.create(COLLATE_SYM1190);
							adaptor.addChild(root_0, COLLATE_SYM1190_tree);
							}

							pushFollow(FOLLOW_collation_name_in_column_data_type_header29074);
							collation_name1191=collation_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, collation_name1191.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2116:131: ( null_or_notnull )?
					int alt411=2;
					int LA411_0 = input.LA(1);
					if ( (LA411_0==NOT_SYM||LA411_0==NULL_SYM) ) {
						alt411=1;
					}
					switch (alt411) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2116:132: null_or_notnull
							{
							pushFollow(FOLLOW_null_or_notnull_in_column_data_type_header29079);
							null_or_notnull1192=null_or_notnull();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, null_or_notnull1192.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2116:150: ( DEFAULT TEXT_STRING )?
					int alt412=2;
					int LA412_0 = input.LA(1);
					if ( (LA412_0==DEFAULT) ) {
						alt412=1;
					}
					switch (alt412) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2116:151: DEFAULT TEXT_STRING
							{
							DEFAULT1193=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_column_data_type_header29084); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1193_tree = (Object)adaptor.create(DEFAULT1193);
							adaptor.addChild(root_0, DEFAULT1193_tree);
							}

							TEXT_STRING1194=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_column_data_type_header29086); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							TEXT_STRING1194_tree = (Object)adaptor.create(TEXT_STRING1194);
							adaptor.addChild(root_0, TEXT_STRING1194_tree);
							}

							}
							break;

					}

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "column_data_type_header"


	public static class index_column_name_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "index_column_name"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2120:1: index_column_name : column_name ( LPAREN INTEGER_NUM RPAREN )? ( ASC | DESC )? ;
	public final SQLParser.index_column_name_return index_column_name() throws RecognitionException {
		SQLParser.index_column_name_return retval = new SQLParser.index_column_name_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token LPAREN1196=null;
		Token INTEGER_NUM1197=null;
		Token RPAREN1198=null;
		Token set1199=null;
		ParserRuleReturnScope column_name1195 =null;

		Object LPAREN1196_tree=null;
		Object INTEGER_NUM1197_tree=null;
		Object RPAREN1198_tree=null;
		Object set1199_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2120:18: ( column_name ( LPAREN INTEGER_NUM RPAREN )? ( ASC | DESC )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2121:3: column_name ( LPAREN INTEGER_NUM RPAREN )? ( ASC | DESC )?
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_column_name_in_index_column_name29104);
			column_name1195=column_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, column_name1195.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2121:15: ( LPAREN INTEGER_NUM RPAREN )?
			int alt414=2;
			int LA414_0 = input.LA(1);
			if ( (LA414_0==LPAREN) ) {
				alt414=1;
			}
			switch (alt414) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2121:16: LPAREN INTEGER_NUM RPAREN
					{
					LPAREN1196=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_index_column_name29107); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1196_tree = (Object)adaptor.create(LPAREN1196);
					adaptor.addChild(root_0, LPAREN1196_tree);
					}

					INTEGER_NUM1197=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_index_column_name29109); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM1197_tree = (Object)adaptor.create(INTEGER_NUM1197);
					adaptor.addChild(root_0, INTEGER_NUM1197_tree);
					}

					RPAREN1198=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_index_column_name29111); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1198_tree = (Object)adaptor.create(RPAREN1198);
					adaptor.addChild(root_0, RPAREN1198_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2121:44: ( ASC | DESC )?
			int alt415=2;
			int LA415_0 = input.LA(1);
			if ( (LA415_0==ASC||LA415_0==DESC) ) {
				alt415=1;
			}
			switch (alt415) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
					{
					set1199=input.LT(1);
					if ( input.LA(1)==ASC||input.LA(1)==DESC ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1199));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "index_column_name"


	public static class reference_definition_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "reference_definition"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2124:1: reference_definition : REFERENCES table_name LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( ( MATCH FULL ) | ( MATCH PARTIAL ) | ( MATCH SIMPLE_SYM ) )? ( ON DELETE_SYM reference_option )? ( ON UPDATE reference_option )? ;
	public final SQLParser.reference_definition_return reference_definition() throws RecognitionException {
		SQLParser.reference_definition_return retval = new SQLParser.reference_definition_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token REFERENCES1200=null;
		Token LPAREN1202=null;
		Token COMMA1204=null;
		Token RPAREN1206=null;
		Token MATCH1207=null;
		Token FULL1208=null;
		Token MATCH1209=null;
		Token PARTIAL1210=null;
		Token MATCH1211=null;
		Token SIMPLE_SYM1212=null;
		Token ON1213=null;
		Token DELETE_SYM1214=null;
		Token ON1216=null;
		Token UPDATE1217=null;
		ParserRuleReturnScope table_name1201 =null;
		ParserRuleReturnScope index_column_name1203 =null;
		ParserRuleReturnScope index_column_name1205 =null;
		ParserRuleReturnScope reference_option1215 =null;
		ParserRuleReturnScope reference_option1218 =null;

		Object REFERENCES1200_tree=null;
		Object LPAREN1202_tree=null;
		Object COMMA1204_tree=null;
		Object RPAREN1206_tree=null;
		Object MATCH1207_tree=null;
		Object FULL1208_tree=null;
		Object MATCH1209_tree=null;
		Object PARTIAL1210_tree=null;
		Object MATCH1211_tree=null;
		Object SIMPLE_SYM1212_tree=null;
		Object ON1213_tree=null;
		Object DELETE_SYM1214_tree=null;
		Object ON1216_tree=null;
		Object UPDATE1217_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2124:21: ( REFERENCES table_name LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( ( MATCH FULL ) | ( MATCH PARTIAL ) | ( MATCH SIMPLE_SYM ) )? ( ON DELETE_SYM reference_option )? ( ON UPDATE reference_option )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2125:3: REFERENCES table_name LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( ( MATCH FULL ) | ( MATCH PARTIAL ) | ( MATCH SIMPLE_SYM ) )? ( ON DELETE_SYM reference_option )? ( ON UPDATE reference_option )?
			{
			root_0 = (Object)adaptor.nil();


			REFERENCES1200=(Token)match(input,REFERENCES,FOLLOW_REFERENCES_in_reference_definition29132); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			REFERENCES1200_tree = (Object)adaptor.create(REFERENCES1200);
			adaptor.addChild(root_0, REFERENCES1200_tree);
			}

			pushFollow(FOLLOW_table_name_in_reference_definition29134);
			table_name1201=table_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name1201.getTree());

			LPAREN1202=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_reference_definition29136); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			LPAREN1202_tree = (Object)adaptor.create(LPAREN1202);
			adaptor.addChild(root_0, LPAREN1202_tree);
			}

			pushFollow(FOLLOW_index_column_name_in_reference_definition29138);
			index_column_name1203=index_column_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name1203.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2125:50: ( COMMA index_column_name )*
			loop416:
			while (true) {
				int alt416=2;
				int LA416_0 = input.LA(1);
				if ( (LA416_0==COMMA) ) {
					alt416=1;
				}

				switch (alt416) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2125:51: COMMA index_column_name
					{
					COMMA1204=(Token)match(input,COMMA,FOLLOW_COMMA_in_reference_definition29141); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA1204_tree = (Object)adaptor.create(COMMA1204);
					adaptor.addChild(root_0, COMMA1204_tree);
					}

					pushFollow(FOLLOW_index_column_name_in_reference_definition29143);
					index_column_name1205=index_column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name1205.getTree());

					}
					break;

				default :
					break loop416;
				}
			}

			RPAREN1206=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_reference_definition29147); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			RPAREN1206_tree = (Object)adaptor.create(RPAREN1206);
			adaptor.addChild(root_0, RPAREN1206_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2126:3: ( ( MATCH FULL ) | ( MATCH PARTIAL ) | ( MATCH SIMPLE_SYM ) )?
			int alt417=4;
			int LA417_0 = input.LA(1);
			if ( (LA417_0==MATCH) ) {
				switch ( input.LA(2) ) {
					case FULL:
						{
						alt417=1;
						}
						break;
					case PARTIAL:
						{
						alt417=2;
						}
						break;
					case SIMPLE_SYM:
						{
						alt417=3;
						}
						break;
				}
			}
			switch (alt417) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2126:5: ( MATCH FULL )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2126:5: ( MATCH FULL )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2126:6: MATCH FULL
					{
					MATCH1207=(Token)match(input,MATCH,FOLLOW_MATCH_in_reference_definition29154); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MATCH1207_tree = (Object)adaptor.create(MATCH1207);
					adaptor.addChild(root_0, MATCH1207_tree);
					}

					FULL1208=(Token)match(input,FULL,FOLLOW_FULL_in_reference_definition29156); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					FULL1208_tree = (Object)adaptor.create(FULL1208);
					adaptor.addChild(root_0, FULL1208_tree);
					}

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2126:20: ( MATCH PARTIAL )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2126:20: ( MATCH PARTIAL )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2126:21: MATCH PARTIAL
					{
					MATCH1209=(Token)match(input,MATCH,FOLLOW_MATCH_in_reference_definition29162); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MATCH1209_tree = (Object)adaptor.create(MATCH1209);
					adaptor.addChild(root_0, MATCH1209_tree);
					}

					PARTIAL1210=(Token)match(input,PARTIAL,FOLLOW_PARTIAL_in_reference_definition29164); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PARTIAL1210_tree = (Object)adaptor.create(PARTIAL1210);
					adaptor.addChild(root_0, PARTIAL1210_tree);
					}

					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2126:38: ( MATCH SIMPLE_SYM )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2126:38: ( MATCH SIMPLE_SYM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2126:39: MATCH SIMPLE_SYM
					{
					MATCH1211=(Token)match(input,MATCH,FOLLOW_MATCH_in_reference_definition29170); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MATCH1211_tree = (Object)adaptor.create(MATCH1211);
					adaptor.addChild(root_0, MATCH1211_tree);
					}

					SIMPLE_SYM1212=(Token)match(input,SIMPLE_SYM,FOLLOW_SIMPLE_SYM_in_reference_definition29172); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SIMPLE_SYM1212_tree = (Object)adaptor.create(SIMPLE_SYM1212);
					adaptor.addChild(root_0, SIMPLE_SYM1212_tree);
					}

					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2127:3: ( ON DELETE_SYM reference_option )?
			int alt418=2;
			int LA418_0 = input.LA(1);
			if ( (LA418_0==ON) ) {
				int LA418_1 = input.LA(2);
				if ( (LA418_1==DELETE_SYM) ) {
					alt418=1;
				}
			}
			switch (alt418) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2127:4: ON DELETE_SYM reference_option
					{
					ON1213=(Token)match(input,ON,FOLLOW_ON_in_reference_definition29181); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ON1213_tree = (Object)adaptor.create(ON1213);
					adaptor.addChild(root_0, ON1213_tree);
					}

					DELETE_SYM1214=(Token)match(input,DELETE_SYM,FOLLOW_DELETE_SYM_in_reference_definition29183); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DELETE_SYM1214_tree = (Object)adaptor.create(DELETE_SYM1214);
					adaptor.addChild(root_0, DELETE_SYM1214_tree);
					}

					pushFollow(FOLLOW_reference_option_in_reference_definition29185);
					reference_option1215=reference_option();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, reference_option1215.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2128:3: ( ON UPDATE reference_option )?
			int alt419=2;
			int LA419_0 = input.LA(1);
			if ( (LA419_0==ON) ) {
				alt419=1;
			}
			switch (alt419) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2128:4: ON UPDATE reference_option
					{
					ON1216=(Token)match(input,ON,FOLLOW_ON_in_reference_definition29192); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ON1216_tree = (Object)adaptor.create(ON1216);
					adaptor.addChild(root_0, ON1216_tree);
					}

					UPDATE1217=(Token)match(input,UPDATE,FOLLOW_UPDATE_in_reference_definition29194); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					UPDATE1217_tree = (Object)adaptor.create(UPDATE1217);
					adaptor.addChild(root_0, UPDATE1217_tree);
					}

					pushFollow(FOLLOW_reference_option_in_reference_definition29196);
					reference_option1218=reference_option();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, reference_option1218.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "reference_definition"


	public static class reference_option_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "reference_option"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2130:1: reference_option : ( ( RESTRICT ) | ( CASCADE ) | ( SET_SYM NULL_SYM ) | ( NO_SYM ACTION ) );
	public final SQLParser.reference_option_return reference_option() throws RecognitionException {
		SQLParser.reference_option_return retval = new SQLParser.reference_option_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token RESTRICT1219=null;
		Token CASCADE1220=null;
		Token SET_SYM1221=null;
		Token NULL_SYM1222=null;
		Token NO_SYM1223=null;
		Token ACTION1224=null;

		Object RESTRICT1219_tree=null;
		Object CASCADE1220_tree=null;
		Object SET_SYM1221_tree=null;
		Object NULL_SYM1222_tree=null;
		Object NO_SYM1223_tree=null;
		Object ACTION1224_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2130:17: ( ( RESTRICT ) | ( CASCADE ) | ( SET_SYM NULL_SYM ) | ( NO_SYM ACTION ) )
			int alt420=4;
			switch ( input.LA(1) ) {
			case RESTRICT:
				{
				alt420=1;
				}
				break;
			case CASCADE:
				{
				alt420=2;
				}
				break;
			case SET_SYM:
				{
				alt420=3;
				}
				break;
			case NO_SYM:
				{
				alt420=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 420, 0, input);
				throw nvae;
			}
			switch (alt420) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2131:3: ( RESTRICT )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2131:3: ( RESTRICT )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2131:4: RESTRICT
					{
					RESTRICT1219=(Token)match(input,RESTRICT,FOLLOW_RESTRICT_in_reference_option29208); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RESTRICT1219_tree = (Object)adaptor.create(RESTRICT1219);
					adaptor.addChild(root_0, RESTRICT1219_tree);
					}

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2131:16: ( CASCADE )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2131:16: ( CASCADE )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2131:17: CASCADE
					{
					CASCADE1220=(Token)match(input,CASCADE,FOLLOW_CASCADE_in_reference_option29214); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CASCADE1220_tree = (Object)adaptor.create(CASCADE1220);
					adaptor.addChild(root_0, CASCADE1220_tree);
					}

					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2131:28: ( SET_SYM NULL_SYM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2131:28: ( SET_SYM NULL_SYM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2131:29: SET_SYM NULL_SYM
					{
					SET_SYM1221=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_reference_option29220); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SET_SYM1221_tree = (Object)adaptor.create(SET_SYM1221);
					adaptor.addChild(root_0, SET_SYM1221_tree);
					}

					NULL_SYM1222=(Token)match(input,NULL_SYM,FOLLOW_NULL_SYM_in_reference_option29222); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					NULL_SYM1222_tree = (Object)adaptor.create(NULL_SYM1222);
					adaptor.addChild(root_0, NULL_SYM1222_tree);
					}

					}

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2131:49: ( NO_SYM ACTION )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2131:49: ( NO_SYM ACTION )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2131:50: NO_SYM ACTION
					{
					NO_SYM1223=(Token)match(input,NO_SYM,FOLLOW_NO_SYM_in_reference_option29228); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					NO_SYM1223_tree = (Object)adaptor.create(NO_SYM1223);
					adaptor.addChild(root_0, NO_SYM1223_tree);
					}

					ACTION1224=(Token)match(input,ACTION,FOLLOW_ACTION_in_reference_option29230); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ACTION1224_tree = (Object)adaptor.create(ACTION1224);
					adaptor.addChild(root_0, ACTION1224_tree);
					}

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "reference_option"


	public static class table_options_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "table_options"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2134:1: table_options : table_option ( ( COMMA )? table_option )* ;
	public final SQLParser.table_options_return table_options() throws RecognitionException {
		SQLParser.table_options_return retval = new SQLParser.table_options_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token COMMA1226=null;
		ParserRuleReturnScope table_option1225 =null;
		ParserRuleReturnScope table_option1227 =null;

		Object COMMA1226_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2134:14: ( table_option ( ( COMMA )? table_option )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2135:3: table_option ( ( COMMA )? table_option )*
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_table_option_in_table_options29241);
			table_option1225=table_option();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_option1225.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2135:16: ( ( COMMA )? table_option )*
			loop422:
			while (true) {
				int alt422=2;
				alt422 = dfa422.predict(input);
				switch (alt422) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2135:17: ( COMMA )? table_option
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2135:17: ( COMMA )?
					int alt421=2;
					int LA421_0 = input.LA(1);
					if ( (LA421_0==COMMA) ) {
						alt421=1;
					}
					switch (alt421) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2135:19: COMMA
							{
							COMMA1226=(Token)match(input,COMMA,FOLLOW_COMMA_in_table_options29246); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA1226_tree = (Object)adaptor.create(COMMA1226);
							adaptor.addChild(root_0, COMMA1226_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_table_option_in_table_options29251);
					table_option1227=table_option();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_option1227.getTree());

					}
					break;

				default :
					break loop422;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_options"


	public static class table_option_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "table_option"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2137:1: table_option : ( ( ENGINE_SYM ( EQ_SYM )? engine_name ) | ( AUTO_INCREMENT ( EQ_SYM )? INTEGER_NUM ) | ( AVG_ROW_LENGTH ( EQ_SYM )? INTEGER_NUM ) | ( ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name ) | ( CHECKSUM_SYM ( EQ_SYM )? INTEGER_NUM ) | ( ( DEFAULT )? COLLATE_SYM ( EQ_SYM )? collation_name ) | ( COMMENT_SYM ( EQ_SYM )? TEXT_STRING ) | ( CONNECTION_SYM ( EQ_SYM )? TEXT_STRING ) | ( DATA_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING ) | ( DELAY_KEY_WRITE_SYM ( EQ_SYM )? INTEGER_NUM ) | ( INDEX_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING ) | ( INSERT_METHOD ( EQ_SYM )? ( NO_SYM | FIRST_SYM | LAST_SYM ) ) | ( KEY_BLOCK_SIZE ( EQ_SYM )? INTEGER_NUM ) | ( MAX_ROWS ( EQ_SYM )? INTEGER_NUM ) | ( MIN_ROWS ( EQ_SYM )? INTEGER_NUM ) | ( PACK_KEYS_SYM ( EQ_SYM )? ( INTEGER_NUM | DEFAULT ) ) | ( PASSWORD ( EQ_SYM )? TEXT_STRING ) | ( ROW_FORMAT_SYM ( EQ_SYM )? ( DEFAULT | DYNAMIC_SYM | FIXED_SYM | COMPRESSED_SYM | REDUNDANT_SYM | COMPACT_SYM ) ) | ( STATS_AUTO_RECALC ( EQ_SYM )? ( DEFAULT | INTEGER_NUM ) ) | ( STATS_PERSISTENT ( EQ_SYM )? ( DEFAULT | INTEGER_NUM ) ) | ( UNION_SYM ( EQ_SYM )? LPAREN table_name ( COMMA table_name )* RPAREN ) );
	public final SQLParser.table_option_return table_option() throws RecognitionException {
		SQLParser.table_option_return retval = new SQLParser.table_option_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token ENGINE_SYM1228=null;
		Token EQ_SYM1229=null;
		Token AUTO_INCREMENT1231=null;
		Token EQ_SYM1232=null;
		Token INTEGER_NUM1233=null;
		Token AVG_ROW_LENGTH1234=null;
		Token EQ_SYM1235=null;
		Token INTEGER_NUM1236=null;
		Token DEFAULT1237=null;
		Token CHARACTER_SYM1238=null;
		Token SET_SYM1239=null;
		Token EQ_SYM1240=null;
		Token CHECKSUM_SYM1242=null;
		Token EQ_SYM1243=null;
		Token INTEGER_NUM1244=null;
		Token DEFAULT1245=null;
		Token COLLATE_SYM1246=null;
		Token EQ_SYM1247=null;
		Token COMMENT_SYM1249=null;
		Token EQ_SYM1250=null;
		Token TEXT_STRING1251=null;
		Token CONNECTION_SYM1252=null;
		Token EQ_SYM1253=null;
		Token TEXT_STRING1254=null;
		Token DATA_SYM1255=null;
		Token DIRECTORY_SYM1256=null;
		Token EQ_SYM1257=null;
		Token TEXT_STRING1258=null;
		Token DELAY_KEY_WRITE_SYM1259=null;
		Token EQ_SYM1260=null;
		Token INTEGER_NUM1261=null;
		Token INDEX_SYM1262=null;
		Token DIRECTORY_SYM1263=null;
		Token EQ_SYM1264=null;
		Token TEXT_STRING1265=null;
		Token INSERT_METHOD1266=null;
		Token EQ_SYM1267=null;
		Token set1268=null;
		Token KEY_BLOCK_SIZE1269=null;
		Token EQ_SYM1270=null;
		Token INTEGER_NUM1271=null;
		Token MAX_ROWS1272=null;
		Token EQ_SYM1273=null;
		Token INTEGER_NUM1274=null;
		Token MIN_ROWS1275=null;
		Token EQ_SYM1276=null;
		Token INTEGER_NUM1277=null;
		Token PACK_KEYS_SYM1278=null;
		Token EQ_SYM1279=null;
		Token set1280=null;
		Token PASSWORD1281=null;
		Token EQ_SYM1282=null;
		Token TEXT_STRING1283=null;
		Token ROW_FORMAT_SYM1284=null;
		Token EQ_SYM1285=null;
		Token set1286=null;
		Token STATS_AUTO_RECALC1287=null;
		Token EQ_SYM1288=null;
		Token set1289=null;
		Token STATS_PERSISTENT1290=null;
		Token EQ_SYM1291=null;
		Token set1292=null;
		Token UNION_SYM1293=null;
		Token EQ_SYM1294=null;
		Token LPAREN1295=null;
		Token COMMA1297=null;
		Token RPAREN1299=null;
		ParserRuleReturnScope engine_name1230 =null;
		ParserRuleReturnScope charset_name1241 =null;
		ParserRuleReturnScope collation_name1248 =null;
		ParserRuleReturnScope table_name1296 =null;
		ParserRuleReturnScope table_name1298 =null;

		Object ENGINE_SYM1228_tree=null;
		Object EQ_SYM1229_tree=null;
		Object AUTO_INCREMENT1231_tree=null;
		Object EQ_SYM1232_tree=null;
		Object INTEGER_NUM1233_tree=null;
		Object AVG_ROW_LENGTH1234_tree=null;
		Object EQ_SYM1235_tree=null;
		Object INTEGER_NUM1236_tree=null;
		Object DEFAULT1237_tree=null;
		Object CHARACTER_SYM1238_tree=null;
		Object SET_SYM1239_tree=null;
		Object EQ_SYM1240_tree=null;
		Object CHECKSUM_SYM1242_tree=null;
		Object EQ_SYM1243_tree=null;
		Object INTEGER_NUM1244_tree=null;
		Object DEFAULT1245_tree=null;
		Object COLLATE_SYM1246_tree=null;
		Object EQ_SYM1247_tree=null;
		Object COMMENT_SYM1249_tree=null;
		Object EQ_SYM1250_tree=null;
		Object TEXT_STRING1251_tree=null;
		Object CONNECTION_SYM1252_tree=null;
		Object EQ_SYM1253_tree=null;
		Object TEXT_STRING1254_tree=null;
		Object DATA_SYM1255_tree=null;
		Object DIRECTORY_SYM1256_tree=null;
		Object EQ_SYM1257_tree=null;
		Object TEXT_STRING1258_tree=null;
		Object DELAY_KEY_WRITE_SYM1259_tree=null;
		Object EQ_SYM1260_tree=null;
		Object INTEGER_NUM1261_tree=null;
		Object INDEX_SYM1262_tree=null;
		Object DIRECTORY_SYM1263_tree=null;
		Object EQ_SYM1264_tree=null;
		Object TEXT_STRING1265_tree=null;
		Object INSERT_METHOD1266_tree=null;
		Object EQ_SYM1267_tree=null;
		Object set1268_tree=null;
		Object KEY_BLOCK_SIZE1269_tree=null;
		Object EQ_SYM1270_tree=null;
		Object INTEGER_NUM1271_tree=null;
		Object MAX_ROWS1272_tree=null;
		Object EQ_SYM1273_tree=null;
		Object INTEGER_NUM1274_tree=null;
		Object MIN_ROWS1275_tree=null;
		Object EQ_SYM1276_tree=null;
		Object INTEGER_NUM1277_tree=null;
		Object PACK_KEYS_SYM1278_tree=null;
		Object EQ_SYM1279_tree=null;
		Object set1280_tree=null;
		Object PASSWORD1281_tree=null;
		Object EQ_SYM1282_tree=null;
		Object TEXT_STRING1283_tree=null;
		Object ROW_FORMAT_SYM1284_tree=null;
		Object EQ_SYM1285_tree=null;
		Object set1286_tree=null;
		Object STATS_AUTO_RECALC1287_tree=null;
		Object EQ_SYM1288_tree=null;
		Object set1289_tree=null;
		Object STATS_PERSISTENT1290_tree=null;
		Object EQ_SYM1291_tree=null;
		Object set1292_tree=null;
		Object UNION_SYM1293_tree=null;
		Object EQ_SYM1294_tree=null;
		Object LPAREN1295_tree=null;
		Object COMMA1297_tree=null;
		Object RPAREN1299_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2137:13: ( ( ENGINE_SYM ( EQ_SYM )? engine_name ) | ( AUTO_INCREMENT ( EQ_SYM )? INTEGER_NUM ) | ( AVG_ROW_LENGTH ( EQ_SYM )? INTEGER_NUM ) | ( ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name ) | ( CHECKSUM_SYM ( EQ_SYM )? INTEGER_NUM ) | ( ( DEFAULT )? COLLATE_SYM ( EQ_SYM )? collation_name ) | ( COMMENT_SYM ( EQ_SYM )? TEXT_STRING ) | ( CONNECTION_SYM ( EQ_SYM )? TEXT_STRING ) | ( DATA_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING ) | ( DELAY_KEY_WRITE_SYM ( EQ_SYM )? INTEGER_NUM ) | ( INDEX_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING ) | ( INSERT_METHOD ( EQ_SYM )? ( NO_SYM | FIRST_SYM | LAST_SYM ) ) | ( KEY_BLOCK_SIZE ( EQ_SYM )? INTEGER_NUM ) | ( MAX_ROWS ( EQ_SYM )? INTEGER_NUM ) | ( MIN_ROWS ( EQ_SYM )? INTEGER_NUM ) | ( PACK_KEYS_SYM ( EQ_SYM )? ( INTEGER_NUM | DEFAULT ) ) | ( PASSWORD ( EQ_SYM )? TEXT_STRING ) | ( ROW_FORMAT_SYM ( EQ_SYM )? ( DEFAULT | DYNAMIC_SYM | FIXED_SYM | COMPRESSED_SYM | REDUNDANT_SYM | COMPACT_SYM ) ) | ( STATS_AUTO_RECALC ( EQ_SYM )? ( DEFAULT | INTEGER_NUM ) ) | ( STATS_PERSISTENT ( EQ_SYM )? ( DEFAULT | INTEGER_NUM ) ) | ( UNION_SYM ( EQ_SYM )? LPAREN table_name ( COMMA table_name )* RPAREN ) )
			int alt447=21;
			switch ( input.LA(1) ) {
			case ENGINE_SYM:
				{
				alt447=1;
				}
				break;
			case AUTO_INCREMENT:
				{
				alt447=2;
				}
				break;
			case AVG_ROW_LENGTH:
				{
				alt447=3;
				}
				break;
			case DEFAULT:
				{
				int LA447_4 = input.LA(2);
				if ( (LA447_4==CHARACTER_SYM) ) {
					alt447=4;
				}
				else if ( (LA447_4==COLLATE_SYM) ) {
					alt447=6;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 447, 4, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CHARACTER_SYM:
				{
				alt447=4;
				}
				break;
			case CHECKSUM_SYM:
				{
				alt447=5;
				}
				break;
			case COLLATE_SYM:
				{
				alt447=6;
				}
				break;
			case COMMENT_SYM:
				{
				alt447=7;
				}
				break;
			case CONNECTION_SYM:
				{
				alt447=8;
				}
				break;
			case DATA_SYM:
				{
				alt447=9;
				}
				break;
			case DELAY_KEY_WRITE_SYM:
				{
				alt447=10;
				}
				break;
			case INDEX_SYM:
				{
				alt447=11;
				}
				break;
			case INSERT_METHOD:
				{
				alt447=12;
				}
				break;
			case KEY_BLOCK_SIZE:
				{
				alt447=13;
				}
				break;
			case MAX_ROWS:
				{
				alt447=14;
				}
				break;
			case MIN_ROWS:
				{
				alt447=15;
				}
				break;
			case PACK_KEYS_SYM:
				{
				alt447=16;
				}
				break;
			case PASSWORD:
				{
				alt447=17;
				}
				break;
			case ROW_FORMAT_SYM:
				{
				alt447=18;
				}
				break;
			case STATS_AUTO_RECALC:
				{
				alt447=19;
				}
				break;
			case STATS_PERSISTENT:
				{
				alt447=20;
				}
				break;
			case UNION_SYM:
				{
				alt447=21;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 447, 0, input);
				throw nvae;
			}
			switch (alt447) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2138:5: ( ENGINE_SYM ( EQ_SYM )? engine_name )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2138:5: ( ENGINE_SYM ( EQ_SYM )? engine_name )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2138:8: ENGINE_SYM ( EQ_SYM )? engine_name
					{
					ENGINE_SYM1228=(Token)match(input,ENGINE_SYM,FOLLOW_ENGINE_SYM_in_table_option29267); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ENGINE_SYM1228_tree = (Object)adaptor.create(ENGINE_SYM1228);
					adaptor.addChild(root_0, ENGINE_SYM1228_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2138:19: ( EQ_SYM )?
					int alt423=2;
					int LA423_0 = input.LA(1);
					if ( (LA423_0==EQ_SYM) ) {
						alt423=1;
					}
					switch (alt423) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2138:20: EQ_SYM
							{
							EQ_SYM1229=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29270); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1229_tree = (Object)adaptor.create(EQ_SYM1229);
							adaptor.addChild(root_0, EQ_SYM1229_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_engine_name_in_table_option29274);
					engine_name1230=engine_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, engine_name1230.getTree());

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2139:5: ( AUTO_INCREMENT ( EQ_SYM )? INTEGER_NUM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2139:5: ( AUTO_INCREMENT ( EQ_SYM )? INTEGER_NUM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2139:8: AUTO_INCREMENT ( EQ_SYM )? INTEGER_NUM
					{
					AUTO_INCREMENT1231=(Token)match(input,AUTO_INCREMENT,FOLLOW_AUTO_INCREMENT_in_table_option29286); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					AUTO_INCREMENT1231_tree = (Object)adaptor.create(AUTO_INCREMENT1231);
					adaptor.addChild(root_0, AUTO_INCREMENT1231_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2139:23: ( EQ_SYM )?
					int alt424=2;
					int LA424_0 = input.LA(1);
					if ( (LA424_0==EQ_SYM) ) {
						alt424=1;
					}
					switch (alt424) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2139:24: EQ_SYM
							{
							EQ_SYM1232=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29289); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1232_tree = (Object)adaptor.create(EQ_SYM1232);
							adaptor.addChild(root_0, EQ_SYM1232_tree);
							}

							}
							break;

					}

					INTEGER_NUM1233=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_table_option29293); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM1233_tree = (Object)adaptor.create(INTEGER_NUM1233);
					adaptor.addChild(root_0, INTEGER_NUM1233_tree);
					}

					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2140:5: ( AVG_ROW_LENGTH ( EQ_SYM )? INTEGER_NUM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2140:5: ( AVG_ROW_LENGTH ( EQ_SYM )? INTEGER_NUM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2140:8: AVG_ROW_LENGTH ( EQ_SYM )? INTEGER_NUM
					{
					AVG_ROW_LENGTH1234=(Token)match(input,AVG_ROW_LENGTH,FOLLOW_AVG_ROW_LENGTH_in_table_option29305); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					AVG_ROW_LENGTH1234_tree = (Object)adaptor.create(AVG_ROW_LENGTH1234);
					adaptor.addChild(root_0, AVG_ROW_LENGTH1234_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2140:23: ( EQ_SYM )?
					int alt425=2;
					int LA425_0 = input.LA(1);
					if ( (LA425_0==EQ_SYM) ) {
						alt425=1;
					}
					switch (alt425) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2140:24: EQ_SYM
							{
							EQ_SYM1235=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29308); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1235_tree = (Object)adaptor.create(EQ_SYM1235);
							adaptor.addChild(root_0, EQ_SYM1235_tree);
							}

							}
							break;

					}

					INTEGER_NUM1236=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_table_option29312); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM1236_tree = (Object)adaptor.create(INTEGER_NUM1236);
					adaptor.addChild(root_0, INTEGER_NUM1236_tree);
					}

					}

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2141:5: ( ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2141:5: ( ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2141:8: ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2141:8: ( DEFAULT )?
					int alt426=2;
					int LA426_0 = input.LA(1);
					if ( (LA426_0==DEFAULT) ) {
						alt426=1;
					}
					switch (alt426) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2141:9: DEFAULT
							{
							DEFAULT1237=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_table_option29325); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1237_tree = (Object)adaptor.create(DEFAULT1237);
							adaptor.addChild(root_0, DEFAULT1237_tree);
							}

							}
							break;

					}

					CHARACTER_SYM1238=(Token)match(input,CHARACTER_SYM,FOLLOW_CHARACTER_SYM_in_table_option29329); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CHARACTER_SYM1238_tree = (Object)adaptor.create(CHARACTER_SYM1238);
					adaptor.addChild(root_0, CHARACTER_SYM1238_tree);
					}

					SET_SYM1239=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_table_option29331); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SET_SYM1239_tree = (Object)adaptor.create(SET_SYM1239);
					adaptor.addChild(root_0, SET_SYM1239_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2141:41: ( EQ_SYM )?
					int alt427=2;
					int LA427_0 = input.LA(1);
					if ( (LA427_0==EQ_SYM) ) {
						alt427=1;
					}
					switch (alt427) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2141:42: EQ_SYM
							{
							EQ_SYM1240=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29334); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1240_tree = (Object)adaptor.create(EQ_SYM1240);
							adaptor.addChild(root_0, EQ_SYM1240_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_charset_name_in_table_option29338);
					charset_name1241=charset_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, charset_name1241.getTree());

					}

					}
					break;
				case 5 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2142:5: ( CHECKSUM_SYM ( EQ_SYM )? INTEGER_NUM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2142:5: ( CHECKSUM_SYM ( EQ_SYM )? INTEGER_NUM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2142:8: CHECKSUM_SYM ( EQ_SYM )? INTEGER_NUM
					{
					CHECKSUM_SYM1242=(Token)match(input,CHECKSUM_SYM,FOLLOW_CHECKSUM_SYM_in_table_option29350); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CHECKSUM_SYM1242_tree = (Object)adaptor.create(CHECKSUM_SYM1242);
					adaptor.addChild(root_0, CHECKSUM_SYM1242_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2142:21: ( EQ_SYM )?
					int alt428=2;
					int LA428_0 = input.LA(1);
					if ( (LA428_0==EQ_SYM) ) {
						alt428=1;
					}
					switch (alt428) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2142:22: EQ_SYM
							{
							EQ_SYM1243=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29353); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1243_tree = (Object)adaptor.create(EQ_SYM1243);
							adaptor.addChild(root_0, EQ_SYM1243_tree);
							}

							}
							break;

					}

					INTEGER_NUM1244=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_table_option29357); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM1244_tree = (Object)adaptor.create(INTEGER_NUM1244);
					adaptor.addChild(root_0, INTEGER_NUM1244_tree);
					}

					}

					}
					break;
				case 6 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2143:5: ( ( DEFAULT )? COLLATE_SYM ( EQ_SYM )? collation_name )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2143:5: ( ( DEFAULT )? COLLATE_SYM ( EQ_SYM )? collation_name )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2143:8: ( DEFAULT )? COLLATE_SYM ( EQ_SYM )? collation_name
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2143:8: ( DEFAULT )?
					int alt429=2;
					int LA429_0 = input.LA(1);
					if ( (LA429_0==DEFAULT) ) {
						alt429=1;
					}
					switch (alt429) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2143:9: DEFAULT
							{
							DEFAULT1245=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_table_option29370); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1245_tree = (Object)adaptor.create(DEFAULT1245);
							adaptor.addChild(root_0, DEFAULT1245_tree);
							}

							}
							break;

					}

					COLLATE_SYM1246=(Token)match(input,COLLATE_SYM,FOLLOW_COLLATE_SYM_in_table_option29374); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COLLATE_SYM1246_tree = (Object)adaptor.create(COLLATE_SYM1246);
					adaptor.addChild(root_0, COLLATE_SYM1246_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2143:31: ( EQ_SYM )?
					int alt430=2;
					int LA430_0 = input.LA(1);
					if ( (LA430_0==EQ_SYM) ) {
						alt430=1;
					}
					switch (alt430) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2143:32: EQ_SYM
							{
							EQ_SYM1247=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29377); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1247_tree = (Object)adaptor.create(EQ_SYM1247);
							adaptor.addChild(root_0, EQ_SYM1247_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_collation_name_in_table_option29381);
					collation_name1248=collation_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, collation_name1248.getTree());

					}

					}
					break;
				case 7 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2144:5: ( COMMENT_SYM ( EQ_SYM )? TEXT_STRING )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2144:5: ( COMMENT_SYM ( EQ_SYM )? TEXT_STRING )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2144:8: COMMENT_SYM ( EQ_SYM )? TEXT_STRING
					{
					COMMENT_SYM1249=(Token)match(input,COMMENT_SYM,FOLLOW_COMMENT_SYM_in_table_option29393); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMENT_SYM1249_tree = (Object)adaptor.create(COMMENT_SYM1249);
					adaptor.addChild(root_0, COMMENT_SYM1249_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2144:20: ( EQ_SYM )?
					int alt431=2;
					int LA431_0 = input.LA(1);
					if ( (LA431_0==EQ_SYM) ) {
						alt431=1;
					}
					switch (alt431) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2144:21: EQ_SYM
							{
							EQ_SYM1250=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29396); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1250_tree = (Object)adaptor.create(EQ_SYM1250);
							adaptor.addChild(root_0, EQ_SYM1250_tree);
							}

							}
							break;

					}

					TEXT_STRING1251=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_table_option29400); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING1251_tree = (Object)adaptor.create(TEXT_STRING1251);
					adaptor.addChild(root_0, TEXT_STRING1251_tree);
					}

					}

					}
					break;
				case 8 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2145:5: ( CONNECTION_SYM ( EQ_SYM )? TEXT_STRING )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2145:5: ( CONNECTION_SYM ( EQ_SYM )? TEXT_STRING )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2145:8: CONNECTION_SYM ( EQ_SYM )? TEXT_STRING
					{
					CONNECTION_SYM1252=(Token)match(input,CONNECTION_SYM,FOLLOW_CONNECTION_SYM_in_table_option29412); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CONNECTION_SYM1252_tree = (Object)adaptor.create(CONNECTION_SYM1252);
					adaptor.addChild(root_0, CONNECTION_SYM1252_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2145:23: ( EQ_SYM )?
					int alt432=2;
					int LA432_0 = input.LA(1);
					if ( (LA432_0==EQ_SYM) ) {
						alt432=1;
					}
					switch (alt432) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2145:24: EQ_SYM
							{
							EQ_SYM1253=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29415); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1253_tree = (Object)adaptor.create(EQ_SYM1253);
							adaptor.addChild(root_0, EQ_SYM1253_tree);
							}

							}
							break;

					}

					TEXT_STRING1254=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_table_option29419); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING1254_tree = (Object)adaptor.create(TEXT_STRING1254);
					adaptor.addChild(root_0, TEXT_STRING1254_tree);
					}

					}

					}
					break;
				case 9 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2146:5: ( DATA_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2146:5: ( DATA_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2146:8: DATA_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING
					{
					DATA_SYM1255=(Token)match(input,DATA_SYM,FOLLOW_DATA_SYM_in_table_option29431); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DATA_SYM1255_tree = (Object)adaptor.create(DATA_SYM1255);
					adaptor.addChild(root_0, DATA_SYM1255_tree);
					}

					DIRECTORY_SYM1256=(Token)match(input,DIRECTORY_SYM,FOLLOW_DIRECTORY_SYM_in_table_option29433); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DIRECTORY_SYM1256_tree = (Object)adaptor.create(DIRECTORY_SYM1256);
					adaptor.addChild(root_0, DIRECTORY_SYM1256_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2146:31: ( EQ_SYM )?
					int alt433=2;
					int LA433_0 = input.LA(1);
					if ( (LA433_0==EQ_SYM) ) {
						alt433=1;
					}
					switch (alt433) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2146:32: EQ_SYM
							{
							EQ_SYM1257=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29436); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1257_tree = (Object)adaptor.create(EQ_SYM1257);
							adaptor.addChild(root_0, EQ_SYM1257_tree);
							}

							}
							break;

					}

					TEXT_STRING1258=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_table_option29440); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING1258_tree = (Object)adaptor.create(TEXT_STRING1258);
					adaptor.addChild(root_0, TEXT_STRING1258_tree);
					}

					}

					}
					break;
				case 10 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2147:5: ( DELAY_KEY_WRITE_SYM ( EQ_SYM )? INTEGER_NUM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2147:5: ( DELAY_KEY_WRITE_SYM ( EQ_SYM )? INTEGER_NUM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2147:8: DELAY_KEY_WRITE_SYM ( EQ_SYM )? INTEGER_NUM
					{
					DELAY_KEY_WRITE_SYM1259=(Token)match(input,DELAY_KEY_WRITE_SYM,FOLLOW_DELAY_KEY_WRITE_SYM_in_table_option29452); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DELAY_KEY_WRITE_SYM1259_tree = (Object)adaptor.create(DELAY_KEY_WRITE_SYM1259);
					adaptor.addChild(root_0, DELAY_KEY_WRITE_SYM1259_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2147:28: ( EQ_SYM )?
					int alt434=2;
					int LA434_0 = input.LA(1);
					if ( (LA434_0==EQ_SYM) ) {
						alt434=1;
					}
					switch (alt434) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2147:29: EQ_SYM
							{
							EQ_SYM1260=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29455); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1260_tree = (Object)adaptor.create(EQ_SYM1260);
							adaptor.addChild(root_0, EQ_SYM1260_tree);
							}

							}
							break;

					}

					INTEGER_NUM1261=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_table_option29459); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM1261_tree = (Object)adaptor.create(INTEGER_NUM1261);
					adaptor.addChild(root_0, INTEGER_NUM1261_tree);
					}

					}

					}
					break;
				case 11 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2148:5: ( INDEX_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2148:5: ( INDEX_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2148:8: INDEX_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING
					{
					INDEX_SYM1262=(Token)match(input,INDEX_SYM,FOLLOW_INDEX_SYM_in_table_option29471); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INDEX_SYM1262_tree = (Object)adaptor.create(INDEX_SYM1262);
					adaptor.addChild(root_0, INDEX_SYM1262_tree);
					}

					DIRECTORY_SYM1263=(Token)match(input,DIRECTORY_SYM,FOLLOW_DIRECTORY_SYM_in_table_option29473); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DIRECTORY_SYM1263_tree = (Object)adaptor.create(DIRECTORY_SYM1263);
					adaptor.addChild(root_0, DIRECTORY_SYM1263_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2148:32: ( EQ_SYM )?
					int alt435=2;
					int LA435_0 = input.LA(1);
					if ( (LA435_0==EQ_SYM) ) {
						alt435=1;
					}
					switch (alt435) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2148:33: EQ_SYM
							{
							EQ_SYM1264=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29476); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1264_tree = (Object)adaptor.create(EQ_SYM1264);
							adaptor.addChild(root_0, EQ_SYM1264_tree);
							}

							}
							break;

					}

					TEXT_STRING1265=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_table_option29480); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING1265_tree = (Object)adaptor.create(TEXT_STRING1265);
					adaptor.addChild(root_0, TEXT_STRING1265_tree);
					}

					}

					}
					break;
				case 12 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2149:5: ( INSERT_METHOD ( EQ_SYM )? ( NO_SYM | FIRST_SYM | LAST_SYM ) )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2149:5: ( INSERT_METHOD ( EQ_SYM )? ( NO_SYM | FIRST_SYM | LAST_SYM ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2149:8: INSERT_METHOD ( EQ_SYM )? ( NO_SYM | FIRST_SYM | LAST_SYM )
					{
					INSERT_METHOD1266=(Token)match(input,INSERT_METHOD,FOLLOW_INSERT_METHOD_in_table_option29492); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INSERT_METHOD1266_tree = (Object)adaptor.create(INSERT_METHOD1266);
					adaptor.addChild(root_0, INSERT_METHOD1266_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2149:22: ( EQ_SYM )?
					int alt436=2;
					int LA436_0 = input.LA(1);
					if ( (LA436_0==EQ_SYM) ) {
						alt436=1;
					}
					switch (alt436) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2149:23: EQ_SYM
							{
							EQ_SYM1267=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29495); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1267_tree = (Object)adaptor.create(EQ_SYM1267);
							adaptor.addChild(root_0, EQ_SYM1267_tree);
							}

							}
							break;

					}

					set1268=input.LT(1);
					if ( input.LA(1)==FIRST_SYM||input.LA(1)==LAST_SYM||input.LA(1)==NO_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1268));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}

					}
					break;
				case 13 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2150:5: ( KEY_BLOCK_SIZE ( EQ_SYM )? INTEGER_NUM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2150:5: ( KEY_BLOCK_SIZE ( EQ_SYM )? INTEGER_NUM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2150:8: KEY_BLOCK_SIZE ( EQ_SYM )? INTEGER_NUM
					{
					KEY_BLOCK_SIZE1269=(Token)match(input,KEY_BLOCK_SIZE,FOLLOW_KEY_BLOCK_SIZE_in_table_option29523); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					KEY_BLOCK_SIZE1269_tree = (Object)adaptor.create(KEY_BLOCK_SIZE1269);
					adaptor.addChild(root_0, KEY_BLOCK_SIZE1269_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2150:23: ( EQ_SYM )?
					int alt437=2;
					int LA437_0 = input.LA(1);
					if ( (LA437_0==EQ_SYM) ) {
						alt437=1;
					}
					switch (alt437) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2150:24: EQ_SYM
							{
							EQ_SYM1270=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29526); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1270_tree = (Object)adaptor.create(EQ_SYM1270);
							adaptor.addChild(root_0, EQ_SYM1270_tree);
							}

							}
							break;

					}

					INTEGER_NUM1271=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_table_option29530); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM1271_tree = (Object)adaptor.create(INTEGER_NUM1271);
					adaptor.addChild(root_0, INTEGER_NUM1271_tree);
					}

					}

					}
					break;
				case 14 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2151:5: ( MAX_ROWS ( EQ_SYM )? INTEGER_NUM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2151:5: ( MAX_ROWS ( EQ_SYM )? INTEGER_NUM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2151:8: MAX_ROWS ( EQ_SYM )? INTEGER_NUM
					{
					MAX_ROWS1272=(Token)match(input,MAX_ROWS,FOLLOW_MAX_ROWS_in_table_option29542); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MAX_ROWS1272_tree = (Object)adaptor.create(MAX_ROWS1272);
					adaptor.addChild(root_0, MAX_ROWS1272_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2151:17: ( EQ_SYM )?
					int alt438=2;
					int LA438_0 = input.LA(1);
					if ( (LA438_0==EQ_SYM) ) {
						alt438=1;
					}
					switch (alt438) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2151:18: EQ_SYM
							{
							EQ_SYM1273=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29545); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1273_tree = (Object)adaptor.create(EQ_SYM1273);
							adaptor.addChild(root_0, EQ_SYM1273_tree);
							}

							}
							break;

					}

					INTEGER_NUM1274=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_table_option29549); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM1274_tree = (Object)adaptor.create(INTEGER_NUM1274);
					adaptor.addChild(root_0, INTEGER_NUM1274_tree);
					}

					}

					}
					break;
				case 15 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2152:5: ( MIN_ROWS ( EQ_SYM )? INTEGER_NUM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2152:5: ( MIN_ROWS ( EQ_SYM )? INTEGER_NUM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2152:8: MIN_ROWS ( EQ_SYM )? INTEGER_NUM
					{
					MIN_ROWS1275=(Token)match(input,MIN_ROWS,FOLLOW_MIN_ROWS_in_table_option29561); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MIN_ROWS1275_tree = (Object)adaptor.create(MIN_ROWS1275);
					adaptor.addChild(root_0, MIN_ROWS1275_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2152:17: ( EQ_SYM )?
					int alt439=2;
					int LA439_0 = input.LA(1);
					if ( (LA439_0==EQ_SYM) ) {
						alt439=1;
					}
					switch (alt439) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2152:18: EQ_SYM
							{
							EQ_SYM1276=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29564); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1276_tree = (Object)adaptor.create(EQ_SYM1276);
							adaptor.addChild(root_0, EQ_SYM1276_tree);
							}

							}
							break;

					}

					INTEGER_NUM1277=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_table_option29568); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM1277_tree = (Object)adaptor.create(INTEGER_NUM1277);
					adaptor.addChild(root_0, INTEGER_NUM1277_tree);
					}

					}

					}
					break;
				case 16 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2153:5: ( PACK_KEYS_SYM ( EQ_SYM )? ( INTEGER_NUM | DEFAULT ) )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2153:5: ( PACK_KEYS_SYM ( EQ_SYM )? ( INTEGER_NUM | DEFAULT ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2153:8: PACK_KEYS_SYM ( EQ_SYM )? ( INTEGER_NUM | DEFAULT )
					{
					PACK_KEYS_SYM1278=(Token)match(input,PACK_KEYS_SYM,FOLLOW_PACK_KEYS_SYM_in_table_option29580); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PACK_KEYS_SYM1278_tree = (Object)adaptor.create(PACK_KEYS_SYM1278);
					adaptor.addChild(root_0, PACK_KEYS_SYM1278_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2153:22: ( EQ_SYM )?
					int alt440=2;
					int LA440_0 = input.LA(1);
					if ( (LA440_0==EQ_SYM) ) {
						alt440=1;
					}
					switch (alt440) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2153:23: EQ_SYM
							{
							EQ_SYM1279=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29583); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1279_tree = (Object)adaptor.create(EQ_SYM1279);
							adaptor.addChild(root_0, EQ_SYM1279_tree);
							}

							}
							break;

					}

					set1280=input.LT(1);
					if ( input.LA(1)==DEFAULT||input.LA(1)==INTEGER_NUM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1280));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}

					}
					break;
				case 17 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2154:5: ( PASSWORD ( EQ_SYM )? TEXT_STRING )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2154:5: ( PASSWORD ( EQ_SYM )? TEXT_STRING )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2154:8: PASSWORD ( EQ_SYM )? TEXT_STRING
					{
					PASSWORD1281=(Token)match(input,PASSWORD,FOLLOW_PASSWORD_in_table_option29605); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PASSWORD1281_tree = (Object)adaptor.create(PASSWORD1281);
					adaptor.addChild(root_0, PASSWORD1281_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2154:17: ( EQ_SYM )?
					int alt441=2;
					int LA441_0 = input.LA(1);
					if ( (LA441_0==EQ_SYM) ) {
						alt441=1;
					}
					switch (alt441) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2154:18: EQ_SYM
							{
							EQ_SYM1282=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29608); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1282_tree = (Object)adaptor.create(EQ_SYM1282);
							adaptor.addChild(root_0, EQ_SYM1282_tree);
							}

							}
							break;

					}

					TEXT_STRING1283=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_table_option29612); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING1283_tree = (Object)adaptor.create(TEXT_STRING1283);
					adaptor.addChild(root_0, TEXT_STRING1283_tree);
					}

					}

					}
					break;
				case 18 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2155:5: ( ROW_FORMAT_SYM ( EQ_SYM )? ( DEFAULT | DYNAMIC_SYM | FIXED_SYM | COMPRESSED_SYM | REDUNDANT_SYM | COMPACT_SYM ) )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2155:5: ( ROW_FORMAT_SYM ( EQ_SYM )? ( DEFAULT | DYNAMIC_SYM | FIXED_SYM | COMPRESSED_SYM | REDUNDANT_SYM | COMPACT_SYM ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2155:8: ROW_FORMAT_SYM ( EQ_SYM )? ( DEFAULT | DYNAMIC_SYM | FIXED_SYM | COMPRESSED_SYM | REDUNDANT_SYM | COMPACT_SYM )
					{
					ROW_FORMAT_SYM1284=(Token)match(input,ROW_FORMAT_SYM,FOLLOW_ROW_FORMAT_SYM_in_table_option29624); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ROW_FORMAT_SYM1284_tree = (Object)adaptor.create(ROW_FORMAT_SYM1284);
					adaptor.addChild(root_0, ROW_FORMAT_SYM1284_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2155:23: ( EQ_SYM )?
					int alt442=2;
					int LA442_0 = input.LA(1);
					if ( (LA442_0==EQ_SYM) ) {
						alt442=1;
					}
					switch (alt442) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2155:24: EQ_SYM
							{
							EQ_SYM1285=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29627); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1285_tree = (Object)adaptor.create(EQ_SYM1285);
							adaptor.addChild(root_0, EQ_SYM1285_tree);
							}

							}
							break;

					}

					set1286=input.LT(1);
					if ( input.LA(1)==COMPACT_SYM||input.LA(1)==COMPRESSED_SYM||input.LA(1)==DEFAULT||input.LA(1)==DYNAMIC_SYM||input.LA(1)==FIXED_SYM||input.LA(1)==REDUNDANT_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1286));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}

					}
					break;
				case 19 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2156:5: ( STATS_AUTO_RECALC ( EQ_SYM )? ( DEFAULT | INTEGER_NUM ) )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2156:5: ( STATS_AUTO_RECALC ( EQ_SYM )? ( DEFAULT | INTEGER_NUM ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2156:8: STATS_AUTO_RECALC ( EQ_SYM )? ( DEFAULT | INTEGER_NUM )
					{
					STATS_AUTO_RECALC1287=(Token)match(input,STATS_AUTO_RECALC,FOLLOW_STATS_AUTO_RECALC_in_table_option29655); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					STATS_AUTO_RECALC1287_tree = (Object)adaptor.create(STATS_AUTO_RECALC1287);
					adaptor.addChild(root_0, STATS_AUTO_RECALC1287_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2156:26: ( EQ_SYM )?
					int alt443=2;
					int LA443_0 = input.LA(1);
					if ( (LA443_0==EQ_SYM) ) {
						alt443=1;
					}
					switch (alt443) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2156:27: EQ_SYM
							{
							EQ_SYM1288=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29658); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1288_tree = (Object)adaptor.create(EQ_SYM1288);
							adaptor.addChild(root_0, EQ_SYM1288_tree);
							}

							}
							break;

					}

					set1289=input.LT(1);
					if ( input.LA(1)==DEFAULT||input.LA(1)==INTEGER_NUM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1289));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}

					}
					break;
				case 20 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2157:5: ( STATS_PERSISTENT ( EQ_SYM )? ( DEFAULT | INTEGER_NUM ) )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2157:5: ( STATS_PERSISTENT ( EQ_SYM )? ( DEFAULT | INTEGER_NUM ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2157:8: STATS_PERSISTENT ( EQ_SYM )? ( DEFAULT | INTEGER_NUM )
					{
					STATS_PERSISTENT1290=(Token)match(input,STATS_PERSISTENT,FOLLOW_STATS_PERSISTENT_in_table_option29680); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					STATS_PERSISTENT1290_tree = (Object)adaptor.create(STATS_PERSISTENT1290);
					adaptor.addChild(root_0, STATS_PERSISTENT1290_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2157:25: ( EQ_SYM )?
					int alt444=2;
					int LA444_0 = input.LA(1);
					if ( (LA444_0==EQ_SYM) ) {
						alt444=1;
					}
					switch (alt444) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2157:26: EQ_SYM
							{
							EQ_SYM1291=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29683); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1291_tree = (Object)adaptor.create(EQ_SYM1291);
							adaptor.addChild(root_0, EQ_SYM1291_tree);
							}

							}
							break;

					}

					set1292=input.LT(1);
					if ( input.LA(1)==DEFAULT||input.LA(1)==INTEGER_NUM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1292));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}

					}
					break;
				case 21 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2158:5: ( UNION_SYM ( EQ_SYM )? LPAREN table_name ( COMMA table_name )* RPAREN )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2158:5: ( UNION_SYM ( EQ_SYM )? LPAREN table_name ( COMMA table_name )* RPAREN )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2158:8: UNION_SYM ( EQ_SYM )? LPAREN table_name ( COMMA table_name )* RPAREN
					{
					UNION_SYM1293=(Token)match(input,UNION_SYM,FOLLOW_UNION_SYM_in_table_option29705); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					UNION_SYM1293_tree = (Object)adaptor.create(UNION_SYM1293);
					adaptor.addChild(root_0, UNION_SYM1293_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2158:18: ( EQ_SYM )?
					int alt445=2;
					int LA445_0 = input.LA(1);
					if ( (LA445_0==EQ_SYM) ) {
						alt445=1;
					}
					switch (alt445) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2158:19: EQ_SYM
							{
							EQ_SYM1294=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_table_option29708); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1294_tree = (Object)adaptor.create(EQ_SYM1294);
							adaptor.addChild(root_0, EQ_SYM1294_tree);
							}

							}
							break;

					}

					LPAREN1295=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_table_option29712); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1295_tree = (Object)adaptor.create(LPAREN1295);
					adaptor.addChild(root_0, LPAREN1295_tree);
					}

					pushFollow(FOLLOW_table_name_in_table_option29714);
					table_name1296=table_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name1296.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2158:45: ( COMMA table_name )*
					loop446:
					while (true) {
						int alt446=2;
						int LA446_0 = input.LA(1);
						if ( (LA446_0==COMMA) ) {
							alt446=1;
						}

						switch (alt446) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2158:47: COMMA table_name
							{
							COMMA1297=(Token)match(input,COMMA,FOLLOW_COMMA_in_table_option29717); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA1297_tree = (Object)adaptor.create(COMMA1297);
							adaptor.addChild(root_0, COMMA1297_tree);
							}

							pushFollow(FOLLOW_table_name_in_table_option29719);
							table_name1298=table_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name1298.getTree());

							}
							break;

						default :
							break loop446;
						}
					}

					RPAREN1299=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_table_option29723); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1299_tree = (Object)adaptor.create(RPAREN1299);
					adaptor.addChild(root_0, RPAREN1299_tree);
					}

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_option"


	public static class partition_options_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "partition_options"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2161:1: partition_options : PARTITION_SYM BY_SYM ( ( ( LINEAR_SYM )? HASH_SYM LPAREN expression RPAREN ) | ( ( LINEAR_SYM )? KEY_SYM LPAREN column_list RPAREN ) | ( RANGE_SYM ( LPAREN expression RPAREN | COLUMNS_SYM LPAREN column_list RPAREN ) ) | ( LIST_SYM ( LPAREN expression RPAREN | COLUMNS_SYM LPAREN column_list RPAREN ) ) ) ( PARTITIONS_SYM INTEGER_NUM )? ( SUBPARTITION_SYM BY_SYM ( ( ( LINEAR_SYM )? HASH_SYM LPAREN expression RPAREN ) | ( ( LINEAR_SYM )? KEY_SYM LPAREN column_list RPAREN ) ) ( SUBPARTITIONS_SYM INTEGER_NUM )? )? ( LPAREN partition_definition ( COMMA partition_definition )* RPAREN )? ;
	public final SQLParser.partition_options_return partition_options() throws RecognitionException {
		SQLParser.partition_options_return retval = new SQLParser.partition_options_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token PARTITION_SYM1300=null;
		Token BY_SYM1301=null;
		Token LINEAR_SYM1302=null;
		Token HASH_SYM1303=null;
		Token LPAREN1304=null;
		Token RPAREN1306=null;
		Token LINEAR_SYM1307=null;
		Token KEY_SYM1308=null;
		Token LPAREN1309=null;
		Token RPAREN1311=null;
		Token RANGE_SYM1312=null;
		Token LPAREN1313=null;
		Token RPAREN1315=null;
		Token COLUMNS_SYM1316=null;
		Token LPAREN1317=null;
		Token RPAREN1319=null;
		Token LIST_SYM1320=null;
		Token LPAREN1321=null;
		Token RPAREN1323=null;
		Token COLUMNS_SYM1324=null;
		Token LPAREN1325=null;
		Token RPAREN1327=null;
		Token PARTITIONS_SYM1328=null;
		Token INTEGER_NUM1329=null;
		Token SUBPARTITION_SYM1330=null;
		Token BY_SYM1331=null;
		Token LINEAR_SYM1332=null;
		Token HASH_SYM1333=null;
		Token LPAREN1334=null;
		Token RPAREN1336=null;
		Token LINEAR_SYM1337=null;
		Token KEY_SYM1338=null;
		Token LPAREN1339=null;
		Token RPAREN1341=null;
		Token SUBPARTITIONS_SYM1342=null;
		Token INTEGER_NUM1343=null;
		Token LPAREN1344=null;
		Token COMMA1346=null;
		Token RPAREN1348=null;
		ParserRuleReturnScope expression1305 =null;
		ParserRuleReturnScope column_list1310 =null;
		ParserRuleReturnScope expression1314 =null;
		ParserRuleReturnScope column_list1318 =null;
		ParserRuleReturnScope expression1322 =null;
		ParserRuleReturnScope column_list1326 =null;
		ParserRuleReturnScope expression1335 =null;
		ParserRuleReturnScope column_list1340 =null;
		ParserRuleReturnScope partition_definition1345 =null;
		ParserRuleReturnScope partition_definition1347 =null;

		Object PARTITION_SYM1300_tree=null;
		Object BY_SYM1301_tree=null;
		Object LINEAR_SYM1302_tree=null;
		Object HASH_SYM1303_tree=null;
		Object LPAREN1304_tree=null;
		Object RPAREN1306_tree=null;
		Object LINEAR_SYM1307_tree=null;
		Object KEY_SYM1308_tree=null;
		Object LPAREN1309_tree=null;
		Object RPAREN1311_tree=null;
		Object RANGE_SYM1312_tree=null;
		Object LPAREN1313_tree=null;
		Object RPAREN1315_tree=null;
		Object COLUMNS_SYM1316_tree=null;
		Object LPAREN1317_tree=null;
		Object RPAREN1319_tree=null;
		Object LIST_SYM1320_tree=null;
		Object LPAREN1321_tree=null;
		Object RPAREN1323_tree=null;
		Object COLUMNS_SYM1324_tree=null;
		Object LPAREN1325_tree=null;
		Object RPAREN1327_tree=null;
		Object PARTITIONS_SYM1328_tree=null;
		Object INTEGER_NUM1329_tree=null;
		Object SUBPARTITION_SYM1330_tree=null;
		Object BY_SYM1331_tree=null;
		Object LINEAR_SYM1332_tree=null;
		Object HASH_SYM1333_tree=null;
		Object LPAREN1334_tree=null;
		Object RPAREN1336_tree=null;
		Object LINEAR_SYM1337_tree=null;
		Object KEY_SYM1338_tree=null;
		Object LPAREN1339_tree=null;
		Object RPAREN1341_tree=null;
		Object SUBPARTITIONS_SYM1342_tree=null;
		Object INTEGER_NUM1343_tree=null;
		Object LPAREN1344_tree=null;
		Object COMMA1346_tree=null;
		Object RPAREN1348_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2161:18: ( PARTITION_SYM BY_SYM ( ( ( LINEAR_SYM )? HASH_SYM LPAREN expression RPAREN ) | ( ( LINEAR_SYM )? KEY_SYM LPAREN column_list RPAREN ) | ( RANGE_SYM ( LPAREN expression RPAREN | COLUMNS_SYM LPAREN column_list RPAREN ) ) | ( LIST_SYM ( LPAREN expression RPAREN | COLUMNS_SYM LPAREN column_list RPAREN ) ) ) ( PARTITIONS_SYM INTEGER_NUM )? ( SUBPARTITION_SYM BY_SYM ( ( ( LINEAR_SYM )? HASH_SYM LPAREN expression RPAREN ) | ( ( LINEAR_SYM )? KEY_SYM LPAREN column_list RPAREN ) ) ( SUBPARTITIONS_SYM INTEGER_NUM )? )? ( LPAREN partition_definition ( COMMA partition_definition )* RPAREN )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2162:3: PARTITION_SYM BY_SYM ( ( ( LINEAR_SYM )? HASH_SYM LPAREN expression RPAREN ) | ( ( LINEAR_SYM )? KEY_SYM LPAREN column_list RPAREN ) | ( RANGE_SYM ( LPAREN expression RPAREN | COLUMNS_SYM LPAREN column_list RPAREN ) ) | ( LIST_SYM ( LPAREN expression RPAREN | COLUMNS_SYM LPAREN column_list RPAREN ) ) ) ( PARTITIONS_SYM INTEGER_NUM )? ( SUBPARTITION_SYM BY_SYM ( ( ( LINEAR_SYM )? HASH_SYM LPAREN expression RPAREN ) | ( ( LINEAR_SYM )? KEY_SYM LPAREN column_list RPAREN ) ) ( SUBPARTITIONS_SYM INTEGER_NUM )? )? ( LPAREN partition_definition ( COMMA partition_definition )* RPAREN )?
			{
			root_0 = (Object)adaptor.nil();


			PARTITION_SYM1300=(Token)match(input,PARTITION_SYM,FOLLOW_PARTITION_SYM_in_partition_options29736); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			PARTITION_SYM1300_tree = (Object)adaptor.create(PARTITION_SYM1300);
			adaptor.addChild(root_0, PARTITION_SYM1300_tree);
			}

			BY_SYM1301=(Token)match(input,BY_SYM,FOLLOW_BY_SYM_in_partition_options29738); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			BY_SYM1301_tree = (Object)adaptor.create(BY_SYM1301);
			adaptor.addChild(root_0, BY_SYM1301_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2163:3: ( ( ( LINEAR_SYM )? HASH_SYM LPAREN expression RPAREN ) | ( ( LINEAR_SYM )? KEY_SYM LPAREN column_list RPAREN ) | ( RANGE_SYM ( LPAREN expression RPAREN | COLUMNS_SYM LPAREN column_list RPAREN ) ) | ( LIST_SYM ( LPAREN expression RPAREN | COLUMNS_SYM LPAREN column_list RPAREN ) ) )
			int alt452=4;
			switch ( input.LA(1) ) {
			case LINEAR_SYM:
				{
				int LA452_1 = input.LA(2);
				if ( (LA452_1==HASH_SYM) ) {
					alt452=1;
				}
				else if ( (LA452_1==KEY_SYM) ) {
					alt452=2;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 452, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case HASH_SYM:
				{
				alt452=1;
				}
				break;
			case KEY_SYM:
				{
				alt452=2;
				}
				break;
			case RANGE_SYM:
				{
				alt452=3;
				}
				break;
			case LIST_SYM:
				{
				alt452=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 452, 0, input);
				throw nvae;
			}
			switch (alt452) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2164:7: ( ( LINEAR_SYM )? HASH_SYM LPAREN expression RPAREN )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2164:7: ( ( LINEAR_SYM )? HASH_SYM LPAREN expression RPAREN )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2164:9: ( LINEAR_SYM )? HASH_SYM LPAREN expression RPAREN
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2164:9: ( LINEAR_SYM )?
					int alt448=2;
					int LA448_0 = input.LA(1);
					if ( (LA448_0==LINEAR_SYM) ) {
						alt448=1;
					}
					switch (alt448) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2164:10: LINEAR_SYM
							{
							LINEAR_SYM1302=(Token)match(input,LINEAR_SYM,FOLLOW_LINEAR_SYM_in_partition_options29754); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LINEAR_SYM1302_tree = (Object)adaptor.create(LINEAR_SYM1302);
							adaptor.addChild(root_0, LINEAR_SYM1302_tree);
							}

							}
							break;

					}

					HASH_SYM1303=(Token)match(input,HASH_SYM,FOLLOW_HASH_SYM_in_partition_options29758); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					HASH_SYM1303_tree = (Object)adaptor.create(HASH_SYM1303);
					adaptor.addChild(root_0, HASH_SYM1303_tree);
					}

					LPAREN1304=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_partition_options29760); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1304_tree = (Object)adaptor.create(LPAREN1304);
					adaptor.addChild(root_0, LPAREN1304_tree);
					}

					pushFollow(FOLLOW_expression_in_partition_options29762);
					expression1305=expression();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1305.getTree());

					RPAREN1306=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_partition_options29764); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1306_tree = (Object)adaptor.create(RPAREN1306);
					adaptor.addChild(root_0, RPAREN1306_tree);
					}

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2165:7: ( ( LINEAR_SYM )? KEY_SYM LPAREN column_list RPAREN )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2165:7: ( ( LINEAR_SYM )? KEY_SYM LPAREN column_list RPAREN )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2165:9: ( LINEAR_SYM )? KEY_SYM LPAREN column_list RPAREN
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2165:9: ( LINEAR_SYM )?
					int alt449=2;
					int LA449_0 = input.LA(1);
					if ( (LA449_0==LINEAR_SYM) ) {
						alt449=1;
					}
					switch (alt449) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2165:10: LINEAR_SYM
							{
							LINEAR_SYM1307=(Token)match(input,LINEAR_SYM,FOLLOW_LINEAR_SYM_in_partition_options29777); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LINEAR_SYM1307_tree = (Object)adaptor.create(LINEAR_SYM1307);
							adaptor.addChild(root_0, LINEAR_SYM1307_tree);
							}

							}
							break;

					}

					KEY_SYM1308=(Token)match(input,KEY_SYM,FOLLOW_KEY_SYM_in_partition_options29781); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					KEY_SYM1308_tree = (Object)adaptor.create(KEY_SYM1308);
					adaptor.addChild(root_0, KEY_SYM1308_tree);
					}

					LPAREN1309=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_partition_options29783); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1309_tree = (Object)adaptor.create(LPAREN1309);
					adaptor.addChild(root_0, LPAREN1309_tree);
					}

					pushFollow(FOLLOW_column_list_in_partition_options29785);
					column_list1310=column_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_list1310.getTree());

					RPAREN1311=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_partition_options29787); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1311_tree = (Object)adaptor.create(RPAREN1311);
					adaptor.addChild(root_0, RPAREN1311_tree);
					}

					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2166:7: ( RANGE_SYM ( LPAREN expression RPAREN | COLUMNS_SYM LPAREN column_list RPAREN ) )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2166:7: ( RANGE_SYM ( LPAREN expression RPAREN | COLUMNS_SYM LPAREN column_list RPAREN ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2166:9: RANGE_SYM ( LPAREN expression RPAREN | COLUMNS_SYM LPAREN column_list RPAREN )
					{
					RANGE_SYM1312=(Token)match(input,RANGE_SYM,FOLLOW_RANGE_SYM_in_partition_options29799); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RANGE_SYM1312_tree = (Object)adaptor.create(RANGE_SYM1312);
					adaptor.addChild(root_0, RANGE_SYM1312_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2166:18: ( LPAREN expression RPAREN | COLUMNS_SYM LPAREN column_list RPAREN )
					int alt450=2;
					int LA450_0 = input.LA(1);
					if ( (LA450_0==LPAREN) ) {
						alt450=1;
					}
					else if ( (LA450_0==COLUMNS_SYM) ) {
						alt450=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 450, 0, input);
						throw nvae;
					}

					switch (alt450) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2166:19: LPAREN expression RPAREN
							{
							LPAREN1313=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_partition_options29801); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN1313_tree = (Object)adaptor.create(LPAREN1313);
							adaptor.addChild(root_0, LPAREN1313_tree);
							}

							pushFollow(FOLLOW_expression_in_partition_options29803);
							expression1314=expression();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1314.getTree());

							RPAREN1315=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_partition_options29805); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN1315_tree = (Object)adaptor.create(RPAREN1315);
							adaptor.addChild(root_0, RPAREN1315_tree);
							}

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2166:46: COLUMNS_SYM LPAREN column_list RPAREN
							{
							COLUMNS_SYM1316=(Token)match(input,COLUMNS_SYM,FOLLOW_COLUMNS_SYM_in_partition_options29809); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLUMNS_SYM1316_tree = (Object)adaptor.create(COLUMNS_SYM1316);
							adaptor.addChild(root_0, COLUMNS_SYM1316_tree);
							}

							LPAREN1317=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_partition_options29811); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN1317_tree = (Object)adaptor.create(LPAREN1317);
							adaptor.addChild(root_0, LPAREN1317_tree);
							}

							pushFollow(FOLLOW_column_list_in_partition_options29813);
							column_list1318=column_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, column_list1318.getTree());

							RPAREN1319=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_partition_options29815); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN1319_tree = (Object)adaptor.create(RPAREN1319);
							adaptor.addChild(root_0, RPAREN1319_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2167:7: ( LIST_SYM ( LPAREN expression RPAREN | COLUMNS_SYM LPAREN column_list RPAREN ) )
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2167:7: ( LIST_SYM ( LPAREN expression RPAREN | COLUMNS_SYM LPAREN column_list RPAREN ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2167:9: LIST_SYM ( LPAREN expression RPAREN | COLUMNS_SYM LPAREN column_list RPAREN )
					{
					LIST_SYM1320=(Token)match(input,LIST_SYM,FOLLOW_LIST_SYM_in_partition_options29828); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LIST_SYM1320_tree = (Object)adaptor.create(LIST_SYM1320);
					adaptor.addChild(root_0, LIST_SYM1320_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2167:17: ( LPAREN expression RPAREN | COLUMNS_SYM LPAREN column_list RPAREN )
					int alt451=2;
					int LA451_0 = input.LA(1);
					if ( (LA451_0==LPAREN) ) {
						alt451=1;
					}
					else if ( (LA451_0==COLUMNS_SYM) ) {
						alt451=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 451, 0, input);
						throw nvae;
					}

					switch (alt451) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2167:18: LPAREN expression RPAREN
							{
							LPAREN1321=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_partition_options29830); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN1321_tree = (Object)adaptor.create(LPAREN1321);
							adaptor.addChild(root_0, LPAREN1321_tree);
							}

							pushFollow(FOLLOW_expression_in_partition_options29832);
							expression1322=expression();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1322.getTree());

							RPAREN1323=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_partition_options29834); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN1323_tree = (Object)adaptor.create(RPAREN1323);
							adaptor.addChild(root_0, RPAREN1323_tree);
							}

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2167:45: COLUMNS_SYM LPAREN column_list RPAREN
							{
							COLUMNS_SYM1324=(Token)match(input,COLUMNS_SYM,FOLLOW_COLUMNS_SYM_in_partition_options29838); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLUMNS_SYM1324_tree = (Object)adaptor.create(COLUMNS_SYM1324);
							adaptor.addChild(root_0, COLUMNS_SYM1324_tree);
							}

							LPAREN1325=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_partition_options29840); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN1325_tree = (Object)adaptor.create(LPAREN1325);
							adaptor.addChild(root_0, LPAREN1325_tree);
							}

							pushFollow(FOLLOW_column_list_in_partition_options29842);
							column_list1326=column_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, column_list1326.getTree());

							RPAREN1327=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_partition_options29844); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN1327_tree = (Object)adaptor.create(RPAREN1327);
							adaptor.addChild(root_0, RPAREN1327_tree);
							}

							}
							break;

					}

					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2170:3: ( PARTITIONS_SYM INTEGER_NUM )?
			int alt453=2;
			int LA453_0 = input.LA(1);
			if ( (LA453_0==PARTITIONS_SYM) ) {
				alt453=1;
			}
			switch (alt453) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2170:4: PARTITIONS_SYM INTEGER_NUM
					{
					PARTITIONS_SYM1328=(Token)match(input,PARTITIONS_SYM,FOLLOW_PARTITIONS_SYM_in_partition_options29859); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PARTITIONS_SYM1328_tree = (Object)adaptor.create(PARTITIONS_SYM1328);
					adaptor.addChild(root_0, PARTITIONS_SYM1328_tree);
					}

					INTEGER_NUM1329=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_partition_options29861); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM1329_tree = (Object)adaptor.create(INTEGER_NUM1329);
					adaptor.addChild(root_0, INTEGER_NUM1329_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2172:3: ( SUBPARTITION_SYM BY_SYM ( ( ( LINEAR_SYM )? HASH_SYM LPAREN expression RPAREN ) | ( ( LINEAR_SYM )? KEY_SYM LPAREN column_list RPAREN ) ) ( SUBPARTITIONS_SYM INTEGER_NUM )? )?
			int alt458=2;
			int LA458_0 = input.LA(1);
			if ( (LA458_0==SUBPARTITION_SYM) ) {
				alt458=1;
			}
			switch (alt458) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2173:5: SUBPARTITION_SYM BY_SYM ( ( ( LINEAR_SYM )? HASH_SYM LPAREN expression RPAREN ) | ( ( LINEAR_SYM )? KEY_SYM LPAREN column_list RPAREN ) ) ( SUBPARTITIONS_SYM INTEGER_NUM )?
					{
					SUBPARTITION_SYM1330=(Token)match(input,SUBPARTITION_SYM,FOLLOW_SUBPARTITION_SYM_in_partition_options29876); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SUBPARTITION_SYM1330_tree = (Object)adaptor.create(SUBPARTITION_SYM1330);
					adaptor.addChild(root_0, SUBPARTITION_SYM1330_tree);
					}

					BY_SYM1331=(Token)match(input,BY_SYM,FOLLOW_BY_SYM_in_partition_options29878); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					BY_SYM1331_tree = (Object)adaptor.create(BY_SYM1331);
					adaptor.addChild(root_0, BY_SYM1331_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2174:5: ( ( ( LINEAR_SYM )? HASH_SYM LPAREN expression RPAREN ) | ( ( LINEAR_SYM )? KEY_SYM LPAREN column_list RPAREN ) )
					int alt456=2;
					switch ( input.LA(1) ) {
					case LINEAR_SYM:
						{
						int LA456_1 = input.LA(2);
						if ( (LA456_1==HASH_SYM) ) {
							alt456=1;
						}
						else if ( (LA456_1==KEY_SYM) ) {
							alt456=2;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								input.consume();
								NoViableAltException nvae =
									new NoViableAltException("", 456, 1, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

						}
						break;
					case HASH_SYM:
						{
						alt456=1;
						}
						break;
					case KEY_SYM:
						{
						alt456=2;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 456, 0, input);
						throw nvae;
					}
					switch (alt456) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2174:7: ( ( LINEAR_SYM )? HASH_SYM LPAREN expression RPAREN )
							{
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2174:7: ( ( LINEAR_SYM )? HASH_SYM LPAREN expression RPAREN )
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2174:9: ( LINEAR_SYM )? HASH_SYM LPAREN expression RPAREN
							{
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2174:9: ( LINEAR_SYM )?
							int alt454=2;
							int LA454_0 = input.LA(1);
							if ( (LA454_0==LINEAR_SYM) ) {
								alt454=1;
							}
							switch (alt454) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2174:10: LINEAR_SYM
									{
									LINEAR_SYM1332=(Token)match(input,LINEAR_SYM,FOLLOW_LINEAR_SYM_in_partition_options29889); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									LINEAR_SYM1332_tree = (Object)adaptor.create(LINEAR_SYM1332);
									adaptor.addChild(root_0, LINEAR_SYM1332_tree);
									}

									}
									break;

							}

							HASH_SYM1333=(Token)match(input,HASH_SYM,FOLLOW_HASH_SYM_in_partition_options29893); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							HASH_SYM1333_tree = (Object)adaptor.create(HASH_SYM1333);
							adaptor.addChild(root_0, HASH_SYM1333_tree);
							}

							LPAREN1334=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_partition_options29895); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN1334_tree = (Object)adaptor.create(LPAREN1334);
							adaptor.addChild(root_0, LPAREN1334_tree);
							}

							pushFollow(FOLLOW_expression_in_partition_options29897);
							expression1335=expression();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, expression1335.getTree());

							RPAREN1336=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_partition_options29899); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN1336_tree = (Object)adaptor.create(RPAREN1336);
							adaptor.addChild(root_0, RPAREN1336_tree);
							}

							}

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2174:61: ( ( LINEAR_SYM )? KEY_SYM LPAREN column_list RPAREN )
							{
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2174:61: ( ( LINEAR_SYM )? KEY_SYM LPAREN column_list RPAREN )
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2174:63: ( LINEAR_SYM )? KEY_SYM LPAREN column_list RPAREN
							{
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2174:63: ( LINEAR_SYM )?
							int alt455=2;
							int LA455_0 = input.LA(1);
							if ( (LA455_0==LINEAR_SYM) ) {
								alt455=1;
							}
							switch (alt455) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2174:64: LINEAR_SYM
									{
									LINEAR_SYM1337=(Token)match(input,LINEAR_SYM,FOLLOW_LINEAR_SYM_in_partition_options29908); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									LINEAR_SYM1337_tree = (Object)adaptor.create(LINEAR_SYM1337);
									adaptor.addChild(root_0, LINEAR_SYM1337_tree);
									}

									}
									break;

							}

							KEY_SYM1338=(Token)match(input,KEY_SYM,FOLLOW_KEY_SYM_in_partition_options29912); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							KEY_SYM1338_tree = (Object)adaptor.create(KEY_SYM1338);
							adaptor.addChild(root_0, KEY_SYM1338_tree);
							}

							LPAREN1339=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_partition_options29914); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN1339_tree = (Object)adaptor.create(LPAREN1339);
							adaptor.addChild(root_0, LPAREN1339_tree);
							}

							pushFollow(FOLLOW_column_list_in_partition_options29916);
							column_list1340=column_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, column_list1340.getTree());

							RPAREN1341=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_partition_options29918); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN1341_tree = (Object)adaptor.create(RPAREN1341);
							adaptor.addChild(root_0, RPAREN1341_tree);
							}

							}

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2175:5: ( SUBPARTITIONS_SYM INTEGER_NUM )?
					int alt457=2;
					int LA457_0 = input.LA(1);
					if ( (LA457_0==SUBPARTITIONS_SYM) ) {
						alt457=1;
					}
					switch (alt457) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2175:6: SUBPARTITIONS_SYM INTEGER_NUM
							{
							SUBPARTITIONS_SYM1342=(Token)match(input,SUBPARTITIONS_SYM,FOLLOW_SUBPARTITIONS_SYM_in_partition_options29929); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							SUBPARTITIONS_SYM1342_tree = (Object)adaptor.create(SUBPARTITIONS_SYM1342);
							adaptor.addChild(root_0, SUBPARTITIONS_SYM1342_tree);
							}

							INTEGER_NUM1343=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_partition_options29931); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							INTEGER_NUM1343_tree = (Object)adaptor.create(INTEGER_NUM1343);
							adaptor.addChild(root_0, INTEGER_NUM1343_tree);
							}

							}
							break;

					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2178:3: ( LPAREN partition_definition ( COMMA partition_definition )* RPAREN )?
			int alt460=2;
			int LA460_0 = input.LA(1);
			if ( (LA460_0==LPAREN) ) {
				alt460=1;
			}
			switch (alt460) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2178:4: LPAREN partition_definition ( COMMA partition_definition )* RPAREN
					{
					LPAREN1344=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_partition_options29946); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1344_tree = (Object)adaptor.create(LPAREN1344);
					adaptor.addChild(root_0, LPAREN1344_tree);
					}

					pushFollow(FOLLOW_partition_definition_in_partition_options29948);
					partition_definition1345=partition_definition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_definition1345.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2178:32: ( COMMA partition_definition )*
					loop459:
					while (true) {
						int alt459=2;
						int LA459_0 = input.LA(1);
						if ( (LA459_0==COMMA) ) {
							alt459=1;
						}

						switch (alt459) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2178:34: COMMA partition_definition
							{
							COMMA1346=(Token)match(input,COMMA,FOLLOW_COMMA_in_partition_options29952); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA1346_tree = (Object)adaptor.create(COMMA1346);
							adaptor.addChild(root_0, COMMA1346_tree);
							}

							pushFollow(FOLLOW_partition_definition_in_partition_options29955);
							partition_definition1347=partition_definition();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_definition1347.getTree());

							}
							break;

						default :
							break loop459;
						}
					}

					RPAREN1348=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_partition_options29959); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1348_tree = (Object)adaptor.create(RPAREN1348);
					adaptor.addChild(root_0, RPAREN1348_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "partition_options"


	public static class partition_definition_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "partition_definition"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2181:1: partition_definition : PARTITION_SYM partition_name ( VALUES ( ( LESS_SYM THAN_SYM ( ( LPAREN expression_list RPAREN ) | MAXVALUE_SYM ) ) | ( IN_SYM LPAREN expression_list RPAREN ) ) )? ( ( STORAGE_SYM )? ENGINE_SYM ( EQ_SYM )? engine_name )? ( COMMENT_SYM ( EQ_SYM )? TEXT_STRING )? ( DATA_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )? ( INDEX_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )? ( MAX_ROWS ( EQ_SYM )? INTEGER_NUM )? ( MIN_ROWS ( EQ_SYM )? INTEGER_NUM )? ( LPAREN subpartition_definition ( COMMA subpartition_definition )* RPAREN )? ;
	public final SQLParser.partition_definition_return partition_definition() throws RecognitionException {
		SQLParser.partition_definition_return retval = new SQLParser.partition_definition_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token PARTITION_SYM1349=null;
		Token VALUES1351=null;
		Token LESS_SYM1352=null;
		Token THAN_SYM1353=null;
		Token LPAREN1354=null;
		Token RPAREN1356=null;
		Token MAXVALUE_SYM1357=null;
		Token IN_SYM1358=null;
		Token LPAREN1359=null;
		Token RPAREN1361=null;
		Token STORAGE_SYM1362=null;
		Token ENGINE_SYM1363=null;
		Token EQ_SYM1364=null;
		Token COMMENT_SYM1366=null;
		Token EQ_SYM1367=null;
		Token TEXT_STRING1368=null;
		Token DATA_SYM1369=null;
		Token DIRECTORY_SYM1370=null;
		Token EQ_SYM1371=null;
		Token TEXT_STRING1372=null;
		Token INDEX_SYM1373=null;
		Token DIRECTORY_SYM1374=null;
		Token EQ_SYM1375=null;
		Token TEXT_STRING1376=null;
		Token MAX_ROWS1377=null;
		Token EQ_SYM1378=null;
		Token INTEGER_NUM1379=null;
		Token MIN_ROWS1380=null;
		Token EQ_SYM1381=null;
		Token INTEGER_NUM1382=null;
		Token LPAREN1383=null;
		Token COMMA1385=null;
		Token RPAREN1387=null;
		ParserRuleReturnScope partition_name1350 =null;
		ParserRuleReturnScope expression_list1355 =null;
		ParserRuleReturnScope expression_list1360 =null;
		ParserRuleReturnScope engine_name1365 =null;
		ParserRuleReturnScope subpartition_definition1384 =null;
		ParserRuleReturnScope subpartition_definition1386 =null;

		Object PARTITION_SYM1349_tree=null;
		Object VALUES1351_tree=null;
		Object LESS_SYM1352_tree=null;
		Object THAN_SYM1353_tree=null;
		Object LPAREN1354_tree=null;
		Object RPAREN1356_tree=null;
		Object MAXVALUE_SYM1357_tree=null;
		Object IN_SYM1358_tree=null;
		Object LPAREN1359_tree=null;
		Object RPAREN1361_tree=null;
		Object STORAGE_SYM1362_tree=null;
		Object ENGINE_SYM1363_tree=null;
		Object EQ_SYM1364_tree=null;
		Object COMMENT_SYM1366_tree=null;
		Object EQ_SYM1367_tree=null;
		Object TEXT_STRING1368_tree=null;
		Object DATA_SYM1369_tree=null;
		Object DIRECTORY_SYM1370_tree=null;
		Object EQ_SYM1371_tree=null;
		Object TEXT_STRING1372_tree=null;
		Object INDEX_SYM1373_tree=null;
		Object DIRECTORY_SYM1374_tree=null;
		Object EQ_SYM1375_tree=null;
		Object TEXT_STRING1376_tree=null;
		Object MAX_ROWS1377_tree=null;
		Object EQ_SYM1378_tree=null;
		Object INTEGER_NUM1379_tree=null;
		Object MIN_ROWS1380_tree=null;
		Object EQ_SYM1381_tree=null;
		Object INTEGER_NUM1382_tree=null;
		Object LPAREN1383_tree=null;
		Object COMMA1385_tree=null;
		Object RPAREN1387_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2181:21: ( PARTITION_SYM partition_name ( VALUES ( ( LESS_SYM THAN_SYM ( ( LPAREN expression_list RPAREN ) | MAXVALUE_SYM ) ) | ( IN_SYM LPAREN expression_list RPAREN ) ) )? ( ( STORAGE_SYM )? ENGINE_SYM ( EQ_SYM )? engine_name )? ( COMMENT_SYM ( EQ_SYM )? TEXT_STRING )? ( DATA_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )? ( INDEX_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )? ( MAX_ROWS ( EQ_SYM )? INTEGER_NUM )? ( MIN_ROWS ( EQ_SYM )? INTEGER_NUM )? ( LPAREN subpartition_definition ( COMMA subpartition_definition )* RPAREN )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2182:3: PARTITION_SYM partition_name ( VALUES ( ( LESS_SYM THAN_SYM ( ( LPAREN expression_list RPAREN ) | MAXVALUE_SYM ) ) | ( IN_SYM LPAREN expression_list RPAREN ) ) )? ( ( STORAGE_SYM )? ENGINE_SYM ( EQ_SYM )? engine_name )? ( COMMENT_SYM ( EQ_SYM )? TEXT_STRING )? ( DATA_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )? ( INDEX_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )? ( MAX_ROWS ( EQ_SYM )? INTEGER_NUM )? ( MIN_ROWS ( EQ_SYM )? INTEGER_NUM )? ( LPAREN subpartition_definition ( COMMA subpartition_definition )* RPAREN )?
			{
			root_0 = (Object)adaptor.nil();


			PARTITION_SYM1349=(Token)match(input,PARTITION_SYM,FOLLOW_PARTITION_SYM_in_partition_definition29971); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			PARTITION_SYM1349_tree = (Object)adaptor.create(PARTITION_SYM1349);
			adaptor.addChild(root_0, PARTITION_SYM1349_tree);
			}

			pushFollow(FOLLOW_partition_name_in_partition_definition29973);
			partition_name1350=partition_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_name1350.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2184:3: ( VALUES ( ( LESS_SYM THAN_SYM ( ( LPAREN expression_list RPAREN ) | MAXVALUE_SYM ) ) | ( IN_SYM LPAREN expression_list RPAREN ) ) )?
			int alt463=2;
			int LA463_0 = input.LA(1);
			if ( (LA463_0==VALUES) ) {
				alt463=1;
			}
			switch (alt463) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2185:5: VALUES ( ( LESS_SYM THAN_SYM ( ( LPAREN expression_list RPAREN ) | MAXVALUE_SYM ) ) | ( IN_SYM LPAREN expression_list RPAREN ) )
					{
					VALUES1351=(Token)match(input,VALUES,FOLLOW_VALUES_in_partition_definition29986); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					VALUES1351_tree = (Object)adaptor.create(VALUES1351);
					adaptor.addChild(root_0, VALUES1351_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2186:5: ( ( LESS_SYM THAN_SYM ( ( LPAREN expression_list RPAREN ) | MAXVALUE_SYM ) ) | ( IN_SYM LPAREN expression_list RPAREN ) )
					int alt462=2;
					int LA462_0 = input.LA(1);
					if ( (LA462_0==LESS_SYM) ) {
						alt462=1;
					}
					else if ( (LA462_0==IN_SYM) ) {
						alt462=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 462, 0, input);
						throw nvae;
					}

					switch (alt462) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2187:7: ( LESS_SYM THAN_SYM ( ( LPAREN expression_list RPAREN ) | MAXVALUE_SYM ) )
							{
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2187:7: ( LESS_SYM THAN_SYM ( ( LPAREN expression_list RPAREN ) | MAXVALUE_SYM ) )
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2187:8: LESS_SYM THAN_SYM ( ( LPAREN expression_list RPAREN ) | MAXVALUE_SYM )
							{
							LESS_SYM1352=(Token)match(input,LESS_SYM,FOLLOW_LESS_SYM_in_partition_definition30002); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LESS_SYM1352_tree = (Object)adaptor.create(LESS_SYM1352);
							adaptor.addChild(root_0, LESS_SYM1352_tree);
							}

							THAN_SYM1353=(Token)match(input,THAN_SYM,FOLLOW_THAN_SYM_in_partition_definition30004); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							THAN_SYM1353_tree = (Object)adaptor.create(THAN_SYM1353);
							adaptor.addChild(root_0, THAN_SYM1353_tree);
							}

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2187:26: ( ( LPAREN expression_list RPAREN ) | MAXVALUE_SYM )
							int alt461=2;
							int LA461_0 = input.LA(1);
							if ( (LA461_0==LPAREN) ) {
								alt461=1;
							}
							else if ( (LA461_0==MAXVALUE_SYM) ) {
								alt461=2;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								NoViableAltException nvae =
									new NoViableAltException("", 461, 0, input);
								throw nvae;
							}

							switch (alt461) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2187:28: ( LPAREN expression_list RPAREN )
									{
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2187:28: ( LPAREN expression_list RPAREN )
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2187:29: LPAREN expression_list RPAREN
									{
									LPAREN1354=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_partition_definition30009); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									LPAREN1354_tree = (Object)adaptor.create(LPAREN1354);
									adaptor.addChild(root_0, LPAREN1354_tree);
									}

									pushFollow(FOLLOW_expression_list_in_partition_definition30011);
									expression_list1355=expression_list();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list1355.getTree());

									RPAREN1356=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_partition_definition30013); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									RPAREN1356_tree = (Object)adaptor.create(RPAREN1356);
									adaptor.addChild(root_0, RPAREN1356_tree);
									}

									}

									}
									break;
								case 2 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2187:62: MAXVALUE_SYM
									{
									MAXVALUE_SYM1357=(Token)match(input,MAXVALUE_SYM,FOLLOW_MAXVALUE_SYM_in_partition_definition30018); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									MAXVALUE_SYM1357_tree = (Object)adaptor.create(MAXVALUE_SYM1357);
									adaptor.addChild(root_0, MAXVALUE_SYM1357_tree);
									}

									}
									break;

							}

							}

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2189:7: ( IN_SYM LPAREN expression_list RPAREN )
							{
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2189:7: ( IN_SYM LPAREN expression_list RPAREN )
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2189:8: IN_SYM LPAREN expression_list RPAREN
							{
							IN_SYM1358=(Token)match(input,IN_SYM,FOLLOW_IN_SYM_in_partition_definition30039); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							IN_SYM1358_tree = (Object)adaptor.create(IN_SYM1358);
							adaptor.addChild(root_0, IN_SYM1358_tree);
							}

							LPAREN1359=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_partition_definition30041); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							LPAREN1359_tree = (Object)adaptor.create(LPAREN1359);
							adaptor.addChild(root_0, LPAREN1359_tree);
							}

							pushFollow(FOLLOW_expression_list_in_partition_definition30043);
							expression_list1360=expression_list();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, expression_list1360.getTree());

							RPAREN1361=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_partition_definition30045); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							RPAREN1361_tree = (Object)adaptor.create(RPAREN1361);
							adaptor.addChild(root_0, RPAREN1361_tree);
							}

							}

							}
							break;

					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2193:3: ( ( STORAGE_SYM )? ENGINE_SYM ( EQ_SYM )? engine_name )?
			int alt466=2;
			int LA466_0 = input.LA(1);
			if ( (LA466_0==ENGINE_SYM||LA466_0==STORAGE_SYM) ) {
				alt466=1;
			}
			switch (alt466) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2193:4: ( STORAGE_SYM )? ENGINE_SYM ( EQ_SYM )? engine_name
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2193:4: ( STORAGE_SYM )?
					int alt464=2;
					int LA464_0 = input.LA(1);
					if ( (LA464_0==STORAGE_SYM) ) {
						alt464=1;
					}
					switch (alt464) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2193:5: STORAGE_SYM
							{
							STORAGE_SYM1362=(Token)match(input,STORAGE_SYM,FOLLOW_STORAGE_SYM_in_partition_definition30066); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							STORAGE_SYM1362_tree = (Object)adaptor.create(STORAGE_SYM1362);
							adaptor.addChild(root_0, STORAGE_SYM1362_tree);
							}

							}
							break;

					}

					ENGINE_SYM1363=(Token)match(input,ENGINE_SYM,FOLLOW_ENGINE_SYM_in_partition_definition30070); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ENGINE_SYM1363_tree = (Object)adaptor.create(ENGINE_SYM1363);
					adaptor.addChild(root_0, ENGINE_SYM1363_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2193:30: ( EQ_SYM )?
					int alt465=2;
					int LA465_0 = input.LA(1);
					if ( (LA465_0==EQ_SYM) ) {
						alt465=1;
					}
					switch (alt465) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2193:31: EQ_SYM
							{
							EQ_SYM1364=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_partition_definition30073); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1364_tree = (Object)adaptor.create(EQ_SYM1364);
							adaptor.addChild(root_0, EQ_SYM1364_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_engine_name_in_partition_definition30077);
					engine_name1365=engine_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, engine_name1365.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2194:3: ( COMMENT_SYM ( EQ_SYM )? TEXT_STRING )?
			int alt468=2;
			int LA468_0 = input.LA(1);
			if ( (LA468_0==COMMENT_SYM) ) {
				alt468=1;
			}
			switch (alt468) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2194:4: COMMENT_SYM ( EQ_SYM )? TEXT_STRING
					{
					COMMENT_SYM1366=(Token)match(input,COMMENT_SYM,FOLLOW_COMMENT_SYM_in_partition_definition30084); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMENT_SYM1366_tree = (Object)adaptor.create(COMMENT_SYM1366);
					adaptor.addChild(root_0, COMMENT_SYM1366_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2194:16: ( EQ_SYM )?
					int alt467=2;
					int LA467_0 = input.LA(1);
					if ( (LA467_0==EQ_SYM) ) {
						alt467=1;
					}
					switch (alt467) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2194:17: EQ_SYM
							{
							EQ_SYM1367=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_partition_definition30087); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1367_tree = (Object)adaptor.create(EQ_SYM1367);
							adaptor.addChild(root_0, EQ_SYM1367_tree);
							}

							}
							break;

					}

					TEXT_STRING1368=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_partition_definition30091); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING1368_tree = (Object)adaptor.create(TEXT_STRING1368);
					adaptor.addChild(root_0, TEXT_STRING1368_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2195:3: ( DATA_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )?
			int alt470=2;
			int LA470_0 = input.LA(1);
			if ( (LA470_0==DATA_SYM) ) {
				alt470=1;
			}
			switch (alt470) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2195:4: DATA_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING
					{
					DATA_SYM1369=(Token)match(input,DATA_SYM,FOLLOW_DATA_SYM_in_partition_definition30099); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DATA_SYM1369_tree = (Object)adaptor.create(DATA_SYM1369);
					adaptor.addChild(root_0, DATA_SYM1369_tree);
					}

					DIRECTORY_SYM1370=(Token)match(input,DIRECTORY_SYM,FOLLOW_DIRECTORY_SYM_in_partition_definition30101); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DIRECTORY_SYM1370_tree = (Object)adaptor.create(DIRECTORY_SYM1370);
					adaptor.addChild(root_0, DIRECTORY_SYM1370_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2195:27: ( EQ_SYM )?
					int alt469=2;
					int LA469_0 = input.LA(1);
					if ( (LA469_0==EQ_SYM) ) {
						alt469=1;
					}
					switch (alt469) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2195:28: EQ_SYM
							{
							EQ_SYM1371=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_partition_definition30104); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1371_tree = (Object)adaptor.create(EQ_SYM1371);
							adaptor.addChild(root_0, EQ_SYM1371_tree);
							}

							}
							break;

					}

					TEXT_STRING1372=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_partition_definition30108); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING1372_tree = (Object)adaptor.create(TEXT_STRING1372);
					adaptor.addChild(root_0, TEXT_STRING1372_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2196:3: ( INDEX_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )?
			int alt472=2;
			int LA472_0 = input.LA(1);
			if ( (LA472_0==INDEX_SYM) ) {
				alt472=1;
			}
			switch (alt472) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2196:4: INDEX_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING
					{
					INDEX_SYM1373=(Token)match(input,INDEX_SYM,FOLLOW_INDEX_SYM_in_partition_definition30115); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INDEX_SYM1373_tree = (Object)adaptor.create(INDEX_SYM1373);
					adaptor.addChild(root_0, INDEX_SYM1373_tree);
					}

					DIRECTORY_SYM1374=(Token)match(input,DIRECTORY_SYM,FOLLOW_DIRECTORY_SYM_in_partition_definition30117); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DIRECTORY_SYM1374_tree = (Object)adaptor.create(DIRECTORY_SYM1374);
					adaptor.addChild(root_0, DIRECTORY_SYM1374_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2196:28: ( EQ_SYM )?
					int alt471=2;
					int LA471_0 = input.LA(1);
					if ( (LA471_0==EQ_SYM) ) {
						alt471=1;
					}
					switch (alt471) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2196:29: EQ_SYM
							{
							EQ_SYM1375=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_partition_definition30120); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1375_tree = (Object)adaptor.create(EQ_SYM1375);
							adaptor.addChild(root_0, EQ_SYM1375_tree);
							}

							}
							break;

					}

					TEXT_STRING1376=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_partition_definition30124); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING1376_tree = (Object)adaptor.create(TEXT_STRING1376);
					adaptor.addChild(root_0, TEXT_STRING1376_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2197:3: ( MAX_ROWS ( EQ_SYM )? INTEGER_NUM )?
			int alt474=2;
			int LA474_0 = input.LA(1);
			if ( (LA474_0==MAX_ROWS) ) {
				alt474=1;
			}
			switch (alt474) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2197:4: MAX_ROWS ( EQ_SYM )? INTEGER_NUM
					{
					MAX_ROWS1377=(Token)match(input,MAX_ROWS,FOLLOW_MAX_ROWS_in_partition_definition30131); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MAX_ROWS1377_tree = (Object)adaptor.create(MAX_ROWS1377);
					adaptor.addChild(root_0, MAX_ROWS1377_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2197:13: ( EQ_SYM )?
					int alt473=2;
					int LA473_0 = input.LA(1);
					if ( (LA473_0==EQ_SYM) ) {
						alt473=1;
					}
					switch (alt473) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2197:14: EQ_SYM
							{
							EQ_SYM1378=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_partition_definition30134); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1378_tree = (Object)adaptor.create(EQ_SYM1378);
							adaptor.addChild(root_0, EQ_SYM1378_tree);
							}

							}
							break;

					}

					INTEGER_NUM1379=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_partition_definition30138); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM1379_tree = (Object)adaptor.create(INTEGER_NUM1379);
					adaptor.addChild(root_0, INTEGER_NUM1379_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2198:3: ( MIN_ROWS ( EQ_SYM )? INTEGER_NUM )?
			int alt476=2;
			int LA476_0 = input.LA(1);
			if ( (LA476_0==MIN_ROWS) ) {
				alt476=1;
			}
			switch (alt476) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2198:4: MIN_ROWS ( EQ_SYM )? INTEGER_NUM
					{
					MIN_ROWS1380=(Token)match(input,MIN_ROWS,FOLLOW_MIN_ROWS_in_partition_definition30145); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MIN_ROWS1380_tree = (Object)adaptor.create(MIN_ROWS1380);
					adaptor.addChild(root_0, MIN_ROWS1380_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2198:13: ( EQ_SYM )?
					int alt475=2;
					int LA475_0 = input.LA(1);
					if ( (LA475_0==EQ_SYM) ) {
						alt475=1;
					}
					switch (alt475) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2198:14: EQ_SYM
							{
							EQ_SYM1381=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_partition_definition30148); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1381_tree = (Object)adaptor.create(EQ_SYM1381);
							adaptor.addChild(root_0, EQ_SYM1381_tree);
							}

							}
							break;

					}

					INTEGER_NUM1382=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_partition_definition30152); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM1382_tree = (Object)adaptor.create(INTEGER_NUM1382);
					adaptor.addChild(root_0, INTEGER_NUM1382_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2199:3: ( LPAREN subpartition_definition ( COMMA subpartition_definition )* RPAREN )?
			int alt478=2;
			int LA478_0 = input.LA(1);
			if ( (LA478_0==LPAREN) ) {
				alt478=1;
			}
			switch (alt478) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2199:4: LPAREN subpartition_definition ( COMMA subpartition_definition )* RPAREN
					{
					LPAREN1383=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_partition_definition30159); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1383_tree = (Object)adaptor.create(LPAREN1383);
					adaptor.addChild(root_0, LPAREN1383_tree);
					}

					pushFollow(FOLLOW_subpartition_definition_in_partition_definition30161);
					subpartition_definition1384=subpartition_definition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, subpartition_definition1384.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2199:35: ( COMMA subpartition_definition )*
					loop477:
					while (true) {
						int alt477=2;
						int LA477_0 = input.LA(1);
						if ( (LA477_0==COMMA) ) {
							alt477=1;
						}

						switch (alt477) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2199:36: COMMA subpartition_definition
							{
							COMMA1385=(Token)match(input,COMMA,FOLLOW_COMMA_in_partition_definition30164); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA1385_tree = (Object)adaptor.create(COMMA1385);
							adaptor.addChild(root_0, COMMA1385_tree);
							}

							pushFollow(FOLLOW_subpartition_definition_in_partition_definition30167);
							subpartition_definition1386=subpartition_definition();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, subpartition_definition1386.getTree());

							}
							break;

						default :
							break loop477;
						}
					}

					RPAREN1387=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_partition_definition30171); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1387_tree = (Object)adaptor.create(RPAREN1387);
					adaptor.addChild(root_0, RPAREN1387_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "partition_definition"


	public static class subpartition_definition_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "subpartition_definition"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2202:1: subpartition_definition : SUBPARTITION_SYM partition_logical_name ( ( STORAGE_SYM )? ENGINE_SYM ( EQ_SYM )? engine_name )? ( COMMENT_SYM ( EQ_SYM )? TEXT_STRING )? ( DATA_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )? ( INDEX_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )? ( MAX_ROWS ( EQ_SYM )? INTEGER_NUM )? ( MIN_ROWS ( EQ_SYM )? INTEGER_NUM )? ;
	public final SQLParser.subpartition_definition_return subpartition_definition() throws RecognitionException {
		SQLParser.subpartition_definition_return retval = new SQLParser.subpartition_definition_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token SUBPARTITION_SYM1388=null;
		Token STORAGE_SYM1390=null;
		Token ENGINE_SYM1391=null;
		Token EQ_SYM1392=null;
		Token COMMENT_SYM1394=null;
		Token EQ_SYM1395=null;
		Token TEXT_STRING1396=null;
		Token DATA_SYM1397=null;
		Token DIRECTORY_SYM1398=null;
		Token EQ_SYM1399=null;
		Token TEXT_STRING1400=null;
		Token INDEX_SYM1401=null;
		Token DIRECTORY_SYM1402=null;
		Token EQ_SYM1403=null;
		Token TEXT_STRING1404=null;
		Token MAX_ROWS1405=null;
		Token EQ_SYM1406=null;
		Token INTEGER_NUM1407=null;
		Token MIN_ROWS1408=null;
		Token EQ_SYM1409=null;
		Token INTEGER_NUM1410=null;
		ParserRuleReturnScope partition_logical_name1389 =null;
		ParserRuleReturnScope engine_name1393 =null;

		Object SUBPARTITION_SYM1388_tree=null;
		Object STORAGE_SYM1390_tree=null;
		Object ENGINE_SYM1391_tree=null;
		Object EQ_SYM1392_tree=null;
		Object COMMENT_SYM1394_tree=null;
		Object EQ_SYM1395_tree=null;
		Object TEXT_STRING1396_tree=null;
		Object DATA_SYM1397_tree=null;
		Object DIRECTORY_SYM1398_tree=null;
		Object EQ_SYM1399_tree=null;
		Object TEXT_STRING1400_tree=null;
		Object INDEX_SYM1401_tree=null;
		Object DIRECTORY_SYM1402_tree=null;
		Object EQ_SYM1403_tree=null;
		Object TEXT_STRING1404_tree=null;
		Object MAX_ROWS1405_tree=null;
		Object EQ_SYM1406_tree=null;
		Object INTEGER_NUM1407_tree=null;
		Object MIN_ROWS1408_tree=null;
		Object EQ_SYM1409_tree=null;
		Object INTEGER_NUM1410_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2202:24: ( SUBPARTITION_SYM partition_logical_name ( ( STORAGE_SYM )? ENGINE_SYM ( EQ_SYM )? engine_name )? ( COMMENT_SYM ( EQ_SYM )? TEXT_STRING )? ( DATA_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )? ( INDEX_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )? ( MAX_ROWS ( EQ_SYM )? INTEGER_NUM )? ( MIN_ROWS ( EQ_SYM )? INTEGER_NUM )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2203:3: SUBPARTITION_SYM partition_logical_name ( ( STORAGE_SYM )? ENGINE_SYM ( EQ_SYM )? engine_name )? ( COMMENT_SYM ( EQ_SYM )? TEXT_STRING )? ( DATA_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )? ( INDEX_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )? ( MAX_ROWS ( EQ_SYM )? INTEGER_NUM )? ( MIN_ROWS ( EQ_SYM )? INTEGER_NUM )?
			{
			root_0 = (Object)adaptor.nil();


			SUBPARTITION_SYM1388=(Token)match(input,SUBPARTITION_SYM,FOLLOW_SUBPARTITION_SYM_in_subpartition_definition30183); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			SUBPARTITION_SYM1388_tree = (Object)adaptor.create(SUBPARTITION_SYM1388);
			adaptor.addChild(root_0, SUBPARTITION_SYM1388_tree);
			}

			pushFollow(FOLLOW_partition_logical_name_in_subpartition_definition30185);
			partition_logical_name1389=partition_logical_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_logical_name1389.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2204:3: ( ( STORAGE_SYM )? ENGINE_SYM ( EQ_SYM )? engine_name )?
			int alt481=2;
			int LA481_0 = input.LA(1);
			if ( (LA481_0==ENGINE_SYM||LA481_0==STORAGE_SYM) ) {
				alt481=1;
			}
			switch (alt481) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2204:4: ( STORAGE_SYM )? ENGINE_SYM ( EQ_SYM )? engine_name
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2204:4: ( STORAGE_SYM )?
					int alt479=2;
					int LA479_0 = input.LA(1);
					if ( (LA479_0==STORAGE_SYM) ) {
						alt479=1;
					}
					switch (alt479) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2204:5: STORAGE_SYM
							{
							STORAGE_SYM1390=(Token)match(input,STORAGE_SYM,FOLLOW_STORAGE_SYM_in_subpartition_definition30191); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							STORAGE_SYM1390_tree = (Object)adaptor.create(STORAGE_SYM1390);
							adaptor.addChild(root_0, STORAGE_SYM1390_tree);
							}

							}
							break;

					}

					ENGINE_SYM1391=(Token)match(input,ENGINE_SYM,FOLLOW_ENGINE_SYM_in_subpartition_definition30195); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ENGINE_SYM1391_tree = (Object)adaptor.create(ENGINE_SYM1391);
					adaptor.addChild(root_0, ENGINE_SYM1391_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2204:30: ( EQ_SYM )?
					int alt480=2;
					int LA480_0 = input.LA(1);
					if ( (LA480_0==EQ_SYM) ) {
						alt480=1;
					}
					switch (alt480) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2204:31: EQ_SYM
							{
							EQ_SYM1392=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_subpartition_definition30198); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1392_tree = (Object)adaptor.create(EQ_SYM1392);
							adaptor.addChild(root_0, EQ_SYM1392_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_engine_name_in_subpartition_definition30202);
					engine_name1393=engine_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, engine_name1393.getTree());

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2205:3: ( COMMENT_SYM ( EQ_SYM )? TEXT_STRING )?
			int alt483=2;
			int LA483_0 = input.LA(1);
			if ( (LA483_0==COMMENT_SYM) ) {
				alt483=1;
			}
			switch (alt483) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2205:4: COMMENT_SYM ( EQ_SYM )? TEXT_STRING
					{
					COMMENT_SYM1394=(Token)match(input,COMMENT_SYM,FOLLOW_COMMENT_SYM_in_subpartition_definition30209); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMENT_SYM1394_tree = (Object)adaptor.create(COMMENT_SYM1394);
					adaptor.addChild(root_0, COMMENT_SYM1394_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2205:16: ( EQ_SYM )?
					int alt482=2;
					int LA482_0 = input.LA(1);
					if ( (LA482_0==EQ_SYM) ) {
						alt482=1;
					}
					switch (alt482) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2205:17: EQ_SYM
							{
							EQ_SYM1395=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_subpartition_definition30212); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1395_tree = (Object)adaptor.create(EQ_SYM1395);
							adaptor.addChild(root_0, EQ_SYM1395_tree);
							}

							}
							break;

					}

					TEXT_STRING1396=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_subpartition_definition30216); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING1396_tree = (Object)adaptor.create(TEXT_STRING1396);
					adaptor.addChild(root_0, TEXT_STRING1396_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2206:3: ( DATA_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )?
			int alt485=2;
			int LA485_0 = input.LA(1);
			if ( (LA485_0==DATA_SYM) ) {
				alt485=1;
			}
			switch (alt485) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2206:4: DATA_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING
					{
					DATA_SYM1397=(Token)match(input,DATA_SYM,FOLLOW_DATA_SYM_in_subpartition_definition30224); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DATA_SYM1397_tree = (Object)adaptor.create(DATA_SYM1397);
					adaptor.addChild(root_0, DATA_SYM1397_tree);
					}

					DIRECTORY_SYM1398=(Token)match(input,DIRECTORY_SYM,FOLLOW_DIRECTORY_SYM_in_subpartition_definition30226); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DIRECTORY_SYM1398_tree = (Object)adaptor.create(DIRECTORY_SYM1398);
					adaptor.addChild(root_0, DIRECTORY_SYM1398_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2206:27: ( EQ_SYM )?
					int alt484=2;
					int LA484_0 = input.LA(1);
					if ( (LA484_0==EQ_SYM) ) {
						alt484=1;
					}
					switch (alt484) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2206:28: EQ_SYM
							{
							EQ_SYM1399=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_subpartition_definition30229); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1399_tree = (Object)adaptor.create(EQ_SYM1399);
							adaptor.addChild(root_0, EQ_SYM1399_tree);
							}

							}
							break;

					}

					TEXT_STRING1400=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_subpartition_definition30233); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING1400_tree = (Object)adaptor.create(TEXT_STRING1400);
					adaptor.addChild(root_0, TEXT_STRING1400_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2207:3: ( INDEX_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING )?
			int alt487=2;
			int LA487_0 = input.LA(1);
			if ( (LA487_0==INDEX_SYM) ) {
				alt487=1;
			}
			switch (alt487) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2207:4: INDEX_SYM DIRECTORY_SYM ( EQ_SYM )? TEXT_STRING
					{
					INDEX_SYM1401=(Token)match(input,INDEX_SYM,FOLLOW_INDEX_SYM_in_subpartition_definition30240); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INDEX_SYM1401_tree = (Object)adaptor.create(INDEX_SYM1401);
					adaptor.addChild(root_0, INDEX_SYM1401_tree);
					}

					DIRECTORY_SYM1402=(Token)match(input,DIRECTORY_SYM,FOLLOW_DIRECTORY_SYM_in_subpartition_definition30242); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DIRECTORY_SYM1402_tree = (Object)adaptor.create(DIRECTORY_SYM1402);
					adaptor.addChild(root_0, DIRECTORY_SYM1402_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2207:28: ( EQ_SYM )?
					int alt486=2;
					int LA486_0 = input.LA(1);
					if ( (LA486_0==EQ_SYM) ) {
						alt486=1;
					}
					switch (alt486) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2207:29: EQ_SYM
							{
							EQ_SYM1403=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_subpartition_definition30245); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1403_tree = (Object)adaptor.create(EQ_SYM1403);
							adaptor.addChild(root_0, EQ_SYM1403_tree);
							}

							}
							break;

					}

					TEXT_STRING1404=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_subpartition_definition30249); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING1404_tree = (Object)adaptor.create(TEXT_STRING1404);
					adaptor.addChild(root_0, TEXT_STRING1404_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2208:3: ( MAX_ROWS ( EQ_SYM )? INTEGER_NUM )?
			int alt489=2;
			int LA489_0 = input.LA(1);
			if ( (LA489_0==MAX_ROWS) ) {
				alt489=1;
			}
			switch (alt489) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2208:4: MAX_ROWS ( EQ_SYM )? INTEGER_NUM
					{
					MAX_ROWS1405=(Token)match(input,MAX_ROWS,FOLLOW_MAX_ROWS_in_subpartition_definition30256); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MAX_ROWS1405_tree = (Object)adaptor.create(MAX_ROWS1405);
					adaptor.addChild(root_0, MAX_ROWS1405_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2208:13: ( EQ_SYM )?
					int alt488=2;
					int LA488_0 = input.LA(1);
					if ( (LA488_0==EQ_SYM) ) {
						alt488=1;
					}
					switch (alt488) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2208:14: EQ_SYM
							{
							EQ_SYM1406=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_subpartition_definition30259); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1406_tree = (Object)adaptor.create(EQ_SYM1406);
							adaptor.addChild(root_0, EQ_SYM1406_tree);
							}

							}
							break;

					}

					INTEGER_NUM1407=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_subpartition_definition30263); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM1407_tree = (Object)adaptor.create(INTEGER_NUM1407);
					adaptor.addChild(root_0, INTEGER_NUM1407_tree);
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2209:3: ( MIN_ROWS ( EQ_SYM )? INTEGER_NUM )?
			int alt491=2;
			int LA491_0 = input.LA(1);
			if ( (LA491_0==MIN_ROWS) ) {
				alt491=1;
			}
			switch (alt491) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2209:4: MIN_ROWS ( EQ_SYM )? INTEGER_NUM
					{
					MIN_ROWS1408=(Token)match(input,MIN_ROWS,FOLLOW_MIN_ROWS_in_subpartition_definition30270); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MIN_ROWS1408_tree = (Object)adaptor.create(MIN_ROWS1408);
					adaptor.addChild(root_0, MIN_ROWS1408_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2209:13: ( EQ_SYM )?
					int alt490=2;
					int LA490_0 = input.LA(1);
					if ( (LA490_0==EQ_SYM) ) {
						alt490=1;
					}
					switch (alt490) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2209:14: EQ_SYM
							{
							EQ_SYM1409=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_subpartition_definition30273); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1409_tree = (Object)adaptor.create(EQ_SYM1409);
							adaptor.addChild(root_0, EQ_SYM1409_tree);
							}

							}
							break;

					}

					INTEGER_NUM1410=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_subpartition_definition30277); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM1410_tree = (Object)adaptor.create(INTEGER_NUM1410);
					adaptor.addChild(root_0, INTEGER_NUM1410_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subpartition_definition"


	public static class length_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "length"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2212:1: length : INTEGER_NUM ;
	public final SQLParser.length_return length() throws RecognitionException {
		SQLParser.length_return retval = new SQLParser.length_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token INTEGER_NUM1411=null;

		Object INTEGER_NUM1411_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2212:9: ( INTEGER_NUM )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2212:11: INTEGER_NUM
			{
			root_0 = (Object)adaptor.nil();


			INTEGER_NUM1411=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_length30289); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			INTEGER_NUM1411_tree = (Object)adaptor.create(INTEGER_NUM1411);
			adaptor.addChild(root_0, INTEGER_NUM1411_tree);
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "length"


	public static class alter_table_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "alter_table_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2216:1: alter_table_statement : ALTER ( IGNORE_SYM )? TABLE table_name ( alter_table_specification ( COMMA alter_table_specification )* )? ( partition_options )? ;
	public final SQLParser.alter_table_statement_return alter_table_statement() throws RecognitionException {
		SQLParser.alter_table_statement_return retval = new SQLParser.alter_table_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token ALTER1412=null;
		Token IGNORE_SYM1413=null;
		Token TABLE1414=null;
		Token COMMA1417=null;
		ParserRuleReturnScope table_name1415 =null;
		ParserRuleReturnScope alter_table_specification1416 =null;
		ParserRuleReturnScope alter_table_specification1418 =null;
		ParserRuleReturnScope partition_options1419 =null;

		Object ALTER1412_tree=null;
		Object IGNORE_SYM1413_tree=null;
		Object TABLE1414_tree=null;
		Object COMMA1417_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2216:22: ( ALTER ( IGNORE_SYM )? TABLE table_name ( alter_table_specification ( COMMA alter_table_specification )* )? ( partition_options )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2217:3: ALTER ( IGNORE_SYM )? TABLE table_name ( alter_table_specification ( COMMA alter_table_specification )* )? ( partition_options )?
			{
			root_0 = (Object)adaptor.nil();


			ALTER1412=(Token)match(input,ALTER,FOLLOW_ALTER_in_alter_table_statement30300); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			ALTER1412_tree = (Object)adaptor.create(ALTER1412);
			adaptor.addChild(root_0, ALTER1412_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2217:9: ( IGNORE_SYM )?
			int alt492=2;
			int LA492_0 = input.LA(1);
			if ( (LA492_0==IGNORE_SYM) ) {
				alt492=1;
			}
			switch (alt492) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2217:10: IGNORE_SYM
					{
					IGNORE_SYM1413=(Token)match(input,IGNORE_SYM,FOLLOW_IGNORE_SYM_in_alter_table_statement30303); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IGNORE_SYM1413_tree = (Object)adaptor.create(IGNORE_SYM1413);
					adaptor.addChild(root_0, IGNORE_SYM1413_tree);
					}

					}
					break;

			}

			TABLE1414=(Token)match(input,TABLE,FOLLOW_TABLE_in_alter_table_statement30307); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			TABLE1414_tree = (Object)adaptor.create(TABLE1414);
			adaptor.addChild(root_0, TABLE1414_tree);
			}

			pushFollow(FOLLOW_table_name_in_alter_table_statement30309);
			table_name1415=table_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name1415.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2218:3: ( alter_table_specification ( COMMA alter_table_specification )* )?
			int alt494=2;
			int LA494_0 = input.LA(1);
			if ( (LA494_0==ADD_SYM||LA494_0==ALGORITHM_SYM||(LA494_0 >= ALTER && LA494_0 <= ANALYZE_SYM)||LA494_0==AUTO_INCREMENT||LA494_0==AVG_ROW_LENGTH||LA494_0==CHANGE||LA494_0==CHARACTER_SYM||(LA494_0 >= CHECKSUM_SYM && LA494_0 <= CHECK_SYM)||LA494_0==COALESCE||LA494_0==COLLATE_SYM||LA494_0==COMMENT_SYM||LA494_0==CONNECTION_SYM||LA494_0==CONVERT_SYM||LA494_0==DATA_SYM||LA494_0==DEFAULT||LA494_0==DELAY_KEY_WRITE_SYM||(LA494_0 >= DISABLE_SYM && LA494_0 <= DISCARD)||LA494_0==DROP||LA494_0==ENABLE_SYM||LA494_0==ENGINE_SYM||LA494_0==EXCHANGE_SYM||LA494_0==FORCE_SYM||LA494_0==IMPORT||LA494_0==INDEX_SYM||LA494_0==INSERT_METHOD||LA494_0==KEY_BLOCK_SIZE||LA494_0==LOCK||LA494_0==MAX_ROWS||LA494_0==MIN_ROWS||LA494_0==MODIFY_SYM||LA494_0==OPTIMIZE||LA494_0==ORDER_SYM||LA494_0==PACK_KEYS_SYM||LA494_0==PASSWORD||LA494_0==REBUILD_SYM||(LA494_0 >= REMOVE_SYM && LA494_0 <= REPAIR)||LA494_0==ROW_FORMAT_SYM||(LA494_0 >= STATS_AUTO_RECALC && LA494_0 <= STATS_PERSISTENT)||LA494_0==TRUNCATE||LA494_0==UNION_SYM) ) {
				alt494=1;
			}
			switch (alt494) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2218:5: alter_table_specification ( COMMA alter_table_specification )*
					{
					pushFollow(FOLLOW_alter_table_specification_in_alter_table_statement30315);
					alter_table_specification1416=alter_table_specification();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, alter_table_specification1416.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2218:31: ( COMMA alter_table_specification )*
					loop493:
					while (true) {
						int alt493=2;
						int LA493_0 = input.LA(1);
						if ( (LA493_0==COMMA) ) {
							switch ( input.LA(2) ) {
							case ALTER:
								{
								int LA493_3 = input.LA(3);
								if ( (LA493_3==COLUMN_SYM||LA493_3==ID) ) {
									alt493=1;
								}

								}
								break;
							case DROP:
								{
								int LA493_4 = input.LA(3);
								if ( (LA493_4==INDEX_SYM) ) {
									int LA493_8 = input.LA(4);
									if ( (LA493_8==ID) ) {
										int LA493_9 = input.LA(5);
										if ( (LA493_9==EOF||LA493_9==COMMA||LA493_9==PARTITION_SYM||LA493_9==SEMI) ) {
											alt493=1;
										}

									}

								}
								else if ( (LA493_4==COLUMN_SYM||LA493_4==FOREIGN||LA493_4==ID||LA493_4==KEY_SYM||LA493_4==PARTITION_SYM||LA493_4==PRIMARY_SYM) ) {
									alt493=1;
								}

								}
								break;
							case RENAME:
								{
								int LA493_5 = input.LA(3);
								if ( (LA493_5==AS_SYM||LA493_5==ID||LA493_5==TO_SYM) ) {
									alt493=1;
								}

								}
								break;
							case TRUNCATE:
								{
								int LA493_6 = input.LA(3);
								if ( (LA493_6==PARTITION_SYM) ) {
									alt493=1;
								}

								}
								break;
							case ADD_SYM:
							case ALGORITHM_SYM:
							case ANALYZE_SYM:
							case AUTO_INCREMENT:
							case AVG_ROW_LENGTH:
							case CHANGE:
							case CHARACTER_SYM:
							case CHECKSUM_SYM:
							case CHECK_SYM:
							case COALESCE:
							case COLLATE_SYM:
							case COMMENT_SYM:
							case CONNECTION_SYM:
							case CONVERT_SYM:
							case DATA_SYM:
							case DEFAULT:
							case DELAY_KEY_WRITE_SYM:
							case DISABLE_SYM:
							case DISCARD:
							case ENABLE_SYM:
							case ENGINE_SYM:
							case EXCHANGE_SYM:
							case FORCE_SYM:
							case IMPORT:
							case INDEX_SYM:
							case INSERT_METHOD:
							case KEY_BLOCK_SIZE:
							case LOCK:
							case MAX_ROWS:
							case MIN_ROWS:
							case MODIFY_SYM:
							case OPTIMIZE:
							case ORDER_SYM:
							case PACK_KEYS_SYM:
							case PASSWORD:
							case REBUILD_SYM:
							case REMOVE_SYM:
							case REORGANIZE_SYM:
							case REPAIR:
							case ROW_FORMAT_SYM:
							case STATS_AUTO_RECALC:
							case STATS_PERSISTENT:
							case UNION_SYM:
								{
								alt493=1;
								}
								break;
							}
						}

						switch (alt493) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2218:32: COMMA alter_table_specification
							{
							COMMA1417=(Token)match(input,COMMA,FOLLOW_COMMA_in_alter_table_statement30318); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA1417_tree = (Object)adaptor.create(COMMA1417);
							adaptor.addChild(root_0, COMMA1417_tree);
							}

							pushFollow(FOLLOW_alter_table_specification_in_alter_table_statement30320);
							alter_table_specification1418=alter_table_specification();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, alter_table_specification1418.getTree());

							}
							break;

						default :
							break loop493;
						}
					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2219:3: ( partition_options )?
			int alt495=2;
			int LA495_0 = input.LA(1);
			if ( (LA495_0==PARTITION_SYM) ) {
				alt495=1;
			}
			switch (alt495) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2219:5: partition_options
					{
					pushFollow(FOLLOW_partition_options_in_alter_table_statement30331);
					partition_options1419=partition_options();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_options1419.getTree());

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_table_statement"


	public static class alter_table_specification_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "alter_table_specification"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2221:1: alter_table_specification : ( table_options | ( ADD_SYM ( COLUMN_SYM )? column_name column_definition ( ( FIRST_SYM | AFTER_SYM ) column_name )? ) | ( ADD_SYM ( COLUMN_SYM )? LPAREN column_definitions RPAREN ) | ( ADD_SYM ( INDEX_SYM | KEY_SYM ) ( index_name )? ( index_type )? LPAREN index_column_names RPAREN ( index_option )* ) | ( ADD_SYM ( CONSTRAINT ( constraint_symbol_name )? )? PRIMARY_SYM KEY_SYM ( index_type )? LPAREN index_column_names RPAREN ( index_option )* ) | ( ADD_SYM ( CONSTRAINT ( constraint_symbol_name )? )? UNIQUE_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* ) | ( ADD_SYM FULLTEXT_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? LPAREN index_column_names RPAREN ( index_option )* ) | ( ADD_SYM SPATIAL_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? LPAREN index_column_names RPAREN ( index_option )* ) | ( ADD_SYM ( CONSTRAINT ( constraint_symbol_name )? )? FOREIGN KEY_SYM ( index_name )? LPAREN index_column_names RPAREN reference_definition ) | ( ALGORITHM_SYM ( EQ_SYM )? ( DEFAULT | INPLACE_SYM | COPY_SYM ) ) | ( ALTER ( COLUMN_SYM )? column_name ( ( SET_SYM DEFAULT literal_value ) | ( DROP DEFAULT ) ) ) | ( CHANGE ( COLUMN_SYM )? column_name column_name column_definition ( FIRST_SYM | AFTER_SYM column_name )? ) | ( LOCK ( EQ_SYM )? ( DEFAULT | NONE_SYM | SHARED_SYM | EXCLUSIVE_SYM ) ) | ( MODIFY_SYM ( COLUMN_SYM )? column_name column_definition ( FIRST_SYM | AFTER_SYM column_name )? ) | ( DROP ( COLUMN_SYM )? column_name ) | ( DROP PRIMARY_SYM KEY_SYM ) | ( DROP ( INDEX_SYM | KEY_SYM ) index_name ) | ( DROP FOREIGN KEY_SYM foreign_key_symbol_name ) | ( DISABLE_SYM KEYS ) | ( ENABLE_SYM KEYS ) | ( RENAME ( TO_SYM | AS_SYM )? table_name ) | ( ORDER_SYM BY_SYM column_name ( COMMA column_name )* ) | ( CONVERT_SYM TO_SYM CHARACTER_SYM SET_SYM charset_name ( COLLATE_SYM collation_name )? ) | ( ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name ( COLLATE_SYM ( EQ_SYM )? collation_name )? ) | ( DISCARD TABLESPACE ) | ( IMPORT TABLESPACE ) | ( FORCE_SYM ) | ( ADD_SYM PARTITION_SYM LPAREN partition_definition RPAREN ) | ( DROP PARTITION_SYM partition_names ) | ( TRUNCATE PARTITION_SYM ( partition_names | ALL ) ) | ( COALESCE PARTITION_SYM INTEGER_NUM ) | ( REORGANIZE_SYM PARTITION_SYM partition_names INTO LPAREN partition_definition ( COMMA partition_definition )* RPAREN ) | ( EXCHANGE_SYM PARTITION_SYM partition_name WITH TABLE table_name ) | ( ANALYZE_SYM PARTITION_SYM ( partition_names | ALL ) ) | ( CHECK_SYM PARTITION_SYM ( partition_names | ALL ) ) | ( OPTIMIZE PARTITION_SYM ( partition_names | ALL ) ) | ( REBUILD_SYM PARTITION_SYM ( partition_names | ALL ) ) | ( REPAIR PARTITION_SYM ( partition_names | ALL ) ) | ( REMOVE_SYM PARTITIONING_SYM ) );
	public final SQLParser.alter_table_specification_return alter_table_specification() throws RecognitionException {
		SQLParser.alter_table_specification_return retval = new SQLParser.alter_table_specification_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token ADD_SYM1421=null;
		Token COLUMN_SYM1422=null;
		Token set1425=null;
		Token ADD_SYM1427=null;
		Token COLUMN_SYM1428=null;
		Token LPAREN1429=null;
		Token RPAREN1431=null;
		Token ADD_SYM1432=null;
		Token set1433=null;
		Token LPAREN1436=null;
		Token RPAREN1438=null;
		Token ADD_SYM1440=null;
		Token CONSTRAINT1441=null;
		Token PRIMARY_SYM1443=null;
		Token KEY_SYM1444=null;
		Token LPAREN1446=null;
		Token RPAREN1448=null;
		Token ADD_SYM1450=null;
		Token CONSTRAINT1451=null;
		Token UNIQUE_SYM1453=null;
		Token set1454=null;
		Token LPAREN1457=null;
		Token COMMA1459=null;
		Token RPAREN1461=null;
		Token ADD_SYM1463=null;
		Token FULLTEXT_SYM1464=null;
		Token set1465=null;
		Token LPAREN1467=null;
		Token RPAREN1469=null;
		Token ADD_SYM1471=null;
		Token SPATIAL_SYM1472=null;
		Token set1473=null;
		Token LPAREN1475=null;
		Token RPAREN1477=null;
		Token ADD_SYM1479=null;
		Token CONSTRAINT1480=null;
		Token FOREIGN1482=null;
		Token KEY_SYM1483=null;
		Token LPAREN1485=null;
		Token RPAREN1487=null;
		Token ALGORITHM_SYM1489=null;
		Token EQ_SYM1490=null;
		Token set1491=null;
		Token ALTER1492=null;
		Token COLUMN_SYM1493=null;
		Token SET_SYM1495=null;
		Token DEFAULT1496=null;
		Token DROP1498=null;
		Token DEFAULT1499=null;
		Token CHANGE1500=null;
		Token COLUMN_SYM1501=null;
		Token FIRST_SYM1505=null;
		Token AFTER_SYM1506=null;
		Token LOCK1508=null;
		Token EQ_SYM1509=null;
		Token set1510=null;
		Token MODIFY_SYM1511=null;
		Token COLUMN_SYM1512=null;
		Token FIRST_SYM1515=null;
		Token AFTER_SYM1516=null;
		Token DROP1518=null;
		Token COLUMN_SYM1519=null;
		Token DROP1521=null;
		Token PRIMARY_SYM1522=null;
		Token KEY_SYM1523=null;
		Token DROP1524=null;
		Token set1525=null;
		Token DROP1527=null;
		Token FOREIGN1528=null;
		Token KEY_SYM1529=null;
		Token DISABLE_SYM1531=null;
		Token KEYS1532=null;
		Token ENABLE_SYM1533=null;
		Token KEYS1534=null;
		Token RENAME1535=null;
		Token set1536=null;
		Token ORDER_SYM1538=null;
		Token BY_SYM1539=null;
		Token COMMA1541=null;
		Token CONVERT_SYM1543=null;
		Token TO_SYM1544=null;
		Token CHARACTER_SYM1545=null;
		Token SET_SYM1546=null;
		Token COLLATE_SYM1548=null;
		Token DEFAULT1550=null;
		Token CHARACTER_SYM1551=null;
		Token SET_SYM1552=null;
		Token EQ_SYM1553=null;
		Token COLLATE_SYM1555=null;
		Token EQ_SYM1556=null;
		Token DISCARD1558=null;
		Token TABLESPACE1559=null;
		Token IMPORT1560=null;
		Token TABLESPACE1561=null;
		Token FORCE_SYM1562=null;
		Token ADD_SYM1563=null;
		Token PARTITION_SYM1564=null;
		Token LPAREN1565=null;
		Token RPAREN1567=null;
		Token DROP1568=null;
		Token PARTITION_SYM1569=null;
		Token TRUNCATE1571=null;
		Token PARTITION_SYM1572=null;
		Token ALL1574=null;
		Token COALESCE1575=null;
		Token PARTITION_SYM1576=null;
		Token INTEGER_NUM1577=null;
		Token REORGANIZE_SYM1578=null;
		Token PARTITION_SYM1579=null;
		Token INTO1581=null;
		Token LPAREN1582=null;
		Token COMMA1584=null;
		Token RPAREN1586=null;
		Token EXCHANGE_SYM1587=null;
		Token PARTITION_SYM1588=null;
		Token WITH1590=null;
		Token TABLE1591=null;
		Token ANALYZE_SYM1593=null;
		Token PARTITION_SYM1594=null;
		Token ALL1596=null;
		Token CHECK_SYM1597=null;
		Token PARTITION_SYM1598=null;
		Token ALL1600=null;
		Token OPTIMIZE1601=null;
		Token PARTITION_SYM1602=null;
		Token ALL1604=null;
		Token REBUILD_SYM1605=null;
		Token PARTITION_SYM1606=null;
		Token ALL1608=null;
		Token REPAIR1609=null;
		Token PARTITION_SYM1610=null;
		Token ALL1612=null;
		Token REMOVE_SYM1613=null;
		Token PARTITIONING_SYM1614=null;
		ParserRuleReturnScope table_options1420 =null;
		ParserRuleReturnScope column_name1423 =null;
		ParserRuleReturnScope column_definition1424 =null;
		ParserRuleReturnScope column_name1426 =null;
		ParserRuleReturnScope column_definitions1430 =null;
		ParserRuleReturnScope index_name1434 =null;
		ParserRuleReturnScope index_type1435 =null;
		ParserRuleReturnScope index_column_names1437 =null;
		ParserRuleReturnScope index_option1439 =null;
		ParserRuleReturnScope constraint_symbol_name1442 =null;
		ParserRuleReturnScope index_type1445 =null;
		ParserRuleReturnScope index_column_names1447 =null;
		ParserRuleReturnScope index_option1449 =null;
		ParserRuleReturnScope constraint_symbol_name1452 =null;
		ParserRuleReturnScope index_name1455 =null;
		ParserRuleReturnScope index_type1456 =null;
		ParserRuleReturnScope index_column_name1458 =null;
		ParserRuleReturnScope index_column_name1460 =null;
		ParserRuleReturnScope index_option1462 =null;
		ParserRuleReturnScope index_name1466 =null;
		ParserRuleReturnScope index_column_names1468 =null;
		ParserRuleReturnScope index_option1470 =null;
		ParserRuleReturnScope index_name1474 =null;
		ParserRuleReturnScope index_column_names1476 =null;
		ParserRuleReturnScope index_option1478 =null;
		ParserRuleReturnScope constraint_symbol_name1481 =null;
		ParserRuleReturnScope index_name1484 =null;
		ParserRuleReturnScope index_column_names1486 =null;
		ParserRuleReturnScope reference_definition1488 =null;
		ParserRuleReturnScope column_name1494 =null;
		ParserRuleReturnScope literal_value1497 =null;
		ParserRuleReturnScope column_name1502 =null;
		ParserRuleReturnScope column_name1503 =null;
		ParserRuleReturnScope column_definition1504 =null;
		ParserRuleReturnScope column_name1507 =null;
		ParserRuleReturnScope column_name1513 =null;
		ParserRuleReturnScope column_definition1514 =null;
		ParserRuleReturnScope column_name1517 =null;
		ParserRuleReturnScope column_name1520 =null;
		ParserRuleReturnScope index_name1526 =null;
		ParserRuleReturnScope foreign_key_symbol_name1530 =null;
		ParserRuleReturnScope table_name1537 =null;
		ParserRuleReturnScope column_name1540 =null;
		ParserRuleReturnScope column_name1542 =null;
		ParserRuleReturnScope charset_name1547 =null;
		ParserRuleReturnScope collation_name1549 =null;
		ParserRuleReturnScope charset_name1554 =null;
		ParserRuleReturnScope collation_name1557 =null;
		ParserRuleReturnScope partition_definition1566 =null;
		ParserRuleReturnScope partition_names1570 =null;
		ParserRuleReturnScope partition_names1573 =null;
		ParserRuleReturnScope partition_names1580 =null;
		ParserRuleReturnScope partition_definition1583 =null;
		ParserRuleReturnScope partition_definition1585 =null;
		ParserRuleReturnScope partition_name1589 =null;
		ParserRuleReturnScope table_name1592 =null;
		ParserRuleReturnScope partition_names1595 =null;
		ParserRuleReturnScope partition_names1599 =null;
		ParserRuleReturnScope partition_names1603 =null;
		ParserRuleReturnScope partition_names1607 =null;
		ParserRuleReturnScope partition_names1611 =null;

		Object ADD_SYM1421_tree=null;
		Object COLUMN_SYM1422_tree=null;
		Object set1425_tree=null;
		Object ADD_SYM1427_tree=null;
		Object COLUMN_SYM1428_tree=null;
		Object LPAREN1429_tree=null;
		Object RPAREN1431_tree=null;
		Object ADD_SYM1432_tree=null;
		Object set1433_tree=null;
		Object LPAREN1436_tree=null;
		Object RPAREN1438_tree=null;
		Object ADD_SYM1440_tree=null;
		Object CONSTRAINT1441_tree=null;
		Object PRIMARY_SYM1443_tree=null;
		Object KEY_SYM1444_tree=null;
		Object LPAREN1446_tree=null;
		Object RPAREN1448_tree=null;
		Object ADD_SYM1450_tree=null;
		Object CONSTRAINT1451_tree=null;
		Object UNIQUE_SYM1453_tree=null;
		Object set1454_tree=null;
		Object LPAREN1457_tree=null;
		Object COMMA1459_tree=null;
		Object RPAREN1461_tree=null;
		Object ADD_SYM1463_tree=null;
		Object FULLTEXT_SYM1464_tree=null;
		Object set1465_tree=null;
		Object LPAREN1467_tree=null;
		Object RPAREN1469_tree=null;
		Object ADD_SYM1471_tree=null;
		Object SPATIAL_SYM1472_tree=null;
		Object set1473_tree=null;
		Object LPAREN1475_tree=null;
		Object RPAREN1477_tree=null;
		Object ADD_SYM1479_tree=null;
		Object CONSTRAINT1480_tree=null;
		Object FOREIGN1482_tree=null;
		Object KEY_SYM1483_tree=null;
		Object LPAREN1485_tree=null;
		Object RPAREN1487_tree=null;
		Object ALGORITHM_SYM1489_tree=null;
		Object EQ_SYM1490_tree=null;
		Object set1491_tree=null;
		Object ALTER1492_tree=null;
		Object COLUMN_SYM1493_tree=null;
		Object SET_SYM1495_tree=null;
		Object DEFAULT1496_tree=null;
		Object DROP1498_tree=null;
		Object DEFAULT1499_tree=null;
		Object CHANGE1500_tree=null;
		Object COLUMN_SYM1501_tree=null;
		Object FIRST_SYM1505_tree=null;
		Object AFTER_SYM1506_tree=null;
		Object LOCK1508_tree=null;
		Object EQ_SYM1509_tree=null;
		Object set1510_tree=null;
		Object MODIFY_SYM1511_tree=null;
		Object COLUMN_SYM1512_tree=null;
		Object FIRST_SYM1515_tree=null;
		Object AFTER_SYM1516_tree=null;
		Object DROP1518_tree=null;
		Object COLUMN_SYM1519_tree=null;
		Object DROP1521_tree=null;
		Object PRIMARY_SYM1522_tree=null;
		Object KEY_SYM1523_tree=null;
		Object DROP1524_tree=null;
		Object set1525_tree=null;
		Object DROP1527_tree=null;
		Object FOREIGN1528_tree=null;
		Object KEY_SYM1529_tree=null;
		Object DISABLE_SYM1531_tree=null;
		Object KEYS1532_tree=null;
		Object ENABLE_SYM1533_tree=null;
		Object KEYS1534_tree=null;
		Object RENAME1535_tree=null;
		Object set1536_tree=null;
		Object ORDER_SYM1538_tree=null;
		Object BY_SYM1539_tree=null;
		Object COMMA1541_tree=null;
		Object CONVERT_SYM1543_tree=null;
		Object TO_SYM1544_tree=null;
		Object CHARACTER_SYM1545_tree=null;
		Object SET_SYM1546_tree=null;
		Object COLLATE_SYM1548_tree=null;
		Object DEFAULT1550_tree=null;
		Object CHARACTER_SYM1551_tree=null;
		Object SET_SYM1552_tree=null;
		Object EQ_SYM1553_tree=null;
		Object COLLATE_SYM1555_tree=null;
		Object EQ_SYM1556_tree=null;
		Object DISCARD1558_tree=null;
		Object TABLESPACE1559_tree=null;
		Object IMPORT1560_tree=null;
		Object TABLESPACE1561_tree=null;
		Object FORCE_SYM1562_tree=null;
		Object ADD_SYM1563_tree=null;
		Object PARTITION_SYM1564_tree=null;
		Object LPAREN1565_tree=null;
		Object RPAREN1567_tree=null;
		Object DROP1568_tree=null;
		Object PARTITION_SYM1569_tree=null;
		Object TRUNCATE1571_tree=null;
		Object PARTITION_SYM1572_tree=null;
		Object ALL1574_tree=null;
		Object COALESCE1575_tree=null;
		Object PARTITION_SYM1576_tree=null;
		Object INTEGER_NUM1577_tree=null;
		Object REORGANIZE_SYM1578_tree=null;
		Object PARTITION_SYM1579_tree=null;
		Object INTO1581_tree=null;
		Object LPAREN1582_tree=null;
		Object COMMA1584_tree=null;
		Object RPAREN1586_tree=null;
		Object EXCHANGE_SYM1587_tree=null;
		Object PARTITION_SYM1588_tree=null;
		Object WITH1590_tree=null;
		Object TABLE1591_tree=null;
		Object ANALYZE_SYM1593_tree=null;
		Object PARTITION_SYM1594_tree=null;
		Object ALL1596_tree=null;
		Object CHECK_SYM1597_tree=null;
		Object PARTITION_SYM1598_tree=null;
		Object ALL1600_tree=null;
		Object OPTIMIZE1601_tree=null;
		Object PARTITION_SYM1602_tree=null;
		Object ALL1604_tree=null;
		Object REBUILD_SYM1605_tree=null;
		Object PARTITION_SYM1606_tree=null;
		Object ALL1608_tree=null;
		Object REPAIR1609_tree=null;
		Object PARTITION_SYM1610_tree=null;
		Object ALL1612_tree=null;
		Object REMOVE_SYM1613_tree=null;
		Object PARTITIONING_SYM1614_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2221:26: ( table_options | ( ADD_SYM ( COLUMN_SYM )? column_name column_definition ( ( FIRST_SYM | AFTER_SYM ) column_name )? ) | ( ADD_SYM ( COLUMN_SYM )? LPAREN column_definitions RPAREN ) | ( ADD_SYM ( INDEX_SYM | KEY_SYM ) ( index_name )? ( index_type )? LPAREN index_column_names RPAREN ( index_option )* ) | ( ADD_SYM ( CONSTRAINT ( constraint_symbol_name )? )? PRIMARY_SYM KEY_SYM ( index_type )? LPAREN index_column_names RPAREN ( index_option )* ) | ( ADD_SYM ( CONSTRAINT ( constraint_symbol_name )? )? UNIQUE_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* ) | ( ADD_SYM FULLTEXT_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? LPAREN index_column_names RPAREN ( index_option )* ) | ( ADD_SYM SPATIAL_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? LPAREN index_column_names RPAREN ( index_option )* ) | ( ADD_SYM ( CONSTRAINT ( constraint_symbol_name )? )? FOREIGN KEY_SYM ( index_name )? LPAREN index_column_names RPAREN reference_definition ) | ( ALGORITHM_SYM ( EQ_SYM )? ( DEFAULT | INPLACE_SYM | COPY_SYM ) ) | ( ALTER ( COLUMN_SYM )? column_name ( ( SET_SYM DEFAULT literal_value ) | ( DROP DEFAULT ) ) ) | ( CHANGE ( COLUMN_SYM )? column_name column_name column_definition ( FIRST_SYM | AFTER_SYM column_name )? ) | ( LOCK ( EQ_SYM )? ( DEFAULT | NONE_SYM | SHARED_SYM | EXCLUSIVE_SYM ) ) | ( MODIFY_SYM ( COLUMN_SYM )? column_name column_definition ( FIRST_SYM | AFTER_SYM column_name )? ) | ( DROP ( COLUMN_SYM )? column_name ) | ( DROP PRIMARY_SYM KEY_SYM ) | ( DROP ( INDEX_SYM | KEY_SYM ) index_name ) | ( DROP FOREIGN KEY_SYM foreign_key_symbol_name ) | ( DISABLE_SYM KEYS ) | ( ENABLE_SYM KEYS ) | ( RENAME ( TO_SYM | AS_SYM )? table_name ) | ( ORDER_SYM BY_SYM column_name ( COMMA column_name )* ) | ( CONVERT_SYM TO_SYM CHARACTER_SYM SET_SYM charset_name ( COLLATE_SYM collation_name )? ) | ( ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name ( COLLATE_SYM ( EQ_SYM )? collation_name )? ) | ( DISCARD TABLESPACE ) | ( IMPORT TABLESPACE ) | ( FORCE_SYM ) | ( ADD_SYM PARTITION_SYM LPAREN partition_definition RPAREN ) | ( DROP PARTITION_SYM partition_names ) | ( TRUNCATE PARTITION_SYM ( partition_names | ALL ) ) | ( COALESCE PARTITION_SYM INTEGER_NUM ) | ( REORGANIZE_SYM PARTITION_SYM partition_names INTO LPAREN partition_definition ( COMMA partition_definition )* RPAREN ) | ( EXCHANGE_SYM PARTITION_SYM partition_name WITH TABLE table_name ) | ( ANALYZE_SYM PARTITION_SYM ( partition_names | ALL ) ) | ( CHECK_SYM PARTITION_SYM ( partition_names | ALL ) ) | ( OPTIMIZE PARTITION_SYM ( partition_names | ALL ) ) | ( REBUILD_SYM PARTITION_SYM ( partition_names | ALL ) ) | ( REPAIR PARTITION_SYM ( partition_names | ALL ) ) | ( REMOVE_SYM PARTITIONING_SYM ) )
			int alt545=39;
			switch ( input.LA(1) ) {
			case AUTO_INCREMENT:
			case AVG_ROW_LENGTH:
			case CHECKSUM_SYM:
			case COLLATE_SYM:
			case COMMENT_SYM:
			case CONNECTION_SYM:
			case DATA_SYM:
			case DELAY_KEY_WRITE_SYM:
			case ENGINE_SYM:
			case INDEX_SYM:
			case INSERT_METHOD:
			case KEY_BLOCK_SIZE:
			case MAX_ROWS:
			case MIN_ROWS:
			case PACK_KEYS_SYM:
			case PASSWORD:
			case ROW_FORMAT_SYM:
			case STATS_AUTO_RECALC:
			case STATS_PERSISTENT:
			case UNION_SYM:
				{
				alt545=1;
				}
				break;
			case DEFAULT:
				{
				int LA545_2 = input.LA(2);
				if ( (LA545_2==CHARACTER_SYM) ) {
					int LA545_3 = input.LA(3);
					if ( (LA545_3==SET_SYM) ) {
						int LA545_29 = input.LA(4);
						if ( (LA545_29==EQ_SYM) ) {
							int LA545_46 = input.LA(5);
							if ( (LA545_46==ARMSCII8||LA545_46==ASCII_SYM||LA545_46==BIG5||LA545_46==BINARY||(LA545_46 >= CP1250 && LA545_46 <= CP932)||LA545_46==DEC8||(LA545_46 >= EUCJPMS && LA545_46 <= EUCKR)||(LA545_46 >= GB2312 && LA545_46 <= GBK)||LA545_46==GEOSTD8||LA545_46==GREEK||LA545_46==HEBREW||LA545_46==HP8||LA545_46==KEYBCS2||(LA545_46 >= KOI8R && LA545_46 <= KOI8U)||LA545_46==LATIN1||(LA545_46 >= LATIN2 && LA545_46 <= LATIN7)||(LA545_46 >= MACCE && LA545_46 <= MACROMAN)||LA545_46==SJIS||LA545_46==SWE7||LA545_46==TIS620||(LA545_46 >= UCS2 && LA545_46 <= UJIS)||LA545_46==UTF8) ) {
								int LA545_47 = input.LA(6);
								if ( (synpred960_SQL()) ) {
									alt545=1;
								}
								else if ( (synpred1039_SQL()) ) {
									alt545=24;
								}

								else {
									if (state.backtracking>0) {state.failed=true; return retval;}
									int nvaeMark = input.mark();
									try {
										for (int nvaeConsume = 0; nvaeConsume < 6 - 1; nvaeConsume++) {
											input.consume();
										}
										NoViableAltException nvae =
											new NoViableAltException("", 545, 47, input);
										throw nvae;
									} finally {
										input.rewind(nvaeMark);
									}
								}

							}

							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 545, 46, input);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

						}
						else if ( (LA545_29==ARMSCII8||LA545_29==ASCII_SYM||LA545_29==BIG5||LA545_29==BINARY||(LA545_29 >= CP1250 && LA545_29 <= CP932)||LA545_29==DEC8||(LA545_29 >= EUCJPMS && LA545_29 <= EUCKR)||(LA545_29 >= GB2312 && LA545_29 <= GBK)||LA545_29==GEOSTD8||LA545_29==GREEK||LA545_29==HEBREW||LA545_29==HP8||LA545_29==KEYBCS2||(LA545_29 >= KOI8R && LA545_29 <= KOI8U)||LA545_29==LATIN1||(LA545_29 >= LATIN2 && LA545_29 <= LATIN7)||(LA545_29 >= MACCE && LA545_29 <= MACROMAN)||LA545_29==SJIS||LA545_29==SWE7||LA545_29==TIS620||(LA545_29 >= UCS2 && LA545_29 <= UJIS)||LA545_29==UTF8) ) {
							int LA545_47 = input.LA(5);
							if ( (synpred960_SQL()) ) {
								alt545=1;
							}
							else if ( (synpred1039_SQL()) ) {
								alt545=24;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 545, 47, input);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 545, 29, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 545, 3, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}
				else if ( (LA545_2==COLLATE_SYM) ) {
					alt545=1;
				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 545, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case CHARACTER_SYM:
				{
				int LA545_3 = input.LA(2);
				if ( (LA545_3==SET_SYM) ) {
					int LA545_29 = input.LA(3);
					if ( (LA545_29==EQ_SYM) ) {
						int LA545_46 = input.LA(4);
						if ( (LA545_46==ARMSCII8||LA545_46==ASCII_SYM||LA545_46==BIG5||LA545_46==BINARY||(LA545_46 >= CP1250 && LA545_46 <= CP932)||LA545_46==DEC8||(LA545_46 >= EUCJPMS && LA545_46 <= EUCKR)||(LA545_46 >= GB2312 && LA545_46 <= GBK)||LA545_46==GEOSTD8||LA545_46==GREEK||LA545_46==HEBREW||LA545_46==HP8||LA545_46==KEYBCS2||(LA545_46 >= KOI8R && LA545_46 <= KOI8U)||LA545_46==LATIN1||(LA545_46 >= LATIN2 && LA545_46 <= LATIN7)||(LA545_46 >= MACCE && LA545_46 <= MACROMAN)||LA545_46==SJIS||LA545_46==SWE7||LA545_46==TIS620||(LA545_46 >= UCS2 && LA545_46 <= UJIS)||LA545_46==UTF8) ) {
							int LA545_47 = input.LA(5);
							if ( (synpred960_SQL()) ) {
								alt545=1;
							}
							else if ( (synpred1039_SQL()) ) {
								alt545=24;
							}

							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								int nvaeMark = input.mark();
								try {
									for (int nvaeConsume = 0; nvaeConsume < 5 - 1; nvaeConsume++) {
										input.consume();
									}
									NoViableAltException nvae =
										new NoViableAltException("", 545, 47, input);
									throw nvae;
								} finally {
									input.rewind(nvaeMark);
								}
							}

						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 545, 46, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA545_29==ARMSCII8||LA545_29==ASCII_SYM||LA545_29==BIG5||LA545_29==BINARY||(LA545_29 >= CP1250 && LA545_29 <= CP932)||LA545_29==DEC8||(LA545_29 >= EUCJPMS && LA545_29 <= EUCKR)||(LA545_29 >= GB2312 && LA545_29 <= GBK)||LA545_29==GEOSTD8||LA545_29==GREEK||LA545_29==HEBREW||LA545_29==HP8||LA545_29==KEYBCS2||(LA545_29 >= KOI8R && LA545_29 <= KOI8U)||LA545_29==LATIN1||(LA545_29 >= LATIN2 && LA545_29 <= LATIN7)||(LA545_29 >= MACCE && LA545_29 <= MACROMAN)||LA545_29==SJIS||LA545_29==SWE7||LA545_29==TIS620||(LA545_29 >= UCS2 && LA545_29 <= UJIS)||LA545_29==UTF8) ) {
						int LA545_47 = input.LA(4);
						if ( (synpred960_SQL()) ) {
							alt545=1;
						}
						else if ( (synpred1039_SQL()) ) {
							alt545=24;
						}

						else {
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 545, 47, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 545, 29, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 545, 3, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ADD_SYM:
				{
				switch ( input.LA(2) ) {
				case INDEX_SYM:
				case KEY_SYM:
					{
					alt545=4;
					}
					break;
				case FULLTEXT_SYM:
					{
					alt545=7;
					}
					break;
				case SPATIAL_SYM:
					{
					alt545=8;
					}
					break;
				case PARTITION_SYM:
					{
					alt545=28;
					}
					break;
				case COLUMN_SYM:
					{
					int LA545_34 = input.LA(3);
					if ( (LA545_34==ID) ) {
						alt545=2;
					}
					else if ( (LA545_34==LPAREN) ) {
						alt545=3;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 545, 34, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

					}
					break;
				case ID:
					{
					alt545=2;
					}
					break;
				case LPAREN:
					{
					alt545=3;
					}
					break;
				case CONSTRAINT:
					{
					switch ( input.LA(3) ) {
					case ID:
						{
						switch ( input.LA(4) ) {
						case PRIMARY_SYM:
							{
							alt545=5;
							}
							break;
						case UNIQUE_SYM:
							{
							alt545=6;
							}
							break;
						case FOREIGN:
							{
							alt545=9;
							}
							break;
						default:
							if (state.backtracking>0) {state.failed=true; return retval;}
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 545, 48, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}
						}
						break;
					case PRIMARY_SYM:
						{
						alt545=5;
						}
						break;
					case UNIQUE_SYM:
						{
						alt545=6;
						}
						break;
					case FOREIGN:
						{
						alt545=9;
						}
						break;
					default:
						if (state.backtracking>0) {state.failed=true; return retval;}
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 545, 37, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}
					}
					break;
				case PRIMARY_SYM:
					{
					alt545=5;
					}
					break;
				case UNIQUE_SYM:
					{
					alt545=6;
					}
					break;
				case FOREIGN:
					{
					alt545=9;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 545, 4, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case ALGORITHM_SYM:
				{
				alt545=10;
				}
				break;
			case ALTER:
				{
				alt545=11;
				}
				break;
			case CHANGE:
				{
				alt545=12;
				}
				break;
			case LOCK:
				{
				alt545=13;
				}
				break;
			case MODIFY_SYM:
				{
				alt545=14;
				}
				break;
			case DROP:
				{
				switch ( input.LA(2) ) {
				case PRIMARY_SYM:
					{
					alt545=16;
					}
					break;
				case INDEX_SYM:
				case KEY_SYM:
					{
					alt545=17;
					}
					break;
				case FOREIGN:
					{
					alt545=18;
					}
					break;
				case PARTITION_SYM:
					{
					alt545=29;
					}
					break;
				case COLUMN_SYM:
				case ID:
					{
					alt545=15;
					}
					break;
				default:
					if (state.backtracking>0) {state.failed=true; return retval;}
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 545, 10, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}
				}
				break;
			case DISABLE_SYM:
				{
				alt545=19;
				}
				break;
			case ENABLE_SYM:
				{
				alt545=20;
				}
				break;
			case RENAME:
				{
				alt545=21;
				}
				break;
			case ORDER_SYM:
				{
				alt545=22;
				}
				break;
			case CONVERT_SYM:
				{
				alt545=23;
				}
				break;
			case DISCARD:
				{
				alt545=25;
				}
				break;
			case IMPORT:
				{
				alt545=26;
				}
				break;
			case FORCE_SYM:
				{
				alt545=27;
				}
				break;
			case TRUNCATE:
				{
				alt545=30;
				}
				break;
			case COALESCE:
				{
				alt545=31;
				}
				break;
			case REORGANIZE_SYM:
				{
				alt545=32;
				}
				break;
			case EXCHANGE_SYM:
				{
				alt545=33;
				}
				break;
			case ANALYZE_SYM:
				{
				alt545=34;
				}
				break;
			case CHECK_SYM:
				{
				alt545=35;
				}
				break;
			case OPTIMIZE:
				{
				alt545=36;
				}
				break;
			case REBUILD_SYM:
				{
				alt545=37;
				}
				break;
			case REPAIR:
				{
				alt545=38;
				}
				break;
			case REMOVE_SYM:
				{
				alt545=39;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 545, 0, input);
				throw nvae;
			}
			switch (alt545) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2222:5: table_options
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_table_options_in_alter_table_specification30345);
					table_options1420=table_options();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_options1420.getTree());

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2223:5: ( ADD_SYM ( COLUMN_SYM )? column_name column_definition ( ( FIRST_SYM | AFTER_SYM ) column_name )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2223:5: ( ADD_SYM ( COLUMN_SYM )? column_name column_definition ( ( FIRST_SYM | AFTER_SYM ) column_name )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2223:7: ADD_SYM ( COLUMN_SYM )? column_name column_definition ( ( FIRST_SYM | AFTER_SYM ) column_name )?
					{
					ADD_SYM1421=(Token)match(input,ADD_SYM,FOLLOW_ADD_SYM_in_alter_table_specification30353); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ADD_SYM1421_tree = (Object)adaptor.create(ADD_SYM1421);
					adaptor.addChild(root_0, ADD_SYM1421_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2223:15: ( COLUMN_SYM )?
					int alt496=2;
					int LA496_0 = input.LA(1);
					if ( (LA496_0==COLUMN_SYM) ) {
						alt496=1;
					}
					switch (alt496) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2223:16: COLUMN_SYM
							{
							COLUMN_SYM1422=(Token)match(input,COLUMN_SYM,FOLLOW_COLUMN_SYM_in_alter_table_specification30356); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLUMN_SYM1422_tree = (Object)adaptor.create(COLUMN_SYM1422);
							adaptor.addChild(root_0, COLUMN_SYM1422_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_column_name_in_alter_table_specification30360);
					column_name1423=column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_name1423.getTree());

					pushFollow(FOLLOW_column_definition_in_alter_table_specification30362);
					column_definition1424=column_definition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_definition1424.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2223:59: ( ( FIRST_SYM | AFTER_SYM ) column_name )?
					int alt497=2;
					int LA497_0 = input.LA(1);
					if ( (LA497_0==AFTER_SYM||LA497_0==FIRST_SYM) ) {
						alt497=1;
					}
					switch (alt497) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2223:61: ( FIRST_SYM | AFTER_SYM ) column_name
							{
							set1425=input.LT(1);
							if ( input.LA(1)==AFTER_SYM||input.LA(1)==FIRST_SYM ) {
								input.consume();
								if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1425));
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								throw mse;
							}
							pushFollow(FOLLOW_column_name_in_alter_table_specification30372);
							column_name1426=column_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, column_name1426.getTree());

							}
							break;

					}

					}

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2224:5: ( ADD_SYM ( COLUMN_SYM )? LPAREN column_definitions RPAREN )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2224:5: ( ADD_SYM ( COLUMN_SYM )? LPAREN column_definitions RPAREN )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2224:7: ADD_SYM ( COLUMN_SYM )? LPAREN column_definitions RPAREN
					{
					ADD_SYM1427=(Token)match(input,ADD_SYM,FOLLOW_ADD_SYM_in_alter_table_specification30385); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ADD_SYM1427_tree = (Object)adaptor.create(ADD_SYM1427);
					adaptor.addChild(root_0, ADD_SYM1427_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2224:15: ( COLUMN_SYM )?
					int alt498=2;
					int LA498_0 = input.LA(1);
					if ( (LA498_0==COLUMN_SYM) ) {
						alt498=1;
					}
					switch (alt498) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2224:16: COLUMN_SYM
							{
							COLUMN_SYM1428=(Token)match(input,COLUMN_SYM,FOLLOW_COLUMN_SYM_in_alter_table_specification30388); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLUMN_SYM1428_tree = (Object)adaptor.create(COLUMN_SYM1428);
							adaptor.addChild(root_0, COLUMN_SYM1428_tree);
							}

							}
							break;

					}

					LPAREN1429=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_alter_table_specification30392); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1429_tree = (Object)adaptor.create(LPAREN1429);
					adaptor.addChild(root_0, LPAREN1429_tree);
					}

					pushFollow(FOLLOW_column_definitions_in_alter_table_specification30394);
					column_definitions1430=column_definitions();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_definitions1430.getTree());

					RPAREN1431=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_alter_table_specification30396); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1431_tree = (Object)adaptor.create(RPAREN1431);
					adaptor.addChild(root_0, RPAREN1431_tree);
					}

					}

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2225:5: ( ADD_SYM ( INDEX_SYM | KEY_SYM ) ( index_name )? ( index_type )? LPAREN index_column_names RPAREN ( index_option )* )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2225:5: ( ADD_SYM ( INDEX_SYM | KEY_SYM ) ( index_name )? ( index_type )? LPAREN index_column_names RPAREN ( index_option )* )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2225:7: ADD_SYM ( INDEX_SYM | KEY_SYM ) ( index_name )? ( index_type )? LPAREN index_column_names RPAREN ( index_option )*
					{
					ADD_SYM1432=(Token)match(input,ADD_SYM,FOLLOW_ADD_SYM_in_alter_table_specification30406); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ADD_SYM1432_tree = (Object)adaptor.create(ADD_SYM1432);
					adaptor.addChild(root_0, ADD_SYM1432_tree);
					}

					set1433=input.LT(1);
					if ( input.LA(1)==INDEX_SYM||input.LA(1)==KEY_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1433));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2225:35: ( index_name )?
					int alt499=2;
					int LA499_0 = input.LA(1);
					if ( (LA499_0==ID) ) {
						alt499=1;
					}
					switch (alt499) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2225:36: index_name
							{
							pushFollow(FOLLOW_index_name_in_alter_table_specification30415);
							index_name1434=index_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_name1434.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2225:49: ( index_type )?
					int alt500=2;
					int LA500_0 = input.LA(1);
					if ( (LA500_0==USING_SYM) ) {
						alt500=1;
					}
					switch (alt500) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2225:50: index_type
							{
							pushFollow(FOLLOW_index_type_in_alter_table_specification30420);
							index_type1435=index_type();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_type1435.getTree());

							}
							break;

					}

					LPAREN1436=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_alter_table_specification30424); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1436_tree = (Object)adaptor.create(LPAREN1436);
					adaptor.addChild(root_0, LPAREN1436_tree);
					}

					pushFollow(FOLLOW_index_column_names_in_alter_table_specification30426);
					index_column_names1437=index_column_names();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_names1437.getTree());

					RPAREN1438=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_alter_table_specification30428); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1438_tree = (Object)adaptor.create(RPAREN1438);
					adaptor.addChild(root_0, RPAREN1438_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2225:96: ( index_option )*
					loop501:
					while (true) {
						int alt501=2;
						int LA501_0 = input.LA(1);
						if ( (LA501_0==COMMENT_SYM||LA501_0==KEY_BLOCK_SIZE||LA501_0==USING_SYM||LA501_0==WITH) ) {
							alt501=1;
						}

						switch (alt501) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2225:97: index_option
							{
							pushFollow(FOLLOW_index_option_in_alter_table_specification30431);
							index_option1439=index_option();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_option1439.getTree());

							}
							break;

						default :
							break loop501;
						}
					}

					}

					}
					break;
				case 5 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2226:5: ( ADD_SYM ( CONSTRAINT ( constraint_symbol_name )? )? PRIMARY_SYM KEY_SYM ( index_type )? LPAREN index_column_names RPAREN ( index_option )* )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2226:5: ( ADD_SYM ( CONSTRAINT ( constraint_symbol_name )? )? PRIMARY_SYM KEY_SYM ( index_type )? LPAREN index_column_names RPAREN ( index_option )* )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2226:7: ADD_SYM ( CONSTRAINT ( constraint_symbol_name )? )? PRIMARY_SYM KEY_SYM ( index_type )? LPAREN index_column_names RPAREN ( index_option )*
					{
					ADD_SYM1440=(Token)match(input,ADD_SYM,FOLLOW_ADD_SYM_in_alter_table_specification30443); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ADD_SYM1440_tree = (Object)adaptor.create(ADD_SYM1440);
					adaptor.addChild(root_0, ADD_SYM1440_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2226:15: ( CONSTRAINT ( constraint_symbol_name )? )?
					int alt503=2;
					int LA503_0 = input.LA(1);
					if ( (LA503_0==CONSTRAINT) ) {
						alt503=1;
					}
					switch (alt503) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2226:16: CONSTRAINT ( constraint_symbol_name )?
							{
							CONSTRAINT1441=(Token)match(input,CONSTRAINT,FOLLOW_CONSTRAINT_in_alter_table_specification30446); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CONSTRAINT1441_tree = (Object)adaptor.create(CONSTRAINT1441);
							adaptor.addChild(root_0, CONSTRAINT1441_tree);
							}

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2226:27: ( constraint_symbol_name )?
							int alt502=2;
							int LA502_0 = input.LA(1);
							if ( (LA502_0==ID) ) {
								alt502=1;
							}
							switch (alt502) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2226:28: constraint_symbol_name
									{
									pushFollow(FOLLOW_constraint_symbol_name_in_alter_table_specification30449);
									constraint_symbol_name1442=constraint_symbol_name();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, constraint_symbol_name1442.getTree());

									}
									break;

							}

							}
							break;

					}

					PRIMARY_SYM1443=(Token)match(input,PRIMARY_SYM,FOLLOW_PRIMARY_SYM_in_alter_table_specification30455); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PRIMARY_SYM1443_tree = (Object)adaptor.create(PRIMARY_SYM1443);
					adaptor.addChild(root_0, PRIMARY_SYM1443_tree);
					}

					KEY_SYM1444=(Token)match(input,KEY_SYM,FOLLOW_KEY_SYM_in_alter_table_specification30457); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					KEY_SYM1444_tree = (Object)adaptor.create(KEY_SYM1444);
					adaptor.addChild(root_0, KEY_SYM1444_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2226:75: ( index_type )?
					int alt504=2;
					int LA504_0 = input.LA(1);
					if ( (LA504_0==USING_SYM) ) {
						alt504=1;
					}
					switch (alt504) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2226:76: index_type
							{
							pushFollow(FOLLOW_index_type_in_alter_table_specification30460);
							index_type1445=index_type();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_type1445.getTree());

							}
							break;

					}

					LPAREN1446=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_alter_table_specification30464); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1446_tree = (Object)adaptor.create(LPAREN1446);
					adaptor.addChild(root_0, LPAREN1446_tree);
					}

					pushFollow(FOLLOW_index_column_names_in_alter_table_specification30466);
					index_column_names1447=index_column_names();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_names1447.getTree());

					RPAREN1448=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_alter_table_specification30468); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1448_tree = (Object)adaptor.create(RPAREN1448);
					adaptor.addChild(root_0, RPAREN1448_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2226:122: ( index_option )*
					loop505:
					while (true) {
						int alt505=2;
						int LA505_0 = input.LA(1);
						if ( (LA505_0==COMMENT_SYM||LA505_0==KEY_BLOCK_SIZE||LA505_0==USING_SYM||LA505_0==WITH) ) {
							alt505=1;
						}

						switch (alt505) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2226:123: index_option
							{
							pushFollow(FOLLOW_index_option_in_alter_table_specification30471);
							index_option1449=index_option();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_option1449.getTree());

							}
							break;

						default :
							break loop505;
						}
					}

					}

					}
					break;
				case 6 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2228:5: ( ADD_SYM ( CONSTRAINT ( constraint_symbol_name )? )? UNIQUE_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2228:5: ( ADD_SYM ( CONSTRAINT ( constraint_symbol_name )? )? UNIQUE_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )* )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2229:5: ADD_SYM ( CONSTRAINT ( constraint_symbol_name )? )? UNIQUE_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? ( index_type )? LPAREN index_column_name ( COMMA index_column_name )* RPAREN ( index_option )*
					{
					ADD_SYM1450=(Token)match(input,ADD_SYM,FOLLOW_ADD_SYM_in_alter_table_specification30493); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ADD_SYM1450_tree = (Object)adaptor.create(ADD_SYM1450);
					adaptor.addChild(root_0, ADD_SYM1450_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2229:13: ( CONSTRAINT ( constraint_symbol_name )? )?
					int alt507=2;
					int LA507_0 = input.LA(1);
					if ( (LA507_0==CONSTRAINT) ) {
						alt507=1;
					}
					switch (alt507) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2229:14: CONSTRAINT ( constraint_symbol_name )?
							{
							CONSTRAINT1451=(Token)match(input,CONSTRAINT,FOLLOW_CONSTRAINT_in_alter_table_specification30496); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CONSTRAINT1451_tree = (Object)adaptor.create(CONSTRAINT1451);
							adaptor.addChild(root_0, CONSTRAINT1451_tree);
							}

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2229:25: ( constraint_symbol_name )?
							int alt506=2;
							int LA506_0 = input.LA(1);
							if ( (LA506_0==ID) ) {
								alt506=1;
							}
							switch (alt506) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2229:26: constraint_symbol_name
									{
									pushFollow(FOLLOW_constraint_symbol_name_in_alter_table_specification30499);
									constraint_symbol_name1452=constraint_symbol_name();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, constraint_symbol_name1452.getTree());

									}
									break;

							}

							}
							break;

					}

					UNIQUE_SYM1453=(Token)match(input,UNIQUE_SYM,FOLLOW_UNIQUE_SYM_in_alter_table_specification30505); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					UNIQUE_SYM1453_tree = (Object)adaptor.create(UNIQUE_SYM1453);
					adaptor.addChild(root_0, UNIQUE_SYM1453_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2229:64: ( INDEX_SYM | KEY_SYM )?
					int alt508=2;
					int LA508_0 = input.LA(1);
					if ( (LA508_0==INDEX_SYM||LA508_0==KEY_SYM) ) {
						alt508=1;
					}
					switch (alt508) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
							{
							set1454=input.LT(1);
							if ( input.LA(1)==INDEX_SYM||input.LA(1)==KEY_SYM ) {
								input.consume();
								if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1454));
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								throw mse;
							}
							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2229:85: ( index_name )?
					int alt509=2;
					int LA509_0 = input.LA(1);
					if ( (LA509_0==ID) ) {
						alt509=1;
					}
					switch (alt509) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2229:86: index_name
							{
							pushFollow(FOLLOW_index_name_in_alter_table_specification30515);
							index_name1455=index_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_name1455.getTree());

							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2230:5: ( index_type )?
					int alt510=2;
					int LA510_0 = input.LA(1);
					if ( (LA510_0==USING_SYM) ) {
						alt510=1;
					}
					switch (alt510) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2230:6: index_type
							{
							pushFollow(FOLLOW_index_type_in_alter_table_specification30525);
							index_type1456=index_type();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_type1456.getTree());

							}
							break;

					}

					LPAREN1457=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_alter_table_specification30529); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1457_tree = (Object)adaptor.create(LPAREN1457);
					adaptor.addChild(root_0, LPAREN1457_tree);
					}

					pushFollow(FOLLOW_index_column_name_in_alter_table_specification30531);
					index_column_name1458=index_column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name1458.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2230:44: ( COMMA index_column_name )*
					loop511:
					while (true) {
						int alt511=2;
						int LA511_0 = input.LA(1);
						if ( (LA511_0==COMMA) ) {
							alt511=1;
						}

						switch (alt511) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2230:45: COMMA index_column_name
							{
							COMMA1459=(Token)match(input,COMMA,FOLLOW_COMMA_in_alter_table_specification30534); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA1459_tree = (Object)adaptor.create(COMMA1459);
							adaptor.addChild(root_0, COMMA1459_tree);
							}

							pushFollow(FOLLOW_index_column_name_in_alter_table_specification30536);
							index_column_name1460=index_column_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name1460.getTree());

							}
							break;

						default :
							break loop511;
						}
					}

					RPAREN1461=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_alter_table_specification30540); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1461_tree = (Object)adaptor.create(RPAREN1461);
					adaptor.addChild(root_0, RPAREN1461_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2230:78: ( index_option )*
					loop512:
					while (true) {
						int alt512=2;
						int LA512_0 = input.LA(1);
						if ( (LA512_0==COMMENT_SYM||LA512_0==KEY_BLOCK_SIZE||LA512_0==USING_SYM||LA512_0==WITH) ) {
							alt512=1;
						}

						switch (alt512) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2230:79: index_option
							{
							pushFollow(FOLLOW_index_option_in_alter_table_specification30543);
							index_option1462=index_option();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_option1462.getTree());

							}
							break;

						default :
							break loop512;
						}
					}

					}

					}
					break;
				case 7 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2232:5: ( ADD_SYM FULLTEXT_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? LPAREN index_column_names RPAREN ( index_option )* )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2232:5: ( ADD_SYM FULLTEXT_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? LPAREN index_column_names RPAREN ( index_option )* )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2232:7: ADD_SYM FULLTEXT_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? LPAREN index_column_names RPAREN ( index_option )*
					{
					ADD_SYM1463=(Token)match(input,ADD_SYM,FOLLOW_ADD_SYM_in_alter_table_specification30559); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ADD_SYM1463_tree = (Object)adaptor.create(ADD_SYM1463);
					adaptor.addChild(root_0, ADD_SYM1463_tree);
					}

					FULLTEXT_SYM1464=(Token)match(input,FULLTEXT_SYM,FOLLOW_FULLTEXT_SYM_in_alter_table_specification30561); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					FULLTEXT_SYM1464_tree = (Object)adaptor.create(FULLTEXT_SYM1464);
					adaptor.addChild(root_0, FULLTEXT_SYM1464_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2232:28: ( INDEX_SYM | KEY_SYM )?
					int alt513=2;
					int LA513_0 = input.LA(1);
					if ( (LA513_0==INDEX_SYM||LA513_0==KEY_SYM) ) {
						alt513=1;
					}
					switch (alt513) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
							{
							set1465=input.LT(1);
							if ( input.LA(1)==INDEX_SYM||input.LA(1)==KEY_SYM ) {
								input.consume();
								if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1465));
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								throw mse;
							}
							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2232:49: ( index_name )?
					int alt514=2;
					int LA514_0 = input.LA(1);
					if ( (LA514_0==ID) ) {
						alt514=1;
					}
					switch (alt514) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2232:50: index_name
							{
							pushFollow(FOLLOW_index_name_in_alter_table_specification30571);
							index_name1466=index_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_name1466.getTree());

							}
							break;

					}

					LPAREN1467=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_alter_table_specification30575); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1467_tree = (Object)adaptor.create(LPAREN1467);
					adaptor.addChild(root_0, LPAREN1467_tree);
					}

					pushFollow(FOLLOW_index_column_names_in_alter_table_specification30577);
					index_column_names1468=index_column_names();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_names1468.getTree());

					RPAREN1469=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_alter_table_specification30579); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1469_tree = (Object)adaptor.create(RPAREN1469);
					adaptor.addChild(root_0, RPAREN1469_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2232:96: ( index_option )*
					loop515:
					while (true) {
						int alt515=2;
						int LA515_0 = input.LA(1);
						if ( (LA515_0==COMMENT_SYM||LA515_0==KEY_BLOCK_SIZE||LA515_0==USING_SYM||LA515_0==WITH) ) {
							alt515=1;
						}

						switch (alt515) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2232:97: index_option
							{
							pushFollow(FOLLOW_index_option_in_alter_table_specification30582);
							index_option1470=index_option();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_option1470.getTree());

							}
							break;

						default :
							break loop515;
						}
					}

					}

					}
					break;
				case 8 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2233:5: ( ADD_SYM SPATIAL_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? LPAREN index_column_names RPAREN ( index_option )* )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2233:5: ( ADD_SYM SPATIAL_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? LPAREN index_column_names RPAREN ( index_option )* )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2233:7: ADD_SYM SPATIAL_SYM ( INDEX_SYM | KEY_SYM )? ( index_name )? LPAREN index_column_names RPAREN ( index_option )*
					{
					ADD_SYM1471=(Token)match(input,ADD_SYM,FOLLOW_ADD_SYM_in_alter_table_specification30594); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ADD_SYM1471_tree = (Object)adaptor.create(ADD_SYM1471);
					adaptor.addChild(root_0, ADD_SYM1471_tree);
					}

					SPATIAL_SYM1472=(Token)match(input,SPATIAL_SYM,FOLLOW_SPATIAL_SYM_in_alter_table_specification30596); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SPATIAL_SYM1472_tree = (Object)adaptor.create(SPATIAL_SYM1472);
					adaptor.addChild(root_0, SPATIAL_SYM1472_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2233:27: ( INDEX_SYM | KEY_SYM )?
					int alt516=2;
					int LA516_0 = input.LA(1);
					if ( (LA516_0==INDEX_SYM||LA516_0==KEY_SYM) ) {
						alt516=1;
					}
					switch (alt516) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
							{
							set1473=input.LT(1);
							if ( input.LA(1)==INDEX_SYM||input.LA(1)==KEY_SYM ) {
								input.consume();
								if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1473));
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								throw mse;
							}
							}
							break;

					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2233:48: ( index_name )?
					int alt517=2;
					int LA517_0 = input.LA(1);
					if ( (LA517_0==ID) ) {
						alt517=1;
					}
					switch (alt517) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2233:49: index_name
							{
							pushFollow(FOLLOW_index_name_in_alter_table_specification30606);
							index_name1474=index_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_name1474.getTree());

							}
							break;

					}

					LPAREN1475=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_alter_table_specification30610); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1475_tree = (Object)adaptor.create(LPAREN1475);
					adaptor.addChild(root_0, LPAREN1475_tree);
					}

					pushFollow(FOLLOW_index_column_names_in_alter_table_specification30612);
					index_column_names1476=index_column_names();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_names1476.getTree());

					RPAREN1477=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_alter_table_specification30614); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1477_tree = (Object)adaptor.create(RPAREN1477);
					adaptor.addChild(root_0, RPAREN1477_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2233:95: ( index_option )*
					loop518:
					while (true) {
						int alt518=2;
						int LA518_0 = input.LA(1);
						if ( (LA518_0==COMMENT_SYM||LA518_0==KEY_BLOCK_SIZE||LA518_0==USING_SYM||LA518_0==WITH) ) {
							alt518=1;
						}

						switch (alt518) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2233:96: index_option
							{
							pushFollow(FOLLOW_index_option_in_alter_table_specification30617);
							index_option1478=index_option();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_option1478.getTree());

							}
							break;

						default :
							break loop518;
						}
					}

					}

					}
					break;
				case 9 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2234:5: ( ADD_SYM ( CONSTRAINT ( constraint_symbol_name )? )? FOREIGN KEY_SYM ( index_name )? LPAREN index_column_names RPAREN reference_definition )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2234:5: ( ADD_SYM ( CONSTRAINT ( constraint_symbol_name )? )? FOREIGN KEY_SYM ( index_name )? LPAREN index_column_names RPAREN reference_definition )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2234:7: ADD_SYM ( CONSTRAINT ( constraint_symbol_name )? )? FOREIGN KEY_SYM ( index_name )? LPAREN index_column_names RPAREN reference_definition
					{
					ADD_SYM1479=(Token)match(input,ADD_SYM,FOLLOW_ADD_SYM_in_alter_table_specification30629); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ADD_SYM1479_tree = (Object)adaptor.create(ADD_SYM1479);
					adaptor.addChild(root_0, ADD_SYM1479_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2234:15: ( CONSTRAINT ( constraint_symbol_name )? )?
					int alt520=2;
					int LA520_0 = input.LA(1);
					if ( (LA520_0==CONSTRAINT) ) {
						alt520=1;
					}
					switch (alt520) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2234:16: CONSTRAINT ( constraint_symbol_name )?
							{
							CONSTRAINT1480=(Token)match(input,CONSTRAINT,FOLLOW_CONSTRAINT_in_alter_table_specification30632); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CONSTRAINT1480_tree = (Object)adaptor.create(CONSTRAINT1480);
							adaptor.addChild(root_0, CONSTRAINT1480_tree);
							}

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2234:27: ( constraint_symbol_name )?
							int alt519=2;
							int LA519_0 = input.LA(1);
							if ( (LA519_0==ID) ) {
								alt519=1;
							}
							switch (alt519) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2234:28: constraint_symbol_name
									{
									pushFollow(FOLLOW_constraint_symbol_name_in_alter_table_specification30635);
									constraint_symbol_name1481=constraint_symbol_name();
									state._fsp--;
									if (state.failed) return retval;
									if ( state.backtracking==0 ) adaptor.addChild(root_0, constraint_symbol_name1481.getTree());

									}
									break;

							}

							}
							break;

					}

					FOREIGN1482=(Token)match(input,FOREIGN,FOLLOW_FOREIGN_in_alter_table_specification30641); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					FOREIGN1482_tree = (Object)adaptor.create(FOREIGN1482);
					adaptor.addChild(root_0, FOREIGN1482_tree);
					}

					KEY_SYM1483=(Token)match(input,KEY_SYM,FOLLOW_KEY_SYM_in_alter_table_specification30643); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					KEY_SYM1483_tree = (Object)adaptor.create(KEY_SYM1483);
					adaptor.addChild(root_0, KEY_SYM1483_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2234:71: ( index_name )?
					int alt521=2;
					int LA521_0 = input.LA(1);
					if ( (LA521_0==ID) ) {
						alt521=1;
					}
					switch (alt521) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2234:72: index_name
							{
							pushFollow(FOLLOW_index_name_in_alter_table_specification30646);
							index_name1484=index_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, index_name1484.getTree());

							}
							break;

					}

					LPAREN1485=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_alter_table_specification30650); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1485_tree = (Object)adaptor.create(LPAREN1485);
					adaptor.addChild(root_0, LPAREN1485_tree);
					}

					pushFollow(FOLLOW_index_column_names_in_alter_table_specification30652);
					index_column_names1486=index_column_names();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_names1486.getTree());

					RPAREN1487=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_alter_table_specification30654); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1487_tree = (Object)adaptor.create(RPAREN1487);
					adaptor.addChild(root_0, RPAREN1487_tree);
					}

					pushFollow(FOLLOW_reference_definition_in_alter_table_specification30656);
					reference_definition1488=reference_definition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, reference_definition1488.getTree());

					}

					}
					break;
				case 10 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2235:5: ( ALGORITHM_SYM ( EQ_SYM )? ( DEFAULT | INPLACE_SYM | COPY_SYM ) )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2235:5: ( ALGORITHM_SYM ( EQ_SYM )? ( DEFAULT | INPLACE_SYM | COPY_SYM ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2235:7: ALGORITHM_SYM ( EQ_SYM )? ( DEFAULT | INPLACE_SYM | COPY_SYM )
					{
					ALGORITHM_SYM1489=(Token)match(input,ALGORITHM_SYM,FOLLOW_ALGORITHM_SYM_in_alter_table_specification30666); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ALGORITHM_SYM1489_tree = (Object)adaptor.create(ALGORITHM_SYM1489);
					adaptor.addChild(root_0, ALGORITHM_SYM1489_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2235:21: ( EQ_SYM )?
					int alt522=2;
					int LA522_0 = input.LA(1);
					if ( (LA522_0==EQ_SYM) ) {
						alt522=1;
					}
					switch (alt522) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2235:22: EQ_SYM
							{
							EQ_SYM1490=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_alter_table_specification30669); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1490_tree = (Object)adaptor.create(EQ_SYM1490);
							adaptor.addChild(root_0, EQ_SYM1490_tree);
							}

							}
							break;

					}

					set1491=input.LT(1);
					if ( input.LA(1)==COPY_SYM||input.LA(1)==DEFAULT||input.LA(1)==INPLACE_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1491));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}

					}
					break;
				case 11 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2236:5: ( ALTER ( COLUMN_SYM )? column_name ( ( SET_SYM DEFAULT literal_value ) | ( DROP DEFAULT ) ) )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2236:5: ( ALTER ( COLUMN_SYM )? column_name ( ( SET_SYM DEFAULT literal_value ) | ( DROP DEFAULT ) ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2236:7: ALTER ( COLUMN_SYM )? column_name ( ( SET_SYM DEFAULT literal_value ) | ( DROP DEFAULT ) )
					{
					ALTER1492=(Token)match(input,ALTER,FOLLOW_ALTER_in_alter_table_specification30689); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ALTER1492_tree = (Object)adaptor.create(ALTER1492);
					adaptor.addChild(root_0, ALTER1492_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2236:13: ( COLUMN_SYM )?
					int alt523=2;
					int LA523_0 = input.LA(1);
					if ( (LA523_0==COLUMN_SYM) ) {
						alt523=1;
					}
					switch (alt523) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2236:14: COLUMN_SYM
							{
							COLUMN_SYM1493=(Token)match(input,COLUMN_SYM,FOLLOW_COLUMN_SYM_in_alter_table_specification30692); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLUMN_SYM1493_tree = (Object)adaptor.create(COLUMN_SYM1493);
							adaptor.addChild(root_0, COLUMN_SYM1493_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_column_name_in_alter_table_specification30696);
					column_name1494=column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_name1494.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2236:39: ( ( SET_SYM DEFAULT literal_value ) | ( DROP DEFAULT ) )
					int alt524=2;
					int LA524_0 = input.LA(1);
					if ( (LA524_0==SET_SYM) ) {
						alt524=1;
					}
					else if ( (LA524_0==DROP) ) {
						alt524=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 524, 0, input);
						throw nvae;
					}

					switch (alt524) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2236:40: ( SET_SYM DEFAULT literal_value )
							{
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2236:40: ( SET_SYM DEFAULT literal_value )
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2236:41: SET_SYM DEFAULT literal_value
							{
							SET_SYM1495=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_alter_table_specification30700); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							SET_SYM1495_tree = (Object)adaptor.create(SET_SYM1495);
							adaptor.addChild(root_0, SET_SYM1495_tree);
							}

							DEFAULT1496=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_alter_table_specification30702); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1496_tree = (Object)adaptor.create(DEFAULT1496);
							adaptor.addChild(root_0, DEFAULT1496_tree);
							}

							pushFollow(FOLLOW_literal_value_in_alter_table_specification30704);
							literal_value1497=literal_value();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, literal_value1497.getTree());

							}

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2236:74: ( DROP DEFAULT )
							{
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2236:74: ( DROP DEFAULT )
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2236:75: DROP DEFAULT
							{
							DROP1498=(Token)match(input,DROP,FOLLOW_DROP_in_alter_table_specification30710); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DROP1498_tree = (Object)adaptor.create(DROP1498);
							adaptor.addChild(root_0, DROP1498_tree);
							}

							DEFAULT1499=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_alter_table_specification30712); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1499_tree = (Object)adaptor.create(DEFAULT1499);
							adaptor.addChild(root_0, DEFAULT1499_tree);
							}

							}

							}
							break;

					}

					}

					}
					break;
				case 12 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2237:5: ( CHANGE ( COLUMN_SYM )? column_name column_name column_definition ( FIRST_SYM | AFTER_SYM column_name )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2237:5: ( CHANGE ( COLUMN_SYM )? column_name column_name column_definition ( FIRST_SYM | AFTER_SYM column_name )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2237:7: CHANGE ( COLUMN_SYM )? column_name column_name column_definition ( FIRST_SYM | AFTER_SYM column_name )?
					{
					CHANGE1500=(Token)match(input,CHANGE,FOLLOW_CHANGE_in_alter_table_specification30724); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CHANGE1500_tree = (Object)adaptor.create(CHANGE1500);
					adaptor.addChild(root_0, CHANGE1500_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2237:14: ( COLUMN_SYM )?
					int alt525=2;
					int LA525_0 = input.LA(1);
					if ( (LA525_0==COLUMN_SYM) ) {
						alt525=1;
					}
					switch (alt525) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2237:15: COLUMN_SYM
							{
							COLUMN_SYM1501=(Token)match(input,COLUMN_SYM,FOLLOW_COLUMN_SYM_in_alter_table_specification30727); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLUMN_SYM1501_tree = (Object)adaptor.create(COLUMN_SYM1501);
							adaptor.addChild(root_0, COLUMN_SYM1501_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_column_name_in_alter_table_specification30731);
					column_name1502=column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_name1502.getTree());

					pushFollow(FOLLOW_column_name_in_alter_table_specification30733);
					column_name1503=column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_name1503.getTree());

					pushFollow(FOLLOW_column_definition_in_alter_table_specification30735);
					column_definition1504=column_definition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_definition1504.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2237:70: ( FIRST_SYM | AFTER_SYM column_name )?
					int alt526=3;
					int LA526_0 = input.LA(1);
					if ( (LA526_0==FIRST_SYM) ) {
						alt526=1;
					}
					else if ( (LA526_0==AFTER_SYM) ) {
						alt526=2;
					}
					switch (alt526) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2237:71: FIRST_SYM
							{
							FIRST_SYM1505=(Token)match(input,FIRST_SYM,FOLLOW_FIRST_SYM_in_alter_table_specification30738); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							FIRST_SYM1505_tree = (Object)adaptor.create(FIRST_SYM1505);
							adaptor.addChild(root_0, FIRST_SYM1505_tree);
							}

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2237:81: AFTER_SYM column_name
							{
							AFTER_SYM1506=(Token)match(input,AFTER_SYM,FOLLOW_AFTER_SYM_in_alter_table_specification30740); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							AFTER_SYM1506_tree = (Object)adaptor.create(AFTER_SYM1506);
							adaptor.addChild(root_0, AFTER_SYM1506_tree);
							}

							pushFollow(FOLLOW_column_name_in_alter_table_specification30742);
							column_name1507=column_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, column_name1507.getTree());

							}
							break;

					}

					}

					}
					break;
				case 13 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2238:5: ( LOCK ( EQ_SYM )? ( DEFAULT | NONE_SYM | SHARED_SYM | EXCLUSIVE_SYM ) )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2238:5: ( LOCK ( EQ_SYM )? ( DEFAULT | NONE_SYM | SHARED_SYM | EXCLUSIVE_SYM ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2238:7: LOCK ( EQ_SYM )? ( DEFAULT | NONE_SYM | SHARED_SYM | EXCLUSIVE_SYM )
					{
					LOCK1508=(Token)match(input,LOCK,FOLLOW_LOCK_in_alter_table_specification30754); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LOCK1508_tree = (Object)adaptor.create(LOCK1508);
					adaptor.addChild(root_0, LOCK1508_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2238:12: ( EQ_SYM )?
					int alt527=2;
					int LA527_0 = input.LA(1);
					if ( (LA527_0==EQ_SYM) ) {
						alt527=1;
					}
					switch (alt527) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2238:13: EQ_SYM
							{
							EQ_SYM1509=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_alter_table_specification30757); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1509_tree = (Object)adaptor.create(EQ_SYM1509);
							adaptor.addChild(root_0, EQ_SYM1509_tree);
							}

							}
							break;

					}

					set1510=input.LT(1);
					if ( input.LA(1)==DEFAULT||input.LA(1)==EXCLUSIVE_SYM||input.LA(1)==NONE_SYM||input.LA(1)==SHARED_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1510));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}

					}
					break;
				case 14 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2239:5: ( MODIFY_SYM ( COLUMN_SYM )? column_name column_definition ( FIRST_SYM | AFTER_SYM column_name )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2239:5: ( MODIFY_SYM ( COLUMN_SYM )? column_name column_definition ( FIRST_SYM | AFTER_SYM column_name )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2239:7: MODIFY_SYM ( COLUMN_SYM )? column_name column_definition ( FIRST_SYM | AFTER_SYM column_name )?
					{
					MODIFY_SYM1511=(Token)match(input,MODIFY_SYM,FOLLOW_MODIFY_SYM_in_alter_table_specification30779); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					MODIFY_SYM1511_tree = (Object)adaptor.create(MODIFY_SYM1511);
					adaptor.addChild(root_0, MODIFY_SYM1511_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2239:18: ( COLUMN_SYM )?
					int alt528=2;
					int LA528_0 = input.LA(1);
					if ( (LA528_0==COLUMN_SYM) ) {
						alt528=1;
					}
					switch (alt528) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2239:19: COLUMN_SYM
							{
							COLUMN_SYM1512=(Token)match(input,COLUMN_SYM,FOLLOW_COLUMN_SYM_in_alter_table_specification30782); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLUMN_SYM1512_tree = (Object)adaptor.create(COLUMN_SYM1512);
							adaptor.addChild(root_0, COLUMN_SYM1512_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_column_name_in_alter_table_specification30786);
					column_name1513=column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_name1513.getTree());

					pushFollow(FOLLOW_column_definition_in_alter_table_specification30788);
					column_definition1514=column_definition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_definition1514.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2239:62: ( FIRST_SYM | AFTER_SYM column_name )?
					int alt529=3;
					int LA529_0 = input.LA(1);
					if ( (LA529_0==FIRST_SYM) ) {
						alt529=1;
					}
					else if ( (LA529_0==AFTER_SYM) ) {
						alt529=2;
					}
					switch (alt529) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2239:63: FIRST_SYM
							{
							FIRST_SYM1515=(Token)match(input,FIRST_SYM,FOLLOW_FIRST_SYM_in_alter_table_specification30791); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							FIRST_SYM1515_tree = (Object)adaptor.create(FIRST_SYM1515);
							adaptor.addChild(root_0, FIRST_SYM1515_tree);
							}

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2239:75: AFTER_SYM column_name
							{
							AFTER_SYM1516=(Token)match(input,AFTER_SYM,FOLLOW_AFTER_SYM_in_alter_table_specification30795); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							AFTER_SYM1516_tree = (Object)adaptor.create(AFTER_SYM1516);
							adaptor.addChild(root_0, AFTER_SYM1516_tree);
							}

							pushFollow(FOLLOW_column_name_in_alter_table_specification30797);
							column_name1517=column_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, column_name1517.getTree());

							}
							break;

					}

					}

					}
					break;
				case 15 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2240:5: ( DROP ( COLUMN_SYM )? column_name )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2240:5: ( DROP ( COLUMN_SYM )? column_name )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2240:7: DROP ( COLUMN_SYM )? column_name
					{
					DROP1518=(Token)match(input,DROP,FOLLOW_DROP_in_alter_table_specification30809); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DROP1518_tree = (Object)adaptor.create(DROP1518);
					adaptor.addChild(root_0, DROP1518_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2240:12: ( COLUMN_SYM )?
					int alt530=2;
					int LA530_0 = input.LA(1);
					if ( (LA530_0==COLUMN_SYM) ) {
						alt530=1;
					}
					switch (alt530) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2240:13: COLUMN_SYM
							{
							COLUMN_SYM1519=(Token)match(input,COLUMN_SYM,FOLLOW_COLUMN_SYM_in_alter_table_specification30812); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLUMN_SYM1519_tree = (Object)adaptor.create(COLUMN_SYM1519);
							adaptor.addChild(root_0, COLUMN_SYM1519_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_column_name_in_alter_table_specification30816);
					column_name1520=column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_name1520.getTree());

					}

					}
					break;
				case 16 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2241:5: ( DROP PRIMARY_SYM KEY_SYM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2241:5: ( DROP PRIMARY_SYM KEY_SYM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2241:7: DROP PRIMARY_SYM KEY_SYM
					{
					DROP1521=(Token)match(input,DROP,FOLLOW_DROP_in_alter_table_specification30826); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DROP1521_tree = (Object)adaptor.create(DROP1521);
					adaptor.addChild(root_0, DROP1521_tree);
					}

					PRIMARY_SYM1522=(Token)match(input,PRIMARY_SYM,FOLLOW_PRIMARY_SYM_in_alter_table_specification30828); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PRIMARY_SYM1522_tree = (Object)adaptor.create(PRIMARY_SYM1522);
					adaptor.addChild(root_0, PRIMARY_SYM1522_tree);
					}

					KEY_SYM1523=(Token)match(input,KEY_SYM,FOLLOW_KEY_SYM_in_alter_table_specification30830); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					KEY_SYM1523_tree = (Object)adaptor.create(KEY_SYM1523);
					adaptor.addChild(root_0, KEY_SYM1523_tree);
					}

					}

					}
					break;
				case 17 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2242:5: ( DROP ( INDEX_SYM | KEY_SYM ) index_name )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2242:5: ( DROP ( INDEX_SYM | KEY_SYM ) index_name )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2242:7: DROP ( INDEX_SYM | KEY_SYM ) index_name
					{
					DROP1524=(Token)match(input,DROP,FOLLOW_DROP_in_alter_table_specification30840); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DROP1524_tree = (Object)adaptor.create(DROP1524);
					adaptor.addChild(root_0, DROP1524_tree);
					}

					set1525=input.LT(1);
					if ( input.LA(1)==INDEX_SYM||input.LA(1)==KEY_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1525));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					pushFollow(FOLLOW_index_name_in_alter_table_specification30848);
					index_name1526=index_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_name1526.getTree());

					}

					}
					break;
				case 18 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2243:5: ( DROP FOREIGN KEY_SYM foreign_key_symbol_name )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2243:5: ( DROP FOREIGN KEY_SYM foreign_key_symbol_name )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2243:7: DROP FOREIGN KEY_SYM foreign_key_symbol_name
					{
					DROP1527=(Token)match(input,DROP,FOLLOW_DROP_in_alter_table_specification30858); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DROP1527_tree = (Object)adaptor.create(DROP1527);
					adaptor.addChild(root_0, DROP1527_tree);
					}

					FOREIGN1528=(Token)match(input,FOREIGN,FOLLOW_FOREIGN_in_alter_table_specification30860); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					FOREIGN1528_tree = (Object)adaptor.create(FOREIGN1528);
					adaptor.addChild(root_0, FOREIGN1528_tree);
					}

					KEY_SYM1529=(Token)match(input,KEY_SYM,FOLLOW_KEY_SYM_in_alter_table_specification30862); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					KEY_SYM1529_tree = (Object)adaptor.create(KEY_SYM1529);
					adaptor.addChild(root_0, KEY_SYM1529_tree);
					}

					pushFollow(FOLLOW_foreign_key_symbol_name_in_alter_table_specification30864);
					foreign_key_symbol_name1530=foreign_key_symbol_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, foreign_key_symbol_name1530.getTree());

					}

					}
					break;
				case 19 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2244:5: ( DISABLE_SYM KEYS )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2244:5: ( DISABLE_SYM KEYS )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2244:7: DISABLE_SYM KEYS
					{
					DISABLE_SYM1531=(Token)match(input,DISABLE_SYM,FOLLOW_DISABLE_SYM_in_alter_table_specification30874); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DISABLE_SYM1531_tree = (Object)adaptor.create(DISABLE_SYM1531);
					adaptor.addChild(root_0, DISABLE_SYM1531_tree);
					}

					KEYS1532=(Token)match(input,KEYS,FOLLOW_KEYS_in_alter_table_specification30876); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					KEYS1532_tree = (Object)adaptor.create(KEYS1532);
					adaptor.addChild(root_0, KEYS1532_tree);
					}

					}

					}
					break;
				case 20 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2245:5: ( ENABLE_SYM KEYS )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2245:5: ( ENABLE_SYM KEYS )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2245:7: ENABLE_SYM KEYS
					{
					ENABLE_SYM1533=(Token)match(input,ENABLE_SYM,FOLLOW_ENABLE_SYM_in_alter_table_specification30886); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ENABLE_SYM1533_tree = (Object)adaptor.create(ENABLE_SYM1533);
					adaptor.addChild(root_0, ENABLE_SYM1533_tree);
					}

					KEYS1534=(Token)match(input,KEYS,FOLLOW_KEYS_in_alter_table_specification30888); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					KEYS1534_tree = (Object)adaptor.create(KEYS1534);
					adaptor.addChild(root_0, KEYS1534_tree);
					}

					}

					}
					break;
				case 21 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2246:5: ( RENAME ( TO_SYM | AS_SYM )? table_name )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2246:5: ( RENAME ( TO_SYM | AS_SYM )? table_name )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2246:7: RENAME ( TO_SYM | AS_SYM )? table_name
					{
					RENAME1535=(Token)match(input,RENAME,FOLLOW_RENAME_in_alter_table_specification30898); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RENAME1535_tree = (Object)adaptor.create(RENAME1535);
					adaptor.addChild(root_0, RENAME1535_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2246:14: ( TO_SYM | AS_SYM )?
					int alt531=2;
					int LA531_0 = input.LA(1);
					if ( (LA531_0==AS_SYM||LA531_0==TO_SYM) ) {
						alt531=1;
					}
					switch (alt531) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
							{
							set1536=input.LT(1);
							if ( input.LA(1)==AS_SYM||input.LA(1)==TO_SYM ) {
								input.consume();
								if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1536));
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								throw mse;
							}
							}
							break;

					}

					pushFollow(FOLLOW_table_name_in_alter_table_specification30907);
					table_name1537=table_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name1537.getTree());

					}

					}
					break;
				case 22 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2247:5: ( ORDER_SYM BY_SYM column_name ( COMMA column_name )* )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2247:5: ( ORDER_SYM BY_SYM column_name ( COMMA column_name )* )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2247:7: ORDER_SYM BY_SYM column_name ( COMMA column_name )*
					{
					ORDER_SYM1538=(Token)match(input,ORDER_SYM,FOLLOW_ORDER_SYM_in_alter_table_specification30917); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ORDER_SYM1538_tree = (Object)adaptor.create(ORDER_SYM1538);
					adaptor.addChild(root_0, ORDER_SYM1538_tree);
					}

					BY_SYM1539=(Token)match(input,BY_SYM,FOLLOW_BY_SYM_in_alter_table_specification30919); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					BY_SYM1539_tree = (Object)adaptor.create(BY_SYM1539);
					adaptor.addChild(root_0, BY_SYM1539_tree);
					}

					pushFollow(FOLLOW_column_name_in_alter_table_specification30921);
					column_name1540=column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_name1540.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2247:36: ( COMMA column_name )*
					loop532:
					while (true) {
						int alt532=2;
						int LA532_0 = input.LA(1);
						if ( (LA532_0==COMMA) ) {
							int LA532_1 = input.LA(2);
							if ( (LA532_1==ID) ) {
								alt532=1;
							}

						}

						switch (alt532) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2247:37: COMMA column_name
							{
							COMMA1541=(Token)match(input,COMMA,FOLLOW_COMMA_in_alter_table_specification30924); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA1541_tree = (Object)adaptor.create(COMMA1541);
							adaptor.addChild(root_0, COMMA1541_tree);
							}

							pushFollow(FOLLOW_column_name_in_alter_table_specification30926);
							column_name1542=column_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, column_name1542.getTree());

							}
							break;

						default :
							break loop532;
						}
					}

					}

					}
					break;
				case 23 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2248:5: ( CONVERT_SYM TO_SYM CHARACTER_SYM SET_SYM charset_name ( COLLATE_SYM collation_name )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2248:5: ( CONVERT_SYM TO_SYM CHARACTER_SYM SET_SYM charset_name ( COLLATE_SYM collation_name )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2248:7: CONVERT_SYM TO_SYM CHARACTER_SYM SET_SYM charset_name ( COLLATE_SYM collation_name )?
					{
					CONVERT_SYM1543=(Token)match(input,CONVERT_SYM,FOLLOW_CONVERT_SYM_in_alter_table_specification30938); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CONVERT_SYM1543_tree = (Object)adaptor.create(CONVERT_SYM1543);
					adaptor.addChild(root_0, CONVERT_SYM1543_tree);
					}

					TO_SYM1544=(Token)match(input,TO_SYM,FOLLOW_TO_SYM_in_alter_table_specification30940); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TO_SYM1544_tree = (Object)adaptor.create(TO_SYM1544);
					adaptor.addChild(root_0, TO_SYM1544_tree);
					}

					CHARACTER_SYM1545=(Token)match(input,CHARACTER_SYM,FOLLOW_CHARACTER_SYM_in_alter_table_specification30942); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CHARACTER_SYM1545_tree = (Object)adaptor.create(CHARACTER_SYM1545);
					adaptor.addChild(root_0, CHARACTER_SYM1545_tree);
					}

					SET_SYM1546=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_alter_table_specification30944); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SET_SYM1546_tree = (Object)adaptor.create(SET_SYM1546);
					adaptor.addChild(root_0, SET_SYM1546_tree);
					}

					pushFollow(FOLLOW_charset_name_in_alter_table_specification30946);
					charset_name1547=charset_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, charset_name1547.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2248:61: ( COLLATE_SYM collation_name )?
					int alt533=2;
					int LA533_0 = input.LA(1);
					if ( (LA533_0==COLLATE_SYM) ) {
						alt533=1;
					}
					switch (alt533) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2248:62: COLLATE_SYM collation_name
							{
							COLLATE_SYM1548=(Token)match(input,COLLATE_SYM,FOLLOW_COLLATE_SYM_in_alter_table_specification30949); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLLATE_SYM1548_tree = (Object)adaptor.create(COLLATE_SYM1548);
							adaptor.addChild(root_0, COLLATE_SYM1548_tree);
							}

							pushFollow(FOLLOW_collation_name_in_alter_table_specification30951);
							collation_name1549=collation_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, collation_name1549.getTree());

							}
							break;

					}

					}

					}
					break;
				case 24 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:5: ( ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name ( COLLATE_SYM ( EQ_SYM )? collation_name )? )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:5: ( ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name ( COLLATE_SYM ( EQ_SYM )? collation_name )? )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:7: ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name ( COLLATE_SYM ( EQ_SYM )? collation_name )?
					{
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:7: ( DEFAULT )?
					int alt534=2;
					int LA534_0 = input.LA(1);
					if ( (LA534_0==DEFAULT) ) {
						alt534=1;
					}
					switch (alt534) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:8: DEFAULT
							{
							DEFAULT1550=(Token)match(input,DEFAULT,FOLLOW_DEFAULT_in_alter_table_specification30964); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							DEFAULT1550_tree = (Object)adaptor.create(DEFAULT1550);
							adaptor.addChild(root_0, DEFAULT1550_tree);
							}

							}
							break;

					}

					CHARACTER_SYM1551=(Token)match(input,CHARACTER_SYM,FOLLOW_CHARACTER_SYM_in_alter_table_specification30968); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CHARACTER_SYM1551_tree = (Object)adaptor.create(CHARACTER_SYM1551);
					adaptor.addChild(root_0, CHARACTER_SYM1551_tree);
					}

					SET_SYM1552=(Token)match(input,SET_SYM,FOLLOW_SET_SYM_in_alter_table_specification30970); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SET_SYM1552_tree = (Object)adaptor.create(SET_SYM1552);
					adaptor.addChild(root_0, SET_SYM1552_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:40: ( EQ_SYM )?
					int alt535=2;
					int LA535_0 = input.LA(1);
					if ( (LA535_0==EQ_SYM) ) {
						alt535=1;
					}
					switch (alt535) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:41: EQ_SYM
							{
							EQ_SYM1553=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_alter_table_specification30973); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1553_tree = (Object)adaptor.create(EQ_SYM1553);
							adaptor.addChild(root_0, EQ_SYM1553_tree);
							}

							}
							break;

					}

					pushFollow(FOLLOW_charset_name_in_alter_table_specification30977);
					charset_name1554=charset_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, charset_name1554.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:63: ( COLLATE_SYM ( EQ_SYM )? collation_name )?
					int alt537=2;
					int LA537_0 = input.LA(1);
					if ( (LA537_0==COLLATE_SYM) ) {
						alt537=1;
					}
					switch (alt537) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:64: COLLATE_SYM ( EQ_SYM )? collation_name
							{
							COLLATE_SYM1555=(Token)match(input,COLLATE_SYM,FOLLOW_COLLATE_SYM_in_alter_table_specification30980); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COLLATE_SYM1555_tree = (Object)adaptor.create(COLLATE_SYM1555);
							adaptor.addChild(root_0, COLLATE_SYM1555_tree);
							}

							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:76: ( EQ_SYM )?
							int alt536=2;
							int LA536_0 = input.LA(1);
							if ( (LA536_0==EQ_SYM) ) {
								alt536=1;
							}
							switch (alt536) {
								case 1 :
									// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:77: EQ_SYM
									{
									EQ_SYM1556=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_alter_table_specification30983); if (state.failed) return retval;
									if ( state.backtracking==0 ) {
									EQ_SYM1556_tree = (Object)adaptor.create(EQ_SYM1556);
									adaptor.addChild(root_0, EQ_SYM1556_tree);
									}

									}
									break;

							}

							pushFollow(FOLLOW_collation_name_in_alter_table_specification30987);
							collation_name1557=collation_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, collation_name1557.getTree());

							}
							break;

					}

					}

					}
					break;
				case 25 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2250:5: ( DISCARD TABLESPACE )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2250:5: ( DISCARD TABLESPACE )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2250:7: DISCARD TABLESPACE
					{
					DISCARD1558=(Token)match(input,DISCARD,FOLLOW_DISCARD_in_alter_table_specification30999); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DISCARD1558_tree = (Object)adaptor.create(DISCARD1558);
					adaptor.addChild(root_0, DISCARD1558_tree);
					}

					TABLESPACE1559=(Token)match(input,TABLESPACE,FOLLOW_TABLESPACE_in_alter_table_specification31001); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TABLESPACE1559_tree = (Object)adaptor.create(TABLESPACE1559);
					adaptor.addChild(root_0, TABLESPACE1559_tree);
					}

					}

					}
					break;
				case 26 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2251:5: ( IMPORT TABLESPACE )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2251:5: ( IMPORT TABLESPACE )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2251:7: IMPORT TABLESPACE
					{
					IMPORT1560=(Token)match(input,IMPORT,FOLLOW_IMPORT_in_alter_table_specification31011); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IMPORT1560_tree = (Object)adaptor.create(IMPORT1560);
					adaptor.addChild(root_0, IMPORT1560_tree);
					}

					TABLESPACE1561=(Token)match(input,TABLESPACE,FOLLOW_TABLESPACE_in_alter_table_specification31013); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TABLESPACE1561_tree = (Object)adaptor.create(TABLESPACE1561);
					adaptor.addChild(root_0, TABLESPACE1561_tree);
					}

					}

					}
					break;
				case 27 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2252:5: ( FORCE_SYM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2252:5: ( FORCE_SYM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2252:7: FORCE_SYM
					{
					FORCE_SYM1562=(Token)match(input,FORCE_SYM,FOLLOW_FORCE_SYM_in_alter_table_specification31023); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					FORCE_SYM1562_tree = (Object)adaptor.create(FORCE_SYM1562);
					adaptor.addChild(root_0, FORCE_SYM1562_tree);
					}

					}

					}
					break;
				case 28 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2253:5: ( ADD_SYM PARTITION_SYM LPAREN partition_definition RPAREN )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2253:5: ( ADD_SYM PARTITION_SYM LPAREN partition_definition RPAREN )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2253:7: ADD_SYM PARTITION_SYM LPAREN partition_definition RPAREN
					{
					ADD_SYM1563=(Token)match(input,ADD_SYM,FOLLOW_ADD_SYM_in_alter_table_specification31033); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ADD_SYM1563_tree = (Object)adaptor.create(ADD_SYM1563);
					adaptor.addChild(root_0, ADD_SYM1563_tree);
					}

					PARTITION_SYM1564=(Token)match(input,PARTITION_SYM,FOLLOW_PARTITION_SYM_in_alter_table_specification31035); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PARTITION_SYM1564_tree = (Object)adaptor.create(PARTITION_SYM1564);
					adaptor.addChild(root_0, PARTITION_SYM1564_tree);
					}

					LPAREN1565=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_alter_table_specification31037); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1565_tree = (Object)adaptor.create(LPAREN1565);
					adaptor.addChild(root_0, LPAREN1565_tree);
					}

					pushFollow(FOLLOW_partition_definition_in_alter_table_specification31039);
					partition_definition1566=partition_definition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_definition1566.getTree());

					RPAREN1567=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_alter_table_specification31041); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1567_tree = (Object)adaptor.create(RPAREN1567);
					adaptor.addChild(root_0, RPAREN1567_tree);
					}

					}

					}
					break;
				case 29 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2254:5: ( DROP PARTITION_SYM partition_names )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2254:5: ( DROP PARTITION_SYM partition_names )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2254:7: DROP PARTITION_SYM partition_names
					{
					DROP1568=(Token)match(input,DROP,FOLLOW_DROP_in_alter_table_specification31051); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DROP1568_tree = (Object)adaptor.create(DROP1568);
					adaptor.addChild(root_0, DROP1568_tree);
					}

					PARTITION_SYM1569=(Token)match(input,PARTITION_SYM,FOLLOW_PARTITION_SYM_in_alter_table_specification31053); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PARTITION_SYM1569_tree = (Object)adaptor.create(PARTITION_SYM1569);
					adaptor.addChild(root_0, PARTITION_SYM1569_tree);
					}

					pushFollow(FOLLOW_partition_names_in_alter_table_specification31055);
					partition_names1570=partition_names();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_names1570.getTree());

					}

					}
					break;
				case 30 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2255:5: ( TRUNCATE PARTITION_SYM ( partition_names | ALL ) )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2255:5: ( TRUNCATE PARTITION_SYM ( partition_names | ALL ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2255:7: TRUNCATE PARTITION_SYM ( partition_names | ALL )
					{
					TRUNCATE1571=(Token)match(input,TRUNCATE,FOLLOW_TRUNCATE_in_alter_table_specification31065); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TRUNCATE1571_tree = (Object)adaptor.create(TRUNCATE1571);
					adaptor.addChild(root_0, TRUNCATE1571_tree);
					}

					PARTITION_SYM1572=(Token)match(input,PARTITION_SYM,FOLLOW_PARTITION_SYM_in_alter_table_specification31067); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PARTITION_SYM1572_tree = (Object)adaptor.create(PARTITION_SYM1572);
					adaptor.addChild(root_0, PARTITION_SYM1572_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2255:30: ( partition_names | ALL )
					int alt538=2;
					int LA538_0 = input.LA(1);
					if ( (LA538_0==ID) ) {
						alt538=1;
					}
					else if ( (LA538_0==ALL) ) {
						alt538=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 538, 0, input);
						throw nvae;
					}

					switch (alt538) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2255:31: partition_names
							{
							pushFollow(FOLLOW_partition_names_in_alter_table_specification31070);
							partition_names1573=partition_names();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_names1573.getTree());

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2255:49: ALL
							{
							ALL1574=(Token)match(input,ALL,FOLLOW_ALL_in_alter_table_specification31074); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ALL1574_tree = (Object)adaptor.create(ALL1574);
							adaptor.addChild(root_0, ALL1574_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 31 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2256:5: ( COALESCE PARTITION_SYM INTEGER_NUM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2256:5: ( COALESCE PARTITION_SYM INTEGER_NUM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2256:7: COALESCE PARTITION_SYM INTEGER_NUM
					{
					COALESCE1575=(Token)match(input,COALESCE,FOLLOW_COALESCE_in_alter_table_specification31085); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COALESCE1575_tree = (Object)adaptor.create(COALESCE1575);
					adaptor.addChild(root_0, COALESCE1575_tree);
					}

					PARTITION_SYM1576=(Token)match(input,PARTITION_SYM,FOLLOW_PARTITION_SYM_in_alter_table_specification31087); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PARTITION_SYM1576_tree = (Object)adaptor.create(PARTITION_SYM1576);
					adaptor.addChild(root_0, PARTITION_SYM1576_tree);
					}

					INTEGER_NUM1577=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_alter_table_specification31089); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM1577_tree = (Object)adaptor.create(INTEGER_NUM1577);
					adaptor.addChild(root_0, INTEGER_NUM1577_tree);
					}

					}

					}
					break;
				case 32 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2257:5: ( REORGANIZE_SYM PARTITION_SYM partition_names INTO LPAREN partition_definition ( COMMA partition_definition )* RPAREN )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2257:5: ( REORGANIZE_SYM PARTITION_SYM partition_names INTO LPAREN partition_definition ( COMMA partition_definition )* RPAREN )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2257:7: REORGANIZE_SYM PARTITION_SYM partition_names INTO LPAREN partition_definition ( COMMA partition_definition )* RPAREN
					{
					REORGANIZE_SYM1578=(Token)match(input,REORGANIZE_SYM,FOLLOW_REORGANIZE_SYM_in_alter_table_specification31099); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					REORGANIZE_SYM1578_tree = (Object)adaptor.create(REORGANIZE_SYM1578);
					adaptor.addChild(root_0, REORGANIZE_SYM1578_tree);
					}

					PARTITION_SYM1579=(Token)match(input,PARTITION_SYM,FOLLOW_PARTITION_SYM_in_alter_table_specification31101); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PARTITION_SYM1579_tree = (Object)adaptor.create(PARTITION_SYM1579);
					adaptor.addChild(root_0, PARTITION_SYM1579_tree);
					}

					pushFollow(FOLLOW_partition_names_in_alter_table_specification31103);
					partition_names1580=partition_names();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_names1580.getTree());

					INTO1581=(Token)match(input,INTO,FOLLOW_INTO_in_alter_table_specification31105); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTO1581_tree = (Object)adaptor.create(INTO1581);
					adaptor.addChild(root_0, INTO1581_tree);
					}

					LPAREN1582=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_alter_table_specification31107); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1582_tree = (Object)adaptor.create(LPAREN1582);
					adaptor.addChild(root_0, LPAREN1582_tree);
					}

					pushFollow(FOLLOW_partition_definition_in_alter_table_specification31109);
					partition_definition1583=partition_definition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_definition1583.getTree());

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2257:85: ( COMMA partition_definition )*
					loop539:
					while (true) {
						int alt539=2;
						int LA539_0 = input.LA(1);
						if ( (LA539_0==COMMA) ) {
							alt539=1;
						}

						switch (alt539) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2257:86: COMMA partition_definition
							{
							COMMA1584=(Token)match(input,COMMA,FOLLOW_COMMA_in_alter_table_specification31112); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							COMMA1584_tree = (Object)adaptor.create(COMMA1584);
							adaptor.addChild(root_0, COMMA1584_tree);
							}

							pushFollow(FOLLOW_partition_definition_in_alter_table_specification31114);
							partition_definition1585=partition_definition();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_definition1585.getTree());

							}
							break;

						default :
							break loop539;
						}
					}

					RPAREN1586=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_alter_table_specification31118); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1586_tree = (Object)adaptor.create(RPAREN1586);
					adaptor.addChild(root_0, RPAREN1586_tree);
					}

					}

					}
					break;
				case 33 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2258:5: ( EXCHANGE_SYM PARTITION_SYM partition_name WITH TABLE table_name )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2258:5: ( EXCHANGE_SYM PARTITION_SYM partition_name WITH TABLE table_name )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2258:7: EXCHANGE_SYM PARTITION_SYM partition_name WITH TABLE table_name
					{
					EXCHANGE_SYM1587=(Token)match(input,EXCHANGE_SYM,FOLLOW_EXCHANGE_SYM_in_alter_table_specification31128); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EXCHANGE_SYM1587_tree = (Object)adaptor.create(EXCHANGE_SYM1587);
					adaptor.addChild(root_0, EXCHANGE_SYM1587_tree);
					}

					PARTITION_SYM1588=(Token)match(input,PARTITION_SYM,FOLLOW_PARTITION_SYM_in_alter_table_specification31130); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PARTITION_SYM1588_tree = (Object)adaptor.create(PARTITION_SYM1588);
					adaptor.addChild(root_0, PARTITION_SYM1588_tree);
					}

					pushFollow(FOLLOW_partition_name_in_alter_table_specification31132);
					partition_name1589=partition_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_name1589.getTree());

					WITH1590=(Token)match(input,WITH,FOLLOW_WITH_in_alter_table_specification31134); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					WITH1590_tree = (Object)adaptor.create(WITH1590);
					adaptor.addChild(root_0, WITH1590_tree);
					}

					TABLE1591=(Token)match(input,TABLE,FOLLOW_TABLE_in_alter_table_specification31136); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TABLE1591_tree = (Object)adaptor.create(TABLE1591);
					adaptor.addChild(root_0, TABLE1591_tree);
					}

					pushFollow(FOLLOW_table_name_in_alter_table_specification31138);
					table_name1592=table_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name1592.getTree());

					}

					}
					break;
				case 34 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2259:5: ( ANALYZE_SYM PARTITION_SYM ( partition_names | ALL ) )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2259:5: ( ANALYZE_SYM PARTITION_SYM ( partition_names | ALL ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2259:7: ANALYZE_SYM PARTITION_SYM ( partition_names | ALL )
					{
					ANALYZE_SYM1593=(Token)match(input,ANALYZE_SYM,FOLLOW_ANALYZE_SYM_in_alter_table_specification31148); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ANALYZE_SYM1593_tree = (Object)adaptor.create(ANALYZE_SYM1593);
					adaptor.addChild(root_0, ANALYZE_SYM1593_tree);
					}

					PARTITION_SYM1594=(Token)match(input,PARTITION_SYM,FOLLOW_PARTITION_SYM_in_alter_table_specification31150); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PARTITION_SYM1594_tree = (Object)adaptor.create(PARTITION_SYM1594);
					adaptor.addChild(root_0, PARTITION_SYM1594_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2259:33: ( partition_names | ALL )
					int alt540=2;
					int LA540_0 = input.LA(1);
					if ( (LA540_0==ID) ) {
						alt540=1;
					}
					else if ( (LA540_0==ALL) ) {
						alt540=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 540, 0, input);
						throw nvae;
					}

					switch (alt540) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2259:34: partition_names
							{
							pushFollow(FOLLOW_partition_names_in_alter_table_specification31153);
							partition_names1595=partition_names();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_names1595.getTree());

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2259:52: ALL
							{
							ALL1596=(Token)match(input,ALL,FOLLOW_ALL_in_alter_table_specification31157); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ALL1596_tree = (Object)adaptor.create(ALL1596);
							adaptor.addChild(root_0, ALL1596_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 35 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2260:5: ( CHECK_SYM PARTITION_SYM ( partition_names | ALL ) )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2260:5: ( CHECK_SYM PARTITION_SYM ( partition_names | ALL ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2260:7: CHECK_SYM PARTITION_SYM ( partition_names | ALL )
					{
					CHECK_SYM1597=(Token)match(input,CHECK_SYM,FOLLOW_CHECK_SYM_in_alter_table_specification31168); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CHECK_SYM1597_tree = (Object)adaptor.create(CHECK_SYM1597);
					adaptor.addChild(root_0, CHECK_SYM1597_tree);
					}

					PARTITION_SYM1598=(Token)match(input,PARTITION_SYM,FOLLOW_PARTITION_SYM_in_alter_table_specification31170); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PARTITION_SYM1598_tree = (Object)adaptor.create(PARTITION_SYM1598);
					adaptor.addChild(root_0, PARTITION_SYM1598_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2260:31: ( partition_names | ALL )
					int alt541=2;
					int LA541_0 = input.LA(1);
					if ( (LA541_0==ID) ) {
						alt541=1;
					}
					else if ( (LA541_0==ALL) ) {
						alt541=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 541, 0, input);
						throw nvae;
					}

					switch (alt541) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2260:32: partition_names
							{
							pushFollow(FOLLOW_partition_names_in_alter_table_specification31173);
							partition_names1599=partition_names();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_names1599.getTree());

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2260:50: ALL
							{
							ALL1600=(Token)match(input,ALL,FOLLOW_ALL_in_alter_table_specification31177); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ALL1600_tree = (Object)adaptor.create(ALL1600);
							adaptor.addChild(root_0, ALL1600_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 36 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2261:5: ( OPTIMIZE PARTITION_SYM ( partition_names | ALL ) )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2261:5: ( OPTIMIZE PARTITION_SYM ( partition_names | ALL ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2261:7: OPTIMIZE PARTITION_SYM ( partition_names | ALL )
					{
					OPTIMIZE1601=(Token)match(input,OPTIMIZE,FOLLOW_OPTIMIZE_in_alter_table_specification31188); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					OPTIMIZE1601_tree = (Object)adaptor.create(OPTIMIZE1601);
					adaptor.addChild(root_0, OPTIMIZE1601_tree);
					}

					PARTITION_SYM1602=(Token)match(input,PARTITION_SYM,FOLLOW_PARTITION_SYM_in_alter_table_specification31190); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PARTITION_SYM1602_tree = (Object)adaptor.create(PARTITION_SYM1602);
					adaptor.addChild(root_0, PARTITION_SYM1602_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2261:30: ( partition_names | ALL )
					int alt542=2;
					int LA542_0 = input.LA(1);
					if ( (LA542_0==ID) ) {
						alt542=1;
					}
					else if ( (LA542_0==ALL) ) {
						alt542=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 542, 0, input);
						throw nvae;
					}

					switch (alt542) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2261:31: partition_names
							{
							pushFollow(FOLLOW_partition_names_in_alter_table_specification31193);
							partition_names1603=partition_names();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_names1603.getTree());

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2261:49: ALL
							{
							ALL1604=(Token)match(input,ALL,FOLLOW_ALL_in_alter_table_specification31197); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ALL1604_tree = (Object)adaptor.create(ALL1604);
							adaptor.addChild(root_0, ALL1604_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 37 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2262:5: ( REBUILD_SYM PARTITION_SYM ( partition_names | ALL ) )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2262:5: ( REBUILD_SYM PARTITION_SYM ( partition_names | ALL ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2262:7: REBUILD_SYM PARTITION_SYM ( partition_names | ALL )
					{
					REBUILD_SYM1605=(Token)match(input,REBUILD_SYM,FOLLOW_REBUILD_SYM_in_alter_table_specification31208); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					REBUILD_SYM1605_tree = (Object)adaptor.create(REBUILD_SYM1605);
					adaptor.addChild(root_0, REBUILD_SYM1605_tree);
					}

					PARTITION_SYM1606=(Token)match(input,PARTITION_SYM,FOLLOW_PARTITION_SYM_in_alter_table_specification31210); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PARTITION_SYM1606_tree = (Object)adaptor.create(PARTITION_SYM1606);
					adaptor.addChild(root_0, PARTITION_SYM1606_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2262:33: ( partition_names | ALL )
					int alt543=2;
					int LA543_0 = input.LA(1);
					if ( (LA543_0==ID) ) {
						alt543=1;
					}
					else if ( (LA543_0==ALL) ) {
						alt543=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 543, 0, input);
						throw nvae;
					}

					switch (alt543) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2262:34: partition_names
							{
							pushFollow(FOLLOW_partition_names_in_alter_table_specification31213);
							partition_names1607=partition_names();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_names1607.getTree());

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2262:52: ALL
							{
							ALL1608=(Token)match(input,ALL,FOLLOW_ALL_in_alter_table_specification31217); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ALL1608_tree = (Object)adaptor.create(ALL1608);
							adaptor.addChild(root_0, ALL1608_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 38 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2263:5: ( REPAIR PARTITION_SYM ( partition_names | ALL ) )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2263:5: ( REPAIR PARTITION_SYM ( partition_names | ALL ) )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2263:7: REPAIR PARTITION_SYM ( partition_names | ALL )
					{
					REPAIR1609=(Token)match(input,REPAIR,FOLLOW_REPAIR_in_alter_table_specification31228); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					REPAIR1609_tree = (Object)adaptor.create(REPAIR1609);
					adaptor.addChild(root_0, REPAIR1609_tree);
					}

					PARTITION_SYM1610=(Token)match(input,PARTITION_SYM,FOLLOW_PARTITION_SYM_in_alter_table_specification31230); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PARTITION_SYM1610_tree = (Object)adaptor.create(PARTITION_SYM1610);
					adaptor.addChild(root_0, PARTITION_SYM1610_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2263:28: ( partition_names | ALL )
					int alt544=2;
					int LA544_0 = input.LA(1);
					if ( (LA544_0==ID) ) {
						alt544=1;
					}
					else if ( (LA544_0==ALL) ) {
						alt544=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 544, 0, input);
						throw nvae;
					}

					switch (alt544) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2263:29: partition_names
							{
							pushFollow(FOLLOW_partition_names_in_alter_table_specification31233);
							partition_names1611=partition_names();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, partition_names1611.getTree());

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2263:47: ALL
							{
							ALL1612=(Token)match(input,ALL,FOLLOW_ALL_in_alter_table_specification31237); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							ALL1612_tree = (Object)adaptor.create(ALL1612);
							adaptor.addChild(root_0, ALL1612_tree);
							}

							}
							break;

					}

					}

					}
					break;
				case 39 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2264:5: ( REMOVE_SYM PARTITIONING_SYM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2264:5: ( REMOVE_SYM PARTITIONING_SYM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2264:7: REMOVE_SYM PARTITIONING_SYM
					{
					REMOVE_SYM1613=(Token)match(input,REMOVE_SYM,FOLLOW_REMOVE_SYM_in_alter_table_specification31248); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					REMOVE_SYM1613_tree = (Object)adaptor.create(REMOVE_SYM1613);
					adaptor.addChild(root_0, REMOVE_SYM1613_tree);
					}

					PARTITIONING_SYM1614=(Token)match(input,PARTITIONING_SYM,FOLLOW_PARTITIONING_SYM_in_alter_table_specification31250); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PARTITIONING_SYM1614_tree = (Object)adaptor.create(PARTITIONING_SYM1614);
					adaptor.addChild(root_0, PARTITIONING_SYM1614_tree);
					}

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_table_specification"


	public static class index_column_names_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "index_column_names"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2266:1: index_column_names : index_column_name ( COMMA index_column_name )* ;
	public final SQLParser.index_column_names_return index_column_names() throws RecognitionException {
		SQLParser.index_column_names_return retval = new SQLParser.index_column_names_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token COMMA1616=null;
		ParserRuleReturnScope index_column_name1615 =null;
		ParserRuleReturnScope index_column_name1617 =null;

		Object COMMA1616_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2266:19: ( index_column_name ( COMMA index_column_name )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2267:3: index_column_name ( COMMA index_column_name )*
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_index_column_name_in_index_column_names31261);
			index_column_name1615=index_column_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name1615.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2267:21: ( COMMA index_column_name )*
			loop546:
			while (true) {
				int alt546=2;
				int LA546_0 = input.LA(1);
				if ( (LA546_0==COMMA) ) {
					alt546=1;
				}

				switch (alt546) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2267:22: COMMA index_column_name
					{
					COMMA1616=(Token)match(input,COMMA,FOLLOW_COMMA_in_index_column_names31264); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA1616_tree = (Object)adaptor.create(COMMA1616);
					adaptor.addChild(root_0, COMMA1616_tree);
					}

					pushFollow(FOLLOW_index_column_name_in_index_column_names31266);
					index_column_name1617=index_column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_column_name1617.getTree());

					}
					break;

				default :
					break loop546;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "index_column_names"


	public static class index_type_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "index_type"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2268:1: index_type : USING_SYM ( BTREE_SYM | HASH_SYM ) ;
	public final SQLParser.index_type_return index_type() throws RecognitionException {
		SQLParser.index_type_return retval = new SQLParser.index_type_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token USING_SYM1618=null;
		Token set1619=null;

		Object USING_SYM1618_tree=null;
		Object set1619_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2268:11: ( USING_SYM ( BTREE_SYM | HASH_SYM ) )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2269:3: USING_SYM ( BTREE_SYM | HASH_SYM )
			{
			root_0 = (Object)adaptor.nil();


			USING_SYM1618=(Token)match(input,USING_SYM,FOLLOW_USING_SYM_in_index_type31276); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			USING_SYM1618_tree = (Object)adaptor.create(USING_SYM1618);
			adaptor.addChild(root_0, USING_SYM1618_tree);
			}

			set1619=input.LT(1);
			if ( input.LA(1)==BTREE_SYM||input.LA(1)==HASH_SYM ) {
				input.consume();
				if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1619));
				state.errorRecovery=false;
				state.failed=false;
			}
			else {
				if (state.backtracking>0) {state.failed=true; return retval;}
				MismatchedSetException mse = new MismatchedSetException(null,input);
				throw mse;
			}
			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "index_type"


	public static class index_option_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "index_option"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2271:1: index_option : ( ( KEY_BLOCK_SIZE ( EQ_SYM )? INTEGER_NUM ) | index_type | ( WITH PARSER_SYM parser_name ) | ( COMMENT_SYM TEXT_STRING ) );
	public final SQLParser.index_option_return index_option() throws RecognitionException {
		SQLParser.index_option_return retval = new SQLParser.index_option_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token KEY_BLOCK_SIZE1620=null;
		Token EQ_SYM1621=null;
		Token INTEGER_NUM1622=null;
		Token WITH1624=null;
		Token PARSER_SYM1625=null;
		Token COMMENT_SYM1627=null;
		Token TEXT_STRING1628=null;
		ParserRuleReturnScope index_type1623 =null;
		ParserRuleReturnScope parser_name1626 =null;

		Object KEY_BLOCK_SIZE1620_tree=null;
		Object EQ_SYM1621_tree=null;
		Object INTEGER_NUM1622_tree=null;
		Object WITH1624_tree=null;
		Object PARSER_SYM1625_tree=null;
		Object COMMENT_SYM1627_tree=null;
		Object TEXT_STRING1628_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2271:13: ( ( KEY_BLOCK_SIZE ( EQ_SYM )? INTEGER_NUM ) | index_type | ( WITH PARSER_SYM parser_name ) | ( COMMENT_SYM TEXT_STRING ) )
			int alt548=4;
			switch ( input.LA(1) ) {
			case KEY_BLOCK_SIZE:
				{
				alt548=1;
				}
				break;
			case USING_SYM:
				{
				alt548=2;
				}
				break;
			case WITH:
				{
				alt548=3;
				}
				break;
			case COMMENT_SYM:
				{
				alt548=4;
				}
				break;
			default:
				if (state.backtracking>0) {state.failed=true; return retval;}
				NoViableAltException nvae =
					new NoViableAltException("", 548, 0, input);
				throw nvae;
			}
			switch (alt548) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2272:5: ( KEY_BLOCK_SIZE ( EQ_SYM )? INTEGER_NUM )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2272:5: ( KEY_BLOCK_SIZE ( EQ_SYM )? INTEGER_NUM )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2272:7: KEY_BLOCK_SIZE ( EQ_SYM )? INTEGER_NUM
					{
					KEY_BLOCK_SIZE1620=(Token)match(input,KEY_BLOCK_SIZE,FOLLOW_KEY_BLOCK_SIZE_in_index_option31297); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					KEY_BLOCK_SIZE1620_tree = (Object)adaptor.create(KEY_BLOCK_SIZE1620);
					adaptor.addChild(root_0, KEY_BLOCK_SIZE1620_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2272:22: ( EQ_SYM )?
					int alt547=2;
					int LA547_0 = input.LA(1);
					if ( (LA547_0==EQ_SYM) ) {
						alt547=1;
					}
					switch (alt547) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2272:23: EQ_SYM
							{
							EQ_SYM1621=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_index_option31300); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							EQ_SYM1621_tree = (Object)adaptor.create(EQ_SYM1621);
							adaptor.addChild(root_0, EQ_SYM1621_tree);
							}

							}
							break;

					}

					INTEGER_NUM1622=(Token)match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_index_option31304); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					INTEGER_NUM1622_tree = (Object)adaptor.create(INTEGER_NUM1622);
					adaptor.addChild(root_0, INTEGER_NUM1622_tree);
					}

					}

					}
					break;
				case 2 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2273:5: index_type
					{
					root_0 = (Object)adaptor.nil();


					pushFollow(FOLLOW_index_type_in_index_option31312);
					index_type1623=index_type();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, index_type1623.getTree());

					}
					break;
				case 3 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2274:5: ( WITH PARSER_SYM parser_name )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2274:5: ( WITH PARSER_SYM parser_name )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2274:7: WITH PARSER_SYM parser_name
					{
					WITH1624=(Token)match(input,WITH,FOLLOW_WITH_in_index_option31320); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					WITH1624_tree = (Object)adaptor.create(WITH1624);
					adaptor.addChild(root_0, WITH1624_tree);
					}

					PARSER_SYM1625=(Token)match(input,PARSER_SYM,FOLLOW_PARSER_SYM_in_index_option31322); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					PARSER_SYM1625_tree = (Object)adaptor.create(PARSER_SYM1625);
					adaptor.addChild(root_0, PARSER_SYM1625_tree);
					}

					pushFollow(FOLLOW_parser_name_in_index_option31324);
					parser_name1626=parser_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, parser_name1626.getTree());

					}

					}
					break;
				case 4 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2275:5: ( COMMENT_SYM TEXT_STRING )
					{
					root_0 = (Object)adaptor.nil();


					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2275:5: ( COMMENT_SYM TEXT_STRING )
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2275:7: COMMENT_SYM TEXT_STRING
					{
					COMMENT_SYM1627=(Token)match(input,COMMENT_SYM,FOLLOW_COMMENT_SYM_in_index_option31334); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMENT_SYM1627_tree = (Object)adaptor.create(COMMENT_SYM1627);
					adaptor.addChild(root_0, COMMENT_SYM1627_tree);
					}

					TEXT_STRING1628=(Token)match(input,TEXT_STRING,FOLLOW_TEXT_STRING_in_index_option31336); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEXT_STRING1628_tree = (Object)adaptor.create(TEXT_STRING1628);
					adaptor.addChild(root_0, TEXT_STRING1628_tree);
					}

					}

					}
					break;

			}
			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "index_option"


	public static class column_definitions_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "column_definitions"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2277:1: column_definitions : column_name column_definition ( COMMA column_name column_definition )* ;
	public final SQLParser.column_definitions_return column_definitions() throws RecognitionException {
		SQLParser.column_definitions_return retval = new SQLParser.column_definitions_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token COMMA1631=null;
		ParserRuleReturnScope column_name1629 =null;
		ParserRuleReturnScope column_definition1630 =null;
		ParserRuleReturnScope column_name1632 =null;
		ParserRuleReturnScope column_definition1633 =null;

		Object COMMA1631_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2277:19: ( column_name column_definition ( COMMA column_name column_definition )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2278:3: column_name column_definition ( COMMA column_name column_definition )*
			{
			root_0 = (Object)adaptor.nil();


			pushFollow(FOLLOW_column_name_in_column_definitions31347);
			column_name1629=column_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, column_name1629.getTree());

			pushFollow(FOLLOW_column_definition_in_column_definitions31349);
			column_definition1630=column_definition();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, column_definition1630.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2278:33: ( COMMA column_name column_definition )*
			loop549:
			while (true) {
				int alt549=2;
				int LA549_0 = input.LA(1);
				if ( (LA549_0==COMMA) ) {
					alt549=1;
				}

				switch (alt549) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2278:34: COMMA column_name column_definition
					{
					COMMA1631=(Token)match(input,COMMA,FOLLOW_COMMA_in_column_definitions31352); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA1631_tree = (Object)adaptor.create(COMMA1631);
					adaptor.addChild(root_0, COMMA1631_tree);
					}

					pushFollow(FOLLOW_column_name_in_column_definitions31354);
					column_name1632=column_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_name1632.getTree());

					pushFollow(FOLLOW_column_definition_in_column_definitions31356);
					column_definition1633=column_definition();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_definition1633.getTree());

					}
					break;

				default :
					break loop549;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "column_definitions"


	public static class rename_table_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "rename_table_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2283:1: rename_table_statement : RENAME TABLE table_name TO_SYM table_name ( COMMA table_name TO_SYM table_name )* ;
	public final SQLParser.rename_table_statement_return rename_table_statement() throws RecognitionException {
		SQLParser.rename_table_statement_return retval = new SQLParser.rename_table_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token RENAME1634=null;
		Token TABLE1635=null;
		Token TO_SYM1637=null;
		Token COMMA1639=null;
		Token TO_SYM1641=null;
		ParserRuleReturnScope table_name1636 =null;
		ParserRuleReturnScope table_name1638 =null;
		ParserRuleReturnScope table_name1640 =null;
		ParserRuleReturnScope table_name1642 =null;

		Object RENAME1634_tree=null;
		Object TABLE1635_tree=null;
		Object TO_SYM1637_tree=null;
		Object COMMA1639_tree=null;
		Object TO_SYM1641_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2283:23: ( RENAME TABLE table_name TO_SYM table_name ( COMMA table_name TO_SYM table_name )* )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2284:3: RENAME TABLE table_name TO_SYM table_name ( COMMA table_name TO_SYM table_name )*
			{
			root_0 = (Object)adaptor.nil();


			RENAME1634=(Token)match(input,RENAME,FOLLOW_RENAME_in_rename_table_statement31370); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			RENAME1634_tree = (Object)adaptor.create(RENAME1634);
			adaptor.addChild(root_0, RENAME1634_tree);
			}

			TABLE1635=(Token)match(input,TABLE,FOLLOW_TABLE_in_rename_table_statement31372); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			TABLE1635_tree = (Object)adaptor.create(TABLE1635);
			adaptor.addChild(root_0, TABLE1635_tree);
			}

			pushFollow(FOLLOW_table_name_in_rename_table_statement31377);
			table_name1636=table_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name1636.getTree());

			TO_SYM1637=(Token)match(input,TO_SYM,FOLLOW_TO_SYM_in_rename_table_statement31379); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			TO_SYM1637_tree = (Object)adaptor.create(TO_SYM1637);
			adaptor.addChild(root_0, TO_SYM1637_tree);
			}

			pushFollow(FOLLOW_table_name_in_rename_table_statement31381);
			table_name1638=table_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name1638.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2286:3: ( COMMA table_name TO_SYM table_name )*
			loop550:
			while (true) {
				int alt550=2;
				int LA550_0 = input.LA(1);
				if ( (LA550_0==COMMA) ) {
					int LA550_2 = input.LA(2);
					if ( (LA550_2==ID) ) {
						alt550=1;
					}

				}

				switch (alt550) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2286:4: COMMA table_name TO_SYM table_name
					{
					COMMA1639=(Token)match(input,COMMA,FOLLOW_COMMA_in_rename_table_statement31386); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA1639_tree = (Object)adaptor.create(COMMA1639);
					adaptor.addChild(root_0, COMMA1639_tree);
					}

					pushFollow(FOLLOW_table_name_in_rename_table_statement31388);
					table_name1640=table_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name1640.getTree());

					TO_SYM1641=(Token)match(input,TO_SYM,FOLLOW_TO_SYM_in_rename_table_statement31390); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TO_SYM1641_tree = (Object)adaptor.create(TO_SYM1641);
					adaptor.addChild(root_0, TO_SYM1641_tree);
					}

					pushFollow(FOLLOW_table_name_in_rename_table_statement31392);
					table_name1642=table_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name1642.getTree());

					}
					break;

				default :
					break loop550;
				}
			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "rename_table_statement"


	public static class drop_table_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "drop_table_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2291:1: drop_table_statement : DROP ( TEMPORARY )? TABLE ( IF EXISTS )? table_name ( COMMA table_name )* ( RESTRICT | CASCADE )? ;
	public final SQLParser.drop_table_statement_return drop_table_statement() throws RecognitionException {
		SQLParser.drop_table_statement_return retval = new SQLParser.drop_table_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token DROP1643=null;
		Token TEMPORARY1644=null;
		Token TABLE1645=null;
		Token IF1646=null;
		Token EXISTS1647=null;
		Token COMMA1649=null;
		Token set1651=null;
		ParserRuleReturnScope table_name1648 =null;
		ParserRuleReturnScope table_name1650 =null;

		Object DROP1643_tree=null;
		Object TEMPORARY1644_tree=null;
		Object TABLE1645_tree=null;
		Object IF1646_tree=null;
		Object EXISTS1647_tree=null;
		Object COMMA1649_tree=null;
		Object set1651_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2291:21: ( DROP ( TEMPORARY )? TABLE ( IF EXISTS )? table_name ( COMMA table_name )* ( RESTRICT | CASCADE )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2292:3: DROP ( TEMPORARY )? TABLE ( IF EXISTS )? table_name ( COMMA table_name )* ( RESTRICT | CASCADE )?
			{
			root_0 = (Object)adaptor.nil();


			DROP1643=(Token)match(input,DROP,FOLLOW_DROP_in_drop_table_statement31406); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			DROP1643_tree = (Object)adaptor.create(DROP1643);
			adaptor.addChild(root_0, DROP1643_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2292:8: ( TEMPORARY )?
			int alt551=2;
			int LA551_0 = input.LA(1);
			if ( (LA551_0==TEMPORARY) ) {
				alt551=1;
			}
			switch (alt551) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2292:9: TEMPORARY
					{
					TEMPORARY1644=(Token)match(input,TEMPORARY,FOLLOW_TEMPORARY_in_drop_table_statement31409); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TEMPORARY1644_tree = (Object)adaptor.create(TEMPORARY1644);
					adaptor.addChild(root_0, TEMPORARY1644_tree);
					}

					}
					break;

			}

			TABLE1645=(Token)match(input,TABLE,FOLLOW_TABLE_in_drop_table_statement31413); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			TABLE1645_tree = (Object)adaptor.create(TABLE1645);
			adaptor.addChild(root_0, TABLE1645_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2292:27: ( IF EXISTS )?
			int alt552=2;
			int LA552_0 = input.LA(1);
			if ( (LA552_0==IF) ) {
				alt552=1;
			}
			switch (alt552) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2292:28: IF EXISTS
					{
					IF1646=(Token)match(input,IF,FOLLOW_IF_in_drop_table_statement31416); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IF1646_tree = (Object)adaptor.create(IF1646);
					adaptor.addChild(root_0, IF1646_tree);
					}

					EXISTS1647=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_drop_table_statement31418); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EXISTS1647_tree = (Object)adaptor.create(EXISTS1647);
					adaptor.addChild(root_0, EXISTS1647_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_table_name_in_drop_table_statement31424);
			table_name1648=table_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name1648.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2293:14: ( COMMA table_name )*
			loop553:
			while (true) {
				int alt553=2;
				int LA553_0 = input.LA(1);
				if ( (LA553_0==COMMA) ) {
					int LA553_2 = input.LA(2);
					if ( (LA553_2==ID) ) {
						alt553=1;
					}

				}

				switch (alt553) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2293:15: COMMA table_name
					{
					COMMA1649=(Token)match(input,COMMA,FOLLOW_COMMA_in_drop_table_statement31427); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA1649_tree = (Object)adaptor.create(COMMA1649);
					adaptor.addChild(root_0, COMMA1649_tree);
					}

					pushFollow(FOLLOW_table_name_in_drop_table_statement31429);
					table_name1650=table_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name1650.getTree());

					}
					break;

				default :
					break loop553;
				}
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2294:3: ( RESTRICT | CASCADE )?
			int alt554=2;
			int LA554_0 = input.LA(1);
			if ( (LA554_0==CASCADE||LA554_0==RESTRICT) ) {
				alt554=1;
			}
			switch (alt554) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
					{
					set1651=input.LT(1);
					if ( input.LA(1)==CASCADE||input.LA(1)==RESTRICT ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1651));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_table_statement"


	public static class truncate_table_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "truncate_table_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2299:1: truncate_table_statement : TRUNCATE ( TABLE )? table_name ;
	public final SQLParser.truncate_table_statement_return truncate_table_statement() throws RecognitionException {
		SQLParser.truncate_table_statement_return retval = new SQLParser.truncate_table_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token TRUNCATE1652=null;
		Token TABLE1653=null;
		ParserRuleReturnScope table_name1654 =null;

		Object TRUNCATE1652_tree=null;
		Object TABLE1653_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2299:25: ( TRUNCATE ( TABLE )? table_name )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2300:3: TRUNCATE ( TABLE )? table_name
			{
			root_0 = (Object)adaptor.nil();


			TRUNCATE1652=(Token)match(input,TRUNCATE,FOLLOW_TRUNCATE_in_truncate_table_statement31454); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			TRUNCATE1652_tree = (Object)adaptor.create(TRUNCATE1652);
			adaptor.addChild(root_0, TRUNCATE1652_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2300:12: ( TABLE )?
			int alt555=2;
			int LA555_0 = input.LA(1);
			if ( (LA555_0==TABLE) ) {
				alt555=1;
			}
			switch (alt555) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2300:13: TABLE
					{
					TABLE1653=(Token)match(input,TABLE,FOLLOW_TABLE_in_truncate_table_statement31457); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					TABLE1653_tree = (Object)adaptor.create(TABLE1653);
					adaptor.addChild(root_0, TABLE1653_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_table_name_in_truncate_table_statement31461);
			table_name1654=table_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, table_name1654.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "truncate_table_statement"


	public static class create_view_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "create_view_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2325:1: create_view_statement : CREATE ( OR_SYM REPLACE )? create_view_body ;
	public final SQLParser.create_view_statement_return create_view_statement() throws RecognitionException {
		SQLParser.create_view_statement_return retval = new SQLParser.create_view_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token CREATE1655=null;
		Token OR_SYM1656=null;
		Token REPLACE1657=null;
		ParserRuleReturnScope create_view_body1658 =null;

		Object CREATE1655_tree=null;
		Object OR_SYM1656_tree=null;
		Object REPLACE1657_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2325:22: ( CREATE ( OR_SYM REPLACE )? create_view_body )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2326:3: CREATE ( OR_SYM REPLACE )? create_view_body
			{
			root_0 = (Object)adaptor.nil();


			CREATE1655=(Token)match(input,CREATE,FOLLOW_CREATE_in_create_view_statement31482); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			CREATE1655_tree = (Object)adaptor.create(CREATE1655);
			adaptor.addChild(root_0, CREATE1655_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2326:10: ( OR_SYM REPLACE )?
			int alt556=2;
			int LA556_0 = input.LA(1);
			if ( (LA556_0==OR_SYM) ) {
				alt556=1;
			}
			switch (alt556) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2326:11: OR_SYM REPLACE
					{
					OR_SYM1656=(Token)match(input,OR_SYM,FOLLOW_OR_SYM_in_create_view_statement31485); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					OR_SYM1656_tree = (Object)adaptor.create(OR_SYM1656);
					adaptor.addChild(root_0, OR_SYM1656_tree);
					}

					REPLACE1657=(Token)match(input,REPLACE,FOLLOW_REPLACE_in_create_view_statement31487); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					REPLACE1657_tree = (Object)adaptor.create(REPLACE1657);
					adaptor.addChild(root_0, REPLACE1657_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_create_view_body_in_create_view_statement31493);
			create_view_body1658=create_view_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, create_view_body1658.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_view_statement"


	public static class create_view_body_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "create_view_body"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2329:1: create_view_body : ( ALGORITHM_SYM EQ_SYM ( UNDEFINED_SYM | MERGE_SYM | TEMPTABLE_SYM ) )? ( DEFINER EQ_SYM ( user_name | CURRENT_USER ) )? ( SQL_SYM SECURITY_SYM ( DEFINER | INVOKER_SYM ) )? VIEW_SYM view_name ( LPAREN column_list RPAREN )? AS_SYM select_statement ( WITH ( CASCADED | LOCAL_SYM )? CHECK_SYM OPTION )? ;
	public final SQLParser.create_view_body_return create_view_body() throws RecognitionException {
		SQLParser.create_view_body_return retval = new SQLParser.create_view_body_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token ALGORITHM_SYM1659=null;
		Token EQ_SYM1660=null;
		Token set1661=null;
		Token DEFINER1662=null;
		Token EQ_SYM1663=null;
		Token CURRENT_USER1665=null;
		Token SQL_SYM1666=null;
		Token SECURITY_SYM1667=null;
		Token set1668=null;
		Token VIEW_SYM1669=null;
		Token LPAREN1671=null;
		Token RPAREN1673=null;
		Token AS_SYM1674=null;
		Token WITH1676=null;
		Token set1677=null;
		Token CHECK_SYM1678=null;
		Token OPTION1679=null;
		ParserRuleReturnScope user_name1664 =null;
		ParserRuleReturnScope view_name1670 =null;
		ParserRuleReturnScope column_list1672 =null;
		ParserRuleReturnScope select_statement1675 =null;

		Object ALGORITHM_SYM1659_tree=null;
		Object EQ_SYM1660_tree=null;
		Object set1661_tree=null;
		Object DEFINER1662_tree=null;
		Object EQ_SYM1663_tree=null;
		Object CURRENT_USER1665_tree=null;
		Object SQL_SYM1666_tree=null;
		Object SECURITY_SYM1667_tree=null;
		Object set1668_tree=null;
		Object VIEW_SYM1669_tree=null;
		Object LPAREN1671_tree=null;
		Object RPAREN1673_tree=null;
		Object AS_SYM1674_tree=null;
		Object WITH1676_tree=null;
		Object set1677_tree=null;
		Object CHECK_SYM1678_tree=null;
		Object OPTION1679_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2329:17: ( ( ALGORITHM_SYM EQ_SYM ( UNDEFINED_SYM | MERGE_SYM | TEMPTABLE_SYM ) )? ( DEFINER EQ_SYM ( user_name | CURRENT_USER ) )? ( SQL_SYM SECURITY_SYM ( DEFINER | INVOKER_SYM ) )? VIEW_SYM view_name ( LPAREN column_list RPAREN )? AS_SYM select_statement ( WITH ( CASCADED | LOCAL_SYM )? CHECK_SYM OPTION )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2330:3: ( ALGORITHM_SYM EQ_SYM ( UNDEFINED_SYM | MERGE_SYM | TEMPTABLE_SYM ) )? ( DEFINER EQ_SYM ( user_name | CURRENT_USER ) )? ( SQL_SYM SECURITY_SYM ( DEFINER | INVOKER_SYM ) )? VIEW_SYM view_name ( LPAREN column_list RPAREN )? AS_SYM select_statement ( WITH ( CASCADED | LOCAL_SYM )? CHECK_SYM OPTION )?
			{
			root_0 = (Object)adaptor.nil();


			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2330:3: ( ALGORITHM_SYM EQ_SYM ( UNDEFINED_SYM | MERGE_SYM | TEMPTABLE_SYM ) )?
			int alt557=2;
			int LA557_0 = input.LA(1);
			if ( (LA557_0==ALGORITHM_SYM) ) {
				alt557=1;
			}
			switch (alt557) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2330:4: ALGORITHM_SYM EQ_SYM ( UNDEFINED_SYM | MERGE_SYM | TEMPTABLE_SYM )
					{
					ALGORITHM_SYM1659=(Token)match(input,ALGORITHM_SYM,FOLLOW_ALGORITHM_SYM_in_create_view_body31503); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					ALGORITHM_SYM1659_tree = (Object)adaptor.create(ALGORITHM_SYM1659);
					adaptor.addChild(root_0, ALGORITHM_SYM1659_tree);
					}

					EQ_SYM1660=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_create_view_body31505); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EQ_SYM1660_tree = (Object)adaptor.create(EQ_SYM1660);
					adaptor.addChild(root_0, EQ_SYM1660_tree);
					}

					set1661=input.LT(1);
					if ( input.LA(1)==MERGE_SYM||input.LA(1)==TEMPTABLE_SYM||input.LA(1)==UNDEFINED_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1661));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2331:3: ( DEFINER EQ_SYM ( user_name | CURRENT_USER ) )?
			int alt559=2;
			int LA559_0 = input.LA(1);
			if ( (LA559_0==DEFINER) ) {
				alt559=1;
			}
			switch (alt559) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2331:4: DEFINER EQ_SYM ( user_name | CURRENT_USER )
					{
					DEFINER1662=(Token)match(input,DEFINER,FOLLOW_DEFINER_in_create_view_body31524); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					DEFINER1662_tree = (Object)adaptor.create(DEFINER1662);
					adaptor.addChild(root_0, DEFINER1662_tree);
					}

					EQ_SYM1663=(Token)match(input,EQ_SYM,FOLLOW_EQ_SYM_in_create_view_body31526); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EQ_SYM1663_tree = (Object)adaptor.create(EQ_SYM1663);
					adaptor.addChild(root_0, EQ_SYM1663_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2331:19: ( user_name | CURRENT_USER )
					int alt558=2;
					int LA558_0 = input.LA(1);
					if ( (LA558_0==ID) ) {
						alt558=1;
					}
					else if ( (LA558_0==CURRENT_USER) ) {
						alt558=2;
					}

					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						NoViableAltException nvae =
							new NoViableAltException("", 558, 0, input);
						throw nvae;
					}

					switch (alt558) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2331:20: user_name
							{
							pushFollow(FOLLOW_user_name_in_create_view_body31529);
							user_name1664=user_name();
							state._fsp--;
							if (state.failed) return retval;
							if ( state.backtracking==0 ) adaptor.addChild(root_0, user_name1664.getTree());

							}
							break;
						case 2 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2331:32: CURRENT_USER
							{
							CURRENT_USER1665=(Token)match(input,CURRENT_USER,FOLLOW_CURRENT_USER_in_create_view_body31533); if (state.failed) return retval;
							if ( state.backtracking==0 ) {
							CURRENT_USER1665_tree = (Object)adaptor.create(CURRENT_USER1665);
							adaptor.addChild(root_0, CURRENT_USER1665_tree);
							}

							}
							break;

					}

					}
					break;

			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2332:3: ( SQL_SYM SECURITY_SYM ( DEFINER | INVOKER_SYM ) )?
			int alt560=2;
			int LA560_0 = input.LA(1);
			if ( (LA560_0==SQL_SYM) ) {
				alt560=1;
			}
			switch (alt560) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2332:4: SQL_SYM SECURITY_SYM ( DEFINER | INVOKER_SYM )
					{
					SQL_SYM1666=(Token)match(input,SQL_SYM,FOLLOW_SQL_SYM_in_create_view_body31542); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SQL_SYM1666_tree = (Object)adaptor.create(SQL_SYM1666);
					adaptor.addChild(root_0, SQL_SYM1666_tree);
					}

					SECURITY_SYM1667=(Token)match(input,SECURITY_SYM,FOLLOW_SECURITY_SYM_in_create_view_body31544); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					SECURITY_SYM1667_tree = (Object)adaptor.create(SECURITY_SYM1667);
					adaptor.addChild(root_0, SECURITY_SYM1667_tree);
					}

					set1668=input.LT(1);
					if ( input.LA(1)==DEFINER||input.LA(1)==INVOKER_SYM ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1668));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			VIEW_SYM1669=(Token)match(input,VIEW_SYM,FOLLOW_VIEW_SYM_in_create_view_body31560); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			VIEW_SYM1669_tree = (Object)adaptor.create(VIEW_SYM1669);
			adaptor.addChild(root_0, VIEW_SYM1669_tree);
			}

			pushFollow(FOLLOW_view_name_in_create_view_body31562);
			view_name1670=view_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, view_name1670.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2333:22: ( LPAREN column_list RPAREN )?
			int alt561=2;
			int LA561_0 = input.LA(1);
			if ( (LA561_0==LPAREN) ) {
				alt561=1;
			}
			switch (alt561) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2333:23: LPAREN column_list RPAREN
					{
					LPAREN1671=(Token)match(input,LPAREN,FOLLOW_LPAREN_in_create_view_body31565); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					LPAREN1671_tree = (Object)adaptor.create(LPAREN1671);
					adaptor.addChild(root_0, LPAREN1671_tree);
					}

					pushFollow(FOLLOW_column_list_in_create_view_body31567);
					column_list1672=column_list();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, column_list1672.getTree());

					RPAREN1673=(Token)match(input,RPAREN,FOLLOW_RPAREN_in_create_view_body31569); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					RPAREN1673_tree = (Object)adaptor.create(RPAREN1673);
					adaptor.addChild(root_0, RPAREN1673_tree);
					}

					}
					break;

			}

			AS_SYM1674=(Token)match(input,AS_SYM,FOLLOW_AS_SYM_in_create_view_body31575); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			AS_SYM1674_tree = (Object)adaptor.create(AS_SYM1674);
			adaptor.addChild(root_0, AS_SYM1674_tree);
			}

			pushFollow(FOLLOW_select_statement_in_create_view_body31577);
			select_statement1675=select_statement();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, select_statement1675.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2335:3: ( WITH ( CASCADED | LOCAL_SYM )? CHECK_SYM OPTION )?
			int alt563=2;
			int LA563_0 = input.LA(1);
			if ( (LA563_0==WITH) ) {
				alt563=1;
			}
			switch (alt563) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2335:4: WITH ( CASCADED | LOCAL_SYM )? CHECK_SYM OPTION
					{
					WITH1676=(Token)match(input,WITH,FOLLOW_WITH_in_create_view_body31582); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					WITH1676_tree = (Object)adaptor.create(WITH1676);
					adaptor.addChild(root_0, WITH1676_tree);
					}

					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2335:9: ( CASCADED | LOCAL_SYM )?
					int alt562=2;
					int LA562_0 = input.LA(1);
					if ( (LA562_0==CASCADED||LA562_0==LOCAL_SYM) ) {
						alt562=1;
					}
					switch (alt562) {
						case 1 :
							// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
							{
							set1677=input.LT(1);
							if ( input.LA(1)==CASCADED||input.LA(1)==LOCAL_SYM ) {
								input.consume();
								if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1677));
								state.errorRecovery=false;
								state.failed=false;
							}
							else {
								if (state.backtracking>0) {state.failed=true; return retval;}
								MismatchedSetException mse = new MismatchedSetException(null,input);
								throw mse;
							}
							}
							break;

					}

					CHECK_SYM1678=(Token)match(input,CHECK_SYM,FOLLOW_CHECK_SYM_in_create_view_body31593); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					CHECK_SYM1678_tree = (Object)adaptor.create(CHECK_SYM1678);
					adaptor.addChild(root_0, CHECK_SYM1678_tree);
					}

					OPTION1679=(Token)match(input,OPTION,FOLLOW_OPTION_in_create_view_body31595); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					OPTION1679_tree = (Object)adaptor.create(OPTION1679);
					adaptor.addChild(root_0, OPTION1679_tree);
					}

					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_view_body"


	public static class alter_view_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "alter_view_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2340:1: alter_view_statement : ALTER create_view_body ;
	public final SQLParser.alter_view_statement_return alter_view_statement() throws RecognitionException {
		SQLParser.alter_view_statement_return retval = new SQLParser.alter_view_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token ALTER1680=null;
		ParserRuleReturnScope create_view_body1681 =null;

		Object ALTER1680_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2340:21: ( ALTER create_view_body )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2341:3: ALTER create_view_body
			{
			root_0 = (Object)adaptor.nil();


			ALTER1680=(Token)match(input,ALTER,FOLLOW_ALTER_in_alter_view_statement31609); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			ALTER1680_tree = (Object)adaptor.create(ALTER1680);
			adaptor.addChild(root_0, ALTER1680_tree);
			}

			pushFollow(FOLLOW_create_view_body_in_alter_view_statement31613);
			create_view_body1681=create_view_body();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, create_view_body1681.getTree());

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_view_statement"


	public static class drop_view_statement_return extends ParserRuleReturnScope {
		Object tree;
		@Override
		public Object getTree() { return tree; }
	};


	// $ANTLR start "drop_view_statement"
	// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2347:1: drop_view_statement : DROP VIEW_SYM ( IF EXISTS )? view_name ( COMMA view_name )* ( RESTRICT | CASCADE )? ;
	public final SQLParser.drop_view_statement_return drop_view_statement() throws RecognitionException {
		SQLParser.drop_view_statement_return retval = new SQLParser.drop_view_statement_return();
		retval.start = input.LT(1);

		Object root_0 = null;

		Token DROP1682=null;
		Token VIEW_SYM1683=null;
		Token IF1684=null;
		Token EXISTS1685=null;
		Token COMMA1687=null;
		Token set1689=null;
		ParserRuleReturnScope view_name1686 =null;
		ParserRuleReturnScope view_name1688 =null;

		Object DROP1682_tree=null;
		Object VIEW_SYM1683_tree=null;
		Object IF1684_tree=null;
		Object EXISTS1685_tree=null;
		Object COMMA1687_tree=null;
		Object set1689_tree=null;

		try {
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2347:20: ( DROP VIEW_SYM ( IF EXISTS )? view_name ( COMMA view_name )* ( RESTRICT | CASCADE )? )
			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2348:3: DROP VIEW_SYM ( IF EXISTS )? view_name ( COMMA view_name )* ( RESTRICT | CASCADE )?
			{
			root_0 = (Object)adaptor.nil();


			DROP1682=(Token)match(input,DROP,FOLLOW_DROP_in_drop_view_statement31625); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			DROP1682_tree = (Object)adaptor.create(DROP1682);
			adaptor.addChild(root_0, DROP1682_tree);
			}

			VIEW_SYM1683=(Token)match(input,VIEW_SYM,FOLLOW_VIEW_SYM_in_drop_view_statement31627); if (state.failed) return retval;
			if ( state.backtracking==0 ) {
			VIEW_SYM1683_tree = (Object)adaptor.create(VIEW_SYM1683);
			adaptor.addChild(root_0, VIEW_SYM1683_tree);
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2348:17: ( IF EXISTS )?
			int alt564=2;
			int LA564_0 = input.LA(1);
			if ( (LA564_0==IF) ) {
				alt564=1;
			}
			switch (alt564) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2348:18: IF EXISTS
					{
					IF1684=(Token)match(input,IF,FOLLOW_IF_in_drop_view_statement31630); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					IF1684_tree = (Object)adaptor.create(IF1684);
					adaptor.addChild(root_0, IF1684_tree);
					}

					EXISTS1685=(Token)match(input,EXISTS,FOLLOW_EXISTS_in_drop_view_statement31632); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					EXISTS1685_tree = (Object)adaptor.create(EXISTS1685);
					adaptor.addChild(root_0, EXISTS1685_tree);
					}

					}
					break;

			}

			pushFollow(FOLLOW_view_name_in_drop_view_statement31638);
			view_name1686=view_name();
			state._fsp--;
			if (state.failed) return retval;
			if ( state.backtracking==0 ) adaptor.addChild(root_0, view_name1686.getTree());

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2349:13: ( COMMA view_name )*
			loop565:
			while (true) {
				int alt565=2;
				int LA565_0 = input.LA(1);
				if ( (LA565_0==COMMA) ) {
					int LA565_2 = input.LA(2);
					if ( (LA565_2==ID) ) {
						alt565=1;
					}

				}

				switch (alt565) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2349:14: COMMA view_name
					{
					COMMA1687=(Token)match(input,COMMA,FOLLOW_COMMA_in_drop_view_statement31641); if (state.failed) return retval;
					if ( state.backtracking==0 ) {
					COMMA1687_tree = (Object)adaptor.create(COMMA1687);
					adaptor.addChild(root_0, COMMA1687_tree);
					}

					pushFollow(FOLLOW_view_name_in_drop_view_statement31643);
					view_name1688=view_name();
					state._fsp--;
					if (state.failed) return retval;
					if ( state.backtracking==0 ) adaptor.addChild(root_0, view_name1688.getTree());

					}
					break;

				default :
					break loop565;
				}
			}

			// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2350:3: ( RESTRICT | CASCADE )?
			int alt566=2;
			int LA566_0 = input.LA(1);
			if ( (LA566_0==CASCADE||LA566_0==RESTRICT) ) {
				alt566=1;
			}
			switch (alt566) {
				case 1 :
					// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:
					{
					set1689=input.LT(1);
					if ( input.LA(1)==CASCADE||input.LA(1)==RESTRICT ) {
						input.consume();
						if ( state.backtracking==0 ) adaptor.addChild(root_0, (Object)adaptor.create(set1689));
						state.errorRecovery=false;
						state.failed=false;
					}
					else {
						if (state.backtracking>0) {state.failed=true; return retval;}
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					}
					break;

			}

			}

			retval.stop = input.LT(-1);

			if ( state.backtracking==0 ) {
			retval.tree = (Object)adaptor.rulePostProcessing(root_0);
			adaptor.setTokenBoundaries(retval.tree, retval.start, retval.stop);
			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
			retval.tree = (Object)adaptor.errorNode(input, retval.start, input.LT(-1), re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_view_statement"

	// $ANTLR start synpred54_SQL
	public final void synpred54_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:979:3: ( ( IN_SYM NATURAL LANGUAGE MODE_SYM ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:979:3: ( IN_SYM NATURAL LANGUAGE MODE_SYM )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:979:3: ( IN_SYM NATURAL LANGUAGE MODE_SYM )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:979:4: IN_SYM NATURAL LANGUAGE MODE_SYM
		{
		match(input,IN_SYM,FOLLOW_IN_SYM_in_synpred54_SQL20748); if (state.failed) return;

		match(input,NATURAL,FOLLOW_NATURAL_in_synpred54_SQL20750); if (state.failed) return;

		match(input,LANGUAGE,FOLLOW_LANGUAGE_in_synpred54_SQL20752); if (state.failed) return;

		match(input,MODE_SYM,FOLLOW_MODE_SYM_in_synpred54_SQL20754); if (state.failed) return;

		}

		}

	}
	// $ANTLR end synpred54_SQL

	// $ANTLR start synpred55_SQL
	public final void synpred55_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:980:5: ( ( IN_SYM NATURAL LANGUAGE MODE_SYM WITH QUERY_SYM EXPANSION_SYM ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:980:5: ( IN_SYM NATURAL LANGUAGE MODE_SYM WITH QUERY_SYM EXPANSION_SYM )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:980:5: ( IN_SYM NATURAL LANGUAGE MODE_SYM WITH QUERY_SYM EXPANSION_SYM )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:980:6: IN_SYM NATURAL LANGUAGE MODE_SYM WITH QUERY_SYM EXPANSION_SYM
		{
		match(input,IN_SYM,FOLLOW_IN_SYM_in_synpred55_SQL20762); if (state.failed) return;

		match(input,NATURAL,FOLLOW_NATURAL_in_synpred55_SQL20764); if (state.failed) return;

		match(input,LANGUAGE,FOLLOW_LANGUAGE_in_synpred55_SQL20766); if (state.failed) return;

		match(input,MODE_SYM,FOLLOW_MODE_SYM_in_synpred55_SQL20768); if (state.failed) return;

		match(input,WITH,FOLLOW_WITH_in_synpred55_SQL20770); if (state.failed) return;

		match(input,QUERY_SYM,FOLLOW_QUERY_SYM_in_synpred55_SQL20772); if (state.failed) return;

		match(input,EXPANSION_SYM,FOLLOW_EXPANSION_SYM_in_synpred55_SQL20774); if (state.failed) return;

		}

		}

	}
	// $ANTLR end synpred55_SQL

	// $ANTLR start synpred87_SQL
	public final void synpred87_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1040:5: ( char_functions )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1040:5: char_functions
		{
		pushFollow(FOLLOW_char_functions_in_synpred87_SQL21087);
		char_functions();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred87_SQL

	// $ANTLR start synpred268_SQL
	public final void synpred268_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1241:27: ( OR_SYM exp_factor1 )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1241:27: OR_SYM exp_factor1
		{
		match(input,OR_SYM,FOLLOW_OR_SYM_in_synpred268_SQL22519); if (state.failed) return;

		pushFollow(FOLLOW_exp_factor1_in_synpred268_SQL22523);
		exp_factor1();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred268_SQL

	// $ANTLR start synpred269_SQL
	public final void synpred269_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1242:29: ( XOR exp_factor2 )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1242:29: XOR exp_factor2
		{
		match(input,XOR,FOLLOW_XOR_in_synpred269_SQL22538); if (state.failed) return;

		pushFollow(FOLLOW_exp_factor2_in_synpred269_SQL22542);
		exp_factor2();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred269_SQL

	// $ANTLR start synpred270_SQL
	public final void synpred270_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1243:29: ( AND_SYM exp_factor3 )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1243:29: AND_SYM exp_factor3
		{
		match(input,AND_SYM,FOLLOW_AND_SYM_in_synpred270_SQL22557); if (state.failed) return;

		pushFollow(FOLLOW_exp_factor3_in_synpred270_SQL22561);
		exp_factor3();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred270_SQL

	// $ANTLR start synpred271_SQL
	public final void synpred271_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1244:16: ( NOT_SYM )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1244:16: NOT_SYM
		{
		match(input,NOT_SYM,FOLLOW_NOT_SYM_in_synpred271_SQL22573); if (state.failed) return;

		}

	}
	// $ANTLR end synpred271_SQL

	// $ANTLR start synpred274_SQL
	public final void synpred274_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:30: ( ( IS_SYM ( NOT_SYM )? ) ( boolean_literal | NULL_SYM ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:30: ( IS_SYM ( NOT_SYM )? ) ( boolean_literal | NULL_SYM )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:30: ( IS_SYM ( NOT_SYM )? )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:31: IS_SYM ( NOT_SYM )?
		{
		match(input,IS_SYM,FOLLOW_IS_SYM_in_synpred274_SQL22592); if (state.failed) return;

		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:38: ( NOT_SYM )?
		int alt573=2;
		int LA573_0 = input.LA(1);
		if ( (LA573_0==NOT_SYM) ) {
			alt573=1;
		}
		switch (alt573) {
			case 1 :
				// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:39: NOT_SYM
				{
				match(input,NOT_SYM,FOLLOW_NOT_SYM_in_synpred274_SQL22595); if (state.failed) return;

				}
				break;

		}

		}

		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:51: ( boolean_literal | NULL_SYM )
		int alt574=2;
		int LA574_0 = input.LA(1);
		if ( (LA574_0==FALSE_SYM||LA574_0==TRUE_SYM) ) {
			alt574=1;
		}
		else if ( (LA574_0==NULL_SYM) ) {
			alt574=2;
		}

		else {
			if (state.backtracking>0) {state.failed=true; return;}
			NoViableAltException nvae =
				new NoViableAltException("", 574, 0, input);
			throw nvae;
		}

		switch (alt574) {
			case 1 :
				// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:52: boolean_literal
				{
				pushFollow(FOLLOW_boolean_literal_in_synpred274_SQL22602);
				boolean_literal();
				state._fsp--;
				if (state.failed) return;

				}
				break;
			case 2 :
				// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1245:68: NULL_SYM
				{
				match(input,NULL_SYM,FOLLOW_NULL_SYM_in_synpred274_SQL22604); if (state.failed) return;

				}
				break;

		}

		}

	}
	// $ANTLR end synpred274_SQL

	// $ANTLR start synpred275_SQL
	public final void synpred275_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1247:5: ( ( predicate relational_op predicate ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1247:5: ( predicate relational_op predicate )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1247:5: ( predicate relational_op predicate )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1247:7: predicate relational_op predicate
		{
		pushFollow(FOLLOW_predicate_in_synpred275_SQL22621);
		predicate();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_relational_op_in_synpred275_SQL22623);
		relational_op();
		state._fsp--;
		if (state.failed) return;

		pushFollow(FOLLOW_predicate_in_synpred275_SQL22625);
		predicate();
		state._fsp--;
		if (state.failed) return;

		}

		}

	}
	// $ANTLR end synpred275_SQL

	// $ANTLR start synpred276_SQL
	public final void synpred276_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1250:5: ( ( EXISTS subquery ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1250:5: ( EXISTS subquery )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1250:5: ( EXISTS subquery )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1250:7: EXISTS subquery
		{
		match(input,EXISTS,FOLLOW_EXISTS_in_synpred276_SQL22651); if (state.failed) return;

		pushFollow(FOLLOW_subquery_in_synpred276_SQL22653);
		subquery();
		state._fsp--;
		if (state.failed) return;

		}

		}

	}
	// $ANTLR end synpred276_SQL

	// $ANTLR start synpred278_SQL
	public final void synpred278_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1255:5: ( ( predicate_in ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1255:5: ( predicate_in )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1255:5: ( predicate_in )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1255:6: predicate_in
		{
		pushFollow(FOLLOW_predicate_in_in_synpred278_SQL22711);
		predicate_in();
		state._fsp--;
		if (state.failed) return;

		}

		}

	}
	// $ANTLR end synpred278_SQL

	// $ANTLR start synpred279_SQL
	public final void synpred279_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1256:5: ( ( predicate_like ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1256:5: ( predicate_like )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1256:5: ( predicate_like )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1256:6: predicate_like
		{
		pushFollow(FOLLOW_predicate_like_in_synpred279_SQL22720);
		predicate_like();
		state._fsp--;
		if (state.failed) return;

		}

		}

	}
	// $ANTLR end synpred279_SQL

	// $ANTLR start synpred281_SQL
	public final void synpred281_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1257:5: ( ( bit_expr ( ( NOT_SYM )? BETWEEN ) bit_expr AND_SYM predicate ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1257:5: ( bit_expr ( ( NOT_SYM )? BETWEEN ) bit_expr AND_SYM predicate )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1257:5: ( bit_expr ( ( NOT_SYM )? BETWEEN ) bit_expr AND_SYM predicate )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1257:7: bit_expr ( ( NOT_SYM )? BETWEEN ) bit_expr AND_SYM predicate
		{
		pushFollow(FOLLOW_bit_expr_in_synpred281_SQL22729);
		bit_expr();
		state._fsp--;
		if (state.failed) return;

		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1257:16: ( ( NOT_SYM )? BETWEEN )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1257:17: ( NOT_SYM )? BETWEEN
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1257:17: ( NOT_SYM )?
		int alt575=2;
		int LA575_0 = input.LA(1);
		if ( (LA575_0==NOT_SYM) ) {
			alt575=1;
		}
		switch (alt575) {
			case 1 :
				// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1257:18: NOT_SYM
				{
				match(input,NOT_SYM,FOLLOW_NOT_SYM_in_synpred281_SQL22733); if (state.failed) return;

				}
				break;

		}

		match(input,BETWEEN,FOLLOW_BETWEEN_in_synpred281_SQL22737); if (state.failed) return;

		}

		pushFollow(FOLLOW_bit_expr_in_synpred281_SQL22742);
		bit_expr();
		state._fsp--;
		if (state.failed) return;

		match(input,AND_SYM,FOLLOW_AND_SYM_in_synpred281_SQL22744); if (state.failed) return;

		pushFollow(FOLLOW_predicate_in_synpred281_SQL22748);
		predicate();
		state._fsp--;
		if (state.failed) return;

		}

		}

	}
	// $ANTLR end synpred281_SQL

	// $ANTLR start synpred283_SQL
	public final void synpred283_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1258:5: ( ( bit_expr ( ( NOT_SYM )? REGEXP ) bit_expr ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1258:5: ( bit_expr ( ( NOT_SYM )? REGEXP ) bit_expr )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1258:5: ( bit_expr ( ( NOT_SYM )? REGEXP ) bit_expr )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1258:7: bit_expr ( ( NOT_SYM )? REGEXP ) bit_expr
		{
		pushFollow(FOLLOW_bit_expr_in_synpred283_SQL22759);
		bit_expr();
		state._fsp--;
		if (state.failed) return;

		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1258:16: ( ( NOT_SYM )? REGEXP )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1258:17: ( NOT_SYM )? REGEXP
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1258:17: ( NOT_SYM )?
		int alt576=2;
		int LA576_0 = input.LA(1);
		if ( (LA576_0==NOT_SYM) ) {
			alt576=1;
		}
		switch (alt576) {
			case 1 :
				// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1258:18: NOT_SYM
				{
				match(input,NOT_SYM,FOLLOW_NOT_SYM_in_synpred283_SQL22763); if (state.failed) return;

				}
				break;

		}

		match(input,REGEXP,FOLLOW_REGEXP_in_synpred283_SQL22767); if (state.failed) return;

		}

		pushFollow(FOLLOW_bit_expr_in_synpred283_SQL22772);
		bit_expr();
		state._fsp--;
		if (state.failed) return;

		}

		}

	}
	// $ANTLR end synpred283_SQL

	// $ANTLR start synpred284_SQL
	public final void synpred284_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1262:4: ( ( bit_expr IN_SYM ( subquery ) ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1262:4: ( bit_expr IN_SYM ( subquery ) )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1262:4: ( bit_expr IN_SYM ( subquery ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1262:6: bit_expr IN_SYM ( subquery )
		{
		pushFollow(FOLLOW_bit_expr_in_synpred284_SQL22799);
		bit_expr();
		state._fsp--;
		if (state.failed) return;

		match(input,IN_SYM,FOLLOW_IN_SYM_in_synpred284_SQL22801); if (state.failed) return;

		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1262:23: ( subquery )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1262:24: subquery
		{
		pushFollow(FOLLOW_subquery_in_synpred284_SQL22805);
		subquery();
		state._fsp--;
		if (state.failed) return;

		}

		}

		}

	}
	// $ANTLR end synpred284_SQL

	// $ANTLR start synpred285_SQL
	public final void synpred285_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1263:6: ( ( bit_expr NOT_IN_SYM ( subquery ) ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1263:6: ( bit_expr NOT_IN_SYM ( subquery ) )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1263:6: ( bit_expr NOT_IN_SYM ( subquery ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1263:8: bit_expr NOT_IN_SYM ( subquery )
		{
		pushFollow(FOLLOW_bit_expr_in_synpred285_SQL22827);
		bit_expr();
		state._fsp--;
		if (state.failed) return;

		match(input,NOT_IN_SYM,FOLLOW_NOT_IN_SYM_in_synpred285_SQL22829); if (state.failed) return;

		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1263:29: ( subquery )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1263:30: subquery
		{
		pushFollow(FOLLOW_subquery_in_synpred285_SQL22833);
		subquery();
		state._fsp--;
		if (state.failed) return;

		}

		}

		}

	}
	// $ANTLR end synpred285_SQL

	// $ANTLR start synpred286_SQL
	public final void synpred286_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1264:6: ( ( bit_expr IN_SYM ( expression_list ) ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1264:6: ( bit_expr IN_SYM ( expression_list ) )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1264:6: ( bit_expr IN_SYM ( expression_list ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1264:8: bit_expr IN_SYM ( expression_list )
		{
		pushFollow(FOLLOW_bit_expr_in_synpred286_SQL22855);
		bit_expr();
		state._fsp--;
		if (state.failed) return;

		match(input,IN_SYM,FOLLOW_IN_SYM_in_synpred286_SQL22857); if (state.failed) return;

		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1264:25: ( expression_list )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1264:26: expression_list
		{
		pushFollow(FOLLOW_expression_list_in_synpred286_SQL22861);
		expression_list();
		state._fsp--;
		if (state.failed) return;

		}

		}

		}

	}
	// $ANTLR end synpred286_SQL

	// $ANTLR start synpred287_SQL
	public final void synpred287_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1268:5: ( ( bit_expr ( SOUNDS_SYM LIKE_SYM ) bit_expr ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1268:5: ( bit_expr ( SOUNDS_SYM LIKE_SYM ) bit_expr )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1268:5: ( bit_expr ( SOUNDS_SYM LIKE_SYM ) bit_expr )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1268:7: bit_expr ( SOUNDS_SYM LIKE_SYM ) bit_expr
		{
		pushFollow(FOLLOW_bit_expr_in_synpred287_SQL22917);
		bit_expr();
		state._fsp--;
		if (state.failed) return;

		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1268:16: ( SOUNDS_SYM LIKE_SYM )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1268:17: SOUNDS_SYM LIKE_SYM
		{
		match(input,SOUNDS_SYM,FOLLOW_SOUNDS_SYM_in_synpred287_SQL22920); if (state.failed) return;

		match(input,LIKE_SYM,FOLLOW_LIKE_SYM_in_synpred287_SQL22922); if (state.failed) return;

		}

		pushFollow(FOLLOW_bit_expr_in_synpred287_SQL22926);
		bit_expr();
		state._fsp--;
		if (state.failed) return;

		}

		}

	}
	// $ANTLR end synpred287_SQL

	// $ANTLR start synpred288_SQL
	public final void synpred288_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1269:5: ( ( bit_expr LIKE_SYM simple_expr ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1269:5: ( bit_expr LIKE_SYM simple_expr )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1269:5: ( bit_expr LIKE_SYM simple_expr )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1269:7: bit_expr LIKE_SYM simple_expr
		{
		pushFollow(FOLLOW_bit_expr_in_synpred288_SQL22948);
		bit_expr();
		state._fsp--;
		if (state.failed) return;

		match(input,LIKE_SYM,FOLLOW_LIKE_SYM_in_synpred288_SQL22950); if (state.failed) return;

		pushFollow(FOLLOW_simple_expr_in_synpred288_SQL22952);
		simple_expr();
		state._fsp--;
		if (state.failed) return;

		}

		}

	}
	// $ANTLR end synpred288_SQL

	// $ANTLR start synpred289_SQL
	public final void synpred289_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1274:13: ( VERTBAR factor1 )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1274:13: VERTBAR factor1
		{
		match(input,VERTBAR,FOLLOW_VERTBAR_in_synpred289_SQL23008); if (state.failed) return;

		pushFollow(FOLLOW_factor1_in_synpred289_SQL23012);
		factor1();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred289_SQL

	// $ANTLR start synpred290_SQL
	public final void synpred290_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1276:13: ( BITAND factor2 )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1276:13: BITAND factor2
		{
		match(input,BITAND,FOLLOW_BITAND_in_synpred290_SQL23028); if (state.failed) return;

		pushFollow(FOLLOW_factor2_in_synpred290_SQL23032);
		factor2();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred290_SQL

	// $ANTLR start synpred292_SQL
	public final void synpred292_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1278:13: ( ( SHIFT_LEFT | SHIFT_RIGHT ) factor3 )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1278:13: ( SHIFT_LEFT | SHIFT_RIGHT ) factor3
		{
		if ( (input.LA(1) >= SHIFT_LEFT && input.LA(1) <= SHIFT_RIGHT) ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			throw mse;
		}
		pushFollow(FOLLOW_factor3_in_synpred292_SQL23056);
		factor3();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred292_SQL

	// $ANTLR start synpred294_SQL
	public final void synpred294_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1280:13: ( ( PLUS | MINUS ) factor4 )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1280:13: ( PLUS | MINUS ) factor4
		{
		if ( input.LA(1)==MINUS||input.LA(1)==PLUS ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			throw mse;
		}
		pushFollow(FOLLOW_factor4_in_synpred294_SQL23080);
		factor4();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred294_SQL

	// $ANTLR start synpred298_SQL
	public final void synpred298_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1282:13: ( ( ASTERISK | DIVIDE | MOD_SYM | POWER_OP ) factor5 )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1282:13: ( ASTERISK | DIVIDE | MOD_SYM | POWER_OP ) factor5
		{
		if ( input.LA(1)==ASTERISK||input.LA(1)==DIVIDE||input.LA(1)==MOD_SYM||input.LA(1)==POWER_OP ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			throw mse;
		}
		pushFollow(FOLLOW_factor5_in_synpred298_SQL23108);
		factor5();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred298_SQL

	// $ANTLR start synpred300_SQL
	public final void synpred300_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1284:13: ( ( PLUS | MINUS ) interval_expr )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1284:13: ( PLUS | MINUS ) interval_expr
		{
		if ( input.LA(1)==MINUS||input.LA(1)==PLUS ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			throw mse;
		}
		pushFollow(FOLLOW_interval_expr_in_synpred300_SQL23132);
		interval_expr();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred300_SQL

	// $ANTLR start synpred304_SQL
	public final void synpred304_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1286:3: ( ( PLUS | MINUS | NEGATION | BINARY ) simple_expr )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1286:3: ( PLUS | MINUS | NEGATION | BINARY ) simple_expr
		{
		if ( input.LA(1)==BINARY||input.LA(1)==MINUS||input.LA(1)==NEGATION||input.LA(1)==PLUS ) {
			input.consume();
			state.errorRecovery=false;
			state.failed=false;
		}
		else {
			if (state.backtracking>0) {state.failed=true; return;}
			MismatchedSetException mse = new MismatchedSetException(null,input);
			throw mse;
		}
		pushFollow(FOLLOW_simple_expr_in_synpred304_SQL23162);
		simple_expr();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred304_SQL

	// $ANTLR start synpred321_SQL
	public final void synpred321_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1310:5: ( ( CONVERT_SYM LPAREN expression COMMA cast_data_type RPAREN ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1310:5: ( CONVERT_SYM LPAREN expression COMMA cast_data_type RPAREN )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1310:5: ( CONVERT_SYM LPAREN expression COMMA cast_data_type RPAREN )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1310:8: CONVERT_SYM LPAREN expression COMMA cast_data_type RPAREN
		{
		match(input,CONVERT_SYM,FOLLOW_CONVERT_SYM_in_synpred321_SQL23341); if (state.failed) return;

		match(input,LPAREN,FOLLOW_LPAREN_in_synpred321_SQL23343); if (state.failed) return;

		pushFollow(FOLLOW_expression_in_synpred321_SQL23345);
		expression();
		state._fsp--;
		if (state.failed) return;

		match(input,COMMA,FOLLOW_COMMA_in_synpred321_SQL23347); if (state.failed) return;

		pushFollow(FOLLOW_cast_data_type_in_synpred321_SQL23349);
		cast_data_type();
		state._fsp--;
		if (state.failed) return;

		match(input,RPAREN,FOLLOW_RPAREN_in_synpred321_SQL23351); if (state.failed) return;

		}

		}

	}
	// $ANTLR end synpred321_SQL

	// $ANTLR start synpred322_SQL
	public final void synpred322_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1311:5: ( ( CONVERT_SYM LPAREN expression USING_SYM transcoding_name RPAREN ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1311:5: ( CONVERT_SYM LPAREN expression USING_SYM transcoding_name RPAREN )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1311:5: ( CONVERT_SYM LPAREN expression USING_SYM transcoding_name RPAREN )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1311:8: CONVERT_SYM LPAREN expression USING_SYM transcoding_name RPAREN
		{
		match(input,CONVERT_SYM,FOLLOW_CONVERT_SYM_in_synpred322_SQL23363); if (state.failed) return;

		match(input,LPAREN,FOLLOW_LPAREN_in_synpred322_SQL23365); if (state.failed) return;

		pushFollow(FOLLOW_expression_in_synpred322_SQL23367);
		expression();
		state._fsp--;
		if (state.failed) return;

		match(input,USING_SYM,FOLLOW_USING_SYM_in_synpred322_SQL23369); if (state.failed) return;

		pushFollow(FOLLOW_transcoding_name_in_synpred322_SQL23371);
		transcoding_name();
		state._fsp--;
		if (state.failed) return;

		match(input,RPAREN,FOLLOW_RPAREN_in_synpred322_SQL23373); if (state.failed) return;

		}

		}

	}
	// $ANTLR end synpred322_SQL

	// $ANTLR start synpred332_SQL
	public final void synpred332_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1332:66: ( search_modifier )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1332:66: search_modifier
		{
		pushFollow(FOLLOW_search_modifier_in_synpred332_SQL23605);
		search_modifier();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred332_SQL

	// $ANTLR start synpred337_SQL
	public final void synpred337_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1356:3: ( table_factor1 )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1356:3: table_factor1
		{
		pushFollow(FOLLOW_table_factor1_in_synpred337_SQL23729);
		table_factor1();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred337_SQL

	// $ANTLR start synpred340_SQL
	public final void synpred340_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1365:18: ( table_factor3_part )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1365:18: table_factor3_part
		{
		pushFollow(FOLLOW_table_factor3_part_in_synpred340_SQL23773);
		table_factor3_part();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred340_SQL

	// $ANTLR start synpred342_SQL
	public final void synpred342_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1371:21: ( partition_clause )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1371:21: partition_clause
		{
		pushFollow(FOLLOW_partition_clause_in_synpred342_SQL23807);
		partition_clause();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred342_SQL

	// $ANTLR start synpred350_SQL
	public final void synpred350_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1377:48: ( join_condition )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1377:48: join_condition
		{
		pushFollow(FOLLOW_join_condition_in_synpred350_SQL23897);
		join_condition();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred350_SQL

	// $ANTLR start synpred351_SQL
	public final void synpred351_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1380:32: ( ON expression )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1380:32: ON expression
		{
		match(input,ON,FOLLOW_ON_in_synpred351_SQL23919); if (state.failed) return;

		pushFollow(FOLLOW_expression_in_synpred351_SQL23923);
		expression();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred351_SQL

	// $ANTLR start synpred370_SQL
	public final void synpred370_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1419:4: ( SEMI )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1419:4: SEMI
		{
		match(input,SEMI,FOLLOW_SEMI_in_synpred370_SQL24225); if (state.failed) return;

		}

	}
	// $ANTLR end synpred370_SQL

	// $ANTLR start synpred422_SQL
	public final void synpred422_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1546:15: ( column_spec )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1546:15: column_spec
		{
		pushFollow(FOLLOW_column_spec_in_synpred422_SQL24787);
		column_spec();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred422_SQL

	// $ANTLR start synpred423_SQL
	public final void synpred423_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1546:29: ( INTEGER_NUM )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1546:29: INTEGER_NUM
		{
		match(input,INTEGER_NUM,FOLLOW_INTEGER_NUM_in_synpred423_SQL24791); if (state.failed) return;

		}

	}
	// $ANTLR end synpred423_SQL

	// $ANTLR start synpred429_SQL
	public final void synpred429_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1564:26: ( COMMA displayed_column )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1564:26: COMMA displayed_column
		{
		match(input,COMMA,FOLLOW_COMMA_in_synpred429_SQL24918); if (state.failed) return;

		pushFollow(FOLLOW_displayed_column_in_synpred429_SQL24922);
		displayed_column();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred429_SQL

	// $ANTLR start synpred435_SQL
	public final void synpred435_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1583:3: ( ( column_spec ( alias )? ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1583:3: ( column_spec ( alias )? )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1583:3: ( column_spec ( alias )? )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1583:5: column_spec ( alias )?
		{
		pushFollow(FOLLOW_column_spec_in_synpred435_SQL25036);
		column_spec();
		state._fsp--;
		if (state.failed) return;

		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1583:17: ( alias )?
		int alt597=2;
		int LA597_0 = input.LA(1);
		if ( (LA597_0==AS_SYM||LA597_0==ID) ) {
			alt597=1;
		}
		switch (alt597) {
			case 1 :
				// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1583:18: alias
				{
				pushFollow(FOLLOW_alias_in_synpred435_SQL25039);
				alias();
				state._fsp--;
				if (state.failed) return;

				}
				break;

		}

		}

		}

	}
	// $ANTLR end synpred435_SQL

	// $ANTLR start synpred466_SQL
	public final void synpred466_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1643:29: ( bit_expr )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1643:29: bit_expr
		{
		pushFollow(FOLLOW_bit_expr_in_synpred466_SQL25390);
		bit_expr();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred466_SQL

	// $ANTLR start synpred467_SQL
	public final void synpred467_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1643:55: ( bit_expr )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1643:55: bit_expr
		{
		pushFollow(FOLLOW_bit_expr_in_synpred467_SQL25399);
		bit_expr();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred467_SQL

	// $ANTLR start synpred471_SQL
	public final void synpred471_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1651:41: ( expression )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1651:41: expression
		{
		pushFollow(FOLLOW_expression_in_synpred471_SQL25460);
		expression();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred471_SQL

	// $ANTLR start synpred474_SQL
	public final void synpred474_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1668:3: ( single_table_update_statement )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1668:3: single_table_update_statement
		{
		pushFollow(FOLLOW_single_table_update_statement_in_synpred474_SQL25512);
		single_table_update_statement();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred474_SQL

	// $ANTLR start synpred486_SQL
	public final void synpred486_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1702:26: ( COMMA root_statement )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:1702:26: COMMA root_statement
		{
		match(input,COMMA,FOLLOW_COMMA_in_synpred486_SQL25656); if (state.failed) return;

		pushFollow(FOLLOW_root_statement_in_synpred486_SQL25658);
		root_statement();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred486_SQL

	// $ANTLR start synpred855_SQL
	public final void synpred855_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2135:17: ( ( COMMA )? table_option )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2135:17: ( COMMA )? table_option
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2135:17: ( COMMA )?
		int alt770=2;
		int LA770_0 = input.LA(1);
		if ( (LA770_0==COMMA) ) {
			alt770=1;
		}
		switch (alt770) {
			case 1 :
				// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2135:19: COMMA
				{
				match(input,COMMA,FOLLOW_COMMA_in_synpred855_SQL29246); if (state.failed) return;

				}
				break;

		}

		pushFollow(FOLLOW_table_option_in_synpred855_SQL29251);
		table_option();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred855_SQL

	// $ANTLR start synpred960_SQL
	public final void synpred960_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2222:5: ( table_options )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2222:5: table_options
		{
		pushFollow(FOLLOW_table_options_in_synpred960_SQL30345);
		table_options();
		state._fsp--;
		if (state.failed) return;

		}

	}
	// $ANTLR end synpred960_SQL

	// $ANTLR start synpred1039_SQL
	public final void synpred1039_SQL_fragment() throws RecognitionException {
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:5: ( ( ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name ( COLLATE_SYM ( EQ_SYM )? collation_name )? ) )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:5: ( ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name ( COLLATE_SYM ( EQ_SYM )? collation_name )? )
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:5: ( ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name ( COLLATE_SYM ( EQ_SYM )? collation_name )? )
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:7: ( DEFAULT )? CHARACTER_SYM SET_SYM ( EQ_SYM )? charset_name ( COLLATE_SYM ( EQ_SYM )? collation_name )?
		{
		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:7: ( DEFAULT )?
		int alt863=2;
		int LA863_0 = input.LA(1);
		if ( (LA863_0==DEFAULT) ) {
			alt863=1;
		}
		switch (alt863) {
			case 1 :
				// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:8: DEFAULT
				{
				match(input,DEFAULT,FOLLOW_DEFAULT_in_synpred1039_SQL30964); if (state.failed) return;

				}
				break;

		}

		match(input,CHARACTER_SYM,FOLLOW_CHARACTER_SYM_in_synpred1039_SQL30968); if (state.failed) return;

		match(input,SET_SYM,FOLLOW_SET_SYM_in_synpred1039_SQL30970); if (state.failed) return;

		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:40: ( EQ_SYM )?
		int alt864=2;
		int LA864_0 = input.LA(1);
		if ( (LA864_0==EQ_SYM) ) {
			alt864=1;
		}
		switch (alt864) {
			case 1 :
				// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:41: EQ_SYM
				{
				match(input,EQ_SYM,FOLLOW_EQ_SYM_in_synpred1039_SQL30973); if (state.failed) return;

				}
				break;

		}

		pushFollow(FOLLOW_charset_name_in_synpred1039_SQL30977);
		charset_name();
		state._fsp--;
		if (state.failed) return;

		// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:63: ( COLLATE_SYM ( EQ_SYM )? collation_name )?
		int alt866=2;
		int LA866_0 = input.LA(1);
		if ( (LA866_0==COLLATE_SYM) ) {
			alt866=1;
		}
		switch (alt866) {
			case 1 :
				// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:64: COLLATE_SYM ( EQ_SYM )? collation_name
				{
				match(input,COLLATE_SYM,FOLLOW_COLLATE_SYM_in_synpred1039_SQL30980); if (state.failed) return;

				// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:76: ( EQ_SYM )?
				int alt865=2;
				int LA865_0 = input.LA(1);
				if ( (LA865_0==EQ_SYM) ) {
					alt865=1;
				}
				switch (alt865) {
					case 1 :
						// /Users/undyliu/Desktop/work/repository/git/mars/plugins/com.seekon.mars.sqlscript.parser/src/SQL.g:2249:77: EQ_SYM
						{
						match(input,EQ_SYM,FOLLOW_EQ_SYM_in_synpred1039_SQL30983); if (state.failed) return;

						}
						break;

				}

				pushFollow(FOLLOW_collation_name_in_synpred1039_SQL30987);
				collation_name();
				state._fsp--;
				if (state.failed) return;

				}
				break;

		}

		}

		}

	}
	// $ANTLR end synpred1039_SQL

	// Delegated rules

	public final boolean synpred429_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred429_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred321_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred321_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred289_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred289_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred486_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred486_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred54_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred54_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred288_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred288_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred292_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred292_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred340_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred340_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred276_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred276_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred270_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred270_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred474_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred474_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred337_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred337_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred435_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred435_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred300_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred300_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred423_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred423_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred278_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred278_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred281_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred281_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred274_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred274_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred294_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred294_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred268_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred268_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred1039_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred1039_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred304_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred304_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred467_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred467_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred370_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred370_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred279_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred279_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred269_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred269_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred290_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred290_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred332_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred332_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred286_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred286_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred471_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred471_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred322_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred322_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred271_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred271_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred960_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred960_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred351_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred351_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred298_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred298_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred466_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred466_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred275_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred275_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred350_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred350_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred55_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred55_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred422_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred422_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred285_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred285_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred855_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred855_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred342_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred342_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred283_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred283_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred284_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred284_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred87_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred87_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}
	public final boolean synpred287_SQL() {
		state.backtracking++;
		int start = input.mark();
		try {
			synpred287_SQL_fragment(); // can never throw exception
		} catch (RecognitionException re) {
			System.err.println("impossible: "+re);
		}
		boolean success = !state.failed;
		input.rewind(start);
		state.backtracking--;
		state.failed=false;
		return success;
	}


	protected DFA56 dfa56 = new DFA56(this);
	protected DFA127 dfa127 = new DFA127(this);
	protected DFA197 dfa197 = new DFA197(this);
	protected DFA422 dfa422 = new DFA422(this);
	static final String DFA56_eotS =
		"\12\uffff";
	static final String DFA56_eofS =
		"\1\2\11\uffff";
	static final String DFA56_minS =
		"\1\36\1\u0178\1\uffff\1\u011e\1\137\1\u011e\1\0\1\137\1\uffff\1\0";
	static final String DFA56_maxS =
		"\1\u02fb\1\u0178\1\uffff\1\u011e\1\u023b\1\u011e\1\0\1\u023b\1\uffff\1"+
		"\0";
	static final String DFA56_acceptS =
		"\2\uffff\1\2\5\uffff\1\1\1\uffff";
	static final String DFA56_specialS =
		"\6\uffff\1\1\2\uffff\1\0}>";
	static final String[] DFA56_transitionS = {
			"\1\2\100\uffff\1\2\46\uffff\1\2\150\uffff\1\2\2\uffff\1\2\27\uffff\1"+
			"\2\4\uffff\1\2\16\uffff\1\2\3\uffff\1\2\7\uffff\1\2\7\uffff\1\2\17\uffff"+
			"\1\2\27\uffff\1\2\5\uffff\1\2\11\uffff\1\2\121\uffff\1\2\25\uffff\1\2"+
			"\10\uffff\1\2\15\uffff\1\1\110\uffff\1\2\10\uffff\1\2\13\uffff\1\2\7"+
			"\uffff\1\2\62\uffff\1\2\104\uffff\1\2\21\uffff\2\2\35\uffff\1\2\2\uffff"+
			"\1\2",
			"\1\3",
			"",
			"\1\4",
			"\1\5\u01db\uffff\1\6",
			"\1\7",
			"\1\uffff",
			"\1\5\u01db\uffff\1\11",
			"",
			"\1\uffff"
	};

	static final short[] DFA56_eot = DFA.unpackEncodedString(DFA56_eotS);
	static final short[] DFA56_eof = DFA.unpackEncodedString(DFA56_eofS);
	static final char[] DFA56_min = DFA.unpackEncodedStringToUnsignedChars(DFA56_minS);
	static final char[] DFA56_max = DFA.unpackEncodedStringToUnsignedChars(DFA56_maxS);
	static final short[] DFA56_accept = DFA.unpackEncodedString(DFA56_acceptS);
	static final short[] DFA56_special = DFA.unpackEncodedString(DFA56_specialS);
	static final short[][] DFA56_transition;

	static {
		int numStates = DFA56_transitionS.length;
		DFA56_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA56_transition[i] = DFA.unpackEncodedString(DFA56_transitionS[i]);
		}
	}

	protected class DFA56 extends DFA {

		public DFA56(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 56;
			this.eot = DFA56_eot;
			this.eof = DFA56_eof;
			this.min = DFA56_min;
			this.max = DFA56_max;
			this.accept = DFA56_accept;
			this.special = DFA56_special;
			this.transition = DFA56_transition;
		}
		@Override
		public String getDescription() {
			return "1371:20: ( partition_clause )?";
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA56_9 = input.LA(1);
						 
						int index56_9 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred342_SQL()) ) {s = 8;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index56_9);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA56_6 = input.LA(1);
						 
						int index56_6 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred342_SQL()) ) {s = 8;}
						else if ( (true) ) {s = 2;}
						 
						input.seek(index56_6);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 56, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	static final String DFA127_eotS =
		"\36\uffff";
	static final String DFA127_eofS =
		"\36\uffff";
	static final String DFA127_minS =
		"\1\u012e\1\u0115\3\u011e\1\u00b7\1\u011e\1\u0178\1\u011e\3\uffff\1\u0178"+
		"\1\u011e\2\137\2\u011e\1\u0246\1\u011e\1\u0178\3\137\2\u011e\2\137\1\u011e"+
		"\1\137";
	static final String DFA127_maxS =
		"\1\u012e\1\u0176\2\u0135\1\u011e\1\u02e5\1\u011e\1\u0178\1\u011e\3\uffff"+
		"\1\u02e5\1\u011e\2\u023b\2\u011e\1\u02e5\1\u011e\1\u02e5\3\u023b\2\u011e"+
		"\2\u023b\1\u011e\1\u023b";
	static final String DFA127_acceptS =
		"\11\uffff\1\1\1\2\1\3\22\uffff";
	static final String DFA127_specialS =
		"\36\uffff}>";
	static final String[] DFA127_transitionS = {
			"\1\1",
			"\1\2\10\uffff\1\5\3\uffff\1\3\22\uffff\1\4\100\uffff\1\2",
			"\1\5\3\uffff\1\3\22\uffff\1\4",
			"\1\5\26\uffff\1\4",
			"\1\5",
			"\1\6\u00c0\uffff\1\10\160\uffff\1\7\134\uffff\1\13\10\uffff\1\12\u0094"+
			"\uffff\2\11",
			"\1\14",
			"\1\15",
			"\1\16",
			"",
			"",
			"",
			"\1\10\160\uffff\1\7\134\uffff\1\13\10\uffff\1\12\u0094\uffff\2\11",
			"\1\17",
			"\1\21\127\uffff\1\20\u0183\uffff\1\22",
			"\1\23\u01db\uffff\1\24",
			"\1\25",
			"\1\26",
			"\1\13\u009d\uffff\2\11",
			"\1\27",
			"\1\10\u00cd\uffff\1\13\10\uffff\1\12\u0094\uffff\2\11",
			"\1\21\127\uffff\1\30\u0183\uffff\1\22",
			"\1\21\127\uffff\1\31\u0183\uffff\1\22",
			"\1\23\u01db\uffff\1\24",
			"\1\32",
			"\1\33",
			"\1\21\u01db\uffff\1\22",
			"\1\21\127\uffff\1\34\u0183\uffff\1\22",
			"\1\35",
			"\1\21\u01db\uffff\1\22"
	};

	static final short[] DFA127_eot = DFA.unpackEncodedString(DFA127_eotS);
	static final short[] DFA127_eof = DFA.unpackEncodedString(DFA127_eofS);
	static final char[] DFA127_min = DFA.unpackEncodedStringToUnsignedChars(DFA127_minS);
	static final char[] DFA127_max = DFA.unpackEncodedStringToUnsignedChars(DFA127_maxS);
	static final short[] DFA127_accept = DFA.unpackEncodedString(DFA127_acceptS);
	static final short[] DFA127_special = DFA.unpackEncodedString(DFA127_specialS);
	static final short[][] DFA127_transition;

	static {
		int numStates = DFA127_transitionS.length;
		DFA127_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA127_transition[i] = DFA.unpackEncodedString(DFA127_transitionS[i]);
		}
	}

	protected class DFA127 extends DFA {

		public DFA127(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 127;
			this.eot = DFA127_eot;
			this.eof = DFA127_eof;
			this.min = DFA127_min;
			this.max = DFA127_max;
			this.accept = DFA127_accept;
			this.special = DFA127_special;
			this.transition = DFA127_transition;
		}
		@Override
		public String getDescription() {
			return "1622:1: insert_statements : ( insert_statement1 | insert_statement2 | insert_statement3 );";
		}
	}

	static final String DFA197_eotS =
		"\21\uffff";
	static final String DFA197_eofS =
		"\21\uffff";
	static final String DFA197_minS =
		"\1\u0178\1\u011e\3\uffff\1\137\2\u011e\1\u0246\2\137\2\u011e\2\137\1\u011e"+
		"\1\137";
	static final String DFA197_maxS =
		"\1\u02e5\1\u011e\3\uffff\1\u023b\2\u011e\1\u02e5\2\u023b\2\u011e\2\u023b"+
		"\1\u011e\1\u023b";
	static final String DFA197_acceptS =
		"\2\uffff\1\1\1\2\1\3\14\uffff";
	static final String DFA197_specialS =
		"\21\uffff}>";
	static final String[] DFA197_transitionS = {
			"\1\1\u00cd\uffff\1\4\10\uffff\1\3\u0094\uffff\2\2",
			"\1\5",
			"",
			"",
			"",
			"\1\7\127\uffff\1\6\u0183\uffff\1\10",
			"\1\11",
			"\1\12",
			"\1\4\u009d\uffff\2\2",
			"\1\7\127\uffff\1\13\u0183\uffff\1\10",
			"\1\7\127\uffff\1\14\u0183\uffff\1\10",
			"\1\15",
			"\1\16",
			"\1\7\u01db\uffff\1\10",
			"\1\7\127\uffff\1\17\u0183\uffff\1\10",
			"\1\20",
			"\1\7\u01db\uffff\1\10"
	};

	static final short[] DFA197_eot = DFA.unpackEncodedString(DFA197_eotS);
	static final short[] DFA197_eof = DFA.unpackEncodedString(DFA197_eofS);
	static final char[] DFA197_min = DFA.unpackEncodedStringToUnsignedChars(DFA197_minS);
	static final char[] DFA197_max = DFA.unpackEncodedStringToUnsignedChars(DFA197_maxS);
	static final short[] DFA197_accept = DFA.unpackEncodedString(DFA197_acceptS);
	static final short[] DFA197_special = DFA.unpackEncodedString(DFA197_specialS);
	static final short[][] DFA197_transition;

	static {
		int numStates = DFA197_transitionS.length;
		DFA197_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA197_transition[i] = DFA.unpackEncodedString(DFA197_transitionS[i]);
		}
	}

	protected class DFA197 extends DFA {

		public DFA197(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 197;
			this.eot = DFA197_eot;
			this.eof = DFA197_eof;
			this.min = DFA197_min;
			this.max = DFA197_max;
			this.accept = DFA197_accept;
			this.special = DFA197_special;
			this.transition = DFA197_transition;
		}
		@Override
		public String getDescription() {
			return "1794:3: ( replace_statement1 | replace_statement2 | replace_statement3 )";
		}
	}

	static final String DFA422_eotS =
		"\140\uffff";
	static final String DFA422_eofS =
		"\1\1\137\uffff";
	static final String DFA422_minS =
		"\1\44\1\uffff\1\12\1\uffff\3\u00cd\1\116\1\u024f\4\u00cd\1\u00b0\1\u00cd"+
		"\1\u00b0\4\u00cd\1\u00a5\1\u00cd\1\143\2\u00a5\1\u00cd\1\u011e\1\0\1\u0132"+
		"\1\0\1\u0132\1\0\1\27\1\u0132\1\0\1\u011e\1\0\1\u029d\1\0\1\u029d\1\0"+
		"\1\u00cd\1\u0132\1\0\1\u00cd\1\u00ea\1\0\1\u0132\1\0\1\u0132\1\0\1\u0132"+
		"\1\0\1\u00a5\1\0\1\u029d\1\0\1\143\1\0\1\u00a5\1\0\1\u00a5\1\0\1\u0178"+
		"\1\u011e\3\0\1\27\5\0\1\u029d\2\0\1\u029d\12\0\1\137\3\0\1\u011e\1\0\1"+
		"\137\1\0";
	static final String DFA422_maxS =
		"\1\u02c7\1\uffff\1\u02ce\1\uffff\1\u011e\2\u0132\1\131\1\u024f\1\u0132"+
		"\1\u011e\2\u029d\1\u00b0\1\u0132\1\u00b0\1\u01c7\4\u0132\1\u029d\1\u0218"+
		"\2\u0132\1\u0178\1\u011e\1\0\1\u0132\1\0\1\u0132\1\0\1\u02e1\1\u0132\1"+
		"\0\1\u011e\1\0\1\u029d\1\0\1\u029d\1\0\1\u029d\1\u0132\1\0\1\u029d\1\u01c7"+
		"\1\0\1\u0132\1\0\1\u0132\1\0\1\u0132\1\0\1\u0132\1\0\1\u029d\1\0\1\u0218"+
		"\1\0\1\u0132\1\0\1\u0132\1\0\1\u0178\1\u011e\3\0\1\u02e1\5\0\1\u029d\2"+
		"\0\1\u029d\12\0\1\u023b\3\0\1\u011e\1\0\1\u023b\1\0";
	static final String DFA422_acceptS =
		"\1\uffff\1\2\1\uffff\1\1\134\uffff";
	static final String DFA422_specialS =
		"\33\uffff\1\51\1\uffff\1\5\1\uffff\1\17\2\uffff\1\11\1\uffff\1\45\1\uffff"+
		"\1\3\1\uffff\1\25\2\uffff\1\7\2\uffff\1\43\1\uffff\1\13\1\uffff\1\33\1"+
		"\uffff\1\35\1\uffff\1\21\1\uffff\1\27\1\uffff\1\41\1\uffff\1\1\1\uffff"+
		"\1\40\2\uffff\1\50\1\4\1\16\1\uffff\1\24\1\10\1\44\1\2\1\23\1\uffff\1"+
		"\47\1\6\1\uffff\1\31\1\42\1\12\1\32\1\34\1\20\1\26\1\37\1\0\1\36\1\uffff"+
		"\1\22\1\46\1\30\1\uffff\1\15\1\uffff\1\14}>";
	static final String[] DFA422_transitionS = {
			"\1\3\1\uffff\1\3\47\uffff\1\3\2\uffff\1\3\7\uffff\1\3\5\uffff\1\2\1\3"+
			"\13\uffff\1\3\43\uffff\1\3\24\uffff\1\3\3\uffff\1\3\41\uffff\1\3\131"+
			"\uffff\1\3\11\uffff\1\3\26\uffff\1\3\117\uffff\1\3\22\uffff\1\3\70\uffff"+
			"\1\3\6\uffff\1\1\1\3\115\uffff\1\3\15\uffff\2\1\61\uffff\2\3\114\uffff"+
			"\1\3",
			"",
			"\1\1\5\uffff\1\1\2\uffff\2\1\17\uffff\1\5\1\uffff\1\6\34\uffff\1\1\7"+
			"\uffff\1\1\2\uffff\1\10\2\uffff\1\11\1\1\3\uffff\1\1\2\uffff\1\12\6\uffff"+
			"\1\13\13\uffff\1\14\7\uffff\1\1\17\uffff\1\1\13\uffff\1\15\24\uffff\1"+
			"\7\3\uffff\1\16\1\1\6\uffff\2\1\6\uffff\2\1\11\uffff\1\1\6\uffff\1\4"+
			"\12\uffff\1\1\30\uffff\1\1\35\uffff\1\1\25\uffff\1\1\1\uffff\1\17\10"+
			"\uffff\1\1\1\20\26\uffff\1\21\37\uffff\1\1\3\uffff\1\1\53\uffff\1\22"+
			"\22\uffff\1\23\5\uffff\1\1\46\uffff\1\1\4\uffff\1\1\6\uffff\1\24\7\uffff"+
			"\1\25\51\uffff\1\1\13\uffff\4\1\2\uffff\1\1\21\uffff\1\26\15\uffff\1"+
			"\1\14\uffff\1\1\45\uffff\1\27\1\30\74\uffff\1\1\17\uffff\1\31\6\uffff"+
			"\1\1",
			"",
			"\1\32\120\uffff\1\33",
			"\1\34\144\uffff\1\35",
			"\1\36\144\uffff\1\37",
			"\1\10\12\uffff\1\12",
			"\1\40",
			"\1\41\144\uffff\1\42",
			"\1\43\120\uffff\1\44",
			"\1\45\u01cf\uffff\1\46",
			"\1\47\u01cf\uffff\1\50",
			"\1\51",
			"\1\52\144\uffff\1\53",
			"\1\54",
			"\1\55\34\uffff\1\56\144\uffff\1\56\167\uffff\1\56",
			"\1\57\144\uffff\1\60",
			"\1\61\144\uffff\1\62",
			"\1\63\144\uffff\1\64",
			"\1\66\47\uffff\1\65\144\uffff\1\66",
			"\1\67\u01cf\uffff\1\70",
			"\1\72\2\uffff\1\72\76\uffff\1\72\30\uffff\1\72\16\uffff\1\71\35\uffff"+
			"\1\72\u012c\uffff\1\72",
			"\1\74\47\uffff\1\73\144\uffff\1\74",
			"\1\76\47\uffff\1\75\144\uffff\1\76",
			"\1\77\u00aa\uffff\1\100",
			"\1\101",
			"\1\uffff",
			"\1\102",
			"\1\uffff",
			"\1\103",
			"\1\uffff",
			"\1\105\2\uffff\1\105\22\uffff\1\105\2\uffff\1\105\111\uffff\10\105\37"+
			"\uffff\1\105\53\uffff\1\104\3\uffff\2\105\52\uffff\2\105\2\uffff\1\105"+
			"\6\uffff\1\105\7\uffff\1\105\13\uffff\1\105\47\uffff\1\105\4\uffff\2"+
			"\105\5\uffff\1\105\2\uffff\3\105\46\uffff\2\105\u00dd\uffff\1\105\64"+
			"\uffff\1\105\32\uffff\1\105\17\uffff\2\105\44\uffff\1\105",
			"\1\106",
			"\1\uffff",
			"\1\107",
			"\1\uffff",
			"\1\110",
			"\1\uffff",
			"\1\111",
			"\1\uffff",
			"\1\112\u01cf\uffff\1\113",
			"\1\114",
			"\1\uffff",
			"\1\115\u01cf\uffff\1\116",
			"\1\117\144\uffff\1\117\167\uffff\1\117",
			"\1\uffff",
			"\1\120",
			"\1\uffff",
			"\1\121",
			"\1\uffff",
			"\1\122",
			"\1\uffff",
			"\1\123\u008c\uffff\1\123",
			"\1\uffff",
			"\1\124",
			"\1\uffff",
			"\1\125\2\uffff\1\125\76\uffff\1\125\30\uffff\1\125\54\uffff\1\125\u012c"+
			"\uffff\1\125",
			"\1\uffff",
			"\1\126\u008c\uffff\1\126",
			"\1\uffff",
			"\1\127\u008c\uffff\1\127",
			"\1\uffff",
			"\1\100",
			"\1\130",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\131\2\uffff\1\131\22\uffff\1\131\2\uffff\1\131\111\uffff\10\131\37"+
			"\uffff\1\131\57\uffff\2\131\52\uffff\2\131\2\uffff\1\131\6\uffff\1\131"+
			"\7\uffff\1\131\13\uffff\1\131\47\uffff\1\131\4\uffff\2\131\5\uffff\1"+
			"\131\2\uffff\3\131\46\uffff\2\131\u00dd\uffff\1\131\64\uffff\1\131\32"+
			"\uffff\1\131\17\uffff\2\131\44\uffff\1\131",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\132",
			"\1\uffff",
			"\1\uffff",
			"\1\133",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\134\u01db\uffff\1\135",
			"\1\uffff",
			"\1\uffff",
			"\1\uffff",
			"\1\136",
			"\1\uffff",
			"\1\134\u01db\uffff\1\137",
			"\1\uffff"
	};

	static final short[] DFA422_eot = DFA.unpackEncodedString(DFA422_eotS);
	static final short[] DFA422_eof = DFA.unpackEncodedString(DFA422_eofS);
	static final char[] DFA422_min = DFA.unpackEncodedStringToUnsignedChars(DFA422_minS);
	static final char[] DFA422_max = DFA.unpackEncodedStringToUnsignedChars(DFA422_maxS);
	static final short[] DFA422_accept = DFA.unpackEncodedString(DFA422_acceptS);
	static final short[] DFA422_special = DFA.unpackEncodedString(DFA422_specialS);
	static final short[][] DFA422_transition;

	static {
		int numStates = DFA422_transitionS.length;
		DFA422_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA422_transition[i] = DFA.unpackEncodedString(DFA422_transitionS[i]);
		}
	}

	protected class DFA422 extends DFA {

		public DFA422(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 422;
			this.eot = DFA422_eot;
			this.eof = DFA422_eof;
			this.min = DFA422_min;
			this.max = DFA422_max;
			this.accept = DFA422_accept;
			this.special = DFA422_special;
			this.transition = DFA422_transition;
		}
		@Override
		public String getDescription() {
			return "()* loopback of 2135:16: ( ( COMMA )? table_option )*";
		}
		@Override
		public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
			TokenStream input = (TokenStream)_input;
			int _s = s;
			switch ( s ) {
					case 0 : 
						int LA422_86 = input.LA(1);
						 
						int index422_86 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_86);
						if ( s>=0 ) return s;
						break;

					case 1 : 
						int LA422_60 = input.LA(1);
						 
						int index422_60 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_60);
						if ( s>=0 ) return s;
						break;

					case 2 : 
						int LA422_72 = input.LA(1);
						 
						int index422_72 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_72);
						if ( s>=0 ) return s;
						break;

					case 3 : 
						int LA422_38 = input.LA(1);
						 
						int index422_38 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_38);
						if ( s>=0 ) return s;
						break;

					case 4 : 
						int LA422_66 = input.LA(1);
						 
						int index422_66 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_66);
						if ( s>=0 ) return s;
						break;

					case 5 : 
						int LA422_29 = input.LA(1);
						 
						int index422_29 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_29);
						if ( s>=0 ) return s;
						break;

					case 6 : 
						int LA422_76 = input.LA(1);
						 
						int index422_76 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_76);
						if ( s>=0 ) return s;
						break;

					case 7 : 
						int LA422_43 = input.LA(1);
						 
						int index422_43 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_43);
						if ( s>=0 ) return s;
						break;

					case 8 : 
						int LA422_70 = input.LA(1);
						 
						int index422_70 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_70);
						if ( s>=0 ) return s;
						break;

					case 9 : 
						int LA422_34 = input.LA(1);
						 
						int index422_34 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_34);
						if ( s>=0 ) return s;
						break;

					case 10 : 
						int LA422_80 = input.LA(1);
						 
						int index422_80 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_80);
						if ( s>=0 ) return s;
						break;

					case 11 : 
						int LA422_48 = input.LA(1);
						 
						int index422_48 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_48);
						if ( s>=0 ) return s;
						break;

					case 12 : 
						int LA422_95 = input.LA(1);
						 
						int index422_95 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_95);
						if ( s>=0 ) return s;
						break;

					case 13 : 
						int LA422_93 = input.LA(1);
						 
						int index422_93 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_93);
						if ( s>=0 ) return s;
						break;

					case 14 : 
						int LA422_67 = input.LA(1);
						 
						int index422_67 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_67);
						if ( s>=0 ) return s;
						break;

					case 15 : 
						int LA422_31 = input.LA(1);
						 
						int index422_31 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_31);
						if ( s>=0 ) return s;
						break;

					case 16 : 
						int LA422_83 = input.LA(1);
						 
						int index422_83 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_83);
						if ( s>=0 ) return s;
						break;

					case 17 : 
						int LA422_54 = input.LA(1);
						 
						int index422_54 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_54);
						if ( s>=0 ) return s;
						break;

					case 18 : 
						int LA422_89 = input.LA(1);
						 
						int index422_89 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_89);
						if ( s>=0 ) return s;
						break;

					case 19 : 
						int LA422_73 = input.LA(1);
						 
						int index422_73 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_73);
						if ( s>=0 ) return s;
						break;

					case 20 : 
						int LA422_69 = input.LA(1);
						 
						int index422_69 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_69);
						if ( s>=0 ) return s;
						break;

					case 21 : 
						int LA422_40 = input.LA(1);
						 
						int index422_40 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_40);
						if ( s>=0 ) return s;
						break;

					case 22 : 
						int LA422_84 = input.LA(1);
						 
						int index422_84 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_84);
						if ( s>=0 ) return s;
						break;

					case 23 : 
						int LA422_56 = input.LA(1);
						 
						int index422_56 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_56);
						if ( s>=0 ) return s;
						break;

					case 24 : 
						int LA422_91 = input.LA(1);
						 
						int index422_91 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_91);
						if ( s>=0 ) return s;
						break;

					case 25 : 
						int LA422_78 = input.LA(1);
						 
						int index422_78 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_78);
						if ( s>=0 ) return s;
						break;

					case 26 : 
						int LA422_81 = input.LA(1);
						 
						int index422_81 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_81);
						if ( s>=0 ) return s;
						break;

					case 27 : 
						int LA422_50 = input.LA(1);
						 
						int index422_50 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_50);
						if ( s>=0 ) return s;
						break;

					case 28 : 
						int LA422_82 = input.LA(1);
						 
						int index422_82 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_82);
						if ( s>=0 ) return s;
						break;

					case 29 : 
						int LA422_52 = input.LA(1);
						 
						int index422_52 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_52);
						if ( s>=0 ) return s;
						break;

					case 30 : 
						int LA422_87 = input.LA(1);
						 
						int index422_87 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_87);
						if ( s>=0 ) return s;
						break;

					case 31 : 
						int LA422_85 = input.LA(1);
						 
						int index422_85 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_85);
						if ( s>=0 ) return s;
						break;

					case 32 : 
						int LA422_62 = input.LA(1);
						 
						int index422_62 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_62);
						if ( s>=0 ) return s;
						break;

					case 33 : 
						int LA422_58 = input.LA(1);
						 
						int index422_58 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_58);
						if ( s>=0 ) return s;
						break;

					case 34 : 
						int LA422_79 = input.LA(1);
						 
						int index422_79 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_79);
						if ( s>=0 ) return s;
						break;

					case 35 : 
						int LA422_46 = input.LA(1);
						 
						int index422_46 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_46);
						if ( s>=0 ) return s;
						break;

					case 36 : 
						int LA422_71 = input.LA(1);
						 
						int index422_71 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_71);
						if ( s>=0 ) return s;
						break;

					case 37 : 
						int LA422_36 = input.LA(1);
						 
						int index422_36 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_36);
						if ( s>=0 ) return s;
						break;

					case 38 : 
						int LA422_90 = input.LA(1);
						 
						int index422_90 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_90);
						if ( s>=0 ) return s;
						break;

					case 39 : 
						int LA422_75 = input.LA(1);
						 
						int index422_75 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_75);
						if ( s>=0 ) return s;
						break;

					case 40 : 
						int LA422_65 = input.LA(1);
						 
						int index422_65 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_65);
						if ( s>=0 ) return s;
						break;

					case 41 : 
						int LA422_27 = input.LA(1);
						 
						int index422_27 = input.index();
						input.rewind();
						s = -1;
						if ( (synpred855_SQL()) ) {s = 3;}
						else if ( (true) ) {s = 1;}
						 
						input.seek(index422_27);
						if ( s>=0 ) return s;
						break;
			}
			if (state.backtracking>0) {state.failed=true; return -1;}
			NoViableAltException nvae =
				new NoViableAltException(getDescription(), 422, _s, input);
			error(nvae);
			throw nvae;
		}
	}

	public static final BitSet FOLLOW_set_in_relational_op20399 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_BINARY_in_cast_data_type20656 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_cast_data_type20659 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHAR_in_cast_data_type20668 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_cast_data_type20671 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DATE_SYM_in_cast_data_type20680 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DATETIME_in_cast_data_type20686 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DECIMAL_SYM_in_cast_data_type20693 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_cast_data_type20697 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_cast_data_type20700 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_cast_data_type20702 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SIGNED_SYM_in_cast_data_type20713 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
	public static final BitSet FOLLOW_INTEGER_SYM_in_cast_data_type20716 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIME_SYM_in_cast_data_type20724 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_UNSIGNED_SYM_in_cast_data_type20730 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
	public static final BitSet FOLLOW_INTEGER_SYM_in_cast_data_type20733 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IN_SYM_in_search_modifier20748 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_NATURAL_in_search_modifier20750 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_LANGUAGE_in_search_modifier20752 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_MODE_SYM_in_search_modifier20754 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IN_SYM_in_search_modifier20762 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_NATURAL_in_search_modifier20764 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_LANGUAGE_in_search_modifier20766 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_MODE_SYM_in_search_modifier20768 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_WITH_in_search_modifier20770 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_QUERY_SYM_in_search_modifier20772 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_EXPANSION_SYM_in_search_modifier20774 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IN_SYM_in_search_modifier20782 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_BOOLEAN_SYM_in_search_modifier20784 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_MODE_SYM_in_search_modifier20786 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_WITH_in_search_modifier20794 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_QUERY_SYM_in_search_modifier20796 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_EXPANSION_SYM_in_search_modifier20798 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TEXT_STRING_in_string_literal20967 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_number_literal20985 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HEX_DIGIT_in_hex_literal21002 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_BIT_NUM_in_bit_literal21023 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_string_literal_in_literal_value21041 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_number_literal_in_literal_value21045 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_hex_literal_in_literal_value21049 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_boolean_literal_in_literal_value21053 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_literal_in_literal_value21057 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NULL_SYM_in_literal_value21061 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_number_functions_in_functionList21080 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_char_functions_in_functionList21087 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_time_functions_in_functionList21094 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_other_functions_in_functionList21100 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_schema_name22180 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_table_name22198 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_engine_name22215 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_column_name22232 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_view_name22249 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_parser_name22266 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_index_name22284 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_partition_name22302 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_partition_logical_name22318 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_constraint_symbol_name22334 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_foreign_key_symbol_name22349 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_collation_name22367 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_event_name22385 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_user_name22402 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_function_name22419 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_procedure_name22437 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_server_name22454 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ID_in_wrapper_name22472 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AS_SYM_in_alias22491 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_ID_in_alias22498 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_exp_factor1_in_expression22515 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_OR_SYM_in_expression22519 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_exp_factor1_in_expression22523 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_exp_factor2_in_exp_factor122534 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_XOR_in_exp_factor122538 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_exp_factor2_in_exp_factor122542 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_exp_factor3_in_exp_factor222553 = new BitSet(new long[]{0x0000000000200002L});
	public static final BitSet FOLLOW_AND_SYM_in_exp_factor222557 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_exp_factor3_in_exp_factor222561 = new BitSet(new long[]{0x0000000000200002L});
	public static final BitSet FOLLOW_NOT_SYM_in_exp_factor322573 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_exp_factor4_in_exp_factor322579 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bool_primary_in_exp_factor422587 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_IS_SYM_in_exp_factor422592 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_NOT_SYM_in_exp_factor422595 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_boolean_literal_in_exp_factor422602 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NULL_SYM_in_exp_factor422604 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predicate_in_bool_primary22621 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000804L,0x0200000020000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_relational_op_in_bool_primary22623 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_predicate_in_bool_primary22625 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EXISTS_in_bool_primary22651 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_subquery_in_bool_primary22653 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_SYM_in_bool_primary22672 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_EXISTS_in_bool_primary22674 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_subquery_in_bool_primary22676 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predicate_in_bool_primary22695 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predicate_in_in_predicate22711 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predicate_like_in_predicate22720 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_predicate22729 = new BitSet(new long[]{0x0000100000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_NOT_SYM_in_predicate22733 = new BitSet(new long[]{0x0000100000000000L});
	public static final BitSet FOLLOW_BETWEEN_in_predicate22737 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_predicate22742 = new BitSet(new long[]{0x0000000000200000L});
	public static final BitSet FOLLOW_AND_SYM_in_predicate22744 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_predicate_in_predicate22748 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_predicate22759 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L,0x0000000004000000L});
	public static final BitSet FOLLOW_NOT_SYM_in_predicate22763 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_REGEXP_in_predicate22767 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_predicate22772 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_predicate22783 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_predicate_in22799 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_IN_SYM_in_predicate_in22801 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_subquery_in_predicate_in22805 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_predicate_in22827 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_NOT_IN_SYM_in_predicate_in22829 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_subquery_in_predicate_in22833 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_predicate_in22855 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_IN_SYM_in_predicate_in22857 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_expression_list_in_predicate_in22861 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_predicate_in22884 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_NOT_IN_SYM_in_predicate_in22886 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_expression_list_in_predicate_in22890 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_predicate_like22917 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_SOUNDS_SYM_in_predicate_like22920 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_LIKE_SYM_in_predicate_like22922 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_predicate_like22926 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_predicate_like22948 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_LIKE_SYM_in_predicate_like22950 = new BitSet(new long[]{0x0178882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x0206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_simple_expr_in_predicate_like22952 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_predicate_like22972 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_NOT_SYM_in_predicate_like22974 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_LIKE_SYM_in_predicate_like22976 = new BitSet(new long[]{0x0178882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x0206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_simple_expr_in_predicate_like22978 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_factor1_in_bit_expr23004 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_VERTBAR_in_bit_expr23008 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_factor1_in_bit_expr23012 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_factor2_in_factor123024 = new BitSet(new long[]{0x0004000000000002L});
	public static final BitSet FOLLOW_BITAND_in_factor123028 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_factor2_in_factor123032 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_factor3_in_factor223044 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000180000L});
	public static final BitSet FOLLOW_set_in_factor223048 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_factor3_in_factor223056 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_factor4_in_factor323068 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L});
	public static final BitSet FOLLOW_set_in_factor323072 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_factor4_in_factor323080 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_factor5_in_factor423092 = new BitSet(new long[]{0x0000000020000002L,0x0000000000000000L,0x0040000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0001000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_set_in_factor423096 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_factor5_in_factor423108 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_factor6_in_factor523120 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L});
	public static final BitSet FOLLOW_set_in_factor523124 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_interval_expr_in_factor523132 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_factor623144 = new BitSet(new long[]{0x0178882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x0206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_simple_expr_in_factor623162 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_simple_expr_in_factor623168 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_simple_expr_in_factor723177 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
	public static final BitSet FOLLOW_COLLATE_SYM_in_factor723180 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060000L});
	public static final BitSet FOLLOW_collation_names_in_factor723184 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_literal_value_in_simple_expr23194 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_column_spec_in_simple_expr23201 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_call_in_simple_expr23207 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_USER_VAR_in_simple_expr23216 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_list_in_simple_expr23222 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ROW_SYM_in_simple_expr23229 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_expression_list_in_simple_expr23231 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_subquery_in_simple_expr23238 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EXISTS_in_simple_expr23244 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_subquery_in_simple_expr23248 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_match_against_statement_in_simple_expr23257 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_case_when_statement_in_simple_expr23263 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_interval_expr_in_simple_expr23269 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_functionList_in_function_call23285 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_function_call23289 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2E25005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_function_call23292 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_function_call23295 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_function_call23297 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_function_call23303 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CAST_SYM_in_function_call23319 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_function_call23321 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_function_call23323 = new BitSet(new long[]{0x0000000040000000L});
	public static final BitSet FOLLOW_AS_SYM_in_function_call23325 = new BitSet(new long[]{0x0001000000000000L,0x0000000000002000L,0x0000000400440000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L,0x0000004000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_cast_data_type_in_function_call23327 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_function_call23329 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CONVERT_SYM_in_function_call23341 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_function_call23343 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_function_call23345 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_function_call23347 = new BitSet(new long[]{0x0001000000000000L,0x0000000000002000L,0x0000000400440000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L,0x0000004000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_cast_data_type_in_function_call23349 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_function_call23351 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CONVERT_SYM_in_function_call23363 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_function_call23365 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_function_call23367 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_USING_SYM_in_function_call23369 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_transcoding_name_in_function_call23371 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_function_call23373 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_group_functions_in_function_call23385 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_function_call23387 = new BitSet(new long[]{0x01798821B4021B50L,0x03B809800501A3C0L,0x001030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_function_call23404 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_function_call23406 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_case_when_statement1_in_case_when_statement23425 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_case_when_statement2_in_case_when_statement23429 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CASE_SYM_in_case_when_statement123444 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_WHEN_SYM_in_case_when_statement123458 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_case_when_statement123462 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_THEN_SYM_in_case_when_statement123464 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_case_when_statement123468 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000202L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_ELSE_SYM_in_case_when_statement123483 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_case_when_statement123487 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_END_SYM_in_case_when_statement123500 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CASE_SYM_in_case_when_statement223515 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_case_when_statement223519 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_WHEN_SYM_in_case_when_statement223531 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_case_when_statement223535 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_THEN_SYM_in_case_when_statement223537 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_case_when_statement223541 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000202L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_ELSE_SYM_in_case_when_statement223556 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_case_when_statement223560 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_END_SYM_in_case_when_statement223573 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MATCH_in_match_against_statement23585 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_spec_in_match_against_statement23588 = new BitSet(new long[]{0x0000000000004000L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_match_against_statement23591 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_spec_in_match_against_statement23593 = new BitSet(new long[]{0x0000000000004000L,0x0000000080000000L});
	public static final BitSet FOLLOW_AGAINST_in_match_against_statement23599 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_match_against_statement23602 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_search_modifier_in_match_against_statement23605 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_schema_name_in_column_spec23624 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_DOT_in_column_spec23626 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_column_spec23633 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_DOT_in_column_spec23635 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_name_in_column_spec23642 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_expression_list23652 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_expression_list23656 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_expression_list23660 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_expression_list23664 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_expression_list23669 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INTERVAL_SYM_in_interval_expr23683 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_interval_expr23685 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000000F8000000L,0x0000000000000000L,0x000000000F000000L,0x0000000000000000L,0x000201C000000000L,0x0000000000000000L,0x0000000000000020L,0x000000000000000CL,0x0000000000000000L,0x0008000000000000L,0x00000000000000A0L});
	public static final BitSet FOLLOW_interval_unit_in_interval_expr23687 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_reference_in_table_references23709 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_table_references23713 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_table_reference_in_table_references23717 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_table_factor1_in_table_reference23729 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_atom_in_table_reference23733 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_factor2_in_table_factor123742 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000040000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_table_factor1_part_in_table_factor123745 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_factor3_in_table_factor223756 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_table_factor2_part_in_table_factor223759 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_factor4_in_table_factor323770 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_table_factor3_part_in_table_factor323773 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_atom_in_table_factor423784 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_table_factor4_part_in_table_factor423787 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_spec_in_table_atom23802 = new BitSet(new long[]{0x0000000040000002L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L,0x0000000440000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_partition_clause_in_table_atom23807 = new BitSet(new long[]{0x0000000040000002L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L,0x0000000440000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_alias_in_table_atom23812 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_index_hint_list_in_table_atom23817 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_subquery_in_table_atom23829 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_alias_in_table_atom23831 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_table_atom23841 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_table_references_in_table_atom23843 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_table_atom23845 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_OJ_SYM_in_table_atom23855 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_table_reference_in_table_atom23857 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_LEFT_in_table_atom23859 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_OUTER_in_table_atom23861 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_JOIN_SYM_in_table_atom23863 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_table_reference_in_table_atom23865 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ON_in_table_atom23867 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_table_atom23869 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_JOIN_SYM_in_table_factor1_part23890 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_table_atom_in_table_factor1_part23894 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_join_condition_in_table_factor1_part23897 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRAIGHT_JOIN_in_table_factor2_part23912 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_table_atom_in_table_factor2_part23916 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ON_in_table_factor2_part23919 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_table_factor2_part23923 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_table_factor3_part23938 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_OUTER_in_table_factor3_part23945 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_JOIN_SYM_in_table_factor3_part23949 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_table_factor4_in_table_factor3_part23953 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_join_condition_in_table_factor3_part23955 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NATURAL_in_table_factor4_part23968 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000004L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_set_in_table_factor4_part23972 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_OUTER_in_table_factor4_part23979 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_JOIN_SYM_in_table_factor4_part23986 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_table_atom_in_table_factor4_part23990 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ON_in_join_condition24004 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_join_condition24008 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_USING_SYM_in_join_condition24014 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_column_list_in_join_condition24018 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_index_hint_in_index_hint_list24028 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_index_hint_list24031 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_index_hint_in_index_hint_list24035 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_set_in_index_options24046 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_FOR_SYM_in_index_options24057 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000004L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_JOIN_SYM_in_index_options24061 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ORDER_SYM_in_index_options24067 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_BY_SYM_in_index_options24069 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GROUP_SYM_in_index_options24075 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_BY_SYM_in_index_options24077 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_USE_SYM_in_index_hint24094 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_index_options_in_index_hint24099 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_index_hint24101 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_index_list_in_index_hint24104 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_index_hint24108 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IGNORE_SYM_in_index_hint24114 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_index_options_in_index_hint24116 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_index_hint24118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_list_in_index_hint24120 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_index_hint24122 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FORCE_SYM_in_index_hint24128 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_index_options_in_index_hint24131 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_index_hint24133 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_list_in_index_hint24135 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_index_hint24137 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_index_name_in_index_list24146 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_index_list24149 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_name_in_index_list24151 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_PARTITION_SYM_in_partition_clause24162 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_partition_clause24164 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_partition_names_in_partition_clause24166 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_partition_clause24168 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_partition_name_in_partition_names24176 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_partition_names24179 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_partition_name_in_partition_names24181 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_SHIFT_LEFT_in_root_statement24200 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_SHIFT_RIGHT_in_root_statement24202 = new BitSet(new long[]{0x0000000000080000L,0x0000000000000008L,0x0600040000000010L,0x0000000000000000L,0x0000400000002000L,0x0000004000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004200000000L,0x0000000000000040L,0x0080000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_data_manipulation_statements_in_root_statement24212 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_data_definition_statements_in_root_statement24216 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_SEMI_in_root_statement24225 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_select_statement_in_data_manipulation_statements24239 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_delete_statements_in_data_manipulation_statements24245 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_insert_statements_in_data_manipulation_statements24251 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_update_statements_in_data_manipulation_statements24257 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_call_statement_in_data_manipulation_statements24264 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_do_statement_in_data_manipulation_statements24270 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_handler_statements_in_data_manipulation_statements24276 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_load_data_statement_in_data_manipulation_statements24282 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_load_xml_statement_in_data_manipulation_statements24288 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_replace_statement_in_data_manipulation_statements24294 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_database_statement_in_data_definition_statements24307 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_database_statements_in_data_definition_statements24313 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_database_statement_in_data_definition_statements24319 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_event_statement_in_data_definition_statements24328 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_event_statement_in_data_definition_statements24334 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_event_statement_in_data_definition_statements24340 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_server_statement_in_data_definition_statements24382 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_server_statement_in_data_definition_statements24388 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_server_statement_in_data_definition_statements24394 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_table_statement_in_data_definition_statements24403 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_table_statement_in_data_definition_statements24409 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_table_statement_in_data_definition_statements24415 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_view_statement_in_data_definition_statements24424 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_view_statement_in_data_definition_statements24430 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rename_table_statement_in_data_definition_statements24436 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_view_statement_in_data_definition_statements24442 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_truncate_table_statement_in_data_definition_statements24448 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_index_statement_in_data_definition_statements24457 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_index_statement_in_data_definition_statements24463 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_select_expression_in_select_statement24489 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_UNION_SYM_in_select_statement24494 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_ALL_in_select_statement24497 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_select_expression_in_select_statement24504 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_select_part_in_select_expression24518 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0024000000000000L,0x0004000000000000L,0x0000040100000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_from_part_in_select_expression24529 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0004000000008400L,0x0000040100000000L,0x0000000000000000L,0x0000020008000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_partition_clause_in_select_expression24537 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0004000000008400L,0x0000040100000000L,0x0000000000000000L,0x0000000008000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_where_clause_in_select_expression24548 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0004000000008400L,0x0000040100000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_groupby_clause_in_select_expression24560 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0004000000008000L,0x0000040100000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_having_clause_in_select_expression24571 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0004000000000000L,0x0000040100000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_orderby_clause_in_select_expression24589 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0004000000000000L,0x0000040100000000L});
	public static final BitSet FOLLOW_limit_clause_in_select_expression24598 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000040000000000L});
	public static final BitSet FOLLOW_FOR_SYM_in_select_expression24609 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_UPDATE_in_select_expression24611 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LOCK_in_select_expression24617 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_IN_SYM_in_select_expression24619 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SHARE_SYM_in_select_expression24621 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_MODE_SYM_in_select_expression24623 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SELECT_in_select_part24638 = new BitSet(new long[]{0x01798821B4021B50L,0x03B809800501A3C0L,0x003030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3412C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF013F04824804026L,0x00E070FE220C1E2CL,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_HIGH_PRIORITY_in_select_part24666 = new BitSet(new long[]{0x01798821B4001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF013F04824804026L,0x00E070FE220C1E2CL,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_STRAIGHT_JOIN_in_select_part24673 = new BitSet(new long[]{0x01798821B4001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF013F04824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_SQL_SMALL_RESULT_in_select_part24680 = new BitSet(new long[]{0x01798821B4001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF011F04824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_SQL_BIG_RESULT_in_select_part24685 = new BitSet(new long[]{0x01798821B4001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF011E04824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_SQL_BUFFER_RESULT_in_select_part24690 = new BitSet(new long[]{0x01798821B4001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF011C04824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_SQL_CALC_FOUND_ROWS_in_select_part24706 = new BitSet(new long[]{0x01798821B4001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_select_list_in_select_part24713 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FROM_in_from_part24723 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_table_references_in_from_part24727 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_WHERE_in_where_clause24742 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_where_clause24746 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GROUP_SYM_in_groupby_clause24757 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_BY_SYM_in_groupby_clause24759 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_groupby_item_in_groupby_clause24764 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_groupby_clause24767 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_groupby_item_in_groupby_clause24771 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_WITH_in_groupby_clause24776 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_ROLLUP_SYM_in_groupby_clause24778 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_column_spec_in_groupby_item24787 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_groupby_item24791 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_groupby_item24795 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HAVING_in_having_clause24805 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_having_clause24809 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ORDER_SYM_in_orderby_clause24820 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_BY_SYM_in_orderby_clause24822 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_orderby_item_in_orderby_clause24827 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_orderby_clause24830 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_orderby_item_in_orderby_clause24834 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_groupby_item_in_orderby_item24843 = new BitSet(new long[]{0x0000000002000002L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_LIMIT_in_limit_clause24862 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_offset_in_limit_clause24866 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_limit_clause24868 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_row_count_in_limit_clause24872 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_row_count_in_limit_clause24878 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_OFFSET_SYM_in_limit_clause24880 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_offset_in_limit_clause24882 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_offset24892 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_row_count24900 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_displayed_column_in_select_list24914 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_select_list24918 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_displayed_column_in_select_list24922 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_ASTERISK_in_select_list24932 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_column_list24945 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_spec_in_column_list24949 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_column_list24952 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_spec_in_column_list24956 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_list24960 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_subquery24973 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_select_statement_in_subquery24977 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_subquery24979 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_schema_name_in_table_spec24994 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_DOT_in_table_spec24996 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_table_spec25002 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_spec_in_displayed_column25018 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_DOT_in_displayed_column25020 = new BitSet(new long[]{0x0000000020000000L});
	public static final BitSet FOLLOW_ASTERISK_in_displayed_column25024 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_column_spec_in_displayed_column25036 = new BitSet(new long[]{0x0000000040000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_alias_in_displayed_column25039 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_displayed_column25054 = new BitSet(new long[]{0x0000000040000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_alias_in_displayed_column25057 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DELETE_SYM_in_delete_statements25078 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L,0x0000000440000000L,0x0040000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LOW_PRIORITY_in_delete_statements25081 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L,0x0000000440000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_QUICK_in_delete_statements25086 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L,0x0000000440000000L});
	public static final BitSet FOLLOW_IGNORE_SYM_in_delete_statements25091 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_delete_single_table_statement_in_delete_statements25099 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_delete_multiple_table_statement1_in_delete_statements25103 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_delete_multiple_table_statement2_in_delete_statements25107 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FROM_in_delete_single_table_statement25118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_spec_in_delete_single_table_statement25120 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000020008000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_partition_clause_in_delete_single_table_statement25125 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000008000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_where_clause_in_delete_single_table_statement25132 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_orderby_clause_in_delete_single_table_statement25139 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_limit_clause_in_delete_single_table_statement25146 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_spec_in_delete_multiple_table_statement125157 = new BitSet(new long[]{0x0000000000040000L,0x0000000080000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_ALL_FIELDS_in_delete_multiple_table_statement125160 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_COMMA_in_delete_multiple_table_statement125165 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_spec_in_delete_multiple_table_statement125167 = new BitSet(new long[]{0x0000000000040000L,0x0000000080000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_ALL_FIELDS_in_delete_multiple_table_statement125170 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_FROM_in_delete_multiple_table_statement125178 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_table_references_in_delete_multiple_table_statement125180 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_where_clause_in_delete_multiple_table_statement125185 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FROM_in_delete_multiple_table_statement225196 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_spec_in_delete_multiple_table_statement225198 = new BitSet(new long[]{0x0000000000040000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ALL_FIELDS_in_delete_multiple_table_statement225201 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_COMMA_in_delete_multiple_table_statement225206 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_spec_in_delete_multiple_table_statement225208 = new BitSet(new long[]{0x0000000000040000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_ALL_FIELDS_in_delete_multiple_table_statement225211 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_USING_SYM_in_delete_multiple_table_statement225219 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_table_references_in_delete_multiple_table_statement225221 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_where_clause_in_delete_multiple_table_statement225226 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_insert_statement1_in_insert_statements25244 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_insert_statement2_in_insert_statements25248 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_insert_statement3_in_insert_statements25252 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INSERT_in_insert_header25262 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000440200000L,0x0040000000000000L});
	public static final BitSet FOLLOW_IGNORE_SYM_in_insert_header25274 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000040000000L});
	public static final BitSet FOLLOW_INTO_in_insert_header25281 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_spec_in_insert_header25285 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_partition_clause_in_insert_header25291 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ON_in_insert_subfix25303 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2000000000000000L});
	public static final BitSet FOLLOW_DUPLICATE_SYM_in_insert_subfix25305 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_KEY_SYM_in_insert_subfix25307 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_UPDATE_in_insert_subfix25309 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_spec_in_insert_subfix25311 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_EQ_SYM_in_insert_subfix25313 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_insert_subfix25315 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_insert_subfix25318 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_spec_in_insert_subfix25320 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_EQ_SYM_in_insert_subfix25322 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_insert_subfix25324 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_insert_header_in_insert_statement125336 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000003000000000L});
	public static final BitSet FOLLOW_column_list_in_insert_statement125341 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000003000000000L});
	public static final BitSet FOLLOW_value_list_clause_in_insert_statement125348 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_insert_subfix_in_insert_statement125354 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_value_list_clause25365 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_column_value_list_in_value_list_clause25373 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_value_list_clause25376 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_column_value_list_in_value_list_clause25378 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_LPAREN_in_column_value_list25387 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_column_value_list25390 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_value_list25392 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_column_value_list25396 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_column_value_list25399 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_value_list25401 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_value_list25407 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_insert_header_in_insert_statement225417 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_set_columns_cluase_in_insert_statement225421 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_insert_subfix_in_insert_statement225427 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SET_SYM_in_set_columns_cluase25437 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_set_column_cluase_in_set_columns_cluase25439 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_set_columns_cluase25443 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_set_column_cluase_in_set_columns_cluase25445 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_column_spec_in_set_column_cluase25455 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_EQ_SYM_in_set_column_cluase25457 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_set_column_cluase25460 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DEFAULT_in_set_column_cluase25462 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_insert_header_in_insert_statement325473 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_column_list_in_insert_statement325478 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_select_expression_in_insert_statement325485 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_insert_subfix_in_insert_statement325491 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_single_table_update_statement_in_update_statements25512 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_multiple_table_update_statement_in_update_statements25516 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_UPDATE_in_single_table_update_statement25525 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000440000000L,0x0140000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_LOW_PRIORITY_in_single_table_update_statement25528 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000440000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_IGNORE_SYM_in_single_table_update_statement25533 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_table_reference_in_single_table_update_statement25537 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_set_columns_cluase_in_single_table_update_statement25541 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000008000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_where_clause_in_single_table_update_statement25546 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_orderby_clause_in_single_table_update_statement25553 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_limit_clause_in_single_table_update_statement25560 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_UPDATE_in_multiple_table_update_statement25573 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000440000000L,0x0140000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_LOW_PRIORITY_in_multiple_table_update_statement25576 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000440000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_IGNORE_SYM_in_multiple_table_update_statement25581 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_table_references_in_multiple_table_update_statement25585 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_set_columns_cluase_in_multiple_table_update_statement25589 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_where_clause_in_multiple_table_update_statement25594 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CALL_SYM_in_call_statement25612 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_procedure_name_in_call_statement25614 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_call_statement25617 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2E25005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_call_statement25621 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_call_statement25624 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_call_statement25626 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_call_statement25633 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DO_SYM_in_do_statement25651 = new BitSet(new long[]{0x0000000000080000L,0x0000000000000008L,0x0600040000000010L,0x0000000000000000L,0x0000400000002000L,0x0000004000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004200000000L,0x0000000000080040L,0x0080000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_root_statement_in_do_statement25653 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_do_statement25656 = new BitSet(new long[]{0x0000000000080000L,0x0000000000000008L,0x0600040000000010L,0x0000000000000000L,0x0000400000002000L,0x0000004000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004200000000L,0x0000000000080040L,0x0080000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_root_statement_in_do_statement25658 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_HANDLER_SYM_in_handler_statements25676 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_handler_statements25678 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L,0x0000000000010000L});
	public static final BitSet FOLLOW_open_handler_statement_in_handler_statements25683 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_handler_statement1_in_handler_statements25687 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_handler_statement2_in_handler_statements25691 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_handler_statement3_in_handler_statements25695 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_close_handler_statement_in_handler_statements25699 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_OPEN_SYM_in_open_handler_statement25710 = new BitSet(new long[]{0x0000000040000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_alias_in_open_handler_statement25713 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_READ_SYM_in_handler_statement125725 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_name_in_handler_statement125727 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000804L,0x0200000020000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_relational_op_in_handler_statement125729 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_handler_statement125731 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_handler_statement125733 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_handler_statement125736 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_handler_statement125738 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_handler_statement125742 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_where_clause_in_handler_statement125747 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_limit_clause_in_handler_statement125752 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_READ_SYM_in_handler_statement225764 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_name_in_handler_statement225766 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L,0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0800000000000001L});
	public static final BitSet FOLLOW_set_in_handler_statement225768 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_where_clause_in_handler_statement225787 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_limit_clause_in_handler_statement225792 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_READ_SYM_in_handler_statement325804 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_set_in_handler_statement325806 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_where_clause_in_handler_statement325817 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_limit_clause_in_handler_statement325822 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CLOSE_SYM_in_close_handler_statement25834 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LOAD_in_load_data_statement25851 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_DATA_SYM_in_load_data_statement25853 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0040010000000000L});
	public static final BitSet FOLLOW_LOCAL_SYM_in_load_data_statement25865 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_INFILE_in_load_data_statement25869 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_load_data_statement25871 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_INTO_in_load_data_statement25886 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_TABLE_in_load_data_statement25888 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_spec_in_load_data_statement25890 = new BitSet(new long[]{0x0000000000000002L,0x0000000010004000L,0x0000000000000000L,0x0000008000000000L,0x0000000400000000L,0x0100000400000000L,0x0000000000000000L,0x0000020000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_partition_clause_in_load_data_statement25895 = new BitSet(new long[]{0x0000000000000002L,0x0000000010004000L,0x0000000000000000L,0x0000008000000000L,0x0000000400000000L,0x0100000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_CHARACTER_SYM_in_load_data_statement25902 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_load_data_statement25904 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000060000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_charset_name_in_load_data_statement25906 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L,0x0000000000000000L,0x0000008000000000L,0x0000000400000000L,0x0100000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_set_in_load_data_statement25918 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000008020L,0x0000000400000000L,0x0100000400000000L,0x0000000000000000L,0x0000000001000000L,0x0000000000000000L,0x0000000000008000L,0x0000000010000000L});
	public static final BitSet FOLLOW_TERMINATED_in_load_data_statement25931 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_BY_SYM_in_load_data_statement25933 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_load_data_statement25935 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000008020L,0x0000000400000000L,0x0100000400000000L,0x0000000000000000L,0x0000000001000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_OPTIONALLY_in_load_data_statement25945 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_ENCLOSED_in_load_data_statement25949 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_BY_SYM_in_load_data_statement25951 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_load_data_statement25953 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L,0x0000000400000000L,0x0100000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_ESCAPED_in_load_data_statement25962 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_BY_SYM_in_load_data_statement25964 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_load_data_statement25966 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0100000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_LINES_in_load_data_statement25983 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000008000L,0x0000000010000000L});
	public static final BitSet FOLLOW_STARTING_in_load_data_statement25990 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_BY_SYM_in_load_data_statement25992 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_load_data_statement25994 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L,0x0000000010000000L});
	public static final BitSet FOLLOW_TERMINATED_in_load_data_statement26003 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_BY_SYM_in_load_data_statement26005 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_load_data_statement26007 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_IGNORE_SYM_in_load_data_statement26019 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_load_data_statement26021 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_set_in_load_data_statement26023 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_LPAREN_in_load_data_statement26036 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_column_spec_in_load_data_statement26039 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_USER_VAR_in_load_data_statement26041 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_load_data_statement26045 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_column_spec_in_load_data_statement26048 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_USER_VAR_in_load_data_statement26050 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_load_data_statement26055 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_set_columns_cluase_in_load_data_statement26062 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LOAD_in_load_xml_statement26080 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_XML_SYM_in_load_xml_statement26082 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0040010000000000L});
	public static final BitSet FOLLOW_LOCAL_SYM_in_load_xml_statement26094 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_INFILE_in_load_xml_statement26098 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_load_xml_statement26100 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_INTO_in_load_xml_statement26115 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_TABLE_in_load_xml_statement26117 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_spec_in_load_xml_statement26119 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0100000000000000L,0x0000000000000000L,0x0000020000000000L,0x0080000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_partition_clause_in_load_xml_statement26124 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_CHARACTER_SYM_in_load_xml_statement26131 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_load_xml_statement26133 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000060000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_charset_name_in_load_xml_statement26135 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_ROWS_SYM_in_load_xml_statement26142 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_IDENTIFIED_SYM_in_load_xml_statement26144 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_BY_SYM_in_load_xml_statement26146 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_load_xml_statement26148 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_IGNORE_SYM_in_load_xml_statement26155 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_load_xml_statement26157 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_set_in_load_xml_statement26159 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_LPAREN_in_load_xml_statement26172 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_column_spec_in_load_xml_statement26175 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_USER_VAR_in_load_xml_statement26177 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_load_xml_statement26181 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_column_spec_in_load_xml_statement26184 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_USER_VAR_in_load_xml_statement26186 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_load_xml_statement26191 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_set_columns_cluase_in_load_xml_statement26198 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_replace_statement_header_in_replace_statement26216 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008040L,0x0000000000000000L,0x0000003000000000L});
	public static final BitSet FOLLOW_replace_statement1_in_replace_statement26222 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_replace_statement2_in_replace_statement26226 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_replace_statement3_in_replace_statement26230 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_REPLACE_in_replace_statement_header26242 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0020000040000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_INTO_in_replace_statement_header26256 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_replace_statement_header26260 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_partition_clause_in_replace_statement_header26265 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_column_list_in_replace_statement126278 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000003000000000L});
	public static final BitSet FOLLOW_value_list_clause_in_replace_statement126284 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_columns_cluase_in_replace_statement226294 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_column_list_in_replace_statement326305 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_select_statement_in_replace_statement326311 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CREATE_in_create_database_statement26328 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_create_database_statement26330 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000140000000L});
	public static final BitSet FOLLOW_IF_in_create_database_statement26339 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_NOT_SYM_in_create_database_statement26341 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_EXISTS_in_create_database_statement26343 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_schema_name_in_create_database_statement26347 = new BitSet(new long[]{0x0000000000000002L,0x0000000002004000L,0x0000002000000000L});
	public static final BitSet FOLLOW_create_specification_in_create_database_statement26353 = new BitSet(new long[]{0x0000000000000002L,0x0000000082004000L,0x0000002000000000L});
	public static final BitSet FOLLOW_COMMA_in_create_database_statement26356 = new BitSet(new long[]{0x0000000000000000L,0x0000000002004000L,0x0000002000000000L});
	public static final BitSet FOLLOW_create_specification_in_create_database_statement26358 = new BitSet(new long[]{0x0000000000000002L,0x0000000082004000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_create_specification26373 = new BitSet(new long[]{0x0000000000000000L,0x0000000002004000L});
	public static final BitSet FOLLOW_CHARACTER_SYM_in_create_specification26389 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_create_specification26391 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000062000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_create_specification26394 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000060000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_charset_name_in_create_specification26398 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COLLATE_SYM_in_create_specification26416 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000040000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_create_specification26419 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_collation_name_in_create_specification26423 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_database_statement1_in_alter_database_statements26442 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_database_statement2_in_alter_database_statements26446 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ALTER_in_alter_database_statement126455 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_alter_database_statement126457 = new BitSet(new long[]{0x0000000000000000L,0x0000000002004000L,0x0000002000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_schema_name_in_alter_database_statement126466 = new BitSet(new long[]{0x0000000000000000L,0x0000000002004000L,0x0000002000000000L});
	public static final BitSet FOLLOW_alter_database_specification_in_alter_database_statement126472 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ALTER_in_alter_database_statement226481 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_alter_database_statement226483 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_schema_name_in_alter_database_statement226491 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_UPGRADE_SYM_in_alter_database_statement226495 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_DATA_SYM_in_alter_database_statement226497 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001000000000000L});
	public static final BitSet FOLLOW_DIRECTORY_SYM_in_alter_database_statement226499 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_NAME_SYM_in_alter_database_statement226501 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DEFAULT_in_alter_database_specification26511 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_CHARACTER_SYM_in_alter_database_specification26515 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_alter_database_specification26517 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000062000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_alter_database_specification26520 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000060000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_charset_name_in_alter_database_specification26524 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DEFAULT_in_alter_database_specification26534 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_COLLATE_SYM_in_alter_database_specification26538 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000060000L});
	public static final BitSet FOLLOW_EQ_SYM_in_alter_database_specification26541 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060000L});
	public static final BitSet FOLLOW_collation_names_in_alter_database_specification26545 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DROP_in_drop_database_statement26558 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_drop_database_statement26560 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000140000000L});
	public static final BitSet FOLLOW_IF_in_drop_database_statement26569 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_EXISTS_in_drop_database_statement26571 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_schema_name_in_drop_database_statement26575 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CREATE_in_create_event_statement26591 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_DEFINER_in_create_event_statement26596 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_EQ_SYM_in_create_event_statement26598 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_user_name_in_create_event_statement26602 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_CURRENT_USER_in_create_event_statement26606 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_EVENT_SYM_in_create_event_statement26614 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000140000000L});
	public static final BitSet FOLLOW_IF_in_create_event_statement26619 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_NOT_SYM_in_create_event_statement26621 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_EXISTS_in_create_event_statement26623 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_event_name_in_create_event_statement26629 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ON_in_create_event_statement26633 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_SCHEDULE_SYM_in_create_event_statement26635 = new BitSet(new long[]{0x0000000200000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_schedule_definition_in_create_event_statement26637 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L,0x0202000000000000L,0x0000000000000010L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ON_in_create_event_statement26642 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_COMPLETION_SYM_in_create_event_statement26644 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0400000000000020L});
	public static final BitSet FOLLOW_NOT_SYM_in_create_event_statement26647 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_PRESERVE_SYM_in_create_event_statement26651 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L,0x0202000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_ENABLE_SYM_in_create_event_statement26659 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_DISABLE_SYM_in_create_event_statement26663 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_DISABLE_SYM_in_create_event_statement26668 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ON_in_create_event_statement26670 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_SLAVE_in_create_event_statement26672 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_COMMENT_SYM_in_create_event_statement26681 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_create_event_statement26683 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_do_statement_in_create_event_statement26689 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_SYM_in_schedule_definition26700 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_timestamp_in_schedule_definition26702 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0002000000000000L});
	public static final BitSet FOLLOW_PLUS_in_schedule_definition26705 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_INTERVAL_SYM_in_schedule_definition26707 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_interval_in_schedule_definition26709 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0002000000000000L});
	public static final BitSet FOLLOW_EVERY_SYM_in_schedule_definition26724 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_interval_in_schedule_definition26726 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_STARTS_SYM_in_schedule_definition26734 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_timestamp_in_schedule_definition26736 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0002000000000000L});
	public static final BitSet FOLLOW_PLUS_in_schedule_definition26739 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_INTERVAL_SYM_in_schedule_definition26741 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_interval_in_schedule_definition26743 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0002000000000000L});
	public static final BitSet FOLLOW_ENDS_SYM_in_schedule_definition26754 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_timestamp_in_schedule_definition26756 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0002000000000000L});
	public static final BitSet FOLLOW_PLUS_in_schedule_definition26759 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_INTERVAL_SYM_in_schedule_definition26761 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_interval_in_schedule_definition26763 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0002000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_interval26777 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00000000E8000000L,0x0000000000000000L,0x000000000D000000L,0x0000000000000000L,0x0002014000000000L,0x0000000000000000L,0x0000000000000020L,0x0000000000000004L,0x0000000000000000L,0x0008000000000000L,0x00000000000000A0L});
	public static final BitSet FOLLOW_set_in_interval26779 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CURRENT_TIMESTAMP_in_timestamp26871 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ALTER_in_alter_event_statement26890 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_DEFINER_in_alter_event_statement26895 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_EQ_SYM_in_alter_event_statement26897 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_user_name_in_alter_event_statement26901 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_CURRENT_USER_in_alter_event_statement26905 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_EVENT_SYM_in_alter_event_statement26913 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_event_name_in_alter_event_statement26915 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0202000000000000L,0x0000000000000010L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000200000000L});
	public static final BitSet FOLLOW_ON_in_alter_event_statement26920 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_SCHEDULE_SYM_in_alter_event_statement26922 = new BitSet(new long[]{0x0000000200000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_schedule_definition_in_alter_event_statement26924 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0202000000000000L,0x0000000000000010L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000200000000L});
	public static final BitSet FOLLOW_ON_in_alter_event_statement26931 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_COMPLETION_SYM_in_alter_event_statement26933 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0400000000000020L});
	public static final BitSet FOLLOW_NOT_SYM_in_alter_event_statement26936 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_PRESERVE_SYM_in_alter_event_statement26940 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0202000000000000L,0x0000000000000010L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_RENAME_in_alter_event_statement26947 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_TO_SYM_in_alter_event_statement26949 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_event_name_in_alter_event_statement26951 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0202000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_ENABLE_SYM_in_alter_event_statement26959 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_DISABLE_SYM_in_alter_event_statement26963 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_DISABLE_SYM_in_alter_event_statement26968 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ON_in_alter_event_statement26970 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_SLAVE_in_alter_event_statement26972 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_COMMENT_SYM_in_alter_event_statement26981 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_alter_event_statement26983 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_do_statement_in_alter_event_statement26990 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DROP_in_drop_event_statement27004 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_EVENT_SYM_in_drop_event_statement27006 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000140000000L});
	public static final BitSet FOLLOW_IF_in_drop_event_statement27009 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_EXISTS_in_drop_event_statement27011 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_event_name_in_drop_event_statement27015 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CREATE_in_create_index_statement27038 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0400000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000008000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_INDEX_SYM_in_create_index_statement27049 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_name_in_create_index_statement27051 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_index_type_in_create_index_statement27056 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ON_in_create_index_statement27062 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_create_index_statement27064 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_create_index_statement27066 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_create_index_statement27068 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_create_index_statement27071 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_create_index_statement27073 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_create_index_statement27077 = new BitSet(new long[]{0x0000000000010002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
	public static final BitSet FOLLOW_algorithm_option_in_create_index_statement27082 = new BitSet(new long[]{0x0000000000010002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
	public static final BitSet FOLLOW_lock_option_in_create_index_statement27086 = new BitSet(new long[]{0x0000000000010002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
	public static final BitSet FOLLOW_ALGORITHM_SYM_in_algorithm_option27097 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L,0x0000002000000000L,0x0000000000002000L,0x0000100000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_algorithm_option27100 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_set_in_algorithm_option27104 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LOCK_in_lock_option27119 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000802000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_EQ_SYM_in_lock_option27122 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000800000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_set_in_lock_option27126 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DROP_in_drop_index_statement27146 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_INDEX_SYM_in_drop_index_statement27148 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_name_in_drop_index_statement27150 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ON_in_drop_index_statement27152 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_drop_index_statement27154 = new BitSet(new long[]{0x0000000000010002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
	public static final BitSet FOLLOW_algorithm_option_in_drop_index_statement27159 = new BitSet(new long[]{0x0000000000010002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
	public static final BitSet FOLLOW_lock_option_in_drop_index_statement27163 = new BitSet(new long[]{0x0000000000010002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
	public static final BitSet FOLLOW_CREATE_in_create_server_statement27190 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_SERVER_SYM_in_create_server_statement27192 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_server_name_in_create_server_statement27194 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0001000000000000L});
	public static final BitSet FOLLOW_FOREIGN_in_create_server_statement27198 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_DATA_SYM_in_create_server_statement27200 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000000000000000L});
	public static final BitSet FOLLOW_WRAPPER_SYM_in_create_server_statement27202 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_wrapper_name_in_create_server_statement27204 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_OPTIONS_SYM_in_create_server_statement27208 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_create_server_statement27210 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000004000L,0x0000000000000000L,0x0000000000800000L,0x0000000000000000L,0x0000000000000000L,0x0010040100000000L,0x0800000000000000L,0x0000000200000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_create_server_option_in_create_server_statement27212 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_create_server_statement27215 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000004000L,0x0000000000000000L,0x0000000000800000L,0x0000000000000000L,0x0000000000000000L,0x0010040100000000L,0x0800000000000000L,0x0000000200000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_create_server_option_in_create_server_statement27217 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_create_server_statement27221 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HOST_SYM_in_create_server_option27234 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_string_literal_in_create_server_option27236 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DATABASE_in_create_server_option27246 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_string_literal_in_create_server_option27248 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_USER_in_create_server_option27258 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_string_literal_in_create_server_option27260 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PASSWORD_in_create_server_option27270 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_string_literal_in_create_server_option27272 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SOCKET_SYM_in_create_server_option27282 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_string_literal_in_create_server_option27284 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_OWNER_SYM_in_create_server_option27294 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_string_literal_in_create_server_option27296 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PORT_SYM_in_create_server_option27306 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_create_server_option27308 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ALTER_in_alter_server_statement27322 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_SERVER_SYM_in_alter_server_statement27324 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_server_name_in_alter_server_statement27326 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_OPTIONS_SYM_in_alter_server_statement27330 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_alter_server_statement27332 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_alter_server_option_in_alter_server_statement27334 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_alter_server_statement27337 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_alter_server_option_in_alter_server_statement27339 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_alter_server_statement27343 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_USER_in_alter_server_option27353 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_set_in_alter_server_option27356 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DROP_in_drop_server_statement27372 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_SERVER_SYM_in_drop_server_statement27374 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000140000000L});
	public static final BitSet FOLLOW_IF_in_drop_server_statement27377 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_EXISTS_in_drop_server_statement27379 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_server_name_in_drop_server_statement27383 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_table_statement1_in_create_table_statement27399 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_table_statement2_in_create_table_statement27403 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_table_statement3_in_create_table_statement27407 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CREATE_in_create_table_statement127419 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004200000L});
	public static final BitSet FOLLOW_TEMPORARY_in_create_table_statement127422 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_TABLE_in_create_table_statement127426 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000140000000L});
	public static final BitSet FOLLOW_IF_in_create_table_statement127429 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_NOT_SYM_in_create_table_statement127431 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_EXISTS_in_create_table_statement127433 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_create_table_statement127437 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_create_table_statement127441 = new BitSet(new long[]{0x0000000000000000L,0x0000400000040000L,0x0000000000000000L,0x0401000000000000L,0x0000002040000000L,0x0000000000000080L,0x0000000000000000L,0x1000000000000000L,0x0000000000000000L,0x0000008000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_create_definition_in_create_table_statement127443 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_create_table_statement127446 = new BitSet(new long[]{0x0000000000000000L,0x0000400000040000L,0x0000000000000000L,0x0401000000000000L,0x0000002040000000L,0x0000000000000080L,0x0000000000000000L,0x1000000000000000L,0x0000000000000000L,0x0000008000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_create_definition_in_create_table_statement127448 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_create_table_statement127452 = new BitSet(new long[]{0x0000005000000002L,0x0000100102024000L,0x0000022000010000L,0x0000000000000800L,0x0000802000000000L,0x0000000000000040L,0x0000020000400000L,0x0000060400000000L,0x0100000000000000L,0x0600000000000040L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_table_options_in_create_table_statement127457 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_partition_options_in_create_table_statement127464 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_select_statement_in_create_table_statement127471 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CREATE_in_create_table_statement227483 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004200000L});
	public static final BitSet FOLLOW_TEMPORARY_in_create_table_statement227486 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_TABLE_in_create_table_statement227490 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000140000000L});
	public static final BitSet FOLLOW_IF_in_create_table_statement227493 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_NOT_SYM_in_create_table_statement227495 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_EXISTS_in_create_table_statement227497 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_create_table_statement227501 = new BitSet(new long[]{0x0000005000000000L,0x0000100102024000L,0x0000022000010000L,0x0000000000000800L,0x0000802000000000L,0x0000000000000040L,0x0000020000400000L,0x0000060400000000L,0x0100000000000000L,0x0600000000000040L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_table_options_in_create_table_statement227506 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_partition_options_in_create_table_statement227513 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_select_statement_in_create_table_statement227519 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CREATE_in_create_table_statement327529 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004200000L});
	public static final BitSet FOLLOW_TEMPORARY_in_create_table_statement327532 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_TABLE_in_create_table_statement327536 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000140000000L});
	public static final BitSet FOLLOW_IF_in_create_table_statement327539 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_NOT_SYM_in_create_table_statement327541 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_EXISTS_in_create_table_statement327543 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_create_table_statement327547 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000080000000L});
	public static final BitSet FOLLOW_LIKE_SYM_in_create_table_statement327554 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_create_table_statement327556 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LPAREN_in_create_table_statement327562 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_LIKE_SYM_in_create_table_statement327564 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_create_table_statement327566 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_create_table_statement327568 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_column_name_in_create_definition27586 = new BitSet(new long[]{0x0281400000000000L,0x0000000000002000L,0x0100000400440000L,0x0000100000001000L,0x0048000000000000L,0x0006000000000000L,0x0000000070000000L,0x0000000000000800L,0x0000000000040000L,0x0000000080008000L,0x0000074440000000L,0x000000C000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_column_definition_in_create_definition27588 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CONSTRAINT_in_create_definition27601 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_constraint_symbol_name_in_create_definition27604 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_PRIMARY_SYM_in_create_definition27610 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_KEY_SYM_in_create_definition27612 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_index_type_in_create_definition27615 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_create_definition27619 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_create_definition27621 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_create_definition27624 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_create_definition27626 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_create_definition27630 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_index_option_in_create_definition27633 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_set_in_create_definition27647 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_index_name_in_create_definition27654 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_index_type_in_create_definition27659 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_create_definition27663 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_create_definition27665 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_create_definition27668 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_create_definition27670 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_create_definition27674 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_index_option_in_create_definition27677 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_CONSTRAINT_in_create_definition27692 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_constraint_symbol_name_in_create_definition27695 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_UNIQUE_SYM_in_create_definition27701 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002040000000L,0x0100000000000080L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_index_name_in_create_definition27711 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_index_type_in_create_definition27716 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_create_definition27720 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_create_definition27722 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_create_definition27725 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_create_definition27727 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_create_definition27731 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_index_option_in_create_definition27734 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_set_in_create_definition27748 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002040000000L,0x0100000000000080L});
	public static final BitSet FOLLOW_index_name_in_create_definition27762 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_create_definition27766 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_create_definition27768 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_create_definition27771 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_create_definition27773 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_create_definition27777 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_index_option_in_create_definition27780 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_CONSTRAINT_in_create_definition27795 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0001000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_constraint_symbol_name_in_create_definition27798 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0001000000000000L});
	public static final BitSet FOLLOW_FOREIGN_in_create_definition27804 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_KEY_SYM_in_create_definition27806 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_index_name_in_create_definition27809 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_create_definition27813 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_create_definition27815 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_create_definition27818 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_create_definition27820 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_create_definition27824 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_reference_definition_in_create_definition27826 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHECK_SYM_in_create_definition27838 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_create_definition27840 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_create_definition27842 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_create_definition27844 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_column_data_type_header_in_column_definition27857 = new BitSet(new long[]{0x0000001000000002L,0x0000000120000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_AUTO_INCREMENT_in_column_definition27862 = new BitSet(new long[]{0x0000000000000002L,0x0000000120000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_UNIQUE_SYM_in_column_definition27869 = new BitSet(new long[]{0x0000000000000002L,0x0000000120000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_KEY_SYM_in_column_definition27872 = new BitSet(new long[]{0x0000000000000002L,0x0000000120000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_PRIMARY_SYM_in_column_definition27880 = new BitSet(new long[]{0x0000000000000002L,0x0000000120000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_KEY_SYM_in_column_definition27883 = new BitSet(new long[]{0x0000000000000002L,0x0000000120000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_COMMENT_SYM_in_column_definition27894 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_column_definition27896 = new BitSet(new long[]{0x0000000000000002L,0x0000000020000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_COLUMN_FORMAT_in_column_definition27903 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x4000002000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_set_in_column_definition27905 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_reference_definition_in_column_definition27918 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_SYM_in_null_or_notnull27931 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_NULL_SYM_in_null_or_notnull27933 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NULL_SYM_in_null_or_notnull27938 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_BIT_SYM_in_column_data_type_header27953 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header27955 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_length_in_column_data_type_header27957 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header27959 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header27964 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header27969 = new BitSet(new long[]{0x0020000000000000L});
	public static final BitSet FOLLOW_bit_literal_in_column_data_type_header27971 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TINYINT_in_column_data_type_header27985 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header27987 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_length_in_column_data_type_header27989 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header27991 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_UNSIGNED_SYM_in_column_data_type_header27996 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_ZEROFILL_in_column_data_type_header28001 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28006 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28011 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_column_data_type_header28013 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SMALLINT_in_column_data_type_header28027 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header28029 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_length_in_column_data_type_header28031 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header28033 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_UNSIGNED_SYM_in_column_data_type_header28038 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_ZEROFILL_in_column_data_type_header28043 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28048 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28053 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_column_data_type_header28055 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MEDIUMINT_in_column_data_type_header28069 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header28071 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_length_in_column_data_type_header28073 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header28075 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_UNSIGNED_SYM_in_column_data_type_header28080 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_ZEROFILL_in_column_data_type_header28085 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28090 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28095 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_column_data_type_header28097 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INT_SYM_in_column_data_type_header28111 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header28113 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_length_in_column_data_type_header28115 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header28117 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_UNSIGNED_SYM_in_column_data_type_header28122 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_ZEROFILL_in_column_data_type_header28127 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28132 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28137 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_column_data_type_header28139 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INTEGER_SYM_in_column_data_type_header28153 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header28155 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_length_in_column_data_type_header28157 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header28159 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_UNSIGNED_SYM_in_column_data_type_header28164 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_ZEROFILL_in_column_data_type_header28169 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28174 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28179 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_column_data_type_header28181 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_BIGINT_in_column_data_type_header28195 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header28197 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_length_in_column_data_type_header28199 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header28201 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_UNSIGNED_SYM_in_column_data_type_header28206 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_ZEROFILL_in_column_data_type_header28211 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28216 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28221 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_column_data_type_header28223 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_REAL_in_column_data_type_header28237 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header28239 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_length_in_column_data_type_header28241 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_column_data_type_header28243 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_column_data_type_header28245 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header28247 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_UNSIGNED_SYM_in_column_data_type_header28252 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_ZEROFILL_in_column_data_type_header28257 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28262 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28267 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_column_data_type_header28269 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOUBLE_SYM_in_column_data_type_header28283 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header28285 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_length_in_column_data_type_header28287 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_column_data_type_header28289 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_column_data_type_header28291 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header28293 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_UNSIGNED_SYM_in_column_data_type_header28298 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_ZEROFILL_in_column_data_type_header28303 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28308 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28313 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_column_data_type_header28315 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FLOAT_SYM_in_column_data_type_header28329 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header28331 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_length_in_column_data_type_header28333 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_column_data_type_header28335 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_column_data_type_header28337 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header28339 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_UNSIGNED_SYM_in_column_data_type_header28344 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_ZEROFILL_in_column_data_type_header28349 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28354 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28359 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_column_data_type_header28361 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DECIMAL_SYM_in_column_data_type_header28375 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header28377 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_length_in_column_data_type_header28379 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_column_data_type_header28382 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_column_data_type_header28384 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header28388 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_UNSIGNED_SYM_in_column_data_type_header28393 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_ZEROFILL_in_column_data_type_header28398 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28403 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28408 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_column_data_type_header28410 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NUMERIC_SYM_in_column_data_type_header28424 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header28426 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_length_in_column_data_type_header28428 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_column_data_type_header28431 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_column_data_type_header28433 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header28437 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L,0x0000000000000200L});
	public static final BitSet FOLLOW_UNSIGNED_SYM_in_column_data_type_header28442 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_ZEROFILL_in_column_data_type_header28447 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28452 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28457 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_number_literal_in_column_data_type_header28459 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DATE_SYM_in_column_data_type_header28473 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28476 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28481 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_column_data_type_header28483 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIME_SYM_in_column_data_type_header28497 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28500 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28505 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_column_data_type_header28507 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIMESTAMP_in_column_data_type_header28521 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28524 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28529 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_set_in_column_data_type_header28531 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DATETIME_in_column_data_type_header28549 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28552 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28557 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_set_in_column_data_type_header28559 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_YEAR_in_column_data_type_header28577 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28580 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28585 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_column_data_type_header28587 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHAR_in_column_data_type_header28601 = new BitSet(new long[]{0x0000000000000002L,0x0000000002004000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header28606 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_length_in_column_data_type_header28608 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header28610 = new BitSet(new long[]{0x0000000000000002L,0x0000000002004000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_CHARACTER_SYM_in_column_data_type_header28615 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_column_data_type_header28617 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000060000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_charset_name_in_column_data_type_header28619 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_COLLATE_SYM_in_column_data_type_header28624 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_collation_name_in_column_data_type_header28626 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28631 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28636 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_column_data_type_header28638 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_VARCHAR_in_column_data_type_header28652 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header28654 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_length_in_column_data_type_header28656 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header28658 = new BitSet(new long[]{0x0000000000000002L,0x0000000002004000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_CHARACTER_SYM_in_column_data_type_header28663 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_column_data_type_header28665 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000060000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_charset_name_in_column_data_type_header28667 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_COLLATE_SYM_in_column_data_type_header28672 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_collation_name_in_column_data_type_header28674 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28679 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28684 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_column_data_type_header28686 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_BINARY_in_column_data_type_header28700 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header28705 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_length_in_column_data_type_header28707 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header28709 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28714 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28719 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_column_data_type_header28721 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_VARBINARY_in_column_data_type_header28735 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header28737 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_length_in_column_data_type_header28739 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header28741 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28744 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header28749 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_column_data_type_header28751 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TINYBLOB_in_column_data_type_header28765 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28768 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_BLOB_SYM_in_column_data_type_header28782 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28785 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MEDIUMBLOB_in_column_data_type_header28799 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28802 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LONGBLOB_in_column_data_type_header28816 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28819 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TINYTEXT_in_column_data_type_header28833 = new BitSet(new long[]{0x0001000000000002L,0x0000000002004000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_BINARY_in_column_data_type_header28838 = new BitSet(new long[]{0x0000000000000002L,0x0000000002004000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_CHARACTER_SYM_in_column_data_type_header28843 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_column_data_type_header28845 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000060000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_charset_name_in_column_data_type_header28847 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_COLLATE_SYM_in_column_data_type_header28852 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_collation_name_in_column_data_type_header28854 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28859 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TEXT_SYM_in_column_data_type_header28873 = new BitSet(new long[]{0x0001000000000002L,0x0000000002004000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_BINARY_in_column_data_type_header28878 = new BitSet(new long[]{0x0000000000000002L,0x0000000002004000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_CHARACTER_SYM_in_column_data_type_header28883 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_column_data_type_header28885 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000060000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_charset_name_in_column_data_type_header28887 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_COLLATE_SYM_in_column_data_type_header28892 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_collation_name_in_column_data_type_header28894 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28899 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MEDIUMTEXT_in_column_data_type_header28913 = new BitSet(new long[]{0x0001000000000002L,0x0000000002004000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_BINARY_in_column_data_type_header28916 = new BitSet(new long[]{0x0000000000000002L,0x0000000002004000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_CHARACTER_SYM_in_column_data_type_header28921 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_column_data_type_header28923 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000060000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_charset_name_in_column_data_type_header28925 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_COLLATE_SYM_in_column_data_type_header28930 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_collation_name_in_column_data_type_header28932 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28937 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LONGTEXT_in_column_data_type_header28951 = new BitSet(new long[]{0x0001000000000002L,0x0000000002004000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_BINARY_in_column_data_type_header28956 = new BitSet(new long[]{0x0000000000000002L,0x0000000002004000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_CHARACTER_SYM_in_column_data_type_header28961 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_column_data_type_header28963 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000060000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_charset_name_in_column_data_type_header28965 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_COLLATE_SYM_in_column_data_type_header28970 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_collation_name_in_column_data_type_header28972 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header28977 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ENUM_in_column_data_type_header28991 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header28996 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_column_data_type_header28998 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_column_data_type_header29001 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_column_data_type_header29003 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header29007 = new BitSet(new long[]{0x0000000000000002L,0x0000000002004000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_CHARACTER_SYM_in_column_data_type_header29010 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_column_data_type_header29012 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000060000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_charset_name_in_column_data_type_header29014 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_COLLATE_SYM_in_column_data_type_header29019 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_collation_name_in_column_data_type_header29021 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header29026 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header29031 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_column_data_type_header29033 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SET_SYM_in_column_data_type_header29047 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_column_data_type_header29049 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_column_data_type_header29051 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_column_data_type_header29054 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_column_data_type_header29056 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_column_data_type_header29060 = new BitSet(new long[]{0x0000000000000002L,0x0000000002004000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_CHARACTER_SYM_in_column_data_type_header29063 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_column_data_type_header29065 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000060000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_charset_name_in_column_data_type_header29067 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_COLLATE_SYM_in_column_data_type_header29072 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_collation_name_in_column_data_type_header29074 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L});
	public static final BitSet FOLLOW_null_or_notnull_in_column_data_type_header29079 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_column_data_type_header29084 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_column_data_type_header29086 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_column_name_in_index_column_name29104 = new BitSet(new long[]{0x0000000002000002L,0x0000000000000000L,0x0000080000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_index_column_name29107 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_index_column_name29109 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_index_column_name29111 = new BitSet(new long[]{0x0000000002000002L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_REFERENCES_in_reference_definition29132 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_reference_definition29134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_reference_definition29136 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_reference_definition29138 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_reference_definition29141 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_reference_definition29143 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_reference_definition29147 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L,0x0000000000040000L});
	public static final BitSet FOLLOW_MATCH_in_reference_definition29154 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_FULL_in_reference_definition29156 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_MATCH_in_reference_definition29162 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_PARTIAL_in_reference_definition29164 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_MATCH_in_reference_definition29170 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_SIMPLE_SYM_in_reference_definition29172 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ON_in_reference_definition29181 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
	public static final BitSet FOLLOW_DELETE_SYM_in_reference_definition29183 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L,0x0000100000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_reference_option_in_reference_definition29185 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_ON_in_reference_definition29192 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_UPDATE_in_reference_definition29194 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L,0x0000100000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_reference_option_in_reference_definition29196 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RESTRICT_in_reference_option29208 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CASCADE_in_reference_option29214 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SET_SYM_in_reference_option29220 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_NULL_SYM_in_reference_option29222 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NO_SYM_in_reference_option29228 = new BitSet(new long[]{0x0000000000000080L});
	public static final BitSet FOLLOW_ACTION_in_reference_option29230 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_option_in_table_options29241 = new BitSet(new long[]{0x0000005000000002L,0x0000100182024000L,0x0000022000010000L,0x0000000000000800L,0x0000802000000000L,0x0000000000000040L,0x0000020000400000L,0x0000040400000000L,0x0100000000000000L,0x0600000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_COMMA_in_table_options29246 = new BitSet(new long[]{0x0000005000000000L,0x0000100102024000L,0x0000022000010000L,0x0000000000000800L,0x0000802000000000L,0x0000000000000040L,0x0000020000400000L,0x0000040400000000L,0x0100000000000000L,0x0600000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_table_option_in_table_options29251 = new BitSet(new long[]{0x0000005000000002L,0x0000100182024000L,0x0000022000010000L,0x0000000000000800L,0x0000802000000000L,0x0000000000000040L,0x0000020000400000L,0x0000040400000000L,0x0100000000000000L,0x0600000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_ENGINE_SYM_in_table_option29267 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000040000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29270 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_engine_name_in_table_option29274 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AUTO_INCREMENT_in_table_option29286 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0004000000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29289 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_table_option29293 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AVG_ROW_LENGTH_in_table_option29305 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0004000000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29308 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_table_option29312 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DEFAULT_in_table_option29325 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_CHARACTER_SYM_in_table_option29329 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_table_option29331 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000062000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29334 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000060000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_charset_name_in_table_option29338 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHECKSUM_SYM_in_table_option29350 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0004000000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29353 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_table_option29357 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DEFAULT_in_table_option29370 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_COLLATE_SYM_in_table_option29374 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000040000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29377 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_collation_name_in_table_option29381 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COMMENT_SYM_in_table_option29393 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29396 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_table_option29400 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CONNECTION_SYM_in_table_option29412 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29415 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_table_option29419 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DATA_SYM_in_table_option29431 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001000000000000L});
	public static final BitSet FOLLOW_DIRECTORY_SYM_in_table_option29433 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29436 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_table_option29440 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DELAY_KEY_WRITE_SYM_in_table_option29452 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0004000000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29455 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_table_option29459 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INDEX_SYM_in_table_option29471 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001000000000000L});
	public static final BitSet FOLLOW_DIRECTORY_SYM_in_table_option29473 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29476 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_table_option29480 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INSERT_METHOD_in_table_option29492 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000040000002000L,0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29495 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L,0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_set_in_table_option29499 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_KEY_BLOCK_SIZE_in_table_option29523 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0004000000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29526 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_table_option29530 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MAX_ROWS_in_table_option29542 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0004000000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29545 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_table_option29549 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MIN_ROWS_in_table_option29561 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0004000000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29564 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_table_option29568 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PACK_KEYS_SYM_in_table_option29580 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000002000L,0x0004000000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29583 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_set_in_table_option29587 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PASSWORD_in_table_option29605 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29608 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_table_option29612 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ROW_FORMAT_SYM_in_table_option29624 = new BitSet(new long[]{0x0000000000000000L,0x0000004800000000L,0x4000002000000000L,0x0000080000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29627 = new BitSet(new long[]{0x0000000000000000L,0x0000004800000000L,0x4000002000000000L,0x0000080000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_set_in_table_option29631 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STATS_AUTO_RECALC_in_table_option29655 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000002000L,0x0004000000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29658 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_set_in_table_option29662 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STATS_PERSISTENT_in_table_option29680 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000002000L,0x0004000000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29683 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_set_in_table_option29687 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_UNION_SYM_in_table_option29705 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_table_option29708 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_table_option29712 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_table_option29714 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_table_option29717 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_table_option29719 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_table_option29723 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PARTITION_SYM_in_partition_options29736 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_BY_SYM_in_partition_options29738 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L,0x0000001200000080L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_LINEAR_SYM_in_partition_options29754 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_HASH_SYM_in_partition_options29758 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_partition_options29760 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_partition_options29762 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_partition_options29764 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_LINEAR_SYM_in_partition_options29777 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_KEY_SYM_in_partition_options29781 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_partition_options29783 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_column_list_in_partition_options29785 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_partition_options29787 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_RANGE_SYM_in_partition_options29799 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_partition_options29801 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_partition_options29803 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_partition_options29805 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_COLUMNS_SYM_in_partition_options29809 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_partition_options29811 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_column_list_in_partition_options29813 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_partition_options29815 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_LIST_SYM_in_partition_options29828 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_partition_options29830 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_partition_options29832 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_partition_options29834 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_COLUMNS_SYM_in_partition_options29838 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_partition_options29840 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_column_list_in_partition_options29842 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_partition_options29844 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_PARTITIONS_SYM_in_partition_options29859 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_partition_options29861 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_SUBPARTITION_SYM_in_partition_options29876 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_BY_SYM_in_partition_options29878 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L,0x0000000200000080L});
	public static final BitSet FOLLOW_LINEAR_SYM_in_partition_options29889 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_HASH_SYM_in_partition_options29893 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_partition_options29895 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_partition_options29897 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_partition_options29899 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_LINEAR_SYM_in_partition_options29908 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_KEY_SYM_in_partition_options29912 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_partition_options29914 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_column_list_in_partition_options29916 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_partition_options29918 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_SUBPARTITIONS_SYM_in_partition_options29929 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_partition_options29931 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_partition_options29946 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_partition_definition_in_partition_options29948 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_partition_options29952 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_partition_definition_in_partition_options29955 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_partition_options29959 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PARTITION_SYM_in_partition_definition29971 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_partition_name_in_partition_definition29973 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000010000L,0x0000000000000800L,0x0000002000000000L,0x0100000000000000L,0x0000020000400000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L,0x0000001000000000L});
	public static final BitSet FOLLOW_VALUES_in_partition_definition29986 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_LESS_SYM_in_partition_definition30002 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_THAN_SYM_in_partition_definition30004 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_LPAREN_in_partition_definition30009 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_expression_list_in_partition_definition30011 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_partition_definition30013 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000010000L,0x0000000000000800L,0x0000002000000000L,0x0100000000000000L,0x0000020000400000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_MAXVALUE_SYM_in_partition_definition30018 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000010000L,0x0000000000000800L,0x0000002000000000L,0x0100000000000000L,0x0000020000400000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_IN_SYM_in_partition_definition30039 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_partition_definition30041 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_expression_list_in_partition_definition30043 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_partition_definition30045 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000010000L,0x0000000000000800L,0x0000002000000000L,0x0100000000000000L,0x0000020000400000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_STORAGE_SYM_in_partition_definition30066 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000800L});
	public static final BitSet FOLLOW_ENGINE_SYM_in_partition_definition30070 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000040000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_partition_definition30073 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_engine_name_in_partition_definition30077 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000010000L,0x0000000000000000L,0x0000002000000000L,0x0100000000000000L,0x0000020000400000L});
	public static final BitSet FOLLOW_COMMENT_SYM_in_partition_definition30084 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_partition_definition30087 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_partition_definition30091 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000010000L,0x0000000000000000L,0x0000002000000000L,0x0100000000000000L,0x0000020000400000L});
	public static final BitSet FOLLOW_DATA_SYM_in_partition_definition30099 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001000000000000L});
	public static final BitSet FOLLOW_DIRECTORY_SYM_in_partition_definition30101 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_partition_definition30104 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_partition_definition30108 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0100000000000000L,0x0000020000400000L});
	public static final BitSet FOLLOW_INDEX_SYM_in_partition_definition30115 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001000000000000L});
	public static final BitSet FOLLOW_DIRECTORY_SYM_in_partition_definition30117 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_partition_definition30120 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_partition_definition30124 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000020000400000L});
	public static final BitSet FOLLOW_MAX_ROWS_in_partition_definition30131 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0004000000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_partition_definition30134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_partition_definition30138 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_MIN_ROWS_in_partition_definition30145 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0004000000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_partition_definition30148 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_partition_definition30152 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_partition_definition30159 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_subpartition_definition_in_partition_definition30161 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_partition_definition30164 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_subpartition_definition_in_partition_definition30167 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_partition_definition30171 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SUBPARTITION_SYM_in_subpartition_definition30183 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_partition_logical_name_in_subpartition_definition30185 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000010000L,0x0000000000000800L,0x0000002000000000L,0x0000000000000000L,0x0000020000400000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_STORAGE_SYM_in_subpartition_definition30191 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000800L});
	public static final BitSet FOLLOW_ENGINE_SYM_in_subpartition_definition30195 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000040000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_subpartition_definition30198 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_engine_name_in_subpartition_definition30202 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000010000L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000020000400000L});
	public static final BitSet FOLLOW_COMMENT_SYM_in_subpartition_definition30209 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_subpartition_definition30212 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_subpartition_definition30216 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000010000L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000020000400000L});
	public static final BitSet FOLLOW_DATA_SYM_in_subpartition_definition30224 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001000000000000L});
	public static final BitSet FOLLOW_DIRECTORY_SYM_in_subpartition_definition30226 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_subpartition_definition30229 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_subpartition_definition30233 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000020000400000L});
	public static final BitSet FOLLOW_INDEX_SYM_in_subpartition_definition30240 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001000000000000L});
	public static final BitSet FOLLOW_DIRECTORY_SYM_in_subpartition_definition30242 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_subpartition_definition30245 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_subpartition_definition30249 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000400000L});
	public static final BitSet FOLLOW_MAX_ROWS_in_subpartition_definition30256 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0004000000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_subpartition_definition30259 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_subpartition_definition30263 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_MIN_ROWS_in_subpartition_definition30270 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0004000000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_subpartition_definition30273 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_subpartition_definition30277 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_length30289 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ALTER_in_alter_table_statement30300 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_IGNORE_SYM_in_alter_table_statement30303 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_TABLE_in_alter_table_statement30307 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_alter_table_statement30309 = new BitSet(new long[]{0x0000005000190402L,0x0010100102464800L,0x0406022000010000L,0x0000800000400810L,0x0000802800000000L,0x0000040000000040L,0x0000820000400000L,0x0000060408400000L,0x0100000F00100000L,0x0600000000000000L,0x0080000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_alter_table_specification_in_alter_table_statement30315 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_COMMA_in_alter_table_statement30318 = new BitSet(new long[]{0x0000005000190400L,0x0010100102464800L,0x0406022000010000L,0x0000800000400810L,0x0000802800000000L,0x0000040000000040L,0x0000820000400000L,0x0000040408400000L,0x0100000F00100000L,0x0600000000000000L,0x0080000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_alter_table_specification_in_alter_table_statement30320 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_partition_options_in_alter_table_statement30331 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_options_in_alter_table_specification30345 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ADD_SYM_in_alter_table_specification30353 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_COLUMN_SYM_in_alter_table_specification30356 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_name_in_alter_table_specification30360 = new BitSet(new long[]{0x0281400000000000L,0x0000000000002000L,0x0100000400440000L,0x0000100000001000L,0x0048000000000000L,0x0006000000000000L,0x0000000070000000L,0x0000000000000800L,0x0000000000040000L,0x0000000080008000L,0x0000074440000000L,0x000000C000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_column_definition_in_alter_table_specification30362 = new BitSet(new long[]{0x0000000000002002L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
	public static final BitSet FOLLOW_set_in_alter_table_specification30366 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_name_in_alter_table_specification30372 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ADD_SYM_in_alter_table_specification30385 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_COLUMN_SYM_in_alter_table_specification30388 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_alter_table_specification30392 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_definitions_in_alter_table_specification30394 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_alter_table_specification30396 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ADD_SYM_in_alter_table_specification30406 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_set_in_alter_table_specification30408 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_index_name_in_alter_table_specification30415 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_index_type_in_alter_table_specification30420 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_alter_table_specification30424 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_names_in_alter_table_specification30426 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_alter_table_specification30428 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_index_option_in_alter_table_specification30431 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_ADD_SYM_in_alter_table_specification30443 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_CONSTRAINT_in_alter_table_specification30446 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_constraint_symbol_name_in_alter_table_specification30449 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_PRIMARY_SYM_in_alter_table_specification30455 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_KEY_SYM_in_alter_table_specification30457 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_index_type_in_alter_table_specification30460 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_alter_table_specification30464 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_names_in_alter_table_specification30466 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_alter_table_specification30468 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_index_option_in_alter_table_specification30471 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_ADD_SYM_in_alter_table_specification30493 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_CONSTRAINT_in_alter_table_specification30496 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_constraint_symbol_name_in_alter_table_specification30499 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_UNIQUE_SYM_in_alter_table_specification30505 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002040000000L,0x0100000000000080L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_index_name_in_alter_table_specification30515 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_index_type_in_alter_table_specification30525 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_alter_table_specification30529 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_alter_table_specification30531 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_alter_table_specification30534 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_alter_table_specification30536 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_alter_table_specification30540 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_index_option_in_alter_table_specification30543 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_ADD_SYM_in_alter_table_specification30559 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_FULLTEXT_SYM_in_alter_table_specification30561 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002040000000L,0x0100000000000080L});
	public static final BitSet FOLLOW_index_name_in_alter_table_specification30571 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_alter_table_specification30575 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_names_in_alter_table_specification30577 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_alter_table_specification30579 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_index_option_in_alter_table_specification30582 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_ADD_SYM_in_alter_table_specification30594 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_SPATIAL_SYM_in_alter_table_specification30596 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002040000000L,0x0100000000000080L});
	public static final BitSet FOLLOW_index_name_in_alter_table_specification30606 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_alter_table_specification30610 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_names_in_alter_table_specification30612 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_alter_table_specification30614 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_index_option_in_alter_table_specification30617 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000004000000L});
	public static final BitSet FOLLOW_ADD_SYM_in_alter_table_specification30629 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L,0x0000000000000000L,0x0001000000000000L});
	public static final BitSet FOLLOW_CONSTRAINT_in_alter_table_specification30632 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0001000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_constraint_symbol_name_in_alter_table_specification30635 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0001000000000000L});
	public static final BitSet FOLLOW_FOREIGN_in_alter_table_specification30641 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_KEY_SYM_in_alter_table_specification30643 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_index_name_in_alter_table_specification30646 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_alter_table_specification30650 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_names_in_alter_table_specification30652 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_alter_table_specification30654 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_reference_definition_in_alter_table_specification30656 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ALGORITHM_SYM_in_alter_table_specification30666 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L,0x0000002000000000L,0x0000000000002000L,0x0000100000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_alter_table_specification30669 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_set_in_alter_table_specification30673 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ALTER_in_alter_table_specification30689 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_COLUMN_SYM_in_alter_table_specification30692 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_name_in_alter_table_specification30696 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0400000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_alter_table_specification30700 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_alter_table_specification30702 = new BitSet(new long[]{0x0020000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0004000000080000L,0x0000000000000000L,0x0000002000000000L,0x0002000000000400L,0x0000000000080000L,0x0000000000000000L,0x0040000020000000L});
	public static final BitSet FOLLOW_literal_value_in_alter_table_specification30704 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DROP_in_alter_table_specification30710 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_DEFAULT_in_alter_table_specification30712 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHANGE_in_alter_table_specification30724 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_COLUMN_SYM_in_alter_table_specification30727 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_name_in_alter_table_specification30731 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_name_in_alter_table_specification30733 = new BitSet(new long[]{0x0281400000000000L,0x0000000000002000L,0x0100000400440000L,0x0000100000001000L,0x0048000000000000L,0x0006000000000000L,0x0000000070000000L,0x0000000000000800L,0x0000000000040000L,0x0000000080008000L,0x0000074440000000L,0x000000C000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_column_definition_in_alter_table_specification30735 = new BitSet(new long[]{0x0000000000002002L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
	public static final BitSet FOLLOW_FIRST_SYM_in_alter_table_specification30738 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AFTER_SYM_in_alter_table_specification30740 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_name_in_alter_table_specification30742 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LOCK_in_alter_table_specification30754 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000802000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_EQ_SYM_in_alter_table_specification30757 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000800000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_set_in_alter_table_specification30761 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MODIFY_SYM_in_alter_table_specification30779 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_COLUMN_SYM_in_alter_table_specification30782 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_name_in_alter_table_specification30786 = new BitSet(new long[]{0x0281400000000000L,0x0000000000002000L,0x0100000400440000L,0x0000100000001000L,0x0048000000000000L,0x0006000000000000L,0x0000000070000000L,0x0000000000000800L,0x0000000000040000L,0x0000000080008000L,0x0000074440000000L,0x000000C000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_column_definition_in_alter_table_specification30788 = new BitSet(new long[]{0x0000000000002002L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
	public static final BitSet FOLLOW_FIRST_SYM_in_alter_table_specification30791 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AFTER_SYM_in_alter_table_specification30795 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_name_in_alter_table_specification30797 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DROP_in_alter_table_specification30809 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_COLUMN_SYM_in_alter_table_specification30812 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_name_in_alter_table_specification30816 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DROP_in_alter_table_specification30826 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_PRIMARY_SYM_in_alter_table_specification30828 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_KEY_SYM_in_alter_table_specification30830 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DROP_in_alter_table_specification30840 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_set_in_alter_table_specification30842 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_name_in_alter_table_specification30848 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DROP_in_alter_table_specification30858 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0001000000000000L});
	public static final BitSet FOLLOW_FOREIGN_in_alter_table_specification30860 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_KEY_SYM_in_alter_table_specification30862 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_foreign_key_symbol_name_in_alter_table_specification30864 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DISABLE_SYM_in_alter_table_specification30874 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_KEYS_in_alter_table_specification30876 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ENABLE_SYM_in_alter_table_specification30886 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_KEYS_in_alter_table_specification30888 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RENAME_in_alter_table_specification30898 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_table_name_in_alter_table_specification30907 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ORDER_SYM_in_alter_table_specification30917 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_BY_SYM_in_alter_table_specification30919 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_name_in_alter_table_specification30921 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_alter_table_specification30924 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_name_in_alter_table_specification30926 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_CONVERT_SYM_in_alter_table_specification30938 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_TO_SYM_in_alter_table_specification30940 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_CHARACTER_SYM_in_alter_table_specification30942 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_alter_table_specification30944 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000060000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_charset_name_in_alter_table_specification30946 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
	public static final BitSet FOLLOW_COLLATE_SYM_in_alter_table_specification30949 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_collation_name_in_alter_table_specification30951 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DEFAULT_in_alter_table_specification30964 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_CHARACTER_SYM_in_alter_table_specification30968 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_alter_table_specification30970 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000062000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_alter_table_specification30973 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000060000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_charset_name_in_alter_table_specification30977 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
	public static final BitSet FOLLOW_COLLATE_SYM_in_alter_table_specification30980 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000040000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_alter_table_specification30983 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_collation_name_in_alter_table_specification30987 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DISCARD_in_alter_table_specification30999 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_TABLESPACE_in_alter_table_specification31001 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IMPORT_in_alter_table_specification31011 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_TABLESPACE_in_alter_table_specification31013 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FORCE_SYM_in_alter_table_specification31023 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ADD_SYM_in_alter_table_specification31033 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_PARTITION_SYM_in_alter_table_specification31035 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_alter_table_specification31037 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_partition_definition_in_alter_table_specification31039 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_alter_table_specification31041 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DROP_in_alter_table_specification31051 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_PARTITION_SYM_in_alter_table_specification31053 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_partition_names_in_alter_table_specification31055 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TRUNCATE_in_alter_table_specification31065 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_PARTITION_SYM_in_alter_table_specification31067 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_partition_names_in_alter_table_specification31070 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ALL_in_alter_table_specification31074 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COALESCE_in_alter_table_specification31085 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_PARTITION_SYM_in_alter_table_specification31087 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_alter_table_specification31089 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_REORGANIZE_SYM_in_alter_table_specification31099 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_PARTITION_SYM_in_alter_table_specification31101 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_partition_names_in_alter_table_specification31103 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_INTO_in_alter_table_specification31105 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_alter_table_specification31107 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_partition_definition_in_alter_table_specification31109 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_COMMA_in_alter_table_specification31112 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_partition_definition_in_alter_table_specification31114 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_alter_table_specification31118 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EXCHANGE_SYM_in_alter_table_specification31128 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_PARTITION_SYM_in_alter_table_specification31130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_partition_name_in_alter_table_specification31132 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_WITH_in_alter_table_specification31134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_TABLE_in_alter_table_specification31136 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_alter_table_specification31138 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ANALYZE_SYM_in_alter_table_specification31148 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_PARTITION_SYM_in_alter_table_specification31150 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_partition_names_in_alter_table_specification31153 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ALL_in_alter_table_specification31157 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHECK_SYM_in_alter_table_specification31168 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_PARTITION_SYM_in_alter_table_specification31170 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_partition_names_in_alter_table_specification31173 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ALL_in_alter_table_specification31177 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_OPTIMIZE_in_alter_table_specification31188 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_PARTITION_SYM_in_alter_table_specification31190 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_partition_names_in_alter_table_specification31193 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ALL_in_alter_table_specification31197 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_REBUILD_SYM_in_alter_table_specification31208 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_PARTITION_SYM_in_alter_table_specification31210 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_partition_names_in_alter_table_specification31213 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ALL_in_alter_table_specification31217 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_REPAIR_in_alter_table_specification31228 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_PARTITION_SYM_in_alter_table_specification31230 = new BitSet(new long[]{0x0000000000020000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_partition_names_in_alter_table_specification31233 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ALL_in_alter_table_specification31237 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_REMOVE_SYM_in_alter_table_specification31248 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_PARTITIONING_SYM_in_alter_table_specification31250 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_index_column_name_in_index_column_names31261 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_index_column_names31264 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_index_column_name_in_index_column_names31266 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_USING_SYM_in_index_type31276 = new BitSet(new long[]{0x4000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_set_in_index_type31278 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_KEY_BLOCK_SIZE_in_index_option31297 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0004000000000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_index_option31300 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_index_option31304 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_index_type_in_index_option31312 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_WITH_in_index_option31320 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_PARSER_SYM_in_index_option31322 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_parser_name_in_index_option31324 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COMMENT_SYM_in_index_option31334 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_TEXT_STRING_in_index_option31336 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_column_name_in_column_definitions31347 = new BitSet(new long[]{0x0281400000000000L,0x0000000000002000L,0x0100000400440000L,0x0000100000001000L,0x0048000000000000L,0x0006000000000000L,0x0000000070000000L,0x0000000000000800L,0x0000000000040000L,0x0000000080008000L,0x0000074440000000L,0x000000C000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_column_definition_in_column_definitions31349 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_column_definitions31352 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_column_name_in_column_definitions31354 = new BitSet(new long[]{0x0281400000000000L,0x0000000000002000L,0x0100000400440000L,0x0000100000001000L,0x0048000000000000L,0x0006000000000000L,0x0000000070000000L,0x0000000000000800L,0x0000000000040000L,0x0000000080008000L,0x0000074440000000L,0x000000C000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_column_definition_in_column_definitions31356 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_RENAME_in_rename_table_statement31370 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_TABLE_in_rename_table_statement31372 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_rename_table_statement31377 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_TO_SYM_in_rename_table_statement31379 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_rename_table_statement31381 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_rename_table_statement31386 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_rename_table_statement31388 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_TO_SYM_in_rename_table_statement31390 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_rename_table_statement31392 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
	public static final BitSet FOLLOW_DROP_in_drop_table_statement31406 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004200000L});
	public static final BitSet FOLLOW_TEMPORARY_in_drop_table_statement31409 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_TABLE_in_drop_table_statement31413 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000140000000L});
	public static final BitSet FOLLOW_IF_in_drop_table_statement31416 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_EXISTS_in_drop_table_statement31418 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_drop_table_statement31424 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000010L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_COMMA_in_drop_table_statement31427 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_drop_table_statement31429 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000010L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_TRUNCATE_in_truncate_table_statement31454 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_TABLE_in_truncate_table_statement31457 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_table_name_in_truncate_table_statement31461 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CREATE_in_create_view_statement31482 = new BitSet(new long[]{0x0000000000010000L,0x0000000000000000L,0x0000004000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000010000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_OR_SYM_in_create_view_statement31485 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_REPLACE_in_create_view_statement31487 = new BitSet(new long[]{0x0000000000010000L,0x0000000000000000L,0x0000004000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_create_view_body_in_create_view_statement31493 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ALGORITHM_SYM_in_create_view_body31503 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_EQ_SYM_in_create_view_body31505 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_set_in_create_view_body31507 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_DEFINER_in_create_view_body31524 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_EQ_SYM_in_create_view_body31526 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_user_name_in_create_view_body31529 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_CURRENT_USER_in_create_view_body31533 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_SQL_SYM_in_create_view_body31542 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_SECURITY_SYM_in_create_view_body31544 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_set_in_create_view_body31546 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_VIEW_SYM_in_create_view_body31560 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_view_name_in_create_view_body31562 = new BitSet(new long[]{0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_create_view_body31565 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_column_list_in_create_view_body31567 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_create_view_body31569 = new BitSet(new long[]{0x0000000040000000L});
	public static final BitSet FOLLOW_AS_SYM_in_create_view_body31575 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_select_statement_in_create_view_body31577 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_WITH_in_create_view_body31582 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040020L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_CHECK_SYM_in_create_view_body31593 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_OPTION_in_create_view_body31595 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ALTER_in_alter_view_statement31609 = new BitSet(new long[]{0x0000000000010000L,0x0000000000000000L,0x0000004000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_create_view_body_in_alter_view_statement31613 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DROP_in_drop_view_statement31625 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_VIEW_SYM_in_drop_view_statement31627 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000140000000L});
	public static final BitSet FOLLOW_IF_in_drop_view_statement31630 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_EXISTS_in_drop_view_statement31632 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_view_name_in_drop_view_statement31638 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000010L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_COMMA_in_drop_view_statement31641 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_view_name_in_drop_view_statement31643 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000010L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_IN_SYM_in_synpred54_SQL20748 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_NATURAL_in_synpred54_SQL20750 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_LANGUAGE_in_synpred54_SQL20752 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_MODE_SYM_in_synpred54_SQL20754 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IN_SYM_in_synpred55_SQL20762 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_NATURAL_in_synpred55_SQL20764 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_LANGUAGE_in_synpred55_SQL20766 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_MODE_SYM_in_synpred55_SQL20768 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_WITH_in_synpred55_SQL20770 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_QUERY_SYM_in_synpred55_SQL20772 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_EXPANSION_SYM_in_synpred55_SQL20774 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_char_functions_in_synpred87_SQL21087 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_OR_SYM_in_synpred268_SQL22519 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_exp_factor1_in_synpred268_SQL22523 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_XOR_in_synpred269_SQL22538 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_exp_factor2_in_synpred269_SQL22542 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AND_SYM_in_synpred270_SQL22557 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_exp_factor3_in_synpred270_SQL22561 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOT_SYM_in_synpred271_SQL22573 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_IS_SYM_in_synpred274_SQL22592 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000420L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_NOT_SYM_in_synpred274_SQL22595 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L});
	public static final BitSet FOLLOW_boolean_literal_in_synpred274_SQL22602 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NULL_SYM_in_synpred274_SQL22604 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predicate_in_synpred275_SQL22621 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000804L,0x0200000020000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_relational_op_in_synpred275_SQL22623 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_predicate_in_synpred275_SQL22625 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EXISTS_in_synpred276_SQL22651 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_subquery_in_synpred276_SQL22653 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predicate_in_in_synpred278_SQL22711 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_predicate_like_in_synpred279_SQL22720 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_synpred281_SQL22729 = new BitSet(new long[]{0x0000100000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_NOT_SYM_in_synpred281_SQL22733 = new BitSet(new long[]{0x0000100000000000L});
	public static final BitSet FOLLOW_BETWEEN_in_synpred281_SQL22737 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_synpred281_SQL22742 = new BitSet(new long[]{0x0000000000200000L});
	public static final BitSet FOLLOW_AND_SYM_in_synpred281_SQL22744 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_predicate_in_synpred281_SQL22748 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_synpred283_SQL22759 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L,0x0000000004000000L});
	public static final BitSet FOLLOW_NOT_SYM_in_synpred283_SQL22763 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_REGEXP_in_synpred283_SQL22767 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_synpred283_SQL22772 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_synpred284_SQL22799 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_IN_SYM_in_synpred284_SQL22801 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_subquery_in_synpred284_SQL22805 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_synpred285_SQL22827 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_NOT_IN_SYM_in_synpred285_SQL22829 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_subquery_in_synpred285_SQL22833 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_synpred286_SQL22855 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_IN_SYM_in_synpred286_SQL22857 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_expression_list_in_synpred286_SQL22861 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_synpred287_SQL22917 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_SOUNDS_SYM_in_synpred287_SQL22920 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_LIKE_SYM_in_synpred287_SQL22922 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_bit_expr_in_synpred287_SQL22926 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_synpred288_SQL22948 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_LIKE_SYM_in_synpred288_SQL22950 = new BitSet(new long[]{0x0178882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x0206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_simple_expr_in_synpred288_SQL22952 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_VERTBAR_in_synpred289_SQL23008 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_factor1_in_synpred289_SQL23012 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_BITAND_in_synpred290_SQL23028 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_factor2_in_synpred290_SQL23032 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_synpred292_SQL23048 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_factor3_in_synpred292_SQL23056 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_synpred294_SQL23072 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_factor4_in_synpred294_SQL23080 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_synpred298_SQL23096 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_factor5_in_synpred298_SQL23108 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_synpred300_SQL23124 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
	public static final BitSet FOLLOW_interval_expr_in_synpred300_SQL23132 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_in_synpred304_SQL23144 = new BitSet(new long[]{0x0178882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x0206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_simple_expr_in_synpred304_SQL23162 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CONVERT_SYM_in_synpred321_SQL23341 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_synpred321_SQL23343 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_synpred321_SQL23345 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_COMMA_in_synpred321_SQL23347 = new BitSet(new long[]{0x0001000000000000L,0x0000000000002000L,0x0000000400440000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L,0x0000004000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_cast_data_type_in_synpred321_SQL23349 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred321_SQL23351 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CONVERT_SYM_in_synpred322_SQL23363 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_LPAREN_in_synpred322_SQL23365 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_synpred322_SQL23367 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_USING_SYM_in_synpred322_SQL23369 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_transcoding_name_in_synpred322_SQL23371 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_RPAREN_in_synpred322_SQL23373 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_search_modifier_in_synpred332_SQL23605 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_factor1_in_synpred337_SQL23729 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_factor3_part_in_synpred340_SQL23773 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_partition_clause_in_synpred342_SQL23807 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_join_condition_in_synpred350_SQL23897 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ON_in_synpred351_SQL23919 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024460L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_expression_in_synpred351_SQL23923 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SEMI_in_synpred370_SQL24225 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_column_spec_in_synpred422_SQL24787 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INTEGER_NUM_in_synpred423_SQL24791 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COMMA_in_synpred429_SQL24918 = new BitSet(new long[]{0x0179882194001B50L,0x03B809800501A3C0L,0x000030B007FA5508L,0x01CA22452A0000C8L,0xA01640C3410C0218L,0xC5A072A00C006000L,0x4206146C09040081L,0x00625C0004024440L,0x2625005020080D20L,0xF010004824804026L,0x00E070FE220C1E28L,0x00783A14380D0210L,0x0000000000000060L});
	public static final BitSet FOLLOW_displayed_column_in_synpred429_SQL24922 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_column_spec_in_synpred435_SQL25036 = new BitSet(new long[]{0x0000000040000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_alias_in_synpred435_SQL25039 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_synpred466_SQL25390 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_bit_expr_in_synpred467_SQL25399 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_synpred471_SQL25460 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_single_table_update_statement_in_synpred474_SQL25512 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COMMA_in_synpred486_SQL25656 = new BitSet(new long[]{0x0000000000080000L,0x0000000000000008L,0x0600040000000010L,0x0000000000000000L,0x0000400000002000L,0x0000004000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004200000000L,0x0000000000080040L,0x0080000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_root_statement_in_synpred486_SQL25658 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COMMA_in_synpred855_SQL29246 = new BitSet(new long[]{0x0000005000000000L,0x0000100102024000L,0x0000022000010000L,0x0000000000000800L,0x0000802000000000L,0x0000000000000040L,0x0000020000400000L,0x0000040400000000L,0x0100000000000000L,0x0600000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_table_option_in_synpred855_SQL29251 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_options_in_synpred960_SQL30345 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DEFAULT_in_synpred1039_SQL30964 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_CHARACTER_SYM_in_synpred1039_SQL30968 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_SET_SYM_in_synpred1039_SQL30970 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000062000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_synpred1039_SQL30973 = new BitSet(new long[]{0x0001200004800000L,0xFC00000000000000L,0x0000000200000003L,0x6000000000060000L,0x0000000010010102L,0x3000000000390610L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x1800080000010000L,0x0000000200000000L});
	public static final BitSet FOLLOW_charset_name_in_synpred1039_SQL30977 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
	public static final BitSet FOLLOW_COLLATE_SYM_in_synpred1039_SQL30980 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000040000000L});
	public static final BitSet FOLLOW_EQ_SYM_in_synpred1039_SQL30983 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_collation_name_in_synpred1039_SQL30987 = new BitSet(new long[]{0x0000000000000002L});
}
